{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"vscode\"","webpack:///external \"path\"","webpack:///external \"fs\"","webpack:///./node_modules/safer-buffer/safer.js","webpack:///external \"buffer\"","webpack:///./node_modules/iconv-lite/lib/index.js","webpack:///./node_modules/dayjs/dayjs.min.js","webpack:///./node_modules/vsls/vscode.js","webpack:///external \"stream\"","webpack:///external \"crypto\"","webpack:///./node_modules/dayjs/plugin/advancedFormat.js","webpack:///./node_modules/dayjs/plugin/relativeTime.js","webpack:///external \"child_process\"","webpack:///./node_modules/iconv-lite/lib/bom-handling.js","webpack:///./node_modules/iconv-lite/encodings/index.js","webpack:///./node_modules/iconv-lite/encodings/internal.js","webpack:///external \"string_decoder\"","webpack:///./node_modules/iconv-lite/encodings/utf16.js","webpack:///./node_modules/iconv-lite/encodings/utf7.js","webpack:///./node_modules/iconv-lite/encodings/sbcs-codec.js","webpack:///./node_modules/iconv-lite/encodings/sbcs-data.js","webpack:///./node_modules/iconv-lite/encodings/sbcs-data-generated.js","webpack:///./node_modules/iconv-lite/encodings/dbcs-codec.js","webpack:///./node_modules/iconv-lite/encodings/dbcs-data.js","webpack:///./node_modules/iconv-lite/lib/streams.js","webpack:///./node_modules/iconv-lite/lib/extend-node.js","webpack:///./src/comparers.ts","webpack:///./src/config.ts","webpack:///./src/constants.ts","webpack:///./src/system/array.ts","webpack:///./src/system/date.ts","webpack:///./node_modules/lodash-es/isObject.js","webpack:///./node_modules/lodash-es/_freeGlobal.js","webpack:///./node_modules/lodash-es/_root.js","webpack:///./node_modules/lodash-es/now.js","webpack:///./node_modules/lodash-es/_Symbol.js","webpack:///./node_modules/lodash-es/_getRawTag.js","webpack:///./node_modules/lodash-es/_objectToString.js","webpack:///./node_modules/lodash-es/_baseGetTag.js","webpack:///./node_modules/lodash-es/isObjectLike.js","webpack:///./node_modules/lodash-es/isSymbol.js","webpack:///./node_modules/lodash-es/toNumber.js","webpack:///./node_modules/lodash-es/debounce.js","webpack:///./node_modules/lodash-es/toFinite.js","webpack:///./node_modules/lodash-es/toInteger.js","webpack:///./node_modules/lodash-es/before.js","webpack:///./node_modules/lodash-es/once.js","webpack:///./src/system/function.ts","webpack:///./src/system/decorators/gate.ts","webpack:///./src/logger.ts","webpack:///./src/system/decorators/log.ts","webpack:///./src/system/string.ts","webpack:///./src/system/decorators/memoize.ts","webpack:///./src/system/iterable.ts","webpack:///./src/system/object.ts","webpack:///./src/system/searchTree.ts","webpack:///./src/system/version.ts","webpack:///./src/configuration.ts","webpack:///./src/annotations/annotationProvider.ts","webpack:///./src/messages.ts","webpack:///./src/trackers/trackedDocument.ts","webpack:///./src/trackers/documentTracker.ts","webpack:///./src/trackers/gitDocumentTracker.ts","webpack:///./src/git/shell.ts","webpack:///./src/git/locator.ts","webpack:///./src/git/parsers/blameParser.ts","webpack:///./src/git/gitUri.ts","webpack:///./src/git/models/file.ts","webpack:///./src/git/models/status.ts","webpack:///./src/git/models/branch.ts","webpack:///./src/git/parsers/branchParser.ts","webpack:///./src/git/parsers/diffParser.ts","webpack:///./src/git/parsers/logParser.ts","webpack:///./src/git/models/reflog.ts","webpack:///./src/git/parsers/reflogParser.ts","webpack:///./src/git/parsers/remoteParser.ts","webpack:///./src/git/parsers/shortlogParser.ts","webpack:///./src/git/parsers/stashParser.ts","webpack:///./src/git/parsers/statusParser.ts","webpack:///./src/git/parsers/tagParser.ts","webpack:///./src/git/parsers/treeParser.ts","webpack:///./src/git/formatters/formatter.ts","webpack:///./src/git/formatters/commitFormatter.ts","webpack:///./src/git/formatters/statusFormatter.ts","webpack:///./src/gravatar.ts","webpack:///./src/git/models/commit.ts","webpack:///./src/git/models/blameCommit.ts","webpack:///./src/git/models/contributor.ts","webpack:///./src/git/models/remote.ts","webpack:///./src/git/remotes/provider.ts","webpack:///./src/git/models/diff.ts","webpack:///./src/git/models/logCommit.ts","webpack:///./src/git/remotes/azure-devops.ts","webpack:///./src/git/remotes/bitbucket.ts","webpack:///./src/git/remotes/bitbucket-server.ts","webpack:///./src/git/remotes/custom.ts","webpack:///./src/git/remotes/github.ts","webpack:///./src/git/remotes/gitlab.ts","webpack:///./src/git/remotes/factory.ts","webpack:///./src/git/models/repository.ts","webpack:///./src/git/models/stashCommit.ts","webpack:///./src/git/models/tag.ts","webpack:///./src/git/git.ts","webpack:///./src/vsls/protocol.ts","webpack:///./src/vsls/host.ts","webpack:///./src/vsls/guest.ts","webpack:///./src/vsls/vsls.ts","webpack:///./src/git/gitService.ts","webpack:///./src/webviews/apps/shared/colors.ts","webpack:///./src/annotations/annotations.ts","webpack:///./src/annotations/fileAnnotationController.ts","webpack:///./src/annotations/blameAnnotationProvider.ts","webpack:///./src/annotations/gutterBlameAnnotationProvider.ts","webpack:///./src/annotations/heatmapBlameAnnotationProvider.ts","webpack:///./src/annotations/recentChangesAnnotationProvider.ts","webpack:///./src/annotations/lineAnnotationController.ts","webpack:///./src/codelens/codeLensProvider.ts","webpack:///./src/codelens/codeLensController.ts","webpack:///./src/git/fsProvider.ts","webpack:///./src/hovers/lineHoverController.ts","webpack:///./src/keyboard.ts","webpack:///./src/statusbar/statusBarController.ts","webpack:///./src/trackers/lineTracker.ts","webpack:///./src/trackers/gitLineTracker.ts","webpack:///./src/views/nodes/viewNode.ts","webpack:///./src/views/nodes/commitFileNode.ts","webpack:///./src/views/nodes/folderNode.ts","webpack:///./src/views/nodes/commitNode.ts","webpack:///./src/views/nodes/common.ts","webpack:///./src/views/nodes/helpers.ts","webpack:///./src/views/nodes/branchTrackingStatusNode.ts","webpack:///./src/views/nodes/branchNode.ts","webpack:///./src/views/nodes/branchOrTagFolderNode.ts","webpack:///./src/views/nodes/branchesNode.ts","webpack:///./src/quickpicks/referencesQuickPick.ts","webpack:///./src/quickpicks/commonQuickPicks.ts","webpack:///./src/quickpicks/remotesQuickPick.ts","webpack:///./src/quickpicks/branchHistoryQuickPick.ts","webpack:///./src/quickpicks/commitFileQuickPick.ts","webpack:///./src/quickpicks/commitQuickPick.ts","webpack:///./src/quickpicks/commitsQuickPick.ts","webpack:///./src/quickpicks/fileHistoryQuickPick.ts","webpack:///./src/quickpicks/repositoriesQuickPick.ts","webpack:///./src/quickpicks/repoStatusQuickPick.ts","webpack:///./src/quickpicks/stashListQuickPick.ts","webpack:///./src/views/nodes/comparePickerNode.ts","webpack:///./src/views/nodes/compareNode.ts","webpack:///./src/views/nodes/resultsCommitsNode.ts","webpack:///./src/views/nodes/resultsFileNode.ts","webpack:///./src/views/nodes/resultsFilesNode.ts","webpack:///./src/views/nodes/compareResultsNode.ts","webpack:///./src/views/nodes/contributorNode.ts","webpack:///./src/views/nodes/contributorsNode.ts","webpack:///./src/views/nodes/fileHistoryNode.ts","webpack:///./src/views/nodes/fileHistoryTrackerNode.ts","webpack:///./src/views/nodes/lineHistoryNode.ts","webpack:///./src/views/nodes/lineHistoryTrackerNode.ts","webpack:///./src/views/nodes/reflogRecordNode.ts","webpack:///./src/views/nodes/reflogNode.ts","webpack:///./src/views/nodes/remoteNode.ts","webpack:///./src/views/nodes/remotesNode.ts","webpack:///./src/views/nodes/stashFileNode.ts","webpack:///./src/views/nodes/stashNode.ts","webpack:///./src/views/nodes/stashesNode.ts","webpack:///./src/views/nodes/statusFileNode.ts","webpack:///./src/views/nodes/statusFilesNode.ts","webpack:///./src/views/nodes/tagNode.ts","webpack:///./src/views/nodes/tagsNode.ts","webpack:///./src/views/nodes/repositoryNode.ts","webpack:///./src/views/nodes/repositoriesNode.ts","webpack:///./src/commands/common.ts","webpack:///./src/views/nodes/searchNode.ts","webpack:///./src/views/nodes/searchResultsCommitsNode.ts","webpack:///./src/views/viewBase.ts","webpack:///./src/views/compareView.ts","webpack:///./src/views/fileHistoryView.ts","webpack:///./src/views/lineHistoryView.ts","webpack:///./src/views/repositoriesView.ts","webpack:///./src/views/searchView.ts","webpack:///./src/views/viewCommands.ts","webpack:///./src/webviews/protocol.ts","webpack:///./src/webviews/webviewBase.ts","webpack:///./src/webviews/settingsWebview.ts","webpack:///./src/webviews/welcomeWebview.ts","webpack:///./src/container.ts","webpack:///./src/commands/annotations.ts","webpack:///./src/commands/closeUnchangedFiles.ts","webpack:///./src/commands/copyMessageToClipboard.ts","webpack:///./src/commands/copyRemoteFileUrlToClipboard.ts","webpack:///./src/commands/copyShaToClipboard.ts","webpack:///./src/commands/diffBranchWith.ts","webpack:///./src/commands/diffDirectory.ts","webpack:///./src/commands/diffLineWithPrevious.ts","webpack:///./src/commands/diffLineWithWorking.ts","webpack:///./src/commands/diffWith.ts","webpack:///./src/commands/diffWithNext.ts","webpack:///./src/commands/diffWithPrevious.ts","webpack:///./src/commands/diffWithRef.ts","webpack:///./src/commands/diffWithRevision.ts","webpack:///./src/commands/diffWithWorking.ts","webpack:///./src/commands/externalDiff.ts","webpack:///./src/commands/inviteToLiveShare.ts","webpack:///./src/commands/openBranchesInRemote.ts","webpack:///./src/commands/openBranchInRemote.ts","webpack:///./src/commands/openChangedFiles.ts","webpack:///./src/commands/openCommitInRemote.ts","webpack:///./src/commands/openFileInRemote.ts","webpack:///./src/commands/openFileRevision.ts","webpack:///./src/commands/openFileRevisionFrom.ts","webpack:///./src/commands/openInRemote.ts","webpack:///./src/commands/openRepoInRemote.ts","webpack:///./src/commands/openWorkingFile.ts","webpack:///./src/commands/repositories.ts","webpack:///./src/commands/resetSuppressedWarnings.ts","webpack:///./src/commands/searchCommits.ts","webpack:///./src/commands/showLastQuickPick.ts","webpack:///./src/commands/showQuickBranchHistory.ts","webpack:///./src/commands/showQuickCommitDetails.ts","webpack:///./src/commands/showQuickCommitFileDetails.ts","webpack:///./src/commands/showQuickCurrentBranchHistory.ts","webpack:///./src/commands/showQuickFileHistory.ts","webpack:///./src/commands/showQuickRepoStatus.ts","webpack:///./src/commands/showQuickStashList.ts","webpack:///./src/commands/showView.ts","webpack:///./src/commands/stashApply.ts","webpack:///./src/commands/stashDelete.ts","webpack:///./src/commands/stashSave.ts","webpack:///./src/commands/supportGitLens.ts","webpack:///./src/commands/switchMode.ts","webpack:///./src/quickpicks/modesQuickPick.ts","webpack:///./src/commands/toggleCodeLens.ts","webpack:///./src/extension.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","buffer","Buffer","safer","Safer","from","Uint8Array","encodingOrOffset","length","TypeError","alloc","size","fill","encoding","RangeError","buf","kStringMaxLength","process","binding","e","constants","MAX_LENGTH","kMaxLength","MAX_STRING_LENGTH","bomHandling","iconv","encodings","defaultCharUnicode","defaultCharSingleByte","encode","str","options","encoder","getEncoder","res","write","trail","end","concat","decode","skipDecodeWarning","console","error","decoder","getDecoder","encodingExists","enc","getCodec","toEncoding","fromEncoding","_codecDataCache","_canonicalizeEncoding","codecOptions","codec","codecDef","encodingName","type","Error","toLowerCase","replace","bomAware","addBOM","PrependBOM","stripBOM","StripBOM","nodeVer","versions","node","nodeVerArr","split","map","Number","u","a","h","f","String","Array","join","z","utcOffset","Math","abs","floor","year","month","clone","add","ceil","M","y","w","ms","Q","$","weekdays","months","v","g","format","pl","date","D","locale","$L","utc","$u","this","parse","$d","Date","NaN","test","match","UTC","init","$y","getFullYear","$M","getMonth","$D","getDate","$W","getDay","$H","getHours","$m","getMinutes","$s","getSeconds","$ms","getMilliseconds","$utils","isValid","toString","isSame","startOf","endOf","isAfter","isBefore","$g","set","day","hour","minute","second","millisecond","unix","valueOf","getTime","toDate","apply","slice","$locale","weekStart","$set","min","daysInMonth","round","subtract","substr","meridiem","YY","YYYY","MM","MMM","monthsShort","MMMM","DD","dd","weekdaysMin","ddd","weekdaysShort","dddd","H","HH","hh","A","mm","ss","SSS","Z","getTimezoneOffset","diff","toJSON","toISOString","toUTCString","extend","isDayjs","en","Ls","vscode","liveShareApiVersion","version","async","getApi","liveshareExtension","extensions","getExtension","extensionId","extensionApi","isActive","activate","getApiAsync","Role","Access","View","ViewItem","ordinal","weekYear","week","relativeTime","future","past","yy","to","toNow","fromNow","PrependBOMWrapper","StripBOMWrapper","pass","InternalCodec","InternalEncoderBase64","InternalEncoderCesu8","InternalDecoderCesu8","utf8","cesu8","unicode11utf8","ucs2","utf16le","binary","base64","hex","_internal","InternalEncoder","InternalDecoder","StringDecoder","prevStr","acc","contBytes","accBytes","completeQuads","bufIdx","charCode","charCodeAt","curByte","fromCharCode","Utf16BECodec","Utf16BEEncoder","Utf16BEDecoder","overflowByte","Utf16Codec","Utf16Encoder","undefined","Utf16Decoder","initialBytes","initialBytesLen","detectEncoding","defaultEncoding","asciiCharsLE","asciiCharsBE","_len","utf16be","tmp","buf2","j","utf16","push","Utf7Codec","utf7","unicode11utf7","Utf7Encoder","Utf7Decoder","nonDirectChars","inBase64","base64Accum","chunk","base64Regex","base64Chars","plusChar","minusChar","andChar","Utf7IMAPCodec","Utf7IMAPEncoder","base64AccumIdx","Utf7IMAPDecoder","lastI","b64str","canBeDecoded","utf7imap","uChar","base64IMAPChars","SBCSCodec","chars","asciiString","decodeBuf","encodeBuf","SBCSEncoder","SBCSDecoder","_sbcs","newBuf","idx1","idx2","10029","maccenteuro","808","ibm808","cp808","mik","ascii8bit","usascii","ansix34","ansix341968","ansix341986","csascii","cp367","ibm367","isoir6","iso646us","iso646irv","us","latin1","latin2","latin3","latin4","latin5","latin6","latin7","latin8","latin9","latin10","csisolatin1","csisolatin2","csisolatin3","csisolatin4","csisolatincyrillic","csisolatinarabic","csisolatingreek","csisolatinhebrew","csisolatin5","csisolatin6","l1","l2","l3","l4","l5","l6","l7","l8","l9","l10","isoir14","isoir57","isoir100","isoir101","isoir109","isoir110","isoir144","isoir127","isoir126","isoir138","isoir148","isoir157","isoir166","isoir179","isoir199","isoir203","isoir226","cp819","ibm819","cyrillic","arabic","arabic8","ecma114","asmo708","greek","greek8","ecma118","elot928","hebrew","hebrew8","turkish","turkish8","thai","thai8","celtic","celtic8","isoceltic","tis6200","tis62025291","tis62025330","10000","10006","10007","10079","10081","cspc8codepage437","cspc775baltic","cspc850multilingual","cspcp852","cspc862latinhebrew","cpgr","msee","mscyrl","msansi","msgreek","msturk","mshebr","msarab","winbaltrim","cp20866","20866","ibm878","cskoi8r","cp21866","21866","ibm1168","strk10482002","tcvn5712","tcvn57121","gb198880","cn","csiso14jisc6220ro","jisc62201969ro","jp","cshproman8","r8","roman8","xroman8","ibm1051","mac","csmacintosh","437","737","775","850","852","855","856","857","858","860","861","862","863","864","865","866","869","874","922","1046","1124","1125","1129","1133","1161","1162","1163","1250","1251","1252","1253","1254","1255","1256","1257","1258","28591","28592","28593","28594","28595","28596","28597","28598","28599","28600","28601","28603","28604","28605","28606","windows874","win874","cp874","windows1250","win1250","cp1250","windows1251","win1251","cp1251","windows1252","win1252","cp1252","windows1253","win1253","cp1253","windows1254","win1254","cp1254","windows1255","win1255","cp1255","windows1256","win1256","cp1256","windows1257","win1257","cp1257","windows1258","win1258","cp1258","iso88591","cp28591","iso88592","cp28592","iso88593","cp28593","iso88594","cp28594","iso88595","cp28595","iso88596","cp28596","iso88597","cp28597","iso88598","cp28598","iso88599","cp28599","iso885910","cp28600","iso885911","cp28601","iso885913","cp28603","iso885914","cp28604","iso885915","cp28605","iso885916","cp28606","cp437","ibm437","csibm437","cp737","ibm737","csibm737","cp775","ibm775","csibm775","cp850","ibm850","csibm850","cp852","ibm852","csibm852","cp855","ibm855","csibm855","cp856","ibm856","csibm856","cp857","ibm857","csibm857","cp858","ibm858","csibm858","cp860","ibm860","csibm860","cp861","ibm861","csibm861","cp862","ibm862","csibm862","cp863","ibm863","csibm863","cp864","ibm864","csibm864","cp865","ibm865","csibm865","cp866","ibm866","csibm866","cp869","ibm869","csibm869","cp922","ibm922","csibm922","cp1046","ibm1046","csibm1046","cp1124","ibm1124","csibm1124","cp1125","ibm1125","csibm1125","cp1129","ibm1129","csibm1129","cp1133","ibm1133","csibm1133","cp1161","ibm1161","csibm1161","cp1162","ibm1162","csibm1162","cp1163","ibm1163","csibm1163","maccroatian","maccyrillic","macgreek","maciceland","macroman","macromania","macthai","macturkish","macukraine","koi8r","koi8u","koi8ru","koi8t","armscii8","rk1048","tcvn","georgianacademy","georgianps","pt154","viscii","iso646cn","iso646jp","hproman8","macintosh","ascii","tis620","_dbcs","DBCSCodec","UNASSIGNED","GB18030_CODE","NODE_START","UNASSIGNED_NODE","table","mappingTable","decodeTables","decodeTableSeq","_addDecodeChunk","encodeTable","encodeTableSeq","skipEncodeChars","encodeSkipVals","val","_fillEncodeTable","encodeAdd","_setEncodeChar","defCharSB","gb18030","thirdByteNodeIdx","thirdByteNode","fourthByteNodeIdx","fourthByteNode","secondByteNodeIdx","secondByteNode","DBCSEncoder","leadSurrogate","seqObj","DBCSDecoder","nodeIdx","prevBuf","findIdx","mid","_getDecodeTrieNode","addr","bytes","curAddr","parseInt","writeTable","k","part","code","codeTrail","len","seq","_getEncodeBucket","uCode","high","dbcsCode","bucket","low","_setEncodeSequence","oldVal","prefix","mbCode","nextChar","resCode","subtable","idx","uChars","gbChars","prevBufOffset","seqStart","curSeq","ptr","uCodeLead","ret","shiftjis","¥","‾","csshiftjis","mskanji","sjis","windows31j","ms31j","xsjis","windows932","ms932","932","cp932","eucjp","gb2312","gb231280","gb23121980","csgb2312","csiso58gb231280","euccn","windows936","ms936","936","cp936","gbk","xgbk","isoir58","€","chinese","windows949","ms949","949","cp949","cseuckr","csksc56011987","euckr","isoir149","korean","ksc56011987","ksc56011989","ksc5601","windows950","ms950","950","cp950","big5","big5hkscs","cnbig5","csbig5","xxbig5","Transform","IconvLiteEncoderStream","conv","decodeStrings","IconvLiteDecoderStream","encodeStream","decodeStream","supportsStreams","_collect","collect","constructor","_transform","done","_flush","cb","chunks","on","isBuffer","original","supportsNodeEncodingsExtension","extendNodeEncodings","nodeNativeEncodings","utf-8","ucs-2","utf-16le","isNativeEncoding","SlowBuffer","SlowBufferToString","start","SlowBufferWrite","string","offset","isFinite","swap","remaining","copy","BufferIsEncoding","isEncoding","BufferByteLength","byteLength","BufferToString","BufferWrite","_offset","_length","_encoding","Readable","ReadableSetEncoding","setEncoding","_readableState","undoExtendNodeEncodings","Comparer","textDocumentComparer","TextDocumentComparer","[object Object]","lhs","rhs","textEditorComparer","TextEditorComparer","useId","usePosition","viewColumn","document","equals","id","uriComparer","UriComparer","exact","scheme","fsPath","AnnotationsToggleMode","CodeLensCommand","CodeLensScopes","CustomRemoteType","DateSource","DateStyle","FileAnnotationType","GravatarDefaultStyle","HighlightLocations","KeyMap","StatusBarCommand","ViewBranchesLayout","ViewFilesLayout","ViewLocation","extensionOutputChannelName","extensionQualifiedId","extensionTerminalName","BuiltInCommands","CommandContext","DocumentSchemes","GlyphChars","GlobalState","setCommandContext","external_vscode_","executeCommand","SetContext","isActiveDocument","editor","activeTextEditor","isTextEditor","uri","Output","DebugConsole","ImageMimetypes",".png",".gif",".jpg",".jpeg",".jpe",".webp",".tif",".tiff",".bmp","WorkspaceState","Arrays","compactHierarchy","root","joinPath","isRoot","children","values","every","siblings","parent","delete","child","relativePath","countUniques","source","accessor","uniqueCounts","item","filterMap","predicateMapper","reduce","accumulator","current","mapped","filterMapAsync","groupBy","groupings","groupByMap","group","Map","groupByFilterMap","makeHierarchical","splitPath","compact","seed","descendants","hierarchy","folder","folderName","uniqueBy","predicate","uniqueValues","filter","date_Dates","dayjs_min","advancedFormat","Dates","MillisecondsPerMinute","MillisecondsPerHour","MillisecondsPerDay","getFormatter","lodash_es_isObject","_freeGlobal","global","freeSelf","self","lodash_es_root","Function","lodash_es_now","now","_Symbol","objectProto","_getRawTag_hasOwnProperty","nativeObjectToString","symToStringTag","_getRawTag","isOwn","tag","unmasked","result","_objectToString_nativeObjectToString","_objectToString","nullTag","undefinedTag","_baseGetTag_symToStringTag","_baseGetTag","lodash_es_isObjectLike","symbolTag","lodash_es_isSymbol","NAN","reTrim","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","lodash_es_toNumber","other","isBinary","FUNC_ERROR_TEXT","nativeMax","max","nativeMin","lodash_es_debounce","func","wait","lastArgs","lastThis","maxWait","timerId","lastCallTime","lastInvokeTime","leading","maxing","trailing","invokeFunc","time","args","thisArg","shouldInvoke","timeSinceLastCall","timerExpired","trailingEdge","setTimeout","timeWaiting","remainingWait","debounced","isInvoking","arguments","leadingEdge","cancel","clearTimeout","flush","INFINITY","MAX_INTEGER","lodash_es_toFinite","lodash_es_toInteger","remainder","before_FUNC_ERROR_TEXT","lodash_es_before","function_Functions","lodash_es_once","gate","target","descriptor","fn","gateKey","configurable","writable","promise","isPromise","then","Functions","cachedOnce","cached","Promise","resolve","cancellable","token","reject","onCancellationRequested","debounce","track","opts","pending","tracked","comma","emptyStr","openBrace","openParen","closeParen","fnBodyRegex","fnBodyStripCommentsRegex","fnBodyStripParamDefaultValueRegex","getParameters","fnBody","open","indexOf","close","param","trim","is","propOrMatcher","obj","once","propOf","propOfCore","assign","interval","timer","disposable","dispose","clearInterval","setInterval","waitUntil","timeout","counter","logger_emptyStr","TraceLevel","ConsolePrefix","isDebuggingRegex","logger_Logger","context","level","loggableFn","customLoggableFn","_level","Silent","output","createOutputChannel","contextOrMessage","params","Debug","isDebugging","message","shift","log","timestamp","appendLine","toLoggableParams","ex","stack","exec","log_correlationContext","correlationCounter","Verbose","warn","show","sanitize","loggable","JSON","stringify","_a","instance","index","getUTCMilliseconds","debugOnly","loggableParams","toLoggable","_isDebugging","env","VSCODE_DEBUGGING_EXTENSION","command","gitOutput","string_emptyStr","string_Strings","Strings","getCommonBase","s1","s2","delimiter","char","substring","getDurationMilliseconds","secs","nanosecs","hrtime","pathNormalizeRegex","pathStripTrailingSlashRegex","tokenRegex","tokenSanitizeRegex","padLeft","padTo","padding","width","getWidth","repeat","padRight","getTokensFromTemplate","template","tokens","truncateTo","option","suffix","collapseWhitespace","padDirection","interpolate","lines","md5","external_crypto_","update","digest","normalizePath","fileName","stripTrailingSlash","normalized","addLeadingSlash","pad","before","after","padLeftOrTruncate","truncate","padOrTruncate","left","padRightOrTruncate","pluralize","count","zero","number","plural","illegalCharsForFSRegex","ellipsis","sanitizeForFileSystem","replacement","sha1","splitSingle","splitter","parts","first","ansiRegex","containsNonAsciiRegex","emoji","joiners","graphemes","codePointAt","isFullwidthCodePoint","cp","log_emptyStr","clearCorrelationContext","correlationId","LogInstanceNameFn","log_debug","timed","log_log","debug","logFn","parameters","MAX_SAFE_INTEGER","condition","instanceName","toLoggableName","correlate","correlationContext","setCorrelationContext","enter","singleLine","argFns","argFn","Boolean","logWithDebugParams","exit","logError","timing","exitDetails","logResult","catch","memoize_emptyStr","memoize","resolver","fnKey","memoizeKey","prop","arg0","Iterables","Objects","some","next","forEach","find","iterator","flatMap","mapper","has","isIterable","separator","last","skip","take","union","sources","entries","flatten","flattened","_flatten","isArray","isEmpty","paths","path","results","FIN","StringIterator","_value","_pos","PathIterator","_from","_to","justSeps","ch","aPos","aLen","thisPos","cmp","TernarySearchTreeNode","right","searchTree_TernarySearchTree","segments","_iter","_root","element","iter","reset","segment","hasNext","oldElement","dir","pop","candidate","limit","_nodeIterator","data","_forEach","callback","_iterator","Versions","major","minor","patch","pre","compare","v1","v2","localeCompare","fromString","ver","emptyConfig","Proxy","configuration_Configuration","_onDidChange","_onWillChange","initializingChangeEvent","affectsConfiguration","section","resource","subscriptions","onDidChangeConfiguration","configuration","onConfigurationChanged","onDidChange","event","onWillChange","evt","change","fire","transform","defaultValue","getConfiguration","inspect","inspection","migrated","globalValue","migrationFn","Global","workspaceValue","Workspace","workspaceFolderValue","WorkspaceFolder","fallbackValue","fromInspection","toInspection","AnnotationStatus","annotationProvider_AnnotationProviderBase","trackedDocument","decoration","highlightDecoration","correlationKey","getCorrelationKey","onDidChangeTextEditorSelection","onTextEditorSelectionChanged","clear","textEditor","selection","selections","active","line","editorId","editorUri","status","setDecorations","additionalDecorations","_b","_c","changes","_resetDebounced","onReset","provideAnnotation","_disposed","Computing","decorations","ranges","Computed","shaOrLine","onProvideAnnotation","SuppressedMessages","messages_Messages","commit","showMessage","CommitHasNoPreviousCommitWarning","shortSha","author","formattedDate","CommitNotFoundWarning","title","showOutputChannel","FileNotUnderSourceControlWarning","GitDisabledWarning","GitVersionWarning","LineUncommittedWarning","NoRepositoryWarning","actions","ViewsHideSupportGitLens","suppressedMessage","SupportGitLensNotification","openExternal","previousVersion","container_Container","config","views","repositories","location","GitLens","fileHistory","lineHistory","search","Commands","ShowSettingsPage","ShowWelcomePage","suppressionKey","dontShowAgain","showInformationMessage","showWarningMessage","showErrorMessage","messages","trackedDocument_TrackedDocument","_document","dirty","_eventDelegates","_onDidBlameStateChange","_forceDirtyStateChangeOnNextDocumentChange","_hasRemotes","_isDirtyIdle","_isTracked","_blameFailed","_repo","initialize","onDidBlameStateChange","_disposable","git","_uri","gitUri_GitUri","fromUri","repo","getRepository","onRepositoryChanged","initializing","changed","RepositoryChange","Repository","forceDirtyStateChangeOnNextDocumentChange","hasRemotes","isBlameable","isDirtyIdle","isRevision","sha","gitService_GitService","deletedOrMissingSha","isTracked","lineCount","ActiveFileStatus","getStatus","reason","state","wasBlameable","forceBlameChange","getEditorIfActive","blameable","documentTracker_DocumentTracker","_onDidChangeBlameState","_onDidChangeDirtyState","_onDidTriggerDirtyIdle","_documentMap","onDidChangeActiveTextEditor","onActiveTextEditorChanged","onDidChangeTextDocument","onTextDocumentChanged","onDidCloseTextDocument","onTextDocumentClosed","onDidSaveTextDocument","onTextDocumentSaved","onDidChangeBlameState","onDidChangeDirtyState","onDidTriggerDirtyIdle","_dirtyIdleTriggerDelay","_dirtyIdleTriggeredDebounced","_timer","doc","addCore","File","Vsls","isDirty","resetForceDirtyStateChangeOnNextDocumentChange","fireDocumentDirtyStateChanged","documentOrId","_add","_get","toKey","openTextDocument","documentUri","useVersionedPath","msg","includes","BinaryTextDocument","MissingRevisionTextDocument","ensureInitialized","setImmediate","_dirtyStateChangedDebounced","documentTracker_EmptyTextDocument","gitUri","eol","LF","isClosed","isUntitled","languageId","range","position","regex","GitDocumentState","cache","gitDocumentTracker_GitDocumentTracker","isWindows","platform","runDownPath","exe","external_path_","external_fs_","PATH","haystack","needle","bufferExceededRegex","run","stdin","stdinEncoding","maxBuffer","proc","external_child_process_","stdout","stderr","lib","findSpecificGit","findExecutable","cmd","possibleExts","ext","possibleFullPath","SYSTEMROOT","execPath","raw","findSystemGitWin32","basePath","findGitPath","findGitDarwin","blameParser_emptyStr","slash","blameParser_GitBlameParser","repoPath","currentUser","authors","commits","lineParts","relativeFileName","entry","git_Git","isUncommitted","authorEmail","email","authorDate","authorTimeZone","committerDate","committerTimeZone","summary","previousSha","previousFileName","startsWith","parseEntry","originalLine","sort","b","blameCommit_GitBlameCommit","__decorate","gitUri_emptyStr","gitUri_slash","commitOrRepoPath","super","query","authority","fragment","isUncommittedStaged","ref","ensureValidUNCPath","versionedPath","directory","getDirectory","relativeFsPath","shortenSha","file","relativeTo","Dot","useVslsScheme","vsls","isMaybeGuest","with","previous","previousUri","fileOrName","resolveToUri","originalFileName","isTrackable","Git","getRepoPath","uncommittedStagedSha","commitish","fileNameOrUri","getFormattedPath","encodeURIComponent","normalizedFileName","normalizedRepoPath","uriOrRef","fileNameOrFile","filePath","file_GitFile","gitUri_decorate","GitFile","getFormattedDirectory","includeOriginal","ArrowLeft","getOriginalRelativePath","getRelativePath","statusIconsMap","!","?","C","R","T","U","X","B","getStatusIcon","statusOcticonsMap","getStatusOcticon","missing","Space","statusTextMap","getStatusText","status_GitStatus","branch","files","upstream","detached","branch_GitBranch","isDetached","formatDetached","added","deleted","empty","expand","getDiffStatus","getUpstreamStatus","behind","ahead","ArrowDown","ArrowUp","status_decorate","status_GitStatusFile","indexStatus","workingTreeStatus","staged","getChangedValue","workTreeStatus","remote","tracking","getName","lastIndexOf","getRemote","starred","workspaceState","StarredBranches","updateStarred","star","_","rest","branch_decorate","branchWithTrackingRegex","branchParser_GitBranchParser","branches","defaultFormat","branchParser_decorate","nameStatusDiffRegex","shortStatDiffRegex","unifiedDiffRegex","diffParser_GitDiffParser","hunks","previousStart","previousCount","currentStart","currentCount","hunk","diff_GitDiffHunk","currentLines","previousLines","removed","hunkLines","insertions","deletions","diffParser_decorate","emptyEntry","logParser_emptyStr","logParser_slash","diffRegex","diffRangeRegex","fileStatusRegex","logFileSimpleRegex","logFileSimpleRenamedRegex","logFileSimpleRenamedFilesRegex","logParser_GitLogParser","maxCount","reverse","recentCommit","renamedFileName","truncationCount","committedDate","parentShas","GitCommitType","Log","LogFile","truncated","logCommit_GitLogCommit","nextSha","nextFileName","lineRef","diffFile","diffRenamed","renamed","lastIndex","simpleFormat","logParser_decorate","reflog_GitReflogRecord","_selector","commandArgs","details","dateFormatter","CommitFormatting","dateStyle","Absolute","formatDate","dateFormat","formatDateFromNow","HEAD","_previousSha","previousShortSha","selector","reflog_decorate","reflogRegex","reflogHEADRegex","reflogParser_GitReflogParser","commands","records","head","headDate","headSha","recordDate","record","reflogParser_decorate","remoteParser_emptyStr","remoteRegex","urlRegex","remoteParser_GitRemoteParser","providerFactory","remotes","groups","url","domain","uniqueness","parseGitUrl","provider","remote_GitRemote","types","remoteParser_decorate","shortlogRegex","shortlogParser_GitShortLogParser","contributors","contributor_GitContributor","shortlogParser_decorate","stashParser_emptyStr","stashParser_emptyEntry","stashParser_GitStashParser","stashName","fileNames","stashCommit_GitStashCommit","Stash","stashParser_decorate","statusParser_emptyStr","aheadStatusV1Regex","behindStatusV1Regex","statusParser_GitStatusParser","porcelainVersion","parseV1","parseV2","upstreamStatus","aheadStatus","behindStatus","rawStatus","file1","file2","parseStatusFile","statusParser_decorate","tagWithRefRegex","tagWithAnnotationRegex","tagParser_GitTagParser","tags","annotation","GitTag","tagParser_decorate","treeParser_emptyStr","treeRegex","GitTreeParser","trees","commitSha","treeParser_decorate","formatter_emptyStr","spaceReplacementRegex","formatter_Formatter","collapsableWhitespace","_item","_options","tokenOptions","formatter","dateFormatOrOptions","_formatter","commitFormatter_emptyStr","emojiMap","emojiRegex","escapeMarkdownRegex","markdownHeaderReplacement","ZeroWidthSpace","commitFormatter_CommitFormatter","_authorDate","formatAuthorDate","_authorDateAgo","formatAuthorDateFromNow","_authorDateOrAgo","defaultDateStyle","_committerDate","formatCommitterDate","_committerDateAgo","formatCommitterDateFromNow","_committerDateOrAgo","_date","_dateAgo","_dateOrAgo","ago","_padOrTruncate","agoOrDate","markdown","authorAgo","authorAgoOrDate","avatar","hovers","avatars","getGravatarUri","defaultGravatarsStyle","presence","statusText","toLocaleLowerCase","encodeURI","asAbsolutePath","getFormattedDiffStatus","changesShort","previousLineDiffUris","diffUris","uncommittedSha","MuchLessThan","diffWith_DiffWithCommand","getMarkdownCommandArgs","showQuickCommitDetails_ShowQuickCommitDetailsCommand","annotationType","RecentChanges","Blame","toRevisionUri","EqualsTriple","openFileRevision_OpenFileRevisionCommand","ArrowUpRight","openCommitInRemote_OpenCommitInRemoteCommand","Envelope","inviteToLiveShare_InviteToLiveShareCommand","MiddleEllipsis","showQuickCommitFileDetails_ShowQuickCommitFileDetailsCommand","revisionUri","toGitUri","committerAgo","committerAgoOrDate","truncateMessageAtNewLine","Ellipsis","default","numeric","sensitivity","enrichMessage","fromTemplateCore","statusFormatter_StatusFileFormatter","originalPath","working","statusFile","icon","Pencil","SpaceThinnest","Check","SpaceThin","EnDash","gravatarCache","missingGravatarHash","fallback","hash","gravatar","dateSource","commit_GitCommit","_fileName","isFile","Committed","StashFile","isStash","previousFileSha","editorLine","getPreviousLineDiffUris","getWorkingUri","authorDateFormatter","committerDateFormatter","fromTemplate","fromCommit","commit_decorate","GitRemoteType","RemoteResourceType","currentPosition","previousPosition","parseHunk","diff_decorate","isMerge","nextUri","logCommit_decorate","defaultRemote","DefaultRemote","getNameFromRemoteResource","Branch","Branches","Commit","Repo","Revision","provider_RemoteProvider","protocol","custom","_name","displayPath","baseUrl","clipboard","writeText","showGenericErrorMessage","openUrl","getUrlForBranch","getUrlForBranches","getUrlForCommit","getUrlForFile","getUrlForRepository","issueEnricherRegex","gitRegex","legacyDefaultCollectionRegex","orgAndProjectRegex","sshDomainRegex","sshPathRegex","azure_devops_AzureDevOpsRemote","legacy","org","project","_displayPath","bitbucket_issueEnricherRegex","prEnricherRegex","bitbucket_BitbucketRemote","formatName","bitbucket_server_issueEnricherRegex","bitbucket_server_prEnricherRegex","bitbucket_server_BitbucketServerRemote","custom_CustomRemote","urls","repository","getContext","fileLine","fileRange","fileInCommit","fileInBranch","repoBase","github_issueEnricherRegex","issueEnricher3rdParyRegex","github_GitHubRemote","gitlab_issueEnricherRegex","gitlab_GitLabRemote","defaultProviders","factory_RemoteProviderFactory","providers","matcher","creator","cfg","rc","getCustomProvider","Bitbucket","BitbucketServer","Custom","GitHub","GitLab","RepositoryChangeEvent","solely","repository_Repository","onAnyRepositoryChanged","suspended","closed","_onDidChangeFileSystem","supportsChangeEvents","_fireChangeDebounced","_fireFileSystemChangeDebounced","_fsWatchCounter","_pendingChanges","_closed","getWorkspaceFolder","fromRepoPath","formattedName","normalizedPath","endsWith","_suspended","watcher","createFileSystemWatcher","onDidCreate","onDidDelete","onDidChangeFileSystem","stopWatchingFileSystem","_providers","loadProviders","_remotes","fireChange","Remotes","fireFileSystemChange","Stashes","_branch","Tags","Config","Closed","progress","fetchCore","withProgress","Notification","fetch","getBranch","getBranches","getChangedFilesCount","getContributors","err","stat","mtime","remotesCfg","getRemotesCore","getStashList","getStatusForRepo","getTags","getRemotes","pullCore","force","pushCore","fs","StarredRepositories","_fsWatcherDisposable","onFileSystemChanged","reasons","fireChangeCore","fireFileSystemChangeCore","uris","repository_decorate","tag_decorate","emptyArray","freeze","emptyObj","git_emptyStr","git_slash","rootSha","GitErrors","badRevision","notAValidObjectName","invalidLineCount","GitWarnings","notARepository","outsideRepository","noPath","noCommits","notFound","foundButNotInRevision","headNotABranch","noUpstream","unknownRevision","mustRunInWorkTree","patchWithConflicts","noRemoteRepositorySpecified","remoteConnectionError","notAGitCommand","GitErrorHandling","pendingCommands","local","guest","cwd","configs","errors","errorHandling","runOpts","GCM_INTERACTIVE","GCM_PRESERVE_CREDS","LC_ALL","gitCommand","waiting","exception","splice","gitInfo","Ignore","Throw","defaultExceptionHandler","duration","logGitCommand","warning","gitPath","isMatch","shaRegex","shaLikeRegex","shaParentRegex","uncommittedRegex","uncommittedStagedRegex","uncommitted","uncommittedStaged","isShaLike","advanced","abbreviatedShaLength","shaShortenRegex","rev","extract","gitMajor","gitMinor","pathspec","allowConflicts","ignoreWhitespace","startLine","endLine","contents","pattern","ref1","ref2","similarityThreshold","tool","all","filters","renames","untracked","forkPoint","since","log__recent","deleteAfter","pathspecs","validateVersion","GIT_OPTIONAL_LOCKS","RequestType","GitCommandRequestType","RepositoriesInFolderRequestType","defaultWhitelistFn","gitWhitelist","leadingSlashRegex","host_VslsHostService","_api","_service","_localToSharedPaths","_sharedToLocalPaths","onDidChangeIsServiceAvailable","onAvailabilityChanged","onDidChangeWorkspaceFolders","onWorkspaceFoldersChanged","onRequest","onGitCommandRequest","onRepositoriesInFolderRequest","api","service","shareService","ServiceId","unshareService","requestType","handler","cancellation","available","workspaceFolders","cc","getCorrelationContext","localPath","sharedPath","convertLocalUriToShared","localPaths","_localPathsRegex","RegExp","sharedPaths","_sharedPathsRegex","request","isRootWorkspace","shared","localCwd","arg","convertSharedUriToLocal","folderUri","getRepositories","vslsUri","localUri","sharedUri","vslsUriRootRegex","host_decorate","guest_VslsGuestService","isServiceAvailable","getSharedService","Enabled","response","sendRequest","guest_decorate","vslsUriPrefixRegex","vsls_VslsController","_host","_guest","Readonly","_waitForReady","_onReady","onDidChangeSession","onLiveShareSessionChanged","getContacts","contacts","contact","getContact","invite","share","session","role","Host","liveshare","allowGuestAccess","Guest","connect","gitService_emptyStr","gitService_slash","RepoSearchWarnings","doesNotExist","userConfigRegex","mappedAuthorRegex","GitRepoSearchBy","emptyPromise","reflogCommands","_onDidChangeRepositories","_branchesCache","_tagsCache","_tagsWithRefsCache","_trackedCache","_userMapCache","_repositoryTree","forPaths","onDidChangeWindowState","onWindowStateChanged","_repositoriesLoadingPromise","onDidChangeRepositories","gitApi","getBuiltInGitApi","setOrFindGitPath","useCaching","caching","enabled","updateContext","fireRepositoriesChanged","focused","resume","suspend","getRepositoriesInFolder","repositorySearch","repos","findSuperstr","reposToDelete","depth","anyRepoChangedFn","rootPath","getRepoPathCore","excludes","repoPaths","repositorySearchCore","rp","folders","promises","resolve2","reject2","isDirectory","repositoryTree","hasRepository","any","HasRemotes","isCloseAffordance","checkout","getOrderedRepositories","total","report","increment","isCancellationRequested","pull","tracker","getOrAdd","getHighlanderRepoPath","highlander","cachedBlame","getBlameForFileCore","blame","customArguments","getCurrentUser","errorMessage","setBlameFailure","getBlameForFileContentsCore","blame__contents","skipCache","getBlameForFile","blameLine","lineToBlame","getBlameForFileContents","getBlameForRangeSync","allLines","shas","Set","sortedAuthors","rev_parse__currentBranch","for_each_ref__branch","diff__shortstat","parseShortStat","getLog","getLogForFile","firstIfNotFound","isSha","config__get","shortlog","user","config__get_regex","mappedAuthor","check_mailmap","cachedDiff","getDiffForFileCore","getEncoding","show__diff","getDiffForFile","diff__name_status","parseNameStatus","show__name_status","maxListItems","searchBy","maxSearchItems","searchArgs","Author","Changes","Files","Message","Sha","log__search","getLogForSearch","fileHistoryFollowsRenames","fromFile","cachedLog","getLogForFileCore","log__file","hasTrackingBranch","merge_base","getNextUri","getStatusForFile","nextRef","parseSimple","nextRenamedRef","renamedFile","parseSimpleRenamed","getPreviousUri","getBlameForLineContents","getText","getBlameForLine","hunkLine","getDiffForLine","log__file_recent","previousRef","reflog","includeAll","factory","filePathOrUri","skipCacheUpdate","isVslsScheme","findRepositoryForPath","rev_parse__show_toplevel","getActiveRepoPath","getRepositoryTree","repoPathOrUri","findSubstr","vslsPath","stash__list","status__file","includeRefs","show_ref__tags","parseWithRef","ls_tree","ls_files","renamedRef","schemeOruri","cacheKey","isTrackedCore","getDiffTool","difftool","difftool__dir_diff","rev_parse","ensuredRef","cat_file__resolve","cat_file__validate","directoryOrUri","stash__apply","stash__delete","stash__save","ensureGitVersion","stash__push","getGitVersion","feature","gitVersion","extension","getAPI","deletedOrMissing","strings","getGitPath","isShaParent","gitService_decorate","0","1","2","cssColorRegex","toRgba","color","parseFloat","defaultHeatmapHotColor","defaultHeatmapColdColor","computedHeatmapColor","annotations_Annotations","heatmap","getHeatmapColor","renderOptions","borderColor","documentRef","commitLine","getDiffFromHunkLine","Dash","ArrowLeftRightLong","isTrusted","getContactPresence","detailsMarkdownFormat","dateFormatOrFormatOptions","uncommittedColor","contentText","separateLines","borderStyle","borderWidth","spacing","backgroundColor","fontWeight","fontStyle","height","margin","textDecoration","applyHeatmap","scrollable","changesDiff","baseColor","cold","colors","hot","age","computeAge","rgba","rgb","toFixed","AnnotationClearReason","blameAnnotationProvider_BlameAnnotationProviderBase","_blame","setForceDirtyStateChangeOnNextDocumentChange","_hoverProviderDisposable","highlightDecorationRanges","validateRange","dates","half","median","lookup","newest","step","oldest","setDate","ageThreshold","coldColor","hotColor","annotations","registerHoverProvider","provideHover","provideChangesHover","provideDetailsHover","getCommitForHover","logCommit","getCommitForFile","detailsHoverMessage","defaultDateFormat","changesHoverMessage","over","character","getBlame","blameAnnotationProvider_decorate","gutterBlameAnnotationProvider_GutterBlameAnnotationProvider","gravatarDefault","gutterRenderOptions","decorationsMap","avatarDecorationsMap","gutter","computedHeatmap","compacted","getComputedHeatmap","addOrUpdateGravatarDecoration","registerHoverProviders","avatarDecoration","createTextEditorDecorationType","gutterIconPath","gutterIconSize","gutterBlameAnnotationProvider_decorate","heatmapBlameAnnotationProvider_HeatmapBlameAnnotationProvider","Heatmap","heatmapRenderOptions","heatmapBlameAnnotationProvider_decorate","recentChangesAnnotationProvider_RecentChangesAnnotationProvider","hoverMessage","recentChangesAnnotationProvider_decorate","Decorations","blameAnnotation","rangeBehavior","ClosedOpen","blameHighlight","heatmapAnnotation","heatmapHighlight","recentChangesAnnotation","recentChangesHighlight","fileAnnotationController_FileAnnotationController","_onDidToggleAnnotations","_annotationProviders","_keyboardScope","_annotationType","_toggleModes","onDidToggleAnnotations","clearAll","_annotationsDisposable","cfgHighlight","highlight","isWholeLine","overviewRulerLane","Right","locations","Line","overviewRulerColor","Overview","dark","Gutter","light","recentChanges","toggleMode","_editor","isInWindowToggle","getProvider","detachKeyboardHook","attachKeyboardHook","BlameabilityChanged","clearCore","DocumentChanged","DocumentClosed","restore","fuzzyProvider","ColumnChanged","editors","getToggleMode","Window","User","Disposing","visibleTextEditors","currentProvider","computingAnnotations","showAnnotationsCore","reopen","keyboard","beginScope","escape","onDidPressKey","annotationsLabel","validate","onDidChangeTextEditorViewColumn","onTextEditorViewColumnChanged","onDidChangeVisibleTextEditors","onVisibleTextEditorsChanged","onBlameStateChanged","onDirtyStateChanged","annotationDecoration","lineAnnotationController_LineAnnotationController","_enabled","fileAnnotations","onFileAnnotationsToggled","clearAnnotations","lineTracker","stop","currentLine","setLineTracker","refresh","includesAll","getState","isSubscribed","onDidChangeActiveLines","onActiveLinesChanged","lineAnnotationController_decorate","codeLensProvider_GitRecentChangeCodeLens","symbol","blameRange","isFullRange","desiredCommand","codeLensProvider_GitAuthorsCodeLens","codeLensProvider_GitCodeLensProvider","_git","_tracker","_onDidChangeCodeLenses","onDidChangeCodeLenses","maxLines","sizeThresholdAfterEdit","languageScope","scopesByLanguage","ll","language","scopes","symbolScopes","lenses","symbols","Document","ExecuteDocumentSymbolProvider","documentRangeFn","dirtyCommand","getDirtyTitle","sym","provideCodeLens","blameForRangeFn","recentChange","fileSymbol","getRangeFromSymbol","includeSingleLineSymbols","valid","symbolName","kind","Containers","Package","Class","Interface","Module","Namespace","Struct","isSingleLine","Constructor","Enum","Method","Property","Blocks","getValidateSymbolRange","lineAt","lineNumber","startChar","multiline","isDocumentSymbol","lens","resolveGitRecentChangeCodeLens","resolveGitAuthorsCodeLens","containerName","DiffWithPrevious","applyDiffWithPreviousCommand","ShowQuickCommitDetails","applyShowQuickCommitDetailsCommand","ShowQuickCommitFileDetails","applyShowQuickCommitFileDetailsCommand","ShowQuickCurrentBranchHistory","applyShowQuickCurrentBranchHistoryCommand","ShowQuickFileHistory","applyShowQuickFileHistoryCommand","ToggleFileBlame","applyToggleFileBlameCommand","toFileUri","codeLens","unsavedChanges","recentChangeAndAuthors","recentChangeOnly","authorsOnly","codeLensController_GitCodeLensController","_canToggle","_providerDisposable","_provider","createProvider","CanToggleCodeLens","registerCodeLensProvider","onDirtyIdleTriggered","fsProvider_emptyArray","fromGitLensFSUri","fromRevisionUri","fsProvider_GitFileSystemProvider","_searchTreeMap","_onDidChangeFile","registerFileSystemProvider","isCaseSensitive","isReadonly","onDidChangeFile","NoPermissions","tree","getTree","FileNotFound","typeToFileType","getVersionedFileBuffer","ctime","treeItem","searchTree","Directory","getTreeFileForRevision","getTreeForRevision","createSearchTree","getOrCreateSearchTree","Unknown","lineHoverController_LineHoverController","unregister","register","registered","lineState","getAnnotationType","wholeLine","lineAnnotations","keyNoopCommand","keys","mappings","keyboard_KeyboardScope","mapping","updateKeyCommandsContext","Key","keyboard_Keyboard","registerCommand","execute","begin","statusBarController_StatusBarController","clearBlame","_blameStatusBarItem","_modeStatusBarItem","statusBar","modes","statusBarItemName","alignment","Left","createStatusBarItem","SwitchMode","text","tooltip","reduceFlicker","updateBlame","hide","DiffLineWithPrevious","DiffWithWorking","DiffLineWithWorking","ToggleCodeLens","lineTracker_LineTracker","_onDidChangeActiveLines","_state","_lines","trigger","subscriber","subscription","_linesChangedDebounced","onLinesChanged","fireLinesChanged","lines1","lines2","GitLineState","gitLineTracker_GitLineTracker","_count","_subscriptions","updated","updateState","setState","ResourceType","unknownGitUri","counters","instanceId","getNextId","viewNode_ViewNode","ViewNode","view","_instanceId","getTreeItem","label","refreshNode","CommitFileNodeDisplayAs","viewNode_decorate","ViewRefNode","ViewRefFileNode","supportsAutoRefresh","viewNode_SubscribeableViewNode","_canSubscribe","disposables","onDidChangeVisibility","onVisibilityChanged","onDidChangeNodeState","onNodeStateChanged","onDidChangeAutoRefresh","onAutoRefreshChanged","unsubscribe","canSubscribe","ensureSubscription","triggerChange","_subscription","subscriptionPromise","visible","onStateChanged","onParentStateChanged","autoRefresh","subscribe","nodeSupportsConditionalDismissal","canDismiss","commitFileNode_CommitFileNode","_displayAs","_selection","priority","toFileCommit","None","contextValue","resourceType","description","CommitIcon","iconPath","StatusIcon","Gravatar","getCommand","_label","_description","_tooltip","CommitLabel","getCommitDescriptionTemplate","getCommitFileDescriptionTemplate","_folderName","getCommitTemplate","getCommitFileTemplate","_relativePath","CommitFile","commitFormat","commitDescriptionFormat","commitFileFormat","commitFileDescriptionFormat","showOptions","preserveFocus","preview","folderNode_FolderNode","containsWorkingFiles","getFileNesting","List","Collapsed","Folder","nesting","layout","Auto","nestingThreshold","threshold","Tree","commitNode_CommitNode","getBranchAndTagTips","getChildren","branchAndTagTips","AngleBracketLeftHeavy","AngleBracketRightHeavy","ArrowHeadRight","common_MessageNode","_message","_iconPath","common_CommandMessageNode","_command","common_PagerNode","previousNode","pageItemLimit","_args","Pager","common_ShowMoreNode","itemType","getBranchesAndTagTipsFn","currentName","branchesAndTagsBySha","bt","branchesAndTags","markers","insertDateMarkers","iterable","showRelativeDateMarkers","daysAgo","marker","setUTCHours","nextDate","branchTrackingStatusNode_BranchTrackingStatusNode","direction","supportsPaging","defaultItemLimit","previousLog","StatusAheadOfUpstream","StatusBehindUpstream","BranchStatusAheadOfUpstream","BranchStatusBehindUpstream","iconSuffix","branchNode_BranchNode","branchName","getBasename","treeHierarchy","_children","showTrackingBranch","getTrackingStatus","unstar","branchNode_decorate","branchOrTagFolderNode_BranchOrTagFolderNode","_key","_expanded","expanded","Expanded","branchesNode_BranchesNode","branchNodes","branchesNode_decorate","referencesQuickPick_RefQuickPickItem","checked","referencesQuickPick_BranchQuickPickItem","referencesQuickPick_TagQuickPickItem","referencesQuickPick_ReferencesQuickPick","placeHolder","scope","autoPick","goBack","pick","items","getItems","itms","allowEnteringRefs","quickpick","createQuickPick","busy","placeholder","ignoreFocusOut","getQuickPickIgnoreFocusOut","onDidHide","onDidAccept","selectedItems","validateReference","showQuickPick","include","showQuickPickProgress","_getInfiniteCancellablePromise","_showQuickPickProgress","commonQuickPicks_CommandQuickPickItem","commandOrArgs","commonQuickPicks_CommitQuickPickItem","getShortMessage","detail","KeyCommandQuickPickItem","MessageQuickPickItem","commonQuickPicks_ShowCommitInViewQuickPickItem","searchView","commonQuickPicks_ShowCommitSearchResultsInViewQuickPickItem","resultsLabel","showSearchResults","commonQuickPicks_ShowFileHistoryFromQuickPickItem","_goBack","commonQuickPicks_ShowFileHistoryInViewQuickPickItem","baseRef","fileHistoryView","showHistoryForUri","remotesQuickPick_OpenRemoteCommandQuickPickItem","remotesQuickPick_OpenRemotesCommandQuickPickItem","goBackCommand","shortFileSha","OpenInRemote","branchHistoryQuickPick_BranchHistoryQuickPick",",",".","progressCancellation","nextPageCommand","currentCommandArgs","currentCommand","ArrowBack","ShowQuickBranchHistory","previousPageCommand","npc","matchOnDescription","matchOnDetail","commitFileQuickPick_ApplyCommitFileChangesCommandQuickPickItem","OpenWorkingFile","applyChangesToWorkingFile","commitFileQuickPick_OpenCommitFileCommandQuickPickItem","_commit","commitFileQuickPick_OpenCommitFileRevisionCommandQuickPickItem","openEditor","commitQuickPick_CommitWithFileStatusQuickPickItem","_file","commitQuickPick_OpenCommitFilesCommandQuickPickItem","commitQuickPick_OpenCommitFileRevisionsCommandQuickPickItem","commitQuickPick_CommitQuickPick","previousCommand","nextCommand","resolveReference","previousCommandArgs","repoLog","nextLog","nextCommandArgs","onDidSelectItem","setKeyCommand","onDidSelect","stash","stashApplyCommmandArgs","confirm","stashItem","StashApply","stashDeleteCommmandArgs","StashDelete","diffDirectoryCommmandArgs","DiffDirectory","copyShaCommandArgs","CopyShaToClipboard","copyMessageCommandArgs","CopyMessageToClipboard","commitDetailsCommandArgs","commitsQuickPick_CommitsQuickPick","showInViewCommand","showAllCommand","fileHistoryQuickPick_FileHistoryQuickPick","pickerOnly","workingUri","goBackCommandArgs","RepositoryQuickPickItem","repositoriesQuickPick_RepositoriesQuickPick","repoStatusQuickPick_OpenStatusFileCommandQuickPickItem","_status","realIndexStatus","getOcticon","repoStatusQuickPick_OpenStatusFilesCommandQuickPickItem","OpenChangedFiles","stashListQuickPick_StashListQuickPick","StashSave","comparePickerNode_ComparePickerNode","selectedRef","getRepositoryCount","ComparePicker","getQualifiedCommand","ComparePickerWithRef","compareNode_CompareNode","_selectedRef","_comparePickerNode","pinned","getPinnedComparisons","reveal","focus","select","Compare","triggerNodeChange","ViewsCanCompare","selectForCompare","getRefName","getRepoPathOrPrompt","autoCompare","compareWithSelected","compareNode_decorate","resultsCommitsNode_ResultsCommitsNode","_commitsQuery","_querying","_expand","_uniqueId","ResultsCommits","getCommitsQueryResults","_commitsQueryResults","resultsCommitsNode_decorate","resultsFileNode_ResultsFileNode","ResultsFile","statusIcon","DiffWith","resultsFilesNode_ResultsFilesNode","_ref1","_ref2","getFilesQueryResults","ResultsFiles","_filesQueryResults","getFilesQueryResultsCore","resultsFilesNode_decorate","compareResultsNode_CompareResultsNode","_pinned","getCommitsQuery","CompareResults","updatePinnedComparison","getPinnableId","currentId","compareResultsNode_decorate","contributorNode_ContributorNode","contributor","Contributor","contributorsNode_ContributorsNode","Contributors","fileHistoryNode_FileHistoryNode","displayAs","FileHistory","onRepoChanged","onRepoFileSystemChanged","startWatchingFileSystem","fileHistoryNode_decorate","fileHistoryTrackerNode_FileHistoryTrackerNode","resetChild","_child","_fileUri","_baseRef","fileUri","ActiveFileHistory","onActiveEditorChanged","fileHistoryTrackerNode_decorate","lineHistoryNode_LineHistoryNode","_editorContents","getBlameForRangeContents","getBlameForRange","firstLine","lastLine","firstActive","anchor","LineHistory","lineHistoryNode_decorate","lineHistoryTrackerNode_LineHistoryTrackerNode","_base","ActiveLineHistory","isEqual","lineHistoryTrackerNode_decorate","reflogRecordNode_ReflogRecordNode","ReflogRecord","ArrowRight","reflogNode_ReflogNode","getIncomingActivity","Reflog","reflogNode_decorate","remoteNode_RemoteNode","rt","Fetch","Push","Remote","setAsDefault","remoteNode_decorate","remotesNode_RemotesNode","stashFileNode_StashFileNode","stashFormat","stashDescriptionFormat","stashFileFormat","stashFileDescriptionFormat","stashNode_StashNode","stashesNode_StashesNode","statusFileNode_StatusFileNode","hasStagedChanges","hasUnstagedChanges","_hasStagedChanges","_hasUnstagedChanges","resourceUri","collapsibleState","StatusFileCommits","getChangedIn","statusFileDescriptionFormat","statusFileFormat","changedIn","statusFilesNode_StatusFilesNode","includeWorkingTree","older","setMilliseconds","toStatusFile","aheadFiles","uniques","stats","StatusFiles","tagNode_TagNode","Tag","tagsNode_TagsNode","tagNodes","hasTimeRegex","repositoryNode_RepositoryNode","_lastFetched","insiders","getLastFetched","lastFetchedTooltip","formatLastFetched","includeTime","workingStatus","defaultDateShortFormat","repositoryNode_decorate","repositoriesNode_RepositoriesNode","resetChildren","Repositories","onRepositoriesChanged","autoReveal","containsUri","getParent","repositoriesNode_decorate","searchNode_SearchNode","getCommandArgs","Search","findIndex","searchNode_decorate","registrableCommands","common_command","getCommandUri","getRepoPathOrActiveOrPrompt","getRepoPathOrActive","isCommandViewContextWithBranch","isCommandViewContextWithCommit","isCommandViewContextWithRemote","isCommandViewContextWithRepo","isScmResourceGroup","handle","resourceStates","isScmResourceState","common_Command","contextParsingOptions","_execute","parseContext","preExecute","firstArg","edit","common_isTextEditor","states","scmResourceStates","scmResourceGroups","common_ActiveEditorCommand","lastCommand","ActiveEditorCachedCommand","rethrow","Open","showTextDocument","Active","searchResultsCommitsNode_SearchResultsCommitsNode","commitsQuery","SearchResults","prefillOnly","SearchCommitsInView","viewBase_ViewBase","_onDidChangeTreeData","_onDidChangeVisibility","_onDidChangeNodeState","registerCommands","onDidChangeTreeData","container","_tree","createTreeView","treeDataProvider","onDidCollapseElement","onElementCollapsed","onDidExpandElement","onElementExpanded","getRoot","ensureRoot","isPageable","setting","viewBase_decorate","compareView_CompareView","ViewsCompareKeepResults","keepResults","viewCommands","setFilesLayout","setKeepResults","pinComparison","unpinComparison","swapComparison","showCollapseAll","dismiss","addResults","PinnedComparisons","pin","addOrReplace","updateEffective","unpin","fileHistoryView_FileHistoryView","changeBase","setEditorFollowing","setRenameFollowing","ViewsFileHistoryEditorFollowing","lineHistoryView_LineHistoryView","ViewsLineHistoryEditorFollowing","repositoriesView_RepositoriesView","_onDidChangeAutoRefresh","setAutoRefresh","ViewsRepositoriesAutoRefresh","workspaceEnabled","searchView_SearchView","ViewsSearchKeepResults","searchQueryFn","getSearchQueryFn","getSearchLabel","resultsType","singular","viewCommands_ViewCommands","dismissNode","viewSupportsNodeDismissal","showAll","closeRepository","unsetAsDefault","openInTerminal","exploreRepoRevision","contributorAddCoauthoredBy","contributorCopyToClipboard","openChanges","openChangesWithWorking","openFile","openFileRevision","openFileRevisionInRemote","openChangedFiles","openChangedFileChanges","openChangedFileChangesWithWorking","openChangedFileRevisions","applyChanges","stageDirectory","stageFile","unstageDirectory","unstageFile","compareAncestryWithWorking","compareWithHead","compareWithRemote","compareFileWithSelected","selectFileForCompare","compareWithWorking","terminalCheckoutBranch","terminalCreateBranch","terminalDeleteBranch","terminalMergeBranch","terminalRebaseBranch","terminalRebaseBranchToRemote","terminalSquashBranchIntoCommit","terminalCheckoutCommit","terminalCherryPickCommit","terminalPushCommit","terminalRebaseCommit","terminalResetCommit","terminalRevertCommit","terminalRemoveRemote","terminalCreateTag","terminalDeleteTag","rootUri","coauthor","inputBox","newlines","compareView","commonAncestor","getMergeBase","_selectedFile","selected","ViewsCanCompareFile","diffArgs","openInNewWindow","OpenFolder","updateWorkspaceFolders","openWorkspace","FocusFilesExplorer","OpenFileInRemote","openDiffWith","OpenInTerminal","unStageDirectory","unStageFile","sendTerminalCommand","remoteBranch","showInputBox","prompt","_terminal","createTerminal","onDidCloseTerminal","_terminalCwd","sendText","terminal","ensureTerminal","IpcNotificationType","method","IpcCommandType","onIpcCommand","DidChangeConfigurationNotificationType","DidRequestJumpToNotificationType","ReadyCommandType","UpdateConfigurationCommandType","ipcSequence","emptyCommands","anchorRegex","webviewBase_WebviewBase","showCommand","showAndJumpCommands","_disposablePanel","notifyDidChangeConfiguration","_panel","webviewPanel","_pendingJumpToAnchor","notify","removes","onMessageReceived","jumpToAnchor","html","getHtml","createWebviewPanel","retainContextWhenHidden","enableFindWidget","enableCommandUris","enableScripts","onDidDispose","onPanelDisposed","onDidChangeViewState","onViewStateChanged","webview","onDidReceiveMessage","onMessageReceivedCore","filename","content","_html","getBootstrap","postMessage","nextIpcId","settingsWebview_SettingsWebview","ShowSettingsPageAndJumpToCompareView","ShowSettingsPageAndJumpToFileHistoryView","ShowSettingsPageAndJumpToLineHistoryView","ShowSettingsPageAndJumpToRepositoriesView","ShowSettingsPageAndJumpToSearchCommitsView","applyViewLayoutPreset","preset","histories","compareAndSearch","SourceControl","Explorer","welcomeWebview_WelcomeWebview","_context","_config","applyMode","_lineTracker","_vsls","_fileAnnotationController","_lineAnnotationController","_lineHoverController","_statusBarController","_codeLensController","_keyboard","_settingsWebview","_welcomeWebview","_compareView","_fileHistoryView","_lineHistoryView","_repositoriesView","_searchView","onConfigurationChanging","_applyModeConfigurationTransformBound","applyModeConfigurationTransform","lineHistoryView","lineHovers","repositoriesView","settingsWebview","_viewCommands","welcomeWebview","ToggleFileHeatmap","ToggleFileRecentChanges","_configsAffectedByMode","annotations_ClearFileAnnotationsCommand","ClearFileAnnotationsCommand","common_EditorCommand","registerTextEditorCommand","executeCore","ClearFileAnnotations","ComputingFileAnnotations","annotations_decorate","annotations_ToggleFileBlameCommand","ToggleFileBlameCommand","toggle","annotations_ToggleFileHeatmapCommand","ToggleFileHeatmapCommand","copyArgs","annotations_ToggleFileRecentChangesCommand","ToggleFileRecentChangesCommand","annotations_ToggleLineBlameCommand","ToggleLineBlameCommand","ToggleLineBlame","closeUnchangedFiles_CloseUnchangedFilesCommand","CloseUnchangedFilesCommand","CloseUnchangedFiles","CloseAllEditors","_onEditorChangedFn","loopCount","found","nextEditor","closeEditor","CloseActiveEditor","waitForEditorChange","NextEditor","closeUnchangedFiles_decorate","copyMessageToClipboard_CopyMessageToClipboardCommand","CopyMessageToClipboardCommand","blameline","getCommit","copyMessageToClipboard_decorate","copyRemoteFileUrlToClipboard_CopyRemoteFileUrlToClipboardCommand","CopyRemoteFileUrlToClipboardCommand","CopyRemoteFileUrlToClipboard","copyRemoteFileUrlToClipboard_decorate","copyShaToClipboard_CopyShaToClipboardCommand","CopyShaToClipboardCommand","copyShaToClipboard_decorate","diffBranchWith_DiffBranchWithCommand","DiffBranchWithCommand","DiffHeadWith","DiffWorkingWith","DiffHeadWithBranch","DiffWorkingWithBranch","diffBranchWith_decorate","diffDirectory_DiffDirectoryCommand","DiffDirectoryCommand","DiffDirectoryWithHead","ViewsOpenDirectoryDiff","ViewsOpenDirectoryDiffWithWorking","isCommandViewContextWithRef","openDirectoryDiff","diffDirectory_decorate","diffLineWithPrevious_DiffLineWithPreviousCommand","DiffLineWithPreviousCommand","showCommitHasNoPreviousCommitWarningMessage","diffLineWithPrevious_decorate","diffLineWithWorking_DiffLineWithWorkingCommand","DiffLineWithWorkingCommand","showFileNotUnderSourceControlWarningMessage","diffLineWithWorking_decorate","DiffWithCommand","argsOrCommit","getMarkdownCommandArgsCore","lhsSha","rhsSha","getFileStatusForCommit","getVersionedUri","rhsSuffix","lhsSuffix","Diff","diffWith_decorate","diffWithNext_DiffWithNextCommand","DiffWithNextCommand","DiffWithNext","DiffWithNextInDiff","getNextDiffUris","diffWithNext_decorate","diffWithPrevious_DiffWithPreviousCommand","DiffWithPreviousCommand","DiffWithPreviousInDiff","inDiffEditor","getPreviousDiffUris","diffWithPrevious_decorate","diffWithRef_DiffWithRefCommand","DiffWithRefCommand","DiffWithRef","DiffWithBranch","showNoRepositoryWarningMessage","renamedUri","renamedTitle","rename","diffWithRef_decorate","diffWithRevision_DiffWithRevisionCommand","DiffWithRevisionCommand","DiffWithRevision","reference","showProgress","diffWithRevision_decorate","diffWithWorking_DiffWithWorkingCommand","DiffWithWorkingCommand","DiffWithWorkingInDiff","diffWithWorking_decorate","Status","ResourceGroupType","externalDiff_ExternalDiffCommand","ExternalDiffCommand","ExternalDiff","ExternalDiffAll","isCommandViewContextWithFileCommit","isCommandViewContextWithFileRefs","resourceGroupType","Index","isModified","BOTH_MODIFIED","INDEX_MODIFIED","MODIFIED","openDiffTool","externalDiff_decorate","InviteToLiveShareCommand","InviteToLiveShare","argsOrEmail","isCommandViewContextWithContributor","startSession","inviteToLiveShare_decorate","openBranchesInRemote_OpenBranchesInRemoteCommand","OpenBranchesInRemoteCommand","OpenBranchesInRemote","openBranchesInRemote_decorate","openBranchInRemote_OpenBranchInRemoteCommand","OpenBranchInRemoteCommand","OpenBranchInRemote","openBranchInRemote_decorate","openChangedFiles_OpenChangedFilesCommand","OpenChangedFilesCommand","openChangedFiles_decorate","OpenCommitInRemoteCommand","OpenCommitInRemote","argsOrSha","openCommitInRemote_decorate","openFileInRemote_OpenFileInRemoteCommand","OpenFileInRemoteCommand","remotePart","branchPart","openFileInRemote_decorate","OpenFileRevisionCommand","OpenFileRevision","argsOrUri","openFileRevision_decorate","openFileRevisionFrom_OpenFileRevisionFromCommand","OpenFileRevisionFromCommand","OpenFileRevisionFrom","OpenFileRevisionFromBranch","openFileRevisionFrom_decorate","openInRemote_OpenInRemoteCommand","OpenInRemoteCommand","ensureRemoteBranchName","verb","shaSuffix","remotesQuickPick_RemotesQuickPick","openInRemote_decorate","openRepoInRemote_OpenRepoInRemoteCommand","OpenRepoInRemoteCommand","OpenRepoInRemote","openRepoInRemote_decorate","openWorkingFile_OpenWorkingFileCommand","OpenWorkingFileCommand","openWorkingFile_decorate","repositories_FetchRepositoriesCommand","FetchRepositoriesCommand","FetchRepositories","fetchAll","repositories_decorate","repositories_PullRepositoriesCommand","PullRepositoriesCommand","PullRepositories","pullAll","repositories_PushRepositoriesCommand","PushRepositoriesCommand","PushRepositories","pushAll","resetSuppressedWarnings_ResetSuppressedWarningsCommand","ResetSuppressedWarningsCommand","ResetSuppressedWarnings","resetSuppressedWarnings_decorate","searchByRegex","symbolToSearchByMap","searchByToSymbolMap","searchCommits_SearchCommitsCommand","SearchCommitsCommand","SearchCommits","showInView","originalArgs","_lastSearch","valueSelection","searchLabel","searchCommits_decorate","showLastQuickPick_ShowLastQuickPickCommand","ShowLastQuickPickCommand","ShowLastQuickPick","showLastQuickPick_decorate","showQuickBranchHistory_ShowQuickBranchHistoryCommand","ShowQuickBranchHistoryCommand","showQuickBranchHistory_decorate","ShowQuickCommitDetailsCommand","ShowCommitInView","showLineUncommittedWarningMessage","showCommitNotFoundWarningMessage","showQuickCommitDetails_decorate","ShowQuickCommitFileDetailsCommand","ShowQuickRevisionDetails","fileLog","commitFileQuickPick_CommitFileQuickPick","fileHistoryCommandArgs","ArrowRightHollow","showQuickCommitFileDetails_decorate","showQuickCurrentBranchHistory_ShowQuickCurrentBranchHistoryCommand","ShowQuickCurrentBranchHistoryCommand","showQuickCurrentBranchHistory_decorate","showQuickFileHistory_ShowQuickFileHistoryCommand","ShowQuickFileHistoryCommand","ShowFileHistoryInView","showQuickFileHistory_decorate","showQuickRepoStatus_ShowQuickRepoStatusCommand","ShowQuickRepoStatusCommand","ShowQuickRepoStatus","repoStatusQuickPick_RepoStatusQuickPick","stagedAdds","unstagedAdds","stagedChanges","unstagedChanges","stagedDeletes","unstagedDeletes","stagedAddsAndChanges","unstagedAddsAndChanges","unstaged","stagedStatus","unstagedStatus","repoStatusCommandArgs","computed","computeStatus","unstagedIndex","stashListCommandArgs","ShowQuickStashList","branchHistoryCommandArgs","showQuickRepoStatus_decorate","showQuickStashList_ShowQuickStashListCommand","ShowQuickStashListCommand","showQuickStashList_decorate","showView_ShowViewCommand","ShowViewCommand","ShowCompareView","ShowFileHistoryView","ShowLineHistoryView","ShowRepositoriesView","ShowSearchView","showView_decorate","stashApply_StashApplyCommand","StashApplyCommand","stashApply","stashApply_decorate","stashDelete_StashDeleteCommand","StashDeleteCommand","stashDelete","stashDelete_decorate","stashSave_StashSaveCommand","StashSaveCommand","StashSaveFiles","isCommandViewContextWithFile","isCommandViewContextWithRepoPath","stashSave","stashSave_decorate","supportGitLens_SupportGitLensCommand","SupportGitLensCommand","SupportGitLens","showSupportGitLensMessage","supportGitLens_decorate","switchMode_SwitchModeCommand","SwitchModeCommand","modesQuickPick_ModesQuickPick","modeCfg","activeAnnotations","switchMode_decorate","switchMode_ToggleReviewModeCommand","ToggleReviewModeCommand","ToggleReviewMode","switchMode_ToggleZenModeCommand","ToggleZenModeCommand","ToggleZenMode","toggleCodeLens_ToggleCodeLensCommand","ToggleCodeLensCommand","toggleCodeLens","configure","gitlensVersion","packageJSON","showGitDisabledErrorMessage","globalState","GitLensVersion","formatMigrationFn","migrate","explorers","migrateSettings","compareGitVersion","showGitVersionUnsupportedErrorMessage","notifyOnUnsupportedGitVersion","showWhatsNewAfterUpgrades","prevMajor","prevMinor","showWhatsNewMessage","showSetupViewLayoutMessage","showWelcomePage","deactivate","toggleCodeLens_decorate","__webpack_exports__"],"mappings":"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","file":"extension.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 36);\n","module.exports = require(\"vscode\");","module.exports = require(\"path\");","module.exports = require(\"fs\");","/* eslint-disable node/no-deprecated-api */\n\n'use strict'\n\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\nvar safer = {}\n\nvar key\n\nfor (key in buffer) {\n  if (!buffer.hasOwnProperty(key)) continue\n  if (key === 'SlowBuffer' || key === 'Buffer') continue\n  safer[key] = buffer[key]\n}\n\nvar Safer = safer.Buffer = {}\nfor (key in Buffer) {\n  if (!Buffer.hasOwnProperty(key)) continue\n  if (key === 'allocUnsafe' || key === 'allocUnsafeSlow') continue\n  Safer[key] = Buffer[key]\n}\n\nsafer.Buffer.prototype = Buffer.prototype\n\nif (!Safer.from || Safer.from === Uint8Array.from) {\n  Safer.from = function (value, encodingOrOffset, length) {\n    if (typeof value === 'number') {\n      throw new TypeError('The \"value\" argument must not be of type number. Received type ' + typeof value)\n    }\n    if (value && typeof value.length === 'undefined') {\n      throw new TypeError('The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type ' + typeof value)\n    }\n    return Buffer(value, encodingOrOffset, length)\n  }\n}\n\nif (!Safer.alloc) {\n  Safer.alloc = function (size, fill, encoding) {\n    if (typeof size !== 'number') {\n      throw new TypeError('The \"size\" argument must be of type number. Received type ' + typeof size)\n    }\n    if (size < 0 || size >= 2 * (1 << 30)) {\n      throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n    }\n    var buf = Buffer(size)\n    if (!fill || fill.length === 0) {\n      buf.fill(0)\n    } else if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n    return buf\n  }\n}\n\nif (!safer.kStringMaxLength) {\n  try {\n    safer.kStringMaxLength = process.binding('buffer').kStringMaxLength\n  } catch (e) {\n    // we can't determine kStringMaxLength in environments where process.binding\n    // is unsupported, so let's not set it\n  }\n}\n\nif (!safer.constants) {\n  safer.constants = {\n    MAX_LENGTH: safer.kMaxLength\n  }\n  if (safer.kStringMaxLength) {\n    safer.constants.MAX_STRING_LENGTH = safer.kStringMaxLength\n  }\n}\n\nmodule.exports = safer\n","module.exports = require(\"buffer\");","\"use strict\";\n\n// Some environments don't have global Buffer (e.g. React Native).\n// Solution would be installing npm modules \"buffer\" and \"stream\" explicitly.\nvar Buffer = require(\"safer-buffer\").Buffer;\n\nvar bomHandling = require(\"./bom-handling\"),\n    iconv = module.exports;\n\n// All codecs and aliases are kept here, keyed by encoding name/alias.\n// They are lazy loaded in `iconv.getCodec` from `encodings/index.js`.\niconv.encodings = null;\n\n// Characters emitted in case of error.\niconv.defaultCharUnicode = '�';\niconv.defaultCharSingleByte = '?';\n\n// Public API.\niconv.encode = function encode(str, encoding, options) {\n    str = \"\" + (str || \"\"); // Ensure string.\n\n    var encoder = iconv.getEncoder(encoding, options);\n\n    var res = encoder.write(str);\n    var trail = encoder.end();\n    \n    return (trail && trail.length > 0) ? Buffer.concat([res, trail]) : res;\n}\n\niconv.decode = function decode(buf, encoding, options) {\n    if (typeof buf === 'string') {\n        if (!iconv.skipDecodeWarning) {\n            console.error('Iconv-lite warning: decode()-ing strings is deprecated. Refer to https://github.com/ashtuchkin/iconv-lite/wiki/Use-Buffers-when-decoding');\n            iconv.skipDecodeWarning = true;\n        }\n\n        buf = Buffer.from(\"\" + (buf || \"\"), \"binary\"); // Ensure buffer.\n    }\n\n    var decoder = iconv.getDecoder(encoding, options);\n\n    var res = decoder.write(buf);\n    var trail = decoder.end();\n\n    return trail ? (res + trail) : res;\n}\n\niconv.encodingExists = function encodingExists(enc) {\n    try {\n        iconv.getCodec(enc);\n        return true;\n    } catch (e) {\n        return false;\n    }\n}\n\n// Legacy aliases to convert functions\niconv.toEncoding = iconv.encode;\niconv.fromEncoding = iconv.decode;\n\n// Search for a codec in iconv.encodings. Cache codec data in iconv._codecDataCache.\niconv._codecDataCache = {};\niconv.getCodec = function getCodec(encoding) {\n    if (!iconv.encodings)\n        iconv.encodings = require(\"../encodings\"); // Lazy load all encoding definitions.\n    \n    // Canonicalize encoding name: strip all non-alphanumeric chars and appended year.\n    var enc = iconv._canonicalizeEncoding(encoding);\n\n    // Traverse iconv.encodings to find actual codec.\n    var codecOptions = {};\n    while (true) {\n        var codec = iconv._codecDataCache[enc];\n        if (codec)\n            return codec;\n\n        var codecDef = iconv.encodings[enc];\n\n        switch (typeof codecDef) {\n            case \"string\": // Direct alias to other encoding.\n                enc = codecDef;\n                break;\n\n            case \"object\": // Alias with options. Can be layered.\n                for (var key in codecDef)\n                    codecOptions[key] = codecDef[key];\n\n                if (!codecOptions.encodingName)\n                    codecOptions.encodingName = enc;\n                \n                enc = codecDef.type;\n                break;\n\n            case \"function\": // Codec itself.\n                if (!codecOptions.encodingName)\n                    codecOptions.encodingName = enc;\n\n                // The codec function must load all tables and return object with .encoder and .decoder methods.\n                // It'll be called only once (for each different options object).\n                codec = new codecDef(codecOptions, iconv);\n\n                iconv._codecDataCache[codecOptions.encodingName] = codec; // Save it to be reused later.\n                return codec;\n\n            default:\n                throw new Error(\"Encoding not recognized: '\" + encoding + \"' (searched as: '\"+enc+\"')\");\n        }\n    }\n}\n\niconv._canonicalizeEncoding = function(encoding) {\n    // Canonicalize encoding name: strip all non-alphanumeric chars and appended year.\n    return (''+encoding).toLowerCase().replace(/:\\d{4}$|[^0-9a-z]/g, \"\");\n}\n\niconv.getEncoder = function getEncoder(encoding, options) {\n    var codec = iconv.getCodec(encoding),\n        encoder = new codec.encoder(options, codec);\n\n    if (codec.bomAware && options && options.addBOM)\n        encoder = new bomHandling.PrependBOM(encoder, options);\n\n    return encoder;\n}\n\niconv.getDecoder = function getDecoder(encoding, options) {\n    var codec = iconv.getCodec(encoding),\n        decoder = new codec.decoder(options, codec);\n\n    if (codec.bomAware && !(options && options.stripBOM === false))\n        decoder = new bomHandling.StripBOM(decoder, options);\n\n    return decoder;\n}\n\n\n// Load extensions in Node. All of them are omitted in Browserify build via 'browser' field in package.json.\nvar nodeVer = typeof process !== 'undefined' && process.versions && process.versions.node;\nif (nodeVer) {\n\n    // Load streaming support in Node v0.10+\n    var nodeVerArr = nodeVer.split(\".\").map(Number);\n    if (nodeVerArr[0] > 0 || nodeVerArr[1] >= 10) {\n        require(\"./streams\")(iconv);\n    }\n\n    // Load Node primitive extensions.\n    require(\"./extend-node\")(iconv);\n}\n\nif (\"Ā\" != \"\\u0100\") {\n    console.error(\"iconv-lite warning: javascript files use encoding different from utf-8. See https://github.com/ashtuchkin/iconv-lite/wiki/Javascript-source-file-encodings for more info.\");\n}\n","!function(t,n){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=n():\"function\"==typeof define&&define.amd?define(n):t.dayjs=n()}(this,function(){\"use strict\";var t=\"millisecond\",n=\"second\",e=\"minute\",r=\"hour\",i=\"day\",s=\"week\",u=\"month\",o=\"quarter\",a=\"year\",h=/^(\\d{4})-?(\\d{1,2})-?(\\d{0,2})[^0-9]*(\\d{1,2})?:?(\\d{1,2})?:?(\\d{1,2})?.?(\\d{1,3})?$/,f=/\\[([^\\]]+)]|Y{2,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g,c=function(t,n,e){var r=String(t);return!r||r.length>=n?t:\"\"+Array(n+1-r.length).join(e)+t},d={s:c,z:function(t){var n=-t.utcOffset(),e=Math.abs(n),r=Math.floor(e/60),i=e%60;return(n<=0?\"+\":\"-\")+c(r,2,\"0\")+\":\"+c(i,2,\"0\")},m:function(t,n){var e=12*(n.year()-t.year())+(n.month()-t.month()),r=t.clone().add(e,u),i=n-r<0,s=t.clone().add(e+(i?-1:1),u);return Number(-(e+(n-r)/(i?r-s:s-r))||0)},a:function(t){return t<0?Math.ceil(t)||0:Math.floor(t)},p:function(h){return{M:u,y:a,w:s,d:i,h:r,m:e,s:n,ms:t,Q:o}[h]||String(h||\"\").toLowerCase().replace(/s$/,\"\")},u:function(t){return void 0===t}},$={name:\"en\",weekdays:\"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday\".split(\"_\"),months:\"January_February_March_April_May_June_July_August_September_October_November_December\".split(\"_\")},l=\"en\",m={};m[l]=$;var y=function(t){return t instanceof v},M=function(t,n,e){var r;if(!t)return null;if(\"string\"==typeof t)m[t]&&(r=t),n&&(m[t]=n,r=t);else{var i=t.name;m[i]=t,r=i}return e||(l=r),r},g=function(t,n,e){if(y(t))return t.clone();var r=n?\"string\"==typeof n?{format:n,pl:e}:n:{};return r.date=t,new v(r)},D=d;D.l=M,D.i=y,D.w=function(t,n){return g(t,{locale:n.$L,utc:n.$u})};var v=function(){function c(t){this.$L=this.$L||M(t.locale,null,!0)||l,this.parse(t)}var d=c.prototype;return d.parse=function(t){this.$d=function(t){var n=t.date,e=t.utc;if(null===n)return new Date(NaN);if(D.u(n))return new Date;if(n instanceof Date)return new Date(n);if(\"string\"==typeof n&&!/Z$/i.test(n)){var r=n.match(h);if(r)return e?new Date(Date.UTC(r[1],r[2]-1,r[3]||1,r[4]||0,r[5]||0,r[6]||0,r[7]||0)):new Date(r[1],r[2]-1,r[3]||1,r[4]||0,r[5]||0,r[6]||0,r[7]||0)}return new Date(n)}(t),this.init()},d.init=function(){var t=this.$d;this.$y=t.getFullYear(),this.$M=t.getMonth(),this.$D=t.getDate(),this.$W=t.getDay(),this.$H=t.getHours(),this.$m=t.getMinutes(),this.$s=t.getSeconds(),this.$ms=t.getMilliseconds()},d.$utils=function(){return D},d.isValid=function(){return!(\"Invalid Date\"===this.$d.toString())},d.isSame=function(t,n){var e=g(t);return this.startOf(n)<=e&&e<=this.endOf(n)},d.isAfter=function(t,n){return g(t)<this.startOf(n)},d.isBefore=function(t,n){return this.endOf(n)<g(t)},d.$g=function(t,n,e){return D.u(t)?this[n]:this.set(e,t)},d.year=function(t){return this.$g(t,\"$y\",a)},d.month=function(t){return this.$g(t,\"$M\",u)},d.day=function(t){return this.$g(t,\"$W\",i)},d.date=function(t){return this.$g(t,\"$D\",\"date\")},d.hour=function(t){return this.$g(t,\"$H\",r)},d.minute=function(t){return this.$g(t,\"$m\",e)},d.second=function(t){return this.$g(t,\"$s\",n)},d.millisecond=function(n){return this.$g(n,\"$ms\",t)},d.unix=function(){return Math.floor(this.valueOf()/1e3)},d.valueOf=function(){return this.$d.getTime()},d.startOf=function(t,o){var h=this,f=!!D.u(o)||o,c=D.p(t),d=function(t,n){var e=D.w(h.$u?Date.UTC(h.$y,n,t):new Date(h.$y,n,t),h);return f?e:e.endOf(i)},$=function(t,n){return D.w(h.toDate()[t].apply(h.toDate(),(f?[0,0,0,0]:[23,59,59,999]).slice(n)),h)},l=this.$W,m=this.$M,y=this.$D,M=\"set\"+(this.$u?\"UTC\":\"\");switch(c){case a:return f?d(1,0):d(31,11);case u:return f?d(1,m):d(0,m+1);case s:var g=this.$locale().weekStart||0,v=(l<g?l+7:l)-g;return d(f?y-v:y+(6-v),m);case i:case\"date\":return $(M+\"Hours\",0);case r:return $(M+\"Minutes\",1);case e:return $(M+\"Seconds\",2);case n:return $(M+\"Milliseconds\",3);default:return this.clone()}},d.endOf=function(t){return this.startOf(t,!1)},d.$set=function(s,o){var h,f=D.p(s),c=\"set\"+(this.$u?\"UTC\":\"\"),d=(h={},h[i]=c+\"Date\",h.date=c+\"Date\",h[u]=c+\"Month\",h[a]=c+\"FullYear\",h[r]=c+\"Hours\",h[e]=c+\"Minutes\",h[n]=c+\"Seconds\",h[t]=c+\"Milliseconds\",h)[f],$=f===i?this.$D+(o-this.$W):o;if(f===u||f===a){var l=this.clone().set(\"date\",1);l.$d[d]($),l.init(),this.$d=l.set(\"date\",Math.min(this.$D,l.daysInMonth())).toDate()}else d&&this.$d[d]($);return this.init(),this},d.set=function(t,n){return this.clone().$set(t,n)},d.get=function(t){return this[D.p(t)]()},d.add=function(t,o){var h,f=this;t=Number(t);var c=D.p(o),d=function(n){var e=g(f);return D.w(e.date(e.date()+Math.round(n*t)),f)};if(c===u)return this.set(u,this.$M+t);if(c===a)return this.set(a,this.$y+t);if(c===i)return d(1);if(c===s)return d(7);var $=(h={},h[e]=6e4,h[r]=36e5,h[n]=1e3,h)[c]||1,l=this.valueOf()+t*$;return D.w(l,this)},d.subtract=function(t,n){return this.add(-1*t,n)},d.format=function(t){var n=this;if(!this.isValid())return\"Invalid Date\";var e=t||\"YYYY-MM-DDTHH:mm:ssZ\",r=D.z(this),i=this.$locale(),s=this.$H,u=this.$m,o=this.$M,a=i.weekdays,h=i.months,c=function(t,r,i,s){return t&&(t[r]||t(n,e))||i[r].substr(0,s)},d=function(t){return D.s(s%12||12,t,\"0\")},$=i.meridiem||function(t,n,e){var r=t<12?\"AM\":\"PM\";return e?r.toLowerCase():r},l={YY:String(this.$y).slice(-2),YYYY:this.$y,M:o+1,MM:D.s(o+1,2,\"0\"),MMM:c(i.monthsShort,o,h,3),MMMM:h[o]||h(this,e),D:this.$D,DD:D.s(this.$D,2,\"0\"),d:String(this.$W),dd:c(i.weekdaysMin,this.$W,a,2),ddd:c(i.weekdaysShort,this.$W,a,3),dddd:a[this.$W],H:String(s),HH:D.s(s,2,\"0\"),h:d(1),hh:d(2),a:$(s,u,!0),A:$(s,u,!1),m:String(u),mm:D.s(u,2,\"0\"),s:String(this.$s),ss:D.s(this.$s,2,\"0\"),SSS:D.s(this.$ms,3,\"0\"),Z:r};return e.replace(f,function(t,n){return n||l[t]||r.replace(\":\",\"\")})},d.utcOffset=function(){return 15*-Math.round(this.$d.getTimezoneOffset()/15)},d.diff=function(t,h,f){var c,d=D.p(h),$=g(t),l=6e4*($.utcOffset()-this.utcOffset()),m=this-$,y=D.m(this,$);return y=(c={},c[a]=y/12,c[u]=y,c[o]=y/3,c[s]=(m-l)/6048e5,c[i]=(m-l)/864e5,c[r]=m/36e5,c[e]=m/6e4,c[n]=m/1e3,c)[d]||m,f?y:D.a(y)},d.daysInMonth=function(){return this.endOf(u).$D},d.$locale=function(){return m[this.$L]},d.locale=function(t,n){if(!t)return this.$L;var e=this.clone();return e.$L=M(t,n,!0),e},d.clone=function(){return D.w(this.toDate(),this)},d.toDate=function(){return new Date(this.$d)},d.toJSON=function(){return this.toISOString()},d.toISOString=function(){return this.$d.toISOString()},d.toString=function(){return this.$d.toUTCString()},c}();return g.prototype=v.prototype,g.extend=function(t,n){return t(n,v,g),g},g.locale=M,g.isDayjs=y,g.unix=function(t){return g(1e3*t)},g.en=m[l],g.Ls=m,g});\n","//\n//  Copyright (c) Microsoft Corporation. All rights reserved.\n//\n'use strict';\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Entrypoint and type definitions for Live Share for VS Code extension API\n */\nconst vscode = require(\"vscode\");\nconst liveShareApiVersion = require('./package.json').version;\n/**\n * Extension ID of the Live Share extension for VS Code.\n */\nexports.extensionId = 'ms-vsliveshare.vsliveshare';\n/**\n * Entrypoint for access to the Live Share API.\n *\n * @returns an instance of the Live Share API, or `null` if the Live Share extension\n * is not installed or failed to activate.\n *\n * @example To access the Live Share API from another extension:\n *\n *     import * as vsls from 'vsls/vscode';\n *     const liveshare = await vsls.getApi();\n */\nasync function getApi() {\n    const liveshareExtension = vscode.extensions.getExtension(exports.extensionId);\n    if (!liveshareExtension) {\n        // The extension is not installed.\n        return null;\n    }\n    const extensionApi = liveshareExtension.isActive ?\n        liveshareExtension.exports : await liveshareExtension.activate();\n    if (!extensionApi) {\n        // The extensibility API is not enabled.\n        return null;\n    }\n    // Support deprecated function name to preserve compatibility with older versions of VSLS.\n    if (!extensionApi.getApi)\n        return extensionApi.getApiAsync(liveShareApiVersion);\n    return extensionApi.getApi(liveShareApiVersion);\n}\nexports.getApi = getApi;\n/** @deprecated */\nfunction getApiAsync() { return getApi(); }\nexports.getApiAsync = getApiAsync;\nvar Role;\n(function (Role) {\n    Role[Role[\"None\"] = 0] = \"None\";\n    Role[Role[\"Host\"] = 1] = \"Host\";\n    Role[Role[\"Guest\"] = 2] = \"Guest\";\n})(Role = exports.Role || (exports.Role = {}));\n/** This is just a placeholder for a richer access control model to be added later. */\nvar Access;\n(function (Access) {\n    Access[Access[\"None\"] = 0] = \"None\";\n    Access[Access[\"ReadOnly\"] = 1] = \"ReadOnly\";\n    Access[Access[\"ReadWrite\"] = 3] = \"ReadWrite\";\n    Access[Access[\"Owner\"] = 255] = \"Owner\";\n})(Access = exports.Access || (exports.Access = {}));\n/**\n * Identifiers for Live Share tree views. These identifiers may be used by other extensions\n * to extend Live Share tree views with additional nodes via the `registerTreeDataProvider()`\n * API.\n */\nvar View;\n(function (View) {\n    View[\"Session\"] = \"liveshare.session\";\n    View[\"ExplorerSession\"] = \"liveshare.session.explorer\";\n    View[\"Contacts\"] = \"liveshare.contacts\";\n    View[\"Help\"] = \"liveshare.help\";\n})(View = exports.View || (exports.View = {}));\n/**\n * Identifiers for Live Share tree view items. These identifiers may be used by other\n * extensions to extend Live Share tree items with additional commands using conditional\n * expressions in the `view/item/context` section of their own package.json.\n */\nvar ViewItem;\n(function (ViewItem) {\n    // session item groups\n    ViewItem[\"Participants\"] = \"participants\";\n    ViewItem[\"Servers\"] = \"servers\";\n    ViewItem[\"Terminals\"] = \"terminals\";\n    // participants\n    ViewItem[\"CurrentUser\"] = \"participants.currentuser\";\n    ViewItem[\"Guest\"] = \"participants.guest\";\n    ViewItem[\"FollowedGuest\"] = \"participants.guest.followed\";\n    ViewItem[\"Participant\"] = \"participants.participant\";\n    ViewItem[\"FollowedParticipant\"] = \"participants.participant.followed\";\n    ViewItem[\"GuestAnonymous\"] = \"participants.guest.anonymous\";\n    ViewItem[\"FollowedGuestAnonymous\"] = \"participants.guest.followed.anonymous\";\n    ViewItem[\"GuestElevated\"] = \"participants.guest.elevated\";\n    ViewItem[\"FollowedGuestElevated\"] = \"participants.guest.followed.elevated\";\n    // servers\n    ViewItem[\"LocalServer\"] = \"servers.local\";\n    ViewItem[\"RemoteServer\"] = \"servers.remote\";\n    // terminals\n    ViewItem[\"LocalTerminalReadOnly\"] = \"terminals.local.readonly\";\n    ViewItem[\"LocalTerminalReadWrite\"] = \"terminals.local.readwrite\";\n    ViewItem[\"RemoteTerminal\"] = \"terminals.remote\";\n    // contacts\n    ViewItem[\"SuggestedContacts\"] = \"contacts.suggested\";\n    ViewItem[\"AvailableContacts\"] = \"contacts.available\";\n    ViewItem[\"ContactsProvider\"] = \"contacts.provider\";\n    ViewItem[\"SelfContact\"] = \"contacts.selfContact\";\n    ViewItem[\"Contact\"] = \"contacts.contact\";\n    ViewItem[\"ContactOffline\"] = \"contacts.contact.offline\";\n    ViewItem[\"RecentContact\"] = \"contacts.recentContact\";\n    ViewItem[\"RecentContactOffline\"] = \"contacts.recentContact.offline\";\n    ViewItem[\"NoContact\"] = \"contacts.noContact\";\n    ViewItem[\"RecentContacts\"] = \"contacts.RecentContacts\";\n    ViewItem[\"NoSuggestedContacts\"] = \"contacts.NoSuggestedUsers\";\n    ViewItem[\"NoRecentContacts\"] = \"contacts.NoRecentContacts\";\n    ViewItem[\"InvitedContact\"] = \"contacts.invited\";\n    // help\n    ViewItem[\"SessionFeedbackQuestion\"] = \"help.sessionFeedback\";\n    ViewItem[\"ReportAProblem\"] = \"help.reportAProblem\";\n    ViewItem[\"TweetUsYourFeedback\"] = \"help.tweetUsYourFeedback\";\n    ViewItem[\"Survey\"] = \"help.survey\";\n    ViewItem[\"GoodFeedback\"] = \"help.goodFeedback\";\n    ViewItem[\"BadFeedback\"] = \"help.badFeedback\";\n    ViewItem[\"DontAskAgain\"] = \"help.dontAskAgain\";\n    ViewItem[\"Thankyou\"] = \"help.thankyou\";\n    ViewItem[\"MoreInfo\"] = \"help.moreinfo\";\n    // Shown while session sharing / joining is in progress\n    ViewItem[\"Loading\"] = \"loading\";\n    // Other / unspecified item type\n    ViewItem[\"Other\"] = \"other\";\n})(ViewItem = exports.ViewItem || (exports.ViewItem = {}));\n\n//# sourceMappingURL=liveShare.js.map\n","module.exports = require(\"stream\");","module.exports = require(\"crypto\");","!function(e,t){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=t():\"function\"==typeof define&&define.amd?define(t):e.dayjs_plugin_advancedFormat=t()}(this,function(){\"use strict\";return function(e,t,r){var n=t.prototype,o=n.format;r.en.ordinal=function(e){var t=[\"th\",\"st\",\"nd\",\"rd\"],r=e%100;return\"[\"+e+(t[(r-20)%10]||t[r]||t[0])+\"]\"},n.format=function(e){var t=this,r=this.$locale(),n=this.$utils(),i=(e||\"YYYY-MM-DDTHH:mm:ssZ\").replace(/\\[([^\\]]+)]|Q|wo|gggg|Do|X|x|k{1,2}|S/g,function(e){switch(e){case\"Q\":return Math.ceil((t.$M+1)/3);case\"Do\":return r.ordinal(t.$D);case\"gggg\":return t.weekYear();case\"wo\":return r.ordinal(t.week(),\"W\");case\"k\":case\"kk\":return n.s(String(0===t.$H?24:t.$H),\"k\"===e?1:2,\"0\");case\"X\":return Math.floor(t.$d.getTime()/1e3);case\"x\":return t.$d.getTime();default:return e}});return o.bind(this)(i)}}});\n","!function(e,r){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=r():\"function\"==typeof define&&define.amd?define(r):e.dayjs_plugin_relativeTime=r()}(this,function(){\"use strict\";return function(e,r,t){var n=r.prototype;t.en.relativeTime={future:\"in %s\",past:\"%s ago\",s:\"a few seconds\",m:\"a minute\",mm:\"%d minutes\",h:\"an hour\",hh:\"%d hours\",d:\"a day\",dd:\"%d days\",M:\"a month\",MM:\"%d months\",y:\"a year\",yy:\"%d years\"};var o=function(e,r,n,o){for(var d,i,a=n.$locale().relativeTime,u=[{l:\"s\",r:44,d:\"second\"},{l:\"m\",r:89},{l:\"mm\",r:44,d:\"minute\"},{l:\"h\",r:89},{l:\"hh\",r:21,d:\"hour\"},{l:\"d\",r:35},{l:\"dd\",r:25,d:\"day\"},{l:\"M\",r:45},{l:\"MM\",r:10,d:\"month\"},{l:\"y\",r:17},{l:\"yy\",d:\"year\"}],f=u.length,s=0;s<f;s+=1){var l=u[s];l.d&&(d=o?t(e).diff(n,l.d,!0):n.diff(e,l.d,!0));var m=Math.round(Math.abs(d));if(m<=l.r||!l.r){1===m&&s>0&&(l=u[s-1]),i=a[l.l].replace(\"%d\",m);break}}return r?i:(d>0?a.future:a.past).replace(\"%s\",i)};n.to=function(e,r){return o(e,r,this,!0)},n.from=function(e,r){return o(e,r,this)},n.toNow=function(e){return this.to(t(),e)},n.fromNow=function(e){return this.from(t(),e)}}});\n","module.exports = require(\"child_process\");","\"use strict\";\n\nvar BOMChar = '\\uFEFF';\n\nexports.PrependBOM = PrependBOMWrapper\nfunction PrependBOMWrapper(encoder, options) {\n    this.encoder = encoder;\n    this.addBOM = true;\n}\n\nPrependBOMWrapper.prototype.write = function(str) {\n    if (this.addBOM) {\n        str = BOMChar + str;\n        this.addBOM = false;\n    }\n\n    return this.encoder.write(str);\n}\n\nPrependBOMWrapper.prototype.end = function() {\n    return this.encoder.end();\n}\n\n\n//------------------------------------------------------------------------------\n\nexports.StripBOM = StripBOMWrapper;\nfunction StripBOMWrapper(decoder, options) {\n    this.decoder = decoder;\n    this.pass = false;\n    this.options = options || {};\n}\n\nStripBOMWrapper.prototype.write = function(buf) {\n    var res = this.decoder.write(buf);\n    if (this.pass || !res)\n        return res;\n\n    if (res[0] === BOMChar) {\n        res = res.slice(1);\n        if (typeof this.options.stripBOM === 'function')\n            this.options.stripBOM();\n    }\n\n    this.pass = true;\n    return res;\n}\n\nStripBOMWrapper.prototype.end = function() {\n    return this.decoder.end();\n}\n\n","\"use strict\";\n\n// Update this array if you add/rename/remove files in this directory.\n// We support Browserify by skipping automatic module discovery and requiring modules directly.\nvar modules = [\n    require(\"./internal\"),\n    require(\"./utf16\"),\n    require(\"./utf7\"),\n    require(\"./sbcs-codec\"),\n    require(\"./sbcs-data\"),\n    require(\"./sbcs-data-generated\"),\n    require(\"./dbcs-codec\"),\n    require(\"./dbcs-data\"),\n];\n\n// Put all encoding/alias/codec definitions to single object and export it. \nfor (var i = 0; i < modules.length; i++) {\n    var module = modules[i];\n    for (var enc in module)\n        if (Object.prototype.hasOwnProperty.call(module, enc))\n            exports[enc] = module[enc];\n}\n","\"use strict\";\nvar Buffer = require(\"safer-buffer\").Buffer;\n\n// Export Node.js internal encodings.\n\nmodule.exports = {\n    // Encodings\n    utf8:   { type: \"_internal\", bomAware: true},\n    cesu8:  { type: \"_internal\", bomAware: true},\n    unicode11utf8: \"utf8\",\n\n    ucs2:   { type: \"_internal\", bomAware: true},\n    utf16le: \"ucs2\",\n\n    binary: { type: \"_internal\" },\n    base64: { type: \"_internal\" },\n    hex:    { type: \"_internal\" },\n\n    // Codec.\n    _internal: InternalCodec,\n};\n\n//------------------------------------------------------------------------------\n\nfunction InternalCodec(codecOptions, iconv) {\n    this.enc = codecOptions.encodingName;\n    this.bomAware = codecOptions.bomAware;\n\n    if (this.enc === \"base64\")\n        this.encoder = InternalEncoderBase64;\n    else if (this.enc === \"cesu8\") {\n        this.enc = \"utf8\"; // Use utf8 for decoding.\n        this.encoder = InternalEncoderCesu8;\n\n        // Add decoder for versions of Node not supporting CESU-8\n        if (Buffer.from('eda0bdedb2a9', 'hex').toString() !== '💩') {\n            this.decoder = InternalDecoderCesu8;\n            this.defaultCharUnicode = iconv.defaultCharUnicode;\n        }\n    }\n}\n\nInternalCodec.prototype.encoder = InternalEncoder;\nInternalCodec.prototype.decoder = InternalDecoder;\n\n//------------------------------------------------------------------------------\n\n// We use node.js internal decoder. Its signature is the same as ours.\nvar StringDecoder = require('string_decoder').StringDecoder;\n\nif (!StringDecoder.prototype.end) // Node v0.8 doesn't have this method.\n    StringDecoder.prototype.end = function() {};\n\n\nfunction InternalDecoder(options, codec) {\n    StringDecoder.call(this, codec.enc);\n}\n\nInternalDecoder.prototype = StringDecoder.prototype;\n\n\n//------------------------------------------------------------------------------\n// Encoder is mostly trivial\n\nfunction InternalEncoder(options, codec) {\n    this.enc = codec.enc;\n}\n\nInternalEncoder.prototype.write = function(str) {\n    return Buffer.from(str, this.enc);\n}\n\nInternalEncoder.prototype.end = function() {\n}\n\n\n//------------------------------------------------------------------------------\n// Except base64 encoder, which must keep its state.\n\nfunction InternalEncoderBase64(options, codec) {\n    this.prevStr = '';\n}\n\nInternalEncoderBase64.prototype.write = function(str) {\n    str = this.prevStr + str;\n    var completeQuads = str.length - (str.length % 4);\n    this.prevStr = str.slice(completeQuads);\n    str = str.slice(0, completeQuads);\n\n    return Buffer.from(str, \"base64\");\n}\n\nInternalEncoderBase64.prototype.end = function() {\n    return Buffer.from(this.prevStr, \"base64\");\n}\n\n\n//------------------------------------------------------------------------------\n// CESU-8 encoder is also special.\n\nfunction InternalEncoderCesu8(options, codec) {\n}\n\nInternalEncoderCesu8.prototype.write = function(str) {\n    var buf = Buffer.alloc(str.length * 3), bufIdx = 0;\n    for (var i = 0; i < str.length; i++) {\n        var charCode = str.charCodeAt(i);\n        // Naive implementation, but it works because CESU-8 is especially easy\n        // to convert from UTF-16 (which all JS strings are encoded in).\n        if (charCode < 0x80)\n            buf[bufIdx++] = charCode;\n        else if (charCode < 0x800) {\n            buf[bufIdx++] = 0xC0 + (charCode >>> 6);\n            buf[bufIdx++] = 0x80 + (charCode & 0x3f);\n        }\n        else { // charCode will always be < 0x10000 in javascript.\n            buf[bufIdx++] = 0xE0 + (charCode >>> 12);\n            buf[bufIdx++] = 0x80 + ((charCode >>> 6) & 0x3f);\n            buf[bufIdx++] = 0x80 + (charCode & 0x3f);\n        }\n    }\n    return buf.slice(0, bufIdx);\n}\n\nInternalEncoderCesu8.prototype.end = function() {\n}\n\n//------------------------------------------------------------------------------\n// CESU-8 decoder is not implemented in Node v4.0+\n\nfunction InternalDecoderCesu8(options, codec) {\n    this.acc = 0;\n    this.contBytes = 0;\n    this.accBytes = 0;\n    this.defaultCharUnicode = codec.defaultCharUnicode;\n}\n\nInternalDecoderCesu8.prototype.write = function(buf) {\n    var acc = this.acc, contBytes = this.contBytes, accBytes = this.accBytes, \n        res = '';\n    for (var i = 0; i < buf.length; i++) {\n        var curByte = buf[i];\n        if ((curByte & 0xC0) !== 0x80) { // Leading byte\n            if (contBytes > 0) { // Previous code is invalid\n                res += this.defaultCharUnicode;\n                contBytes = 0;\n            }\n\n            if (curByte < 0x80) { // Single-byte code\n                res += String.fromCharCode(curByte);\n            } else if (curByte < 0xE0) { // Two-byte code\n                acc = curByte & 0x1F;\n                contBytes = 1; accBytes = 1;\n            } else if (curByte < 0xF0) { // Three-byte code\n                acc = curByte & 0x0F;\n                contBytes = 2; accBytes = 1;\n            } else { // Four or more are not supported for CESU-8.\n                res += this.defaultCharUnicode;\n            }\n        } else { // Continuation byte\n            if (contBytes > 0) { // We're waiting for it.\n                acc = (acc << 6) | (curByte & 0x3f);\n                contBytes--; accBytes++;\n                if (contBytes === 0) {\n                    // Check for overlong encoding, but support Modified UTF-8 (encoding NULL as C0 80)\n                    if (accBytes === 2 && acc < 0x80 && acc > 0)\n                        res += this.defaultCharUnicode;\n                    else if (accBytes === 3 && acc < 0x800)\n                        res += this.defaultCharUnicode;\n                    else\n                        // Actually add character.\n                        res += String.fromCharCode(acc);\n                }\n            } else { // Unexpected continuation byte\n                res += this.defaultCharUnicode;\n            }\n        }\n    }\n    this.acc = acc; this.contBytes = contBytes; this.accBytes = accBytes;\n    return res;\n}\n\nInternalDecoderCesu8.prototype.end = function() {\n    var res = 0;\n    if (this.contBytes > 0)\n        res += this.defaultCharUnicode;\n    return res;\n}\n","module.exports = require(\"string_decoder\");","\"use strict\";\nvar Buffer = require(\"safer-buffer\").Buffer;\n\n// Note: UTF16-LE (or UCS2) codec is Node.js native. See encodings/internal.js\n\n// == UTF16-BE codec. ==========================================================\n\nexports.utf16be = Utf16BECodec;\nfunction Utf16BECodec() {\n}\n\nUtf16BECodec.prototype.encoder = Utf16BEEncoder;\nUtf16BECodec.prototype.decoder = Utf16BEDecoder;\nUtf16BECodec.prototype.bomAware = true;\n\n\n// -- Encoding\n\nfunction Utf16BEEncoder() {\n}\n\nUtf16BEEncoder.prototype.write = function(str) {\n    var buf = Buffer.from(str, 'ucs2');\n    for (var i = 0; i < buf.length; i += 2) {\n        var tmp = buf[i]; buf[i] = buf[i+1]; buf[i+1] = tmp;\n    }\n    return buf;\n}\n\nUtf16BEEncoder.prototype.end = function() {\n}\n\n\n// -- Decoding\n\nfunction Utf16BEDecoder() {\n    this.overflowByte = -1;\n}\n\nUtf16BEDecoder.prototype.write = function(buf) {\n    if (buf.length == 0)\n        return '';\n\n    var buf2 = Buffer.alloc(buf.length + 1),\n        i = 0, j = 0;\n\n    if (this.overflowByte !== -1) {\n        buf2[0] = buf[0];\n        buf2[1] = this.overflowByte;\n        i = 1; j = 2;\n    }\n\n    for (; i < buf.length-1; i += 2, j+= 2) {\n        buf2[j] = buf[i+1];\n        buf2[j+1] = buf[i];\n    }\n\n    this.overflowByte = (i == buf.length-1) ? buf[buf.length-1] : -1;\n\n    return buf2.slice(0, j).toString('ucs2');\n}\n\nUtf16BEDecoder.prototype.end = function() {\n}\n\n\n// == UTF-16 codec =============================================================\n// Decoder chooses automatically from UTF-16LE and UTF-16BE using BOM and space-based heuristic.\n// Defaults to UTF-16LE, as it's prevalent and default in Node.\n// http://en.wikipedia.org/wiki/UTF-16 and http://encoding.spec.whatwg.org/#utf-16le\n// Decoder default can be changed: iconv.decode(buf, 'utf16', {defaultEncoding: 'utf-16be'});\n\n// Encoder uses UTF-16LE and prepends BOM (which can be overridden with addBOM: false).\n\nexports.utf16 = Utf16Codec;\nfunction Utf16Codec(codecOptions, iconv) {\n    this.iconv = iconv;\n}\n\nUtf16Codec.prototype.encoder = Utf16Encoder;\nUtf16Codec.prototype.decoder = Utf16Decoder;\n\n\n// -- Encoding (pass-through)\n\nfunction Utf16Encoder(options, codec) {\n    options = options || {};\n    if (options.addBOM === undefined)\n        options.addBOM = true;\n    this.encoder = codec.iconv.getEncoder('utf-16le', options);\n}\n\nUtf16Encoder.prototype.write = function(str) {\n    return this.encoder.write(str);\n}\n\nUtf16Encoder.prototype.end = function() {\n    return this.encoder.end();\n}\n\n\n// -- Decoding\n\nfunction Utf16Decoder(options, codec) {\n    this.decoder = null;\n    this.initialBytes = [];\n    this.initialBytesLen = 0;\n\n    this.options = options || {};\n    this.iconv = codec.iconv;\n}\n\nUtf16Decoder.prototype.write = function(buf) {\n    if (!this.decoder) {\n        // Codec is not chosen yet. Accumulate initial bytes.\n        this.initialBytes.push(buf);\n        this.initialBytesLen += buf.length;\n        \n        if (this.initialBytesLen < 16) // We need more bytes to use space heuristic (see below)\n            return '';\n\n        // We have enough bytes -> detect endianness.\n        var buf = Buffer.concat(this.initialBytes),\n            encoding = detectEncoding(buf, this.options.defaultEncoding);\n        this.decoder = this.iconv.getDecoder(encoding, this.options);\n        this.initialBytes.length = this.initialBytesLen = 0;\n    }\n\n    return this.decoder.write(buf);\n}\n\nUtf16Decoder.prototype.end = function() {\n    if (!this.decoder) {\n        var buf = Buffer.concat(this.initialBytes),\n            encoding = detectEncoding(buf, this.options.defaultEncoding);\n        this.decoder = this.iconv.getDecoder(encoding, this.options);\n\n        var res = this.decoder.write(buf),\n            trail = this.decoder.end();\n\n        return trail ? (res + trail) : res;\n    }\n    return this.decoder.end();\n}\n\nfunction detectEncoding(buf, defaultEncoding) {\n    var enc = defaultEncoding || 'utf-16le';\n\n    if (buf.length >= 2) {\n        // Check BOM.\n        if (buf[0] == 0xFE && buf[1] == 0xFF) // UTF-16BE BOM\n            enc = 'utf-16be';\n        else if (buf[0] == 0xFF && buf[1] == 0xFE) // UTF-16LE BOM\n            enc = 'utf-16le';\n        else {\n            // No BOM found. Try to deduce encoding from initial content.\n            // Most of the time, the content has ASCII chars (U+00**), but the opposite (U+**00) is uncommon.\n            // So, we count ASCII as if it was LE or BE, and decide from that.\n            var asciiCharsLE = 0, asciiCharsBE = 0, // Counts of chars in both positions\n                _len = Math.min(buf.length - (buf.length % 2), 64); // Len is always even.\n\n            for (var i = 0; i < _len; i += 2) {\n                if (buf[i] === 0 && buf[i+1] !== 0) asciiCharsBE++;\n                if (buf[i] !== 0 && buf[i+1] === 0) asciiCharsLE++;\n            }\n\n            if (asciiCharsBE > asciiCharsLE)\n                enc = 'utf-16be';\n            else if (asciiCharsBE < asciiCharsLE)\n                enc = 'utf-16le';\n        }\n    }\n\n    return enc;\n}\n\n\n","\"use strict\";\nvar Buffer = require(\"safer-buffer\").Buffer;\n\n// UTF-7 codec, according to https://tools.ietf.org/html/rfc2152\n// See also below a UTF-7-IMAP codec, according to http://tools.ietf.org/html/rfc3501#section-5.1.3\n\nexports.utf7 = Utf7Codec;\nexports.unicode11utf7 = 'utf7'; // Alias UNICODE-1-1-UTF-7\nfunction Utf7Codec(codecOptions, iconv) {\n    this.iconv = iconv;\n};\n\nUtf7Codec.prototype.encoder = Utf7Encoder;\nUtf7Codec.prototype.decoder = Utf7Decoder;\nUtf7Codec.prototype.bomAware = true;\n\n\n// -- Encoding\n\nvar nonDirectChars = /[^A-Za-z0-9'\\(\\),-\\.\\/:\\? \\n\\r\\t]+/g;\n\nfunction Utf7Encoder(options, codec) {\n    this.iconv = codec.iconv;\n}\n\nUtf7Encoder.prototype.write = function(str) {\n    // Naive implementation.\n    // Non-direct chars are encoded as \"+<base64>-\"; single \"+\" char is encoded as \"+-\".\n    return Buffer.from(str.replace(nonDirectChars, function(chunk) {\n        return \"+\" + (chunk === '+' ? '' : \n            this.iconv.encode(chunk, 'utf16-be').toString('base64').replace(/=+$/, '')) \n            + \"-\";\n    }.bind(this)));\n}\n\nUtf7Encoder.prototype.end = function() {\n}\n\n\n// -- Decoding\n\nfunction Utf7Decoder(options, codec) {\n    this.iconv = codec.iconv;\n    this.inBase64 = false;\n    this.base64Accum = '';\n}\n\nvar base64Regex = /[A-Za-z0-9\\/+]/;\nvar base64Chars = [];\nfor (var i = 0; i < 256; i++)\n    base64Chars[i] = base64Regex.test(String.fromCharCode(i));\n\nvar plusChar = '+'.charCodeAt(0), \n    minusChar = '-'.charCodeAt(0),\n    andChar = '&'.charCodeAt(0);\n\nUtf7Decoder.prototype.write = function(buf) {\n    var res = \"\", lastI = 0,\n        inBase64 = this.inBase64,\n        base64Accum = this.base64Accum;\n\n    // The decoder is more involved as we must handle chunks in stream.\n\n    for (var i = 0; i < buf.length; i++) {\n        if (!inBase64) { // We're in direct mode.\n            // Write direct chars until '+'\n            if (buf[i] == plusChar) {\n                res += this.iconv.decode(buf.slice(lastI, i), \"ascii\"); // Write direct chars.\n                lastI = i+1;\n                inBase64 = true;\n            }\n        } else { // We decode base64.\n            if (!base64Chars[buf[i]]) { // Base64 ended.\n                if (i == lastI && buf[i] == minusChar) {// \"+-\" -> \"+\"\n                    res += \"+\";\n                } else {\n                    var b64str = base64Accum + buf.slice(lastI, i).toString();\n                    res += this.iconv.decode(Buffer.from(b64str, 'base64'), \"utf16-be\");\n                }\n\n                if (buf[i] != minusChar) // Minus is absorbed after base64.\n                    i--;\n\n                lastI = i+1;\n                inBase64 = false;\n                base64Accum = '';\n            }\n        }\n    }\n\n    if (!inBase64) {\n        res += this.iconv.decode(buf.slice(lastI), \"ascii\"); // Write direct chars.\n    } else {\n        var b64str = base64Accum + buf.slice(lastI).toString();\n\n        var canBeDecoded = b64str.length - (b64str.length % 8); // Minimal chunk: 2 quads -> 2x3 bytes -> 3 chars.\n        base64Accum = b64str.slice(canBeDecoded); // The rest will be decoded in future.\n        b64str = b64str.slice(0, canBeDecoded);\n\n        res += this.iconv.decode(Buffer.from(b64str, 'base64'), \"utf16-be\");\n    }\n\n    this.inBase64 = inBase64;\n    this.base64Accum = base64Accum;\n\n    return res;\n}\n\nUtf7Decoder.prototype.end = function() {\n    var res = \"\";\n    if (this.inBase64 && this.base64Accum.length > 0)\n        res = this.iconv.decode(Buffer.from(this.base64Accum, 'base64'), \"utf16-be\");\n\n    this.inBase64 = false;\n    this.base64Accum = '';\n    return res;\n}\n\n\n// UTF-7-IMAP codec.\n// RFC3501 Sec. 5.1.3 Modified UTF-7 (http://tools.ietf.org/html/rfc3501#section-5.1.3)\n// Differences:\n//  * Base64 part is started by \"&\" instead of \"+\"\n//  * Direct characters are 0x20-0x7E, except \"&\" (0x26)\n//  * In Base64, \",\" is used instead of \"/\"\n//  * Base64 must not be used to represent direct characters.\n//  * No implicit shift back from Base64 (should always end with '-')\n//  * String must end in non-shifted position.\n//  * \"-&\" while in base64 is not allowed.\n\n\nexports.utf7imap = Utf7IMAPCodec;\nfunction Utf7IMAPCodec(codecOptions, iconv) {\n    this.iconv = iconv;\n};\n\nUtf7IMAPCodec.prototype.encoder = Utf7IMAPEncoder;\nUtf7IMAPCodec.prototype.decoder = Utf7IMAPDecoder;\nUtf7IMAPCodec.prototype.bomAware = true;\n\n\n// -- Encoding\n\nfunction Utf7IMAPEncoder(options, codec) {\n    this.iconv = codec.iconv;\n    this.inBase64 = false;\n    this.base64Accum = Buffer.alloc(6);\n    this.base64AccumIdx = 0;\n}\n\nUtf7IMAPEncoder.prototype.write = function(str) {\n    var inBase64 = this.inBase64,\n        base64Accum = this.base64Accum,\n        base64AccumIdx = this.base64AccumIdx,\n        buf = Buffer.alloc(str.length*5 + 10), bufIdx = 0;\n\n    for (var i = 0; i < str.length; i++) {\n        var uChar = str.charCodeAt(i);\n        if (0x20 <= uChar && uChar <= 0x7E) { // Direct character or '&'.\n            if (inBase64) {\n                if (base64AccumIdx > 0) {\n                    bufIdx += buf.write(base64Accum.slice(0, base64AccumIdx).toString('base64').replace(/\\//g, ',').replace(/=+$/, ''), bufIdx);\n                    base64AccumIdx = 0;\n                }\n\n                buf[bufIdx++] = minusChar; // Write '-', then go to direct mode.\n                inBase64 = false;\n            }\n\n            if (!inBase64) {\n                buf[bufIdx++] = uChar; // Write direct character\n\n                if (uChar === andChar)  // Ampersand -> '&-'\n                    buf[bufIdx++] = minusChar;\n            }\n\n        } else { // Non-direct character\n            if (!inBase64) {\n                buf[bufIdx++] = andChar; // Write '&', then go to base64 mode.\n                inBase64 = true;\n            }\n            if (inBase64) {\n                base64Accum[base64AccumIdx++] = uChar >> 8;\n                base64Accum[base64AccumIdx++] = uChar & 0xFF;\n\n                if (base64AccumIdx == base64Accum.length) {\n                    bufIdx += buf.write(base64Accum.toString('base64').replace(/\\//g, ','), bufIdx);\n                    base64AccumIdx = 0;\n                }\n            }\n        }\n    }\n\n    this.inBase64 = inBase64;\n    this.base64AccumIdx = base64AccumIdx;\n\n    return buf.slice(0, bufIdx);\n}\n\nUtf7IMAPEncoder.prototype.end = function() {\n    var buf = Buffer.alloc(10), bufIdx = 0;\n    if (this.inBase64) {\n        if (this.base64AccumIdx > 0) {\n            bufIdx += buf.write(this.base64Accum.slice(0, this.base64AccumIdx).toString('base64').replace(/\\//g, ',').replace(/=+$/, ''), bufIdx);\n            this.base64AccumIdx = 0;\n        }\n\n        buf[bufIdx++] = minusChar; // Write '-', then go to direct mode.\n        this.inBase64 = false;\n    }\n\n    return buf.slice(0, bufIdx);\n}\n\n\n// -- Decoding\n\nfunction Utf7IMAPDecoder(options, codec) {\n    this.iconv = codec.iconv;\n    this.inBase64 = false;\n    this.base64Accum = '';\n}\n\nvar base64IMAPChars = base64Chars.slice();\nbase64IMAPChars[','.charCodeAt(0)] = true;\n\nUtf7IMAPDecoder.prototype.write = function(buf) {\n    var res = \"\", lastI = 0,\n        inBase64 = this.inBase64,\n        base64Accum = this.base64Accum;\n\n    // The decoder is more involved as we must handle chunks in stream.\n    // It is forgiving, closer to standard UTF-7 (for example, '-' is optional at the end).\n\n    for (var i = 0; i < buf.length; i++) {\n        if (!inBase64) { // We're in direct mode.\n            // Write direct chars until '&'\n            if (buf[i] == andChar) {\n                res += this.iconv.decode(buf.slice(lastI, i), \"ascii\"); // Write direct chars.\n                lastI = i+1;\n                inBase64 = true;\n            }\n        } else { // We decode base64.\n            if (!base64IMAPChars[buf[i]]) { // Base64 ended.\n                if (i == lastI && buf[i] == minusChar) { // \"&-\" -> \"&\"\n                    res += \"&\";\n                } else {\n                    var b64str = base64Accum + buf.slice(lastI, i).toString().replace(/,/g, '/');\n                    res += this.iconv.decode(Buffer.from(b64str, 'base64'), \"utf16-be\");\n                }\n\n                if (buf[i] != minusChar) // Minus may be absorbed after base64.\n                    i--;\n\n                lastI = i+1;\n                inBase64 = false;\n                base64Accum = '';\n            }\n        }\n    }\n\n    if (!inBase64) {\n        res += this.iconv.decode(buf.slice(lastI), \"ascii\"); // Write direct chars.\n    } else {\n        var b64str = base64Accum + buf.slice(lastI).toString().replace(/,/g, '/');\n\n        var canBeDecoded = b64str.length - (b64str.length % 8); // Minimal chunk: 2 quads -> 2x3 bytes -> 3 chars.\n        base64Accum = b64str.slice(canBeDecoded); // The rest will be decoded in future.\n        b64str = b64str.slice(0, canBeDecoded);\n\n        res += this.iconv.decode(Buffer.from(b64str, 'base64'), \"utf16-be\");\n    }\n\n    this.inBase64 = inBase64;\n    this.base64Accum = base64Accum;\n\n    return res;\n}\n\nUtf7IMAPDecoder.prototype.end = function() {\n    var res = \"\";\n    if (this.inBase64 && this.base64Accum.length > 0)\n        res = this.iconv.decode(Buffer.from(this.base64Accum, 'base64'), \"utf16-be\");\n\n    this.inBase64 = false;\n    this.base64Accum = '';\n    return res;\n}\n\n\n","\"use strict\";\nvar Buffer = require(\"safer-buffer\").Buffer;\n\n// Single-byte codec. Needs a 'chars' string parameter that contains 256 or 128 chars that\n// correspond to encoded bytes (if 128 - then lower half is ASCII). \n\nexports._sbcs = SBCSCodec;\nfunction SBCSCodec(codecOptions, iconv) {\n    if (!codecOptions)\n        throw new Error(\"SBCS codec is called without the data.\")\n    \n    // Prepare char buffer for decoding.\n    if (!codecOptions.chars || (codecOptions.chars.length !== 128 && codecOptions.chars.length !== 256))\n        throw new Error(\"Encoding '\"+codecOptions.type+\"' has incorrect 'chars' (must be of len 128 or 256)\");\n    \n    if (codecOptions.chars.length === 128) {\n        var asciiString = \"\";\n        for (var i = 0; i < 128; i++)\n            asciiString += String.fromCharCode(i);\n        codecOptions.chars = asciiString + codecOptions.chars;\n    }\n\n    this.decodeBuf = Buffer.from(codecOptions.chars, 'ucs2');\n    \n    // Encoding buffer.\n    var encodeBuf = Buffer.alloc(65536, iconv.defaultCharSingleByte.charCodeAt(0));\n\n    for (var i = 0; i < codecOptions.chars.length; i++)\n        encodeBuf[codecOptions.chars.charCodeAt(i)] = i;\n\n    this.encodeBuf = encodeBuf;\n}\n\nSBCSCodec.prototype.encoder = SBCSEncoder;\nSBCSCodec.prototype.decoder = SBCSDecoder;\n\n\nfunction SBCSEncoder(options, codec) {\n    this.encodeBuf = codec.encodeBuf;\n}\n\nSBCSEncoder.prototype.write = function(str) {\n    var buf = Buffer.alloc(str.length);\n    for (var i = 0; i < str.length; i++)\n        buf[i] = this.encodeBuf[str.charCodeAt(i)];\n    \n    return buf;\n}\n\nSBCSEncoder.prototype.end = function() {\n}\n\n\nfunction SBCSDecoder(options, codec) {\n    this.decodeBuf = codec.decodeBuf;\n}\n\nSBCSDecoder.prototype.write = function(buf) {\n    // Strings are immutable in JS -> we use ucs2 buffer to speed up computations.\n    var decodeBuf = this.decodeBuf;\n    var newBuf = Buffer.alloc(buf.length*2);\n    var idx1 = 0, idx2 = 0;\n    for (var i = 0; i < buf.length; i++) {\n        idx1 = buf[i]*2; idx2 = i*2;\n        newBuf[idx2] = decodeBuf[idx1];\n        newBuf[idx2+1] = decodeBuf[idx1+1];\n    }\n    return newBuf.toString('ucs2');\n}\n\nSBCSDecoder.prototype.end = function() {\n}\n","\"use strict\";\n\n// Manually added data to be used by sbcs codec in addition to generated one.\n\nmodule.exports = {\n    // Not supported by iconv, not sure why.\n    \"10029\": \"maccenteuro\",\n    \"maccenteuro\": {\n        \"type\": \"_sbcs\",\n        \"chars\": \"ÄĀāÉĄÖÜáąČäčĆćéŹźĎíďĒēĖóėôöõúĚěü†°Ę£§•¶ß®©™ę¨≠ģĮįĪ≤≥īĶ∂∑łĻļĽľĹĺŅņŃ¬√ńŇ∆«»… ňŐÕőŌ–—“”‘’÷◊ōŔŕŘ‹›řŖŗŠ‚„šŚśÁŤťÍŽžŪÓÔūŮÚůŰűŲųÝýķŻŁżĢˇ\"\n    },\n\n    \"808\": \"cp808\",\n    \"ibm808\": \"cp808\",\n    \"cp808\": {\n        \"type\": \"_sbcs\",\n        \"chars\": \"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмноп░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀рстуфхцчшщъыьэюяЁёЄєЇїЎў°∙·√№€■ \"\n    },\n\n    \"mik\": {\n        \"type\": \"_sbcs\",\n        \"chars\": \"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя└┴┬├─┼╣║╚╔╩╦╠═╬┐░▒▓│┤№§╗╝┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n    },\n\n    // Aliases of generated encodings.\n    \"ascii8bit\": \"ascii\",\n    \"usascii\": \"ascii\",\n    \"ansix34\": \"ascii\",\n    \"ansix341968\": \"ascii\",\n    \"ansix341986\": \"ascii\",\n    \"csascii\": \"ascii\",\n    \"cp367\": \"ascii\",\n    \"ibm367\": \"ascii\",\n    \"isoir6\": \"ascii\",\n    \"iso646us\": \"ascii\",\n    \"iso646irv\": \"ascii\",\n    \"us\": \"ascii\",\n\n    \"latin1\": \"iso88591\",\n    \"latin2\": \"iso88592\",\n    \"latin3\": \"iso88593\",\n    \"latin4\": \"iso88594\",\n    \"latin5\": \"iso88599\",\n    \"latin6\": \"iso885910\",\n    \"latin7\": \"iso885913\",\n    \"latin8\": \"iso885914\",\n    \"latin9\": \"iso885915\",\n    \"latin10\": \"iso885916\",\n\n    \"csisolatin1\": \"iso88591\",\n    \"csisolatin2\": \"iso88592\",\n    \"csisolatin3\": \"iso88593\",\n    \"csisolatin4\": \"iso88594\",\n    \"csisolatincyrillic\": \"iso88595\",\n    \"csisolatinarabic\": \"iso88596\",\n    \"csisolatingreek\" : \"iso88597\",\n    \"csisolatinhebrew\": \"iso88598\",\n    \"csisolatin5\": \"iso88599\",\n    \"csisolatin6\": \"iso885910\",\n\n    \"l1\": \"iso88591\",\n    \"l2\": \"iso88592\",\n    \"l3\": \"iso88593\",\n    \"l4\": \"iso88594\",\n    \"l5\": \"iso88599\",\n    \"l6\": \"iso885910\",\n    \"l7\": \"iso885913\",\n    \"l8\": \"iso885914\",\n    \"l9\": \"iso885915\",\n    \"l10\": \"iso885916\",\n\n    \"isoir14\": \"iso646jp\",\n    \"isoir57\": \"iso646cn\",\n    \"isoir100\": \"iso88591\",\n    \"isoir101\": \"iso88592\",\n    \"isoir109\": \"iso88593\",\n    \"isoir110\": \"iso88594\",\n    \"isoir144\": \"iso88595\",\n    \"isoir127\": \"iso88596\",\n    \"isoir126\": \"iso88597\",\n    \"isoir138\": \"iso88598\",\n    \"isoir148\": \"iso88599\",\n    \"isoir157\": \"iso885910\",\n    \"isoir166\": \"tis620\",\n    \"isoir179\": \"iso885913\",\n    \"isoir199\": \"iso885914\",\n    \"isoir203\": \"iso885915\",\n    \"isoir226\": \"iso885916\",\n\n    \"cp819\": \"iso88591\",\n    \"ibm819\": \"iso88591\",\n\n    \"cyrillic\": \"iso88595\",\n\n    \"arabic\": \"iso88596\",\n    \"arabic8\": \"iso88596\",\n    \"ecma114\": \"iso88596\",\n    \"asmo708\": \"iso88596\",\n\n    \"greek\" : \"iso88597\",\n    \"greek8\" : \"iso88597\",\n    \"ecma118\" : \"iso88597\",\n    \"elot928\" : \"iso88597\",\n\n    \"hebrew\": \"iso88598\",\n    \"hebrew8\": \"iso88598\",\n\n    \"turkish\": \"iso88599\",\n    \"turkish8\": \"iso88599\",\n\n    \"thai\": \"iso885911\",\n    \"thai8\": \"iso885911\",\n\n    \"celtic\": \"iso885914\",\n    \"celtic8\": \"iso885914\",\n    \"isoceltic\": \"iso885914\",\n\n    \"tis6200\": \"tis620\",\n    \"tis62025291\": \"tis620\",\n    \"tis62025330\": \"tis620\",\n\n    \"10000\": \"macroman\",\n    \"10006\": \"macgreek\",\n    \"10007\": \"maccyrillic\",\n    \"10079\": \"maciceland\",\n    \"10081\": \"macturkish\",\n\n    \"cspc8codepage437\": \"cp437\",\n    \"cspc775baltic\": \"cp775\",\n    \"cspc850multilingual\": \"cp850\",\n    \"cspcp852\": \"cp852\",\n    \"cspc862latinhebrew\": \"cp862\",\n    \"cpgr\": \"cp869\",\n\n    \"msee\": \"cp1250\",\n    \"mscyrl\": \"cp1251\",\n    \"msansi\": \"cp1252\",\n    \"msgreek\": \"cp1253\",\n    \"msturk\": \"cp1254\",\n    \"mshebr\": \"cp1255\",\n    \"msarab\": \"cp1256\",\n    \"winbaltrim\": \"cp1257\",\n\n    \"cp20866\": \"koi8r\",\n    \"20866\": \"koi8r\",\n    \"ibm878\": \"koi8r\",\n    \"cskoi8r\": \"koi8r\",\n\n    \"cp21866\": \"koi8u\",\n    \"21866\": \"koi8u\",\n    \"ibm1168\": \"koi8u\",\n\n    \"strk10482002\": \"rk1048\",\n\n    \"tcvn5712\": \"tcvn\",\n    \"tcvn57121\": \"tcvn\",\n\n    \"gb198880\": \"iso646cn\",\n    \"cn\": \"iso646cn\",\n\n    \"csiso14jisc6220ro\": \"iso646jp\",\n    \"jisc62201969ro\": \"iso646jp\",\n    \"jp\": \"iso646jp\",\n\n    \"cshproman8\": \"hproman8\",\n    \"r8\": \"hproman8\",\n    \"roman8\": \"hproman8\",\n    \"xroman8\": \"hproman8\",\n    \"ibm1051\": \"hproman8\",\n\n    \"mac\": \"macintosh\",\n    \"csmacintosh\": \"macintosh\",\n};\n\n","\"use strict\";\n\n// Generated data for sbcs codec. Don't edit manually. Regenerate using generation/gen-sbcs.js script.\nmodule.exports = {\n  \"437\": \"cp437\",\n  \"737\": \"cp737\",\n  \"775\": \"cp775\",\n  \"850\": \"cp850\",\n  \"852\": \"cp852\",\n  \"855\": \"cp855\",\n  \"856\": \"cp856\",\n  \"857\": \"cp857\",\n  \"858\": \"cp858\",\n  \"860\": \"cp860\",\n  \"861\": \"cp861\",\n  \"862\": \"cp862\",\n  \"863\": \"cp863\",\n  \"864\": \"cp864\",\n  \"865\": \"cp865\",\n  \"866\": \"cp866\",\n  \"869\": \"cp869\",\n  \"874\": \"windows874\",\n  \"922\": \"cp922\",\n  \"1046\": \"cp1046\",\n  \"1124\": \"cp1124\",\n  \"1125\": \"cp1125\",\n  \"1129\": \"cp1129\",\n  \"1133\": \"cp1133\",\n  \"1161\": \"cp1161\",\n  \"1162\": \"cp1162\",\n  \"1163\": \"cp1163\",\n  \"1250\": \"windows1250\",\n  \"1251\": \"windows1251\",\n  \"1252\": \"windows1252\",\n  \"1253\": \"windows1253\",\n  \"1254\": \"windows1254\",\n  \"1255\": \"windows1255\",\n  \"1256\": \"windows1256\",\n  \"1257\": \"windows1257\",\n  \"1258\": \"windows1258\",\n  \"28591\": \"iso88591\",\n  \"28592\": \"iso88592\",\n  \"28593\": \"iso88593\",\n  \"28594\": \"iso88594\",\n  \"28595\": \"iso88595\",\n  \"28596\": \"iso88596\",\n  \"28597\": \"iso88597\",\n  \"28598\": \"iso88598\",\n  \"28599\": \"iso88599\",\n  \"28600\": \"iso885910\",\n  \"28601\": \"iso885911\",\n  \"28603\": \"iso885913\",\n  \"28604\": \"iso885914\",\n  \"28605\": \"iso885915\",\n  \"28606\": \"iso885916\",\n  \"windows874\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€����…�����������‘’“”•–—�������� กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู����฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛����\"\n  },\n  \"win874\": \"windows874\",\n  \"cp874\": \"windows874\",\n  \"windows1250\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚�„…†‡�‰Š‹ŚŤŽŹ�‘’“”•–—�™š›śťžź ˇ˘Ł¤Ą¦§¨©Ş«¬­®Ż°±˛ł´µ¶·¸ąş»Ľ˝ľżŔÁÂĂÄĹĆÇČÉĘËĚÍÎĎĐŃŇÓÔŐÖ×ŘŮÚŰÜÝŢßŕáâăäĺćçčéęëěíîďđńňóôőö÷řůúűüýţ˙\"\n  },\n  \"win1250\": \"windows1250\",\n  \"cp1250\": \"windows1250\",\n  \"windows1251\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ЂЃ‚ѓ„…†‡€‰Љ‹ЊЌЋЏђ‘’“”•–—�™љ›њќћџ ЎўЈ¤Ґ¦§Ё©Є«¬­®Ї°±Ііґµ¶·ё№є»јЅѕїАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя\"\n  },\n  \"win1251\": \"windows1251\",\n  \"cp1251\": \"windows1251\",\n  \"windows1252\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚ƒ„…†‡ˆ‰Š‹Œ�Ž��‘’“”•–—˜™š›œ�žŸ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÚÛÜÝÞßàáâãäåæçèéêëìíîïðñòóôõö÷øùúûüýþÿ\"\n  },\n  \"win1252\": \"windows1252\",\n  \"cp1252\": \"windows1252\",\n  \"windows1253\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚ƒ„…†‡�‰�‹�����‘’“”•–—�™�›���� ΅Ά£¤¥¦§¨©�«¬­®―°±²³΄µ¶·ΈΉΊ»Ό½ΎΏΐΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡ�ΣΤΥΦΧΨΩΪΫάέήίΰαβγδεζηθικλμνξοπρςστυφχψωϊϋόύώ�\"\n  },\n  \"win1253\": \"windows1253\",\n  \"cp1253\": \"windows1253\",\n  \"windows1254\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚ƒ„…†‡ˆ‰Š‹Œ����‘’“”•–—˜™š›œ��Ÿ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏĞÑÒÓÔÕÖ×ØÙÚÛÜİŞßàáâãäåæçèéêëìíîïğñòóôõö÷øùúûüışÿ\"\n  },\n  \"win1254\": \"windows1254\",\n  \"cp1254\": \"windows1254\",\n  \"windows1255\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚ƒ„…†‡ˆ‰�‹�����‘’“”•–—˜™�›���� ¡¢£₪¥¦§¨©×«¬­®¯°±²³´µ¶·¸¹÷»¼½¾¿ְֱֲֳִֵֶַָֹֺֻּֽ־ֿ׀ׁׂ׃װױײ׳״�������אבגדהוזחטיךכלםמןנסעףפץצקרשת��‎‏�\"\n  },\n  \"win1255\": \"windows1255\",\n  \"cp1255\": \"windows1255\",\n  \"windows1256\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€پ‚ƒ„…†‡ˆ‰ٹ‹Œچژڈگ‘’“”•–—ک™ڑ›œ‌‍ں ،¢£¤¥¦§¨©ھ«¬­®¯°±²³´µ¶·¸¹؛»¼½¾؟ہءآأؤإئابةتثجحخدذرزسشصض×طظعغـفقكàلâمنهوçèéêëىيîïًٌٍَôُِ÷ّùْûü‎‏ے\"\n  },\n  \"win1256\": \"windows1256\",\n  \"cp1256\": \"windows1256\",\n  \"windows1257\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚�„…†‡�‰�‹�¨ˇ¸�‘’“”•–—�™�›�¯˛� �¢£¤�¦§Ø©Ŗ«¬­®Æ°±²³´µ¶·ø¹ŗ»¼½¾æĄĮĀĆÄÅĘĒČÉŹĖĢĶĪĻŠŃŅÓŌÕÖ×ŲŁŚŪÜŻŽßąįāćäåęēčéźėģķīļšńņóōõö÷ųłśūüżž˙\"\n  },\n  \"win1257\": \"windows1257\",\n  \"cp1257\": \"windows1257\",\n  \"windows1258\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚ƒ„…†‡ˆ‰�‹Œ����‘’“”•–—˜™�›œ��Ÿ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂĂÄÅÆÇÈÉÊË̀ÍÎÏĐÑ̉ÓÔƠÖ×ØÙÚÛÜỮßàáâăäåæçèéêë́íîïđṇ̃óôơö÷øùúûüư₫ÿ\"\n  },\n  \"win1258\": \"windows1258\",\n  \"cp1258\": \"windows1258\",\n  \"iso88591\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÚÛÜÝÞßàáâãäåæçèéêëìíîïðñòóôõö÷øùúûüýþÿ\"\n  },\n  \"cp28591\": \"iso88591\",\n  \"iso88592\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" Ą˘Ł¤ĽŚ§¨ŠŞŤŹ­ŽŻ°ą˛ł´ľśˇ¸šşťź˝žżŔÁÂĂÄĹĆÇČÉĘËĚÍÎĎĐŃŇÓÔŐÖ×ŘŮÚŰÜÝŢßŕáâăäĺćçčéęëěíîďđńňóôőö÷řůúűüýţ˙\"\n  },\n  \"cp28592\": \"iso88592\",\n  \"iso88593\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" Ħ˘£¤�Ĥ§¨İŞĞĴ­�Ż°ħ²³´µĥ·¸ışğĵ½�żÀÁÂ�ÄĊĈÇÈÉÊËÌÍÎÏ�ÑÒÓÔĠÖ×ĜÙÚÛÜŬŜßàáâ�äċĉçèéêëìíîï�ñòóôġö÷ĝùúûüŭŝ˙\"\n  },\n  \"cp28593\": \"iso88593\",\n  \"iso88594\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ĄĸŖ¤ĨĻ§¨ŠĒĢŦ­Ž¯°ą˛ŗ´ĩļˇ¸šēģŧŊžŋĀÁÂÃÄÅÆĮČÉĘËĖÍÎĪĐŅŌĶÔÕÖ×ØŲÚÛÜŨŪßāáâãäåæįčéęëėíîīđņōķôõö÷øųúûüũū˙\"\n  },\n  \"cp28594\": \"iso88594\",\n  \"iso88595\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ЁЂЃЄЅІЇЈЉЊЋЌ­ЎЏАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя№ёђѓєѕіїјљњћќ§ўџ\"\n  },\n  \"cp28595\": \"iso88595\",\n  \"iso88596\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ���¤�������،­�������������؛���؟�ءآأؤإئابةتثجحخدذرزسشصضطظعغ�����ـفقكلمنهوىيًٌٍَُِّْ�������������\"\n  },\n  \"cp28596\": \"iso88596\",\n  \"iso88597\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ‘’£€₯¦§¨©ͺ«¬­�―°±²³΄΅Ά·ΈΉΊ»Ό½ΎΏΐΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡ�ΣΤΥΦΧΨΩΪΫάέήίΰαβγδεζηθικλμνξοπρςστυφχψωϊϋόύώ�\"\n  },\n  \"cp28597\": \"iso88597\",\n  \"iso88598\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" �¢£¤¥¦§¨©×«¬­®¯°±²³´µ¶·¸¹÷»¼½¾��������������������������������‗אבגדהוזחטיךכלםמןנסעףפץצקרשת��‎‏�\"\n  },\n  \"cp28598\": \"iso88598\",\n  \"iso88599\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏĞÑÒÓÔÕÖ×ØÙÚÛÜİŞßàáâãäåæçèéêëìíîïğñòóôõö÷øùúûüışÿ\"\n  },\n  \"cp28599\": \"iso88599\",\n  \"iso885910\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ĄĒĢĪĨĶ§ĻĐŠŦŽ­ŪŊ°ąēģīĩķ·ļđšŧž―ūŋĀÁÂÃÄÅÆĮČÉĘËĖÍÎÏÐŅŌÓÔÕÖŨØŲÚÛÜÝÞßāáâãäåæįčéęëėíîïðņōóôõöũøųúûüýþĸ\"\n  },\n  \"cp28600\": \"iso885910\",\n  \"iso885911\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู����฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛����\"\n  },\n  \"cp28601\": \"iso885911\",\n  \"iso885913\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ”¢£¤„¦§Ø©Ŗ«¬­®Æ°±²³“µ¶·ø¹ŗ»¼½¾æĄĮĀĆÄÅĘĒČÉŹĖĢĶĪĻŠŃŅÓŌÕÖ×ŲŁŚŪÜŻŽßąįāćäåęēčéźėģķīļšńņóōõö÷ųłśūüżž’\"\n  },\n  \"cp28603\": \"iso885913\",\n  \"iso885914\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" Ḃḃ£ĊċḊ§Ẁ©ẂḋỲ­®ŸḞḟĠġṀṁ¶ṖẁṗẃṠỳẄẅṡÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏŴÑÒÓÔÕÖṪØÙÚÛÜÝŶßàáâãäåæçèéêëìíîïŵñòóôõöṫøùúûüýŷÿ\"\n  },\n  \"cp28604\": \"iso885914\",\n  \"iso885915\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ¡¢£€¥Š§š©ª«¬­®¯°±²³Žµ¶·ž¹º»ŒœŸ¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÚÛÜÝÞßàáâãäåæçèéêëìíîïðñòóôõö÷øùúûüýþÿ\"\n  },\n  \"cp28605\": \"iso885915\",\n  \"iso885916\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ĄąŁ€„Š§š©Ș«Ź­źŻ°±ČłŽ”¶·žčș»ŒœŸżÀÁÂĂÄĆÆÇÈÉÊËÌÍÎÏĐŃÒÓÔŐÖŚŰÙÚÛÜĘȚßàáâăäćæçèéêëìíîïđńòóôőöśűùúûüęțÿ\"\n  },\n  \"cp28606\": \"iso885916\",\n  \"cp437\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜ¢£¥₧ƒáíóúñÑªº¿⌐¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm437\": \"cp437\",\n  \"csibm437\": \"cp437\",\n  \"cp737\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡΣΤΥΦΧΨΩαβγδεζηθικλμνξοπρσςτυφχψ░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀ωάέήϊίόύϋώΆΈΉΊΌΎΏ±≥≤ΪΫ÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm737\": \"cp737\",\n  \"csibm737\": \"cp737\",\n  \"cp775\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ĆüéāäģåćłēŖŗīŹÄÅÉæÆōöĢ¢ŚśÖÜø£Ø×¤ĀĪóŻżź”¦©®¬½¼Ł«»░▒▓│┤ĄČĘĖ╣║╗╝ĮŠ┐└┴┬├─┼ŲŪ╚╔╩╦╠═╬Žąčęėįšųūž┘┌█▄▌▐▀ÓßŌŃõÕµńĶķĻļņĒŅ’­±“¾¶§÷„°∙·¹³²■ \"\n  },\n  \"ibm775\": \"cp775\",\n  \"csibm775\": \"cp775\",\n  \"cp850\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜø£Ø×ƒáíóúñÑªº¿®¬½¼¡«»░▒▓│┤ÁÂÀ©╣║╗╝¢¥┐└┴┬├─┼ãÃ╚╔╩╦╠═╬¤ðÐÊËÈıÍÎÏ┘┌█▄¦Ì▀ÓßÔÒõÕµþÞÚÛÙýÝ¯´­±‗¾¶§÷¸°¨·¹³²■ \"\n  },\n  \"ibm850\": \"cp850\",\n  \"csibm850\": \"cp850\",\n  \"cp852\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäůćçłëŐőîŹÄĆÉĹĺôöĽľŚśÖÜŤťŁ×čáíóúĄąŽžĘę¬źČş«»░▒▓│┤ÁÂĚŞ╣║╗╝Żż┐└┴┬├─┼Ăă╚╔╩╦╠═╬¤đĐĎËďŇÍÎě┘┌█▄ŢŮ▀ÓßÔŃńňŠšŔÚŕŰýÝţ´­˝˛ˇ˘§÷¸°¨˙űŘř■ \"\n  },\n  \"ibm852\": \"cp852\",\n  \"csibm852\": \"cp852\",\n  \"cp855\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ђЂѓЃёЁєЄѕЅіІїЇјЈљЉњЊћЋќЌўЎџЏюЮъЪаАбБцЦдДеЕфФгГ«»░▒▓│┤хХиИ╣║╗╝йЙ┐└┴┬├─┼кК╚╔╩╦╠═╬¤лЛмМнНоОп┘┌█▄Пя▀ЯрРсСтТуУжЖвВьЬ№­ыЫзЗшШэЭщЩчЧ§■ \"\n  },\n  \"ibm855\": \"cp855\",\n  \"csibm855\": \"cp855\",\n  \"cp856\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"אבגדהוזחטיךכלםמןנסעףפץצקרשת�£�×����������®¬½¼�«»░▒▓│┤���©╣║╗╝¢¥┐└┴┬├─┼��╚╔╩╦╠═╬¤���������┘┌█▄¦�▀������µ�������¯´­±‗¾¶§÷¸°¨·¹³²■ \"\n  },\n  \"ibm856\": \"cp856\",\n  \"csibm856\": \"cp856\",\n  \"cp857\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäàåçêëèïîıÄÅÉæÆôöòûùİÖÜø£ØŞşáíóúñÑĞğ¿®¬½¼¡«»░▒▓│┤ÁÂÀ©╣║╗╝¢¥┐└┴┬├─┼ãÃ╚╔╩╦╠═╬¤ºªÊËÈ�ÍÎÏ┘┌█▄¦Ì▀ÓßÔÒõÕµ�×ÚÛÙìÿ¯´­±�¾¶§÷¸°¨·¹³²■ \"\n  },\n  \"ibm857\": \"cp857\",\n  \"csibm857\": \"cp857\",\n  \"cp858\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜø£Ø×ƒáíóúñÑªº¿®¬½¼¡«»░▒▓│┤ÁÂÀ©╣║╗╝¢¥┐└┴┬├─┼ãÃ╚╔╩╦╠═╬¤ðÐÊËÈ€ÍÎÏ┘┌█▄¦Ì▀ÓßÔÒõÕµþÞÚÛÙýÝ¯´­±‗¾¶§÷¸°¨·¹³²■ \"\n  },\n  \"ibm858\": \"cp858\",\n  \"csibm858\": \"cp858\",\n  \"cp860\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâãàÁçêÊèÍÔìÃÂÉÀÈôõòÚùÌÕÜ¢£Ù₧ÓáíóúñÑªº¿Ò¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm860\": \"cp860\",\n  \"csibm860\": \"cp860\",\n  \"cp861\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäàåçêëèÐðÞÄÅÉæÆôöþûÝýÖÜø£Ø₧ƒáíóúÁÍÓÚ¿⌐¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm861\": \"cp861\",\n  \"csibm861\": \"cp861\",\n  \"cp862\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"אבגדהוזחטיךכלםמןנסעףפץצקרשת¢£¥₧ƒáíóúñÑªº¿⌐¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm862\": \"cp862\",\n  \"csibm862\": \"cp862\",\n  \"cp863\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâÂà¶çêëèïî‗À§ÉÈÊôËÏûù¤ÔÜ¢£ÙÛƒ¦´óú¨¸³¯Î⌐¬½¼¾«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm863\": \"cp863\",\n  \"csibm863\": \"cp863\",\n  \"cp864\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\\u0000\\u0001\\u0002\\u0003\\u0004\\u0005\\u0006\\u0007\\b\\t\\n\\u000b\\f\\r\\u000e\\u000f\\u0010\\u0011\\u0012\\u0013\\u0014\\u0015\\u0016\\u0017\\u0018\\u0019\\u001a\\u001b\\u001c\\u001d\\u001e\\u001f !\\\"#$٪&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~°·∙√▒─│┼┤┬├┴┐┌└┘β∞φ±½¼≈«»ﻷﻸ��ﻻﻼ� ­ﺂ£¤ﺄ��ﺎﺏﺕﺙ،ﺝﺡﺥ٠١٢٣٤٥٦٧٨٩ﻑ؛ﺱﺵﺹ؟¢ﺀﺁﺃﺅﻊﺋﺍﺑﺓﺗﺛﺟﺣﺧﺩﺫﺭﺯﺳﺷﺻﺿﻁﻅﻋﻏ¦¬÷×ﻉـﻓﻗﻛﻟﻣﻧﻫﻭﻯﻳﺽﻌﻎﻍﻡﹽّﻥﻩﻬﻰﻲﻐﻕﻵﻶﻝﻙﻱ■�\"\n  },\n  \"ibm864\": \"cp864\",\n  \"csibm864\": \"cp864\",\n  \"cp865\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜø£Ø₧ƒáíóúñÑªº¿⌐¬½¼¡«¤░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm865\": \"cp865\",\n  \"csibm865\": \"cp865\",\n  \"cp866\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмноп░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀рстуфхцчшщъыьэюяЁёЄєЇїЎў°∙·√№¤■ \"\n  },\n  \"ibm866\": \"cp866\",\n  \"csibm866\": \"cp866\",\n  \"cp869\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"������Ά�·¬¦‘’Έ―ΉΊΪΌ��ΎΫ©Ώ²³ά£έήίϊΐόύΑΒΓΔΕΖΗ½ΘΙ«»░▒▓│┤ΚΛΜΝ╣║╗╝ΞΟ┐└┴┬├─┼ΠΡ╚╔╩╦╠═╬ΣΤΥΦΧΨΩαβγ┘┌█▄δε▀ζηθικλμνξοπρσςτ΄­±υφχ§ψ΅°¨ωϋΰώ■ \"\n  },\n  \"ibm869\": \"cp869\",\n  \"csibm869\": \"cp869\",\n  \"cp922\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ¡¢£¤¥¦§¨©ª«¬­®‾°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏŠÑÒÓÔÕÖ×ØÙÚÛÜÝŽßàáâãäåæçèéêëìíîïšñòóôõö÷øùúûüýžÿ\"\n  },\n  \"ibm922\": \"cp922\",\n  \"csibm922\": \"cp922\",\n  \"cp1046\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ﺈ×÷ﹱ■│─┐┌└┘ﹹﹻﹽﹿﹷﺊﻰﻳﻲﻎﻏﻐﻶﻸﻺﻼ ¤ﺋﺑﺗﺛﺟﺣ،­ﺧﺳ٠١٢٣٤٥٦٧٨٩ﺷ؛ﺻﺿﻊ؟ﻋءآأؤإئابةتثجحخدذرزسشصضطﻇعغﻌﺂﺄﺎﻓـفقكلمنهوىيًٌٍَُِّْﻗﻛﻟﻵﻷﻹﻻﻣﻧﻬﻩ�\"\n  },\n  \"ibm1046\": \"cp1046\",\n  \"csibm1046\": \"cp1046\",\n  \"cp1124\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ЁЂҐЄЅІЇЈЉЊЋЌ­ЎЏАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя№ёђґєѕіїјљњћќ§ўџ\"\n  },\n  \"ibm1124\": \"cp1124\",\n  \"csibm1124\": \"cp1124\",\n  \"cp1125\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмноп░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀рстуфхцчшщъыьэюяЁёҐґЄєІіЇї·√№¤■ \"\n  },\n  \"ibm1125\": \"cp1125\",\n  \"csibm1125\": \"cp1125\",\n  \"cp1129\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ¡¢£¤¥¦§œ©ª«¬­®¯°±²³Ÿµ¶·Œ¹º»¼½¾¿ÀÁÂĂÄÅÆÇÈÉÊË̀ÍÎÏĐÑ̉ÓÔƠÖ×ØÙÚÛÜỮßàáâăäåæçèéêë́íîïđṇ̃óôơö÷øùúûüư₫ÿ\"\n  },\n  \"ibm1129\": \"cp1129\",\n  \"csibm1129\": \"cp1129\",\n  \"cp1133\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ກຂຄງຈສຊຍດຕຖທນບປຜຝພຟມຢຣລວຫອຮ���ຯະາຳິີຶືຸູຼັົຽ���ເແໂໃໄ່້໊໋໌ໍໆ�ໜໝ₭����������������໐໑໒໓໔໕໖໗໘໙��¢¬¦�\"\n  },\n  \"ibm1133\": \"cp1133\",\n  \"csibm1133\": \"cp1133\",\n  \"cp1161\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"��������������������������������่กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู้๊๋€฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛¢¬¦ \"\n  },\n  \"ibm1161\": \"cp1161\",\n  \"csibm1161\": \"cp1161\",\n  \"cp1162\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€…‘’“”•–— กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู����฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛����\"\n  },\n  \"ibm1162\": \"cp1162\",\n  \"csibm1162\": \"cp1162\",\n  \"cp1163\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ¡¢£€¥¦§œ©ª«¬­®¯°±²³Ÿµ¶·Œ¹º»¼½¾¿ÀÁÂĂÄÅÆÇÈÉÊË̀ÍÎÏĐÑ̉ÓÔƠÖ×ØÙÚÛÜỮßàáâăäåæçèéêë́íîïđṇ̃óôơö÷øùúûüư₫ÿ\"\n  },\n  \"ibm1163\": \"cp1163\",\n  \"csibm1163\": \"cp1163\",\n  \"maccroatian\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®Š™´¨≠ŽØ∞±≤≥∆µ∂∑∏š∫ªºΩžø¿¡¬√ƒ≈Ć«Č… ÀÃÕŒœĐ—“”‘’÷◊�©⁄¤‹›Æ»–·‚„‰ÂćÁčÈÍÎÏÌÓÔđÒÚÛÙıˆ˜¯πË˚¸Êæˇ\"\n  },\n  \"maccyrillic\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯ†°¢£§•¶І®©™Ђђ≠Ѓѓ∞±≤≥іµ∂ЈЄєЇїЉљЊњјЅ¬√ƒ≈∆«»… ЋћЌќѕ–—“”‘’÷„ЎўЏџ№Ёёяабвгдежзийклмнопрстуфхцчшщъыьэю¤\"\n  },\n  \"macgreek\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"Ä¹²É³ÖÜ΅àâä΄¨çéèêë£™îï•½‰ôö¦­ùûü†ΓΔΘΛΞΠß®©ΣΪ§≠°·Α±≤≥¥ΒΕΖΗΙΚΜΦΫΨΩάΝ¬ΟΡ≈Τ«»… ΥΧΆΈœ–―“”‘’÷ΉΊΌΎέήίόΏύαβψδεφγηιξκλμνοπώρστθωςχυζϊϋΐΰ�\"\n  },\n  \"maciceland\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûüÝ°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄¤ÐðÞþý·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ\"\n  },\n  \"macroman\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄¤‹›ﬁﬂ‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ\"\n  },\n  \"macromania\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ĂŞ∞±≤≥¥µ∂∑∏π∫ªºΩăş¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄¤‹›Ţţ‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ\"\n  },\n  \"macthai\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"«»…“”�•‘’� กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู﻿​–—฿เแโใไๅๆ็่้๊๋์ํ™๏๐๑๒๓๔๕๖๗๘๙®©����\"\n  },\n  \"macturkish\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸĞğİıŞş‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙ�ˆ˜¯˘˙˚¸˝˛ˇ\"\n  },\n  \"macukraine\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯ†°Ґ£§•¶І®©™Ђђ≠Ѓѓ∞±≤≥іµґЈЄєЇїЉљЊњјЅ¬√ƒ≈∆«»… ЋћЌќѕ–—“”‘’÷„ЎўЏџ№Ёёяабвгдежзийклмнопрстуфхцчшщъыьэю¤\"\n  },\n  \"koi8r\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"─│┌┐└┘├┤┬┴┼▀▄█▌▐░▒▓⌠■∙√≈≤≥ ⌡°²·÷═║╒ё╓╔╕╖╗╘╙╚╛╜╝╞╟╠╡Ё╢╣╤╥╦╧╨╩╪╫╬©юабцдефгхийклмнопярстужвьызшэщчъЮАБЦДЕФГХИЙКЛМНОПЯРСТУЖВЬЫЗШЭЩЧЪ\"\n  },\n  \"koi8u\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"─│┌┐└┘├┤┬┴┼▀▄█▌▐░▒▓⌠■∙√≈≤≥ ⌡°²·÷═║╒ёє╔ії╗╘╙╚╛ґ╝╞╟╠╡ЁЄ╣ІЇ╦╧╨╩╪Ґ╬©юабцдефгхийклмнопярстужвьызшэщчъЮАБЦДЕФГХИЙКЛМНОПЯРСТУЖВЬЫЗШЭЩЧЪ\"\n  },\n  \"koi8ru\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"─│┌┐└┘├┤┬┴┼▀▄█▌▐░▒▓⌠■∙√≈≤≥ ⌡°²·÷═║╒ёє╔ії╗╘╙╚╛ґў╞╟╠╡ЁЄ╣ІЇ╦╧╨╩╪ҐЎ©юабцдефгхийклмнопярстужвьызшэщчъЮАБЦДЕФГХИЙКЛМНОПЯРСТУЖВЬЫЗШЭЩЧЪ\"\n  },\n  \"koi8t\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"қғ‚Ғ„…†‡�‰ҳ‹ҲҷҶ�Қ‘’“”•–—�™�›�����ӯӮё¤ӣ¦§���«¬­®�°±²Ё�Ӣ¶·�№�»���©юабцдефгхийклмнопярстужвьызшэщчъЮАБЦДЕФГХИЙКЛМНОПЯРСТУЖВЬЫЗШЭЩЧЪ\"\n  },\n  \"armscii8\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" �և։)(»«—.՝,-֊…՜՛՞ԱաԲբԳգԴդԵեԶզԷէԸըԹթԺժԻիԼլԽխԾծԿկՀհՁձՂղՃճՄմՅյՆնՇշՈոՉչՊպՋջՌռՍսՎվՏտՐրՑցՒւՓփՔքՕօՖֆ՚�\"\n  },\n  \"rk1048\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ЂЃ‚ѓ„…†‡€‰Љ‹ЊҚҺЏђ‘’“”•–—�™љ›њқһџ ҰұӘ¤Ө¦§Ё©Ғ«¬­®Ү°±Ііөµ¶·ё№ғ»әҢңүАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя\"\n  },\n  \"tcvn\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\\u0000ÚỤ\\u0003ỪỬỮ\\u0007\\b\\t\\n\\u000b\\f\\r\\u000e\\u000f\\u0010ỨỰỲỶỸÝỴ\\u0018\\u0019\\u001a\\u001b\\u001c\\u001d\\u001e\\u001f !\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~ÀẢÃÁẠẶẬÈẺẼÉẸỆÌỈĨÍỊÒỎÕÓỌỘỜỞỠỚỢÙỦŨ ĂÂÊÔƠƯĐăâêôơưđẶ̀̀̉̃́àảãáạẲằẳẵắẴẮẦẨẪẤỀặầẩẫấậèỂẻẽéẹềểễếệìỉỄẾỒĩíịòỔỏõóọồổỗốộờởỡớợùỖủũúụừửữứựỳỷỹýỵỐ\"\n  },\n  \"georgianacademy\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"‚ƒ„…†‡ˆ‰Š‹Œ‘’“”•–—˜™š›œŸ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿აბგდევზთიკლმნოპჟრსტუფქღყშჩცძწჭხჯჰჱჲჳჴჵჶçèéêëìíîïðñòóôõö÷øùúûüýþÿ\"\n  },\n  \"georgianps\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"‚ƒ„…†‡ˆ‰Š‹Œ‘’“”•–—˜™š›œŸ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿აბგდევზჱთიკლმნჲოპჟრსტჳუფქღყშჩცძწჭხჴჯჰჵæçèéêëìíîïðñòóôõö÷øùúûüýþÿ\"\n  },\n  \"pt154\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ҖҒӮғ„…ҶҮҲүҠӢҢҚҺҸҗ‘’“”•–—ҳҷҡӣңқһҹ ЎўЈӨҘҰ§Ё©Ә«¬ӯ®Ҝ°ұІіҙө¶·ё№ә»јҪҫҝАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя\"\n  },\n  \"viscii\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\\u0000\\u0001Ẳ\\u0003\\u0004ẴẪ\\u0007\\b\\t\\n\\u000b\\f\\r\\u000e\\u000f\\u0010\\u0011\\u0012\\u0013Ỷ\\u0015\\u0016\\u0017\\u0018Ỹ\\u001a\\u001b\\u001c\\u001dỴ\\u001f !\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~ẠẮẰẶẤẦẨẬẼẸẾỀỂỄỆỐỒỔỖỘỢỚỜỞỊỎỌỈỦŨỤỲÕắằặấầẩậẽẹếềểễệốồổỗỠƠộờởịỰỨỪỬơớƯÀÁÂÃẢĂẳẵÈÉÊẺÌÍĨỳĐứÒÓÔạỷừửÙÚỹỵÝỡưàáâãảăữẫèéêẻìíĩỉđựòóôõỏọụùúũủýợỮ\"\n  },\n  \"iso646cn\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\\u0000\\u0001\\u0002\\u0003\\u0004\\u0005\\u0006\\u0007\\b\\t\\n\\u000b\\f\\r\\u000e\\u000f\\u0010\\u0011\\u0012\\u0013\\u0014\\u0015\\u0016\\u0017\\u0018\\u0019\\u001a\\u001b\\u001c\\u001d\\u001e\\u001f !\\\"#¥%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}‾��������������������������������������������������������������������������������������������������������������������������������\"\n  },\n  \"iso646jp\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\\u0000\\u0001\\u0002\\u0003\\u0004\\u0005\\u0006\\u0007\\b\\t\\n\\u000b\\f\\r\\u000e\\u000f\\u0010\\u0011\\u0012\\u0013\\u0014\\u0015\\u0016\\u0017\\u0018\\u0019\\u001a\\u001b\\u001c\\u001d\\u001e\\u001f !\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[¥]^_`abcdefghijklmnopqrstuvwxyz{|}‾��������������������������������������������������������������������������������������������������������������������������������\"\n  },\n  \"hproman8\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ÀÂÈÊËÎÏ´ˋˆ¨˜ÙÛ₤¯Ýý°ÇçÑñ¡¿¤£¥§ƒ¢âêôûáéóúàèòùäëöüÅîØÆåíøæÄìÖÜÉïßÔÁÃãÐðÍÌÓÒÕõŠšÚŸÿÞþ·µ¶¾—¼½ªº«■»±�\"\n  },\n  \"macintosh\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄¤‹›ﬁﬂ‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ\"\n  },\n  \"ascii\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"��������������������������������������������������������������������������������������������������������������������������������\"\n  },\n  \"tis620\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"���������������������������������กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู����฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛����\"\n  }\n}","\"use strict\";\nvar Buffer = require(\"safer-buffer\").Buffer;\n\n// Multibyte codec. In this scheme, a character is represented by 1 or more bytes.\n// Our codec supports UTF-16 surrogates, extensions for GB18030 and unicode sequences.\n// To save memory and loading time, we read table files only when requested.\n\nexports._dbcs = DBCSCodec;\n\nvar UNASSIGNED = -1,\n    GB18030_CODE = -2,\n    SEQ_START  = -10,\n    NODE_START = -1000,\n    UNASSIGNED_NODE = new Array(0x100),\n    DEF_CHAR = -1;\n\nfor (var i = 0; i < 0x100; i++)\n    UNASSIGNED_NODE[i] = UNASSIGNED;\n\n\n// Class DBCSCodec reads and initializes mapping tables.\nfunction DBCSCodec(codecOptions, iconv) {\n    this.encodingName = codecOptions.encodingName;\n    if (!codecOptions)\n        throw new Error(\"DBCS codec is called without the data.\")\n    if (!codecOptions.table)\n        throw new Error(\"Encoding '\" + this.encodingName + \"' has no data.\");\n\n    // Load tables.\n    var mappingTable = codecOptions.table();\n\n\n    // Decode tables: MBCS -> Unicode.\n\n    // decodeTables is a trie, encoded as an array of arrays of integers. Internal arrays are trie nodes and all have len = 256.\n    // Trie root is decodeTables[0].\n    // Values: >=  0 -> unicode character code. can be > 0xFFFF\n    //         == UNASSIGNED -> unknown/unassigned sequence.\n    //         == GB18030_CODE -> this is the end of a GB18030 4-byte sequence.\n    //         <= NODE_START -> index of the next node in our trie to process next byte.\n    //         <= SEQ_START  -> index of the start of a character code sequence, in decodeTableSeq.\n    this.decodeTables = [];\n    this.decodeTables[0] = UNASSIGNED_NODE.slice(0); // Create root node.\n\n    // Sometimes a MBCS char corresponds to a sequence of unicode chars. We store them as arrays of integers here. \n    this.decodeTableSeq = [];\n\n    // Actual mapping tables consist of chunks. Use them to fill up decode tables.\n    for (var i = 0; i < mappingTable.length; i++)\n        this._addDecodeChunk(mappingTable[i]);\n\n    this.defaultCharUnicode = iconv.defaultCharUnicode;\n\n    \n    // Encode tables: Unicode -> DBCS.\n\n    // `encodeTable` is array mapping from unicode char to encoded char. All its values are integers for performance.\n    // Because it can be sparse, it is represented as array of buckets by 256 chars each. Bucket can be null.\n    // Values: >=  0 -> it is a normal char. Write the value (if <=256 then 1 byte, if <=65536 then 2 bytes, etc.).\n    //         == UNASSIGNED -> no conversion found. Output a default char.\n    //         <= SEQ_START  -> it's an index in encodeTableSeq, see below. The character starts a sequence.\n    this.encodeTable = [];\n    \n    // `encodeTableSeq` is used when a sequence of unicode characters is encoded as a single code. We use a tree of\n    // objects where keys correspond to characters in sequence and leafs are the encoded dbcs values. A special DEF_CHAR key\n    // means end of sequence (needed when one sequence is a strict subsequence of another).\n    // Objects are kept separately from encodeTable to increase performance.\n    this.encodeTableSeq = [];\n\n    // Some chars can be decoded, but need not be encoded.\n    var skipEncodeChars = {};\n    if (codecOptions.encodeSkipVals)\n        for (var i = 0; i < codecOptions.encodeSkipVals.length; i++) {\n            var val = codecOptions.encodeSkipVals[i];\n            if (typeof val === 'number')\n                skipEncodeChars[val] = true;\n            else\n                for (var j = val.from; j <= val.to; j++)\n                    skipEncodeChars[j] = true;\n        }\n        \n    // Use decode trie to recursively fill out encode tables.\n    this._fillEncodeTable(0, 0, skipEncodeChars);\n\n    // Add more encoding pairs when needed.\n    if (codecOptions.encodeAdd) {\n        for (var uChar in codecOptions.encodeAdd)\n            if (Object.prototype.hasOwnProperty.call(codecOptions.encodeAdd, uChar))\n                this._setEncodeChar(uChar.charCodeAt(0), codecOptions.encodeAdd[uChar]);\n    }\n\n    this.defCharSB  = this.encodeTable[0][iconv.defaultCharSingleByte.charCodeAt(0)];\n    if (this.defCharSB === UNASSIGNED) this.defCharSB = this.encodeTable[0]['?'];\n    if (this.defCharSB === UNASSIGNED) this.defCharSB = \"?\".charCodeAt(0);\n\n\n    // Load & create GB18030 tables when needed.\n    if (typeof codecOptions.gb18030 === 'function') {\n        this.gb18030 = codecOptions.gb18030(); // Load GB18030 ranges.\n\n        // Add GB18030 decode tables.\n        var thirdByteNodeIdx = this.decodeTables.length;\n        var thirdByteNode = this.decodeTables[thirdByteNodeIdx] = UNASSIGNED_NODE.slice(0);\n\n        var fourthByteNodeIdx = this.decodeTables.length;\n        var fourthByteNode = this.decodeTables[fourthByteNodeIdx] = UNASSIGNED_NODE.slice(0);\n\n        for (var i = 0x81; i <= 0xFE; i++) {\n            var secondByteNodeIdx = NODE_START - this.decodeTables[0][i];\n            var secondByteNode = this.decodeTables[secondByteNodeIdx];\n            for (var j = 0x30; j <= 0x39; j++)\n                secondByteNode[j] = NODE_START - thirdByteNodeIdx;\n        }\n        for (var i = 0x81; i <= 0xFE; i++)\n            thirdByteNode[i] = NODE_START - fourthByteNodeIdx;\n        for (var i = 0x30; i <= 0x39; i++)\n            fourthByteNode[i] = GB18030_CODE\n    }        \n}\n\nDBCSCodec.prototype.encoder = DBCSEncoder;\nDBCSCodec.prototype.decoder = DBCSDecoder;\n\n// Decoder helpers\nDBCSCodec.prototype._getDecodeTrieNode = function(addr) {\n    var bytes = [];\n    for (; addr > 0; addr >>= 8)\n        bytes.push(addr & 0xFF);\n    if (bytes.length == 0)\n        bytes.push(0);\n\n    var node = this.decodeTables[0];\n    for (var i = bytes.length-1; i > 0; i--) { // Traverse nodes deeper into the trie.\n        var val = node[bytes[i]];\n\n        if (val == UNASSIGNED) { // Create new node.\n            node[bytes[i]] = NODE_START - this.decodeTables.length;\n            this.decodeTables.push(node = UNASSIGNED_NODE.slice(0));\n        }\n        else if (val <= NODE_START) { // Existing node.\n            node = this.decodeTables[NODE_START - val];\n        }\n        else\n            throw new Error(\"Overwrite byte in \" + this.encodingName + \", addr: \" + addr.toString(16));\n    }\n    return node;\n}\n\n\nDBCSCodec.prototype._addDecodeChunk = function(chunk) {\n    // First element of chunk is the hex mbcs code where we start.\n    var curAddr = parseInt(chunk[0], 16);\n\n    // Choose the decoding node where we'll write our chars.\n    var writeTable = this._getDecodeTrieNode(curAddr);\n    curAddr = curAddr & 0xFF;\n\n    // Write all other elements of the chunk to the table.\n    for (var k = 1; k < chunk.length; k++) {\n        var part = chunk[k];\n        if (typeof part === \"string\") { // String, write as-is.\n            for (var l = 0; l < part.length;) {\n                var code = part.charCodeAt(l++);\n                if (0xD800 <= code && code < 0xDC00) { // Decode surrogate\n                    var codeTrail = part.charCodeAt(l++);\n                    if (0xDC00 <= codeTrail && codeTrail < 0xE000)\n                        writeTable[curAddr++] = 0x10000 + (code - 0xD800) * 0x400 + (codeTrail - 0xDC00);\n                    else\n                        throw new Error(\"Incorrect surrogate pair in \"  + this.encodingName + \" at chunk \" + chunk[0]);\n                }\n                else if (0x0FF0 < code && code <= 0x0FFF) { // Character sequence (our own encoding used)\n                    var len = 0xFFF - code + 2;\n                    var seq = [];\n                    for (var m = 0; m < len; m++)\n                        seq.push(part.charCodeAt(l++)); // Simple variation: don't support surrogates or subsequences in seq.\n\n                    writeTable[curAddr++] = SEQ_START - this.decodeTableSeq.length;\n                    this.decodeTableSeq.push(seq);\n                }\n                else\n                    writeTable[curAddr++] = code; // Basic char\n            }\n        } \n        else if (typeof part === \"number\") { // Integer, meaning increasing sequence starting with prev character.\n            var charCode = writeTable[curAddr - 1] + 1;\n            for (var l = 0; l < part; l++)\n                writeTable[curAddr++] = charCode++;\n        }\n        else\n            throw new Error(\"Incorrect type '\" + typeof part + \"' given in \"  + this.encodingName + \" at chunk \" + chunk[0]);\n    }\n    if (curAddr > 0xFF)\n        throw new Error(\"Incorrect chunk in \"  + this.encodingName + \" at addr \" + chunk[0] + \": too long\" + curAddr);\n}\n\n// Encoder helpers\nDBCSCodec.prototype._getEncodeBucket = function(uCode) {\n    var high = uCode >> 8; // This could be > 0xFF because of astral characters.\n    if (this.encodeTable[high] === undefined)\n        this.encodeTable[high] = UNASSIGNED_NODE.slice(0); // Create bucket on demand.\n    return this.encodeTable[high];\n}\n\nDBCSCodec.prototype._setEncodeChar = function(uCode, dbcsCode) {\n    var bucket = this._getEncodeBucket(uCode);\n    var low = uCode & 0xFF;\n    if (bucket[low] <= SEQ_START)\n        this.encodeTableSeq[SEQ_START-bucket[low]][DEF_CHAR] = dbcsCode; // There's already a sequence, set a single-char subsequence of it.\n    else if (bucket[low] == UNASSIGNED)\n        bucket[low] = dbcsCode;\n}\n\nDBCSCodec.prototype._setEncodeSequence = function(seq, dbcsCode) {\n    \n    // Get the root of character tree according to first character of the sequence.\n    var uCode = seq[0];\n    var bucket = this._getEncodeBucket(uCode);\n    var low = uCode & 0xFF;\n\n    var node;\n    if (bucket[low] <= SEQ_START) {\n        // There's already a sequence with  - use it.\n        node = this.encodeTableSeq[SEQ_START-bucket[low]];\n    }\n    else {\n        // There was no sequence object - allocate a new one.\n        node = {};\n        if (bucket[low] !== UNASSIGNED) node[DEF_CHAR] = bucket[low]; // If a char was set before - make it a single-char subsequence.\n        bucket[low] = SEQ_START - this.encodeTableSeq.length;\n        this.encodeTableSeq.push(node);\n    }\n\n    // Traverse the character tree, allocating new nodes as needed.\n    for (var j = 1; j < seq.length-1; j++) {\n        var oldVal = node[uCode];\n        if (typeof oldVal === 'object')\n            node = oldVal;\n        else {\n            node = node[uCode] = {}\n            if (oldVal !== undefined)\n                node[DEF_CHAR] = oldVal\n        }\n    }\n\n    // Set the leaf to given dbcsCode.\n    uCode = seq[seq.length-1];\n    node[uCode] = dbcsCode;\n}\n\nDBCSCodec.prototype._fillEncodeTable = function(nodeIdx, prefix, skipEncodeChars) {\n    var node = this.decodeTables[nodeIdx];\n    for (var i = 0; i < 0x100; i++) {\n        var uCode = node[i];\n        var mbCode = prefix + i;\n        if (skipEncodeChars[mbCode])\n            continue;\n\n        if (uCode >= 0)\n            this._setEncodeChar(uCode, mbCode);\n        else if (uCode <= NODE_START)\n            this._fillEncodeTable(NODE_START - uCode, mbCode << 8, skipEncodeChars);\n        else if (uCode <= SEQ_START)\n            this._setEncodeSequence(this.decodeTableSeq[SEQ_START - uCode], mbCode);\n    }\n}\n\n\n\n// == Encoder ==================================================================\n\nfunction DBCSEncoder(options, codec) {\n    // Encoder state\n    this.leadSurrogate = -1;\n    this.seqObj = undefined;\n    \n    // Static data\n    this.encodeTable = codec.encodeTable;\n    this.encodeTableSeq = codec.encodeTableSeq;\n    this.defaultCharSingleByte = codec.defCharSB;\n    this.gb18030 = codec.gb18030;\n}\n\nDBCSEncoder.prototype.write = function(str) {\n    var newBuf = Buffer.alloc(str.length * (this.gb18030 ? 4 : 3)),\n        leadSurrogate = this.leadSurrogate,\n        seqObj = this.seqObj, nextChar = -1,\n        i = 0, j = 0;\n\n    while (true) {\n        // 0. Get next character.\n        if (nextChar === -1) {\n            if (i == str.length) break;\n            var uCode = str.charCodeAt(i++);\n        }\n        else {\n            var uCode = nextChar;\n            nextChar = -1;    \n        }\n\n        // 1. Handle surrogates.\n        if (0xD800 <= uCode && uCode < 0xE000) { // Char is one of surrogates.\n            if (uCode < 0xDC00) { // We've got lead surrogate.\n                if (leadSurrogate === -1) {\n                    leadSurrogate = uCode;\n                    continue;\n                } else {\n                    leadSurrogate = uCode;\n                    // Double lead surrogate found.\n                    uCode = UNASSIGNED;\n                }\n            } else { // We've got trail surrogate.\n                if (leadSurrogate !== -1) {\n                    uCode = 0x10000 + (leadSurrogate - 0xD800) * 0x400 + (uCode - 0xDC00);\n                    leadSurrogate = -1;\n                } else {\n                    // Incomplete surrogate pair - only trail surrogate found.\n                    uCode = UNASSIGNED;\n                }\n                \n            }\n        }\n        else if (leadSurrogate !== -1) {\n            // Incomplete surrogate pair - only lead surrogate found.\n            nextChar = uCode; uCode = UNASSIGNED; // Write an error, then current char.\n            leadSurrogate = -1;\n        }\n\n        // 2. Convert uCode character.\n        var dbcsCode = UNASSIGNED;\n        if (seqObj !== undefined && uCode != UNASSIGNED) { // We are in the middle of the sequence\n            var resCode = seqObj[uCode];\n            if (typeof resCode === 'object') { // Sequence continues.\n                seqObj = resCode;\n                continue;\n\n            } else if (typeof resCode == 'number') { // Sequence finished. Write it.\n                dbcsCode = resCode;\n\n            } else if (resCode == undefined) { // Current character is not part of the sequence.\n\n                // Try default character for this sequence\n                resCode = seqObj[DEF_CHAR];\n                if (resCode !== undefined) {\n                    dbcsCode = resCode; // Found. Write it.\n                    nextChar = uCode; // Current character will be written too in the next iteration.\n\n                } else {\n                    // TODO: What if we have no default? (resCode == undefined)\n                    // Then, we should write first char of the sequence as-is and try the rest recursively.\n                    // Didn't do it for now because no encoding has this situation yet.\n                    // Currently, just skip the sequence and write current char.\n                }\n            }\n            seqObj = undefined;\n        }\n        else if (uCode >= 0) {  // Regular character\n            var subtable = this.encodeTable[uCode >> 8];\n            if (subtable !== undefined)\n                dbcsCode = subtable[uCode & 0xFF];\n            \n            if (dbcsCode <= SEQ_START) { // Sequence start\n                seqObj = this.encodeTableSeq[SEQ_START-dbcsCode];\n                continue;\n            }\n\n            if (dbcsCode == UNASSIGNED && this.gb18030) {\n                // Use GB18030 algorithm to find character(s) to write.\n                var idx = findIdx(this.gb18030.uChars, uCode);\n                if (idx != -1) {\n                    var dbcsCode = this.gb18030.gbChars[idx] + (uCode - this.gb18030.uChars[idx]);\n                    newBuf[j++] = 0x81 + Math.floor(dbcsCode / 12600); dbcsCode = dbcsCode % 12600;\n                    newBuf[j++] = 0x30 + Math.floor(dbcsCode / 1260); dbcsCode = dbcsCode % 1260;\n                    newBuf[j++] = 0x81 + Math.floor(dbcsCode / 10); dbcsCode = dbcsCode % 10;\n                    newBuf[j++] = 0x30 + dbcsCode;\n                    continue;\n                }\n            }\n        }\n\n        // 3. Write dbcsCode character.\n        if (dbcsCode === UNASSIGNED)\n            dbcsCode = this.defaultCharSingleByte;\n        \n        if (dbcsCode < 0x100) {\n            newBuf[j++] = dbcsCode;\n        }\n        else if (dbcsCode < 0x10000) {\n            newBuf[j++] = dbcsCode >> 8;   // high byte\n            newBuf[j++] = dbcsCode & 0xFF; // low byte\n        }\n        else {\n            newBuf[j++] = dbcsCode >> 16;\n            newBuf[j++] = (dbcsCode >> 8) & 0xFF;\n            newBuf[j++] = dbcsCode & 0xFF;\n        }\n    }\n\n    this.seqObj = seqObj;\n    this.leadSurrogate = leadSurrogate;\n    return newBuf.slice(0, j);\n}\n\nDBCSEncoder.prototype.end = function() {\n    if (this.leadSurrogate === -1 && this.seqObj === undefined)\n        return; // All clean. Most often case.\n\n    var newBuf = Buffer.alloc(10), j = 0;\n\n    if (this.seqObj) { // We're in the sequence.\n        var dbcsCode = this.seqObj[DEF_CHAR];\n        if (dbcsCode !== undefined) { // Write beginning of the sequence.\n            if (dbcsCode < 0x100) {\n                newBuf[j++] = dbcsCode;\n            }\n            else {\n                newBuf[j++] = dbcsCode >> 8;   // high byte\n                newBuf[j++] = dbcsCode & 0xFF; // low byte\n            }\n        } else {\n            // See todo above.\n        }\n        this.seqObj = undefined;\n    }\n\n    if (this.leadSurrogate !== -1) {\n        // Incomplete surrogate pair - only lead surrogate found.\n        newBuf[j++] = this.defaultCharSingleByte;\n        this.leadSurrogate = -1;\n    }\n    \n    return newBuf.slice(0, j);\n}\n\n// Export for testing\nDBCSEncoder.prototype.findIdx = findIdx;\n\n\n// == Decoder ==================================================================\n\nfunction DBCSDecoder(options, codec) {\n    // Decoder state\n    this.nodeIdx = 0;\n    this.prevBuf = Buffer.alloc(0);\n\n    // Static data\n    this.decodeTables = codec.decodeTables;\n    this.decodeTableSeq = codec.decodeTableSeq;\n    this.defaultCharUnicode = codec.defaultCharUnicode;\n    this.gb18030 = codec.gb18030;\n}\n\nDBCSDecoder.prototype.write = function(buf) {\n    var newBuf = Buffer.alloc(buf.length*2),\n        nodeIdx = this.nodeIdx, \n        prevBuf = this.prevBuf, prevBufOffset = this.prevBuf.length,\n        seqStart = -this.prevBuf.length, // idx of the start of current parsed sequence.\n        uCode;\n\n    if (prevBufOffset > 0) // Make prev buf overlap a little to make it easier to slice later.\n        prevBuf = Buffer.concat([prevBuf, buf.slice(0, 10)]);\n    \n    for (var i = 0, j = 0; i < buf.length; i++) {\n        var curByte = (i >= 0) ? buf[i] : prevBuf[i + prevBufOffset];\n\n        // Lookup in current trie node.\n        var uCode = this.decodeTables[nodeIdx][curByte];\n\n        if (uCode >= 0) { \n            // Normal character, just use it.\n        }\n        else if (uCode === UNASSIGNED) { // Unknown char.\n            // TODO: Callback with seq.\n            //var curSeq = (seqStart >= 0) ? buf.slice(seqStart, i+1) : prevBuf.slice(seqStart + prevBufOffset, i+1 + prevBufOffset);\n            i = seqStart; // Try to parse again, after skipping first byte of the sequence ('i' will be incremented by 'for' cycle).\n            uCode = this.defaultCharUnicode.charCodeAt(0);\n        }\n        else if (uCode === GB18030_CODE) {\n            var curSeq = (seqStart >= 0) ? buf.slice(seqStart, i+1) : prevBuf.slice(seqStart + prevBufOffset, i+1 + prevBufOffset);\n            var ptr = (curSeq[0]-0x81)*12600 + (curSeq[1]-0x30)*1260 + (curSeq[2]-0x81)*10 + (curSeq[3]-0x30);\n            var idx = findIdx(this.gb18030.gbChars, ptr);\n            uCode = this.gb18030.uChars[idx] + ptr - this.gb18030.gbChars[idx];\n        }\n        else if (uCode <= NODE_START) { // Go to next trie node.\n            nodeIdx = NODE_START - uCode;\n            continue;\n        }\n        else if (uCode <= SEQ_START) { // Output a sequence of chars.\n            var seq = this.decodeTableSeq[SEQ_START - uCode];\n            for (var k = 0; k < seq.length - 1; k++) {\n                uCode = seq[k];\n                newBuf[j++] = uCode & 0xFF;\n                newBuf[j++] = uCode >> 8;\n            }\n            uCode = seq[seq.length-1];\n        }\n        else\n            throw new Error(\"iconv-lite internal error: invalid decoding table value \" + uCode + \" at \" + nodeIdx + \"/\" + curByte);\n\n        // Write the character to buffer, handling higher planes using surrogate pair.\n        if (uCode > 0xFFFF) { \n            uCode -= 0x10000;\n            var uCodeLead = 0xD800 + Math.floor(uCode / 0x400);\n            newBuf[j++] = uCodeLead & 0xFF;\n            newBuf[j++] = uCodeLead >> 8;\n\n            uCode = 0xDC00 + uCode % 0x400;\n        }\n        newBuf[j++] = uCode & 0xFF;\n        newBuf[j++] = uCode >> 8;\n\n        // Reset trie node.\n        nodeIdx = 0; seqStart = i+1;\n    }\n\n    this.nodeIdx = nodeIdx;\n    this.prevBuf = (seqStart >= 0) ? buf.slice(seqStart) : prevBuf.slice(seqStart + prevBufOffset);\n    return newBuf.slice(0, j).toString('ucs2');\n}\n\nDBCSDecoder.prototype.end = function() {\n    var ret = '';\n\n    // Try to parse all remaining chars.\n    while (this.prevBuf.length > 0) {\n        // Skip 1 character in the buffer.\n        ret += this.defaultCharUnicode;\n        var buf = this.prevBuf.slice(1);\n\n        // Parse remaining as usual.\n        this.prevBuf = Buffer.alloc(0);\n        this.nodeIdx = 0;\n        if (buf.length > 0)\n            ret += this.write(buf);\n    }\n\n    this.nodeIdx = 0;\n    return ret;\n}\n\n// Binary search for GB18030. Returns largest i such that table[i] <= val.\nfunction findIdx(table, val) {\n    if (table[0] > val)\n        return -1;\n\n    var l = 0, r = table.length;\n    while (l < r-1) { // always table[l] <= val < table[r]\n        var mid = l + Math.floor((r-l+1)/2);\n        if (table[mid] <= val)\n            l = mid;\n        else\n            r = mid;\n    }\n    return l;\n}\n\n","\"use strict\";\n\n// Description of supported double byte encodings and aliases.\n// Tables are not require()-d until they are needed to speed up library load.\n// require()-s are direct to support Browserify.\n\nmodule.exports = {\n    \n    // == Japanese/ShiftJIS ====================================================\n    // All japanese encodings are based on JIS X set of standards:\n    // JIS X 0201 - Single-byte encoding of ASCII + ¥ + Kana chars at 0xA1-0xDF.\n    // JIS X 0208 - Main set of 6879 characters, placed in 94x94 plane, to be encoded by 2 bytes. \n    //              Has several variations in 1978, 1983, 1990 and 1997.\n    // JIS X 0212 - Supplementary plane of 6067 chars in 94x94 plane. 1990. Effectively dead.\n    // JIS X 0213 - Extension and modern replacement of 0208 and 0212. Total chars: 11233.\n    //              2 planes, first is superset of 0208, second - revised 0212.\n    //              Introduced in 2000, revised 2004. Some characters are in Unicode Plane 2 (0x2xxxx)\n\n    // Byte encodings are:\n    //  * Shift_JIS: Compatible with 0201, uses not defined chars in top half as lead bytes for double-byte\n    //               encoding of 0208. Lead byte ranges: 0x81-0x9F, 0xE0-0xEF; Trail byte ranges: 0x40-0x7E, 0x80-0x9E, 0x9F-0xFC.\n    //               Windows CP932 is a superset of Shift_JIS. Some companies added more chars, notably KDDI.\n    //  * EUC-JP:    Up to 3 bytes per character. Used mostly on *nixes.\n    //               0x00-0x7F       - lower part of 0201\n    //               0x8E, 0xA1-0xDF - upper part of 0201\n    //               (0xA1-0xFE)x2   - 0208 plane (94x94).\n    //               0x8F, (0xA1-0xFE)x2 - 0212 plane (94x94).\n    //  * JIS X 208: 7-bit, direct encoding of 0208. Byte ranges: 0x21-0x7E (94 values). Uncommon.\n    //               Used as-is in ISO2022 family.\n    //  * ISO2022-JP: Stateful encoding, with escape sequences to switch between ASCII, \n    //                0201-1976 Roman, 0208-1978, 0208-1983.\n    //  * ISO2022-JP-1: Adds esc seq for 0212-1990.\n    //  * ISO2022-JP-2: Adds esc seq for GB2313-1980, KSX1001-1992, ISO8859-1, ISO8859-7.\n    //  * ISO2022-JP-3: Adds esc seq for 0201-1976 Kana set, 0213-2000 Planes 1, 2.\n    //  * ISO2022-JP-2004: Adds 0213-2004 Plane 1.\n    //\n    // After JIS X 0213 appeared, Shift_JIS-2004, EUC-JISX0213 and ISO2022-JP-2004 followed, with just changing the planes.\n    //\n    // Overall, it seems that it's a mess :( http://www8.plala.or.jp/tkubota1/unicode-symbols-map2.html\n\n    'shiftjis': {\n        type: '_dbcs',\n        table: function() { return require('./tables/shiftjis.json') },\n        encodeAdd: {'\\u00a5': 0x5C, '\\u203E': 0x7E},\n        encodeSkipVals: [{from: 0xED40, to: 0xF940}],\n    },\n    'csshiftjis': 'shiftjis',\n    'mskanji': 'shiftjis',\n    'sjis': 'shiftjis',\n    'windows31j': 'shiftjis',\n    'ms31j': 'shiftjis',\n    'xsjis': 'shiftjis',\n    'windows932': 'shiftjis',\n    'ms932': 'shiftjis',\n    '932': 'shiftjis',\n    'cp932': 'shiftjis',\n\n    'eucjp': {\n        type: '_dbcs',\n        table: function() { return require('./tables/eucjp.json') },\n        encodeAdd: {'\\u00a5': 0x5C, '\\u203E': 0x7E},\n    },\n\n    // TODO: KDDI extension to Shift_JIS\n    // TODO: IBM CCSID 942 = CP932, but F0-F9 custom chars and other char changes.\n    // TODO: IBM CCSID 943 = Shift_JIS = CP932 with original Shift_JIS lower 128 chars.\n\n\n    // == Chinese/GBK ==========================================================\n    // http://en.wikipedia.org/wiki/GBK\n    // We mostly implement W3C recommendation: https://www.w3.org/TR/encoding/#gbk-encoder\n\n    // Oldest GB2312 (1981, ~7600 chars) is a subset of CP936\n    'gb2312': 'cp936',\n    'gb231280': 'cp936',\n    'gb23121980': 'cp936',\n    'csgb2312': 'cp936',\n    'csiso58gb231280': 'cp936',\n    'euccn': 'cp936',\n\n    // Microsoft's CP936 is a subset and approximation of GBK.\n    'windows936': 'cp936',\n    'ms936': 'cp936',\n    '936': 'cp936',\n    'cp936': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp936.json') },\n    },\n\n    // GBK (~22000 chars) is an extension of CP936 that added user-mapped chars and some other.\n    'gbk': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp936.json').concat(require('./tables/gbk-added.json')) },\n    },\n    'xgbk': 'gbk',\n    'isoir58': 'gbk',\n\n    // GB18030 is an algorithmic extension of GBK.\n    // Main source: https://www.w3.org/TR/encoding/#gbk-encoder\n    // http://icu-project.org/docs/papers/gb18030.html\n    // http://source.icu-project.org/repos/icu/data/trunk/charset/data/xml/gb-18030-2000.xml\n    // http://www.khngai.com/chinese/charmap/tblgbk.php?page=0\n    'gb18030': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp936.json').concat(require('./tables/gbk-added.json')) },\n        gb18030: function() { return require('./tables/gb18030-ranges.json') },\n        encodeSkipVals: [0x80],\n        encodeAdd: {'€': 0xA2E3},\n    },\n\n    'chinese': 'gb18030',\n\n\n    // == Korean ===============================================================\n    // EUC-KR, KS_C_5601 and KS X 1001 are exactly the same.\n    'windows949': 'cp949',\n    'ms949': 'cp949',\n    '949': 'cp949',\n    'cp949': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp949.json') },\n    },\n\n    'cseuckr': 'cp949',\n    'csksc56011987': 'cp949',\n    'euckr': 'cp949',\n    'isoir149': 'cp949',\n    'korean': 'cp949',\n    'ksc56011987': 'cp949',\n    'ksc56011989': 'cp949',\n    'ksc5601': 'cp949',\n\n\n    // == Big5/Taiwan/Hong Kong ================================================\n    // There are lots of tables for Big5 and cp950. Please see the following links for history:\n    // http://moztw.org/docs/big5/  http://www.haible.de/bruno/charsets/conversion-tables/Big5.html\n    // Variations, in roughly number of defined chars:\n    //  * Windows CP 950: Microsoft variant of Big5. Canonical: http://www.unicode.org/Public/MAPPINGS/VENDORS/MICSFT/WINDOWS/CP950.TXT\n    //  * Windows CP 951: Microsoft variant of Big5-HKSCS-2001. Seems to be never public. http://me.abelcheung.org/articles/research/what-is-cp951/\n    //  * Big5-2003 (Taiwan standard) almost superset of cp950.\n    //  * Unicode-at-on (UAO) / Mozilla 1.8. Falling out of use on the Web. Not supported by other browsers.\n    //  * Big5-HKSCS (-2001, -2004, -2008). Hong Kong standard. \n    //    many unicode code points moved from PUA to Supplementary plane (U+2XXXX) over the years.\n    //    Plus, it has 4 combining sequences.\n    //    Seems that Mozilla refused to support it for 10 yrs. https://bugzilla.mozilla.org/show_bug.cgi?id=162431 https://bugzilla.mozilla.org/show_bug.cgi?id=310299\n    //    because big5-hkscs is the only encoding to include astral characters in non-algorithmic way.\n    //    Implementations are not consistent within browsers; sometimes labeled as just big5.\n    //    MS Internet Explorer switches from big5 to big5-hkscs when a patch applied.\n    //    Great discussion & recap of what's going on https://bugzilla.mozilla.org/show_bug.cgi?id=912470#c31\n    //    In the encoder, it might make sense to support encoding old PUA mappings to Big5 bytes seq-s.\n    //    Official spec: http://www.ogcio.gov.hk/en/business/tech_promotion/ccli/terms/doc/2003cmp_2008.txt\n    //                   http://www.ogcio.gov.hk/tc/business/tech_promotion/ccli/terms/doc/hkscs-2008-big5-iso.txt\n    // \n    // Current understanding of how to deal with Big5(-HKSCS) is in the Encoding Standard, http://encoding.spec.whatwg.org/#big5-encoder\n    // Unicode mapping (http://www.unicode.org/Public/MAPPINGS/OBSOLETE/EASTASIA/OTHER/BIG5.TXT) is said to be wrong.\n\n    'windows950': 'cp950',\n    'ms950': 'cp950',\n    '950': 'cp950',\n    'cp950': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp950.json') },\n    },\n\n    // Big5 has many variations and is an extension of cp950. We use Encoding Standard's as a consensus.\n    'big5': 'big5hkscs',\n    'big5hkscs': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp950.json').concat(require('./tables/big5-added.json')) },\n        encodeSkipVals: [0xa2cc],\n    },\n\n    'cnbig5': 'big5hkscs',\n    'csbig5': 'big5hkscs',\n    'xxbig5': 'big5hkscs',\n};\n","\"use strict\";\n\nvar Buffer = require(\"buffer\").Buffer,\n    Transform = require(\"stream\").Transform;\n\n\n// == Exports ==================================================================\nmodule.exports = function(iconv) {\n    \n    // Additional Public API.\n    iconv.encodeStream = function encodeStream(encoding, options) {\n        return new IconvLiteEncoderStream(iconv.getEncoder(encoding, options), options);\n    }\n\n    iconv.decodeStream = function decodeStream(encoding, options) {\n        return new IconvLiteDecoderStream(iconv.getDecoder(encoding, options), options);\n    }\n\n    iconv.supportsStreams = true;\n\n\n    // Not published yet.\n    iconv.IconvLiteEncoderStream = IconvLiteEncoderStream;\n    iconv.IconvLiteDecoderStream = IconvLiteDecoderStream;\n    iconv._collect = IconvLiteDecoderStream.prototype.collect;\n};\n\n\n// == Encoder stream =======================================================\nfunction IconvLiteEncoderStream(conv, options) {\n    this.conv = conv;\n    options = options || {};\n    options.decodeStrings = false; // We accept only strings, so we don't need to decode them.\n    Transform.call(this, options);\n}\n\nIconvLiteEncoderStream.prototype = Object.create(Transform.prototype, {\n    constructor: { value: IconvLiteEncoderStream }\n});\n\nIconvLiteEncoderStream.prototype._transform = function(chunk, encoding, done) {\n    if (typeof chunk != 'string')\n        return done(new Error(\"Iconv encoding stream needs strings as its input.\"));\n    try {\n        var res = this.conv.write(chunk);\n        if (res && res.length) this.push(res);\n        done();\n    }\n    catch (e) {\n        done(e);\n    }\n}\n\nIconvLiteEncoderStream.prototype._flush = function(done) {\n    try {\n        var res = this.conv.end();\n        if (res && res.length) this.push(res);\n        done();\n    }\n    catch (e) {\n        done(e);\n    }\n}\n\nIconvLiteEncoderStream.prototype.collect = function(cb) {\n    var chunks = [];\n    this.on('error', cb);\n    this.on('data', function(chunk) { chunks.push(chunk); });\n    this.on('end', function() {\n        cb(null, Buffer.concat(chunks));\n    });\n    return this;\n}\n\n\n// == Decoder stream =======================================================\nfunction IconvLiteDecoderStream(conv, options) {\n    this.conv = conv;\n    options = options || {};\n    options.encoding = this.encoding = 'utf8'; // We output strings.\n    Transform.call(this, options);\n}\n\nIconvLiteDecoderStream.prototype = Object.create(Transform.prototype, {\n    constructor: { value: IconvLiteDecoderStream }\n});\n\nIconvLiteDecoderStream.prototype._transform = function(chunk, encoding, done) {\n    if (!Buffer.isBuffer(chunk))\n        return done(new Error(\"Iconv decoding stream needs buffers as its input.\"));\n    try {\n        var res = this.conv.write(chunk);\n        if (res && res.length) this.push(res, this.encoding);\n        done();\n    }\n    catch (e) {\n        done(e);\n    }\n}\n\nIconvLiteDecoderStream.prototype._flush = function(done) {\n    try {\n        var res = this.conv.end();\n        if (res && res.length) this.push(res, this.encoding);                \n        done();\n    }\n    catch (e) {\n        done(e);\n    }\n}\n\nIconvLiteDecoderStream.prototype.collect = function(cb) {\n    var res = '';\n    this.on('error', cb);\n    this.on('data', function(chunk) { res += chunk; });\n    this.on('end', function() {\n        cb(null, res);\n    });\n    return this;\n}\n\n","\"use strict\";\nvar Buffer = require(\"buffer\").Buffer;\n// Note: not polyfilled with safer-buffer on a purpose, as overrides Buffer\n\n// == Extend Node primitives to use iconv-lite =================================\n\nmodule.exports = function (iconv) {\n    var original = undefined; // Place to keep original methods.\n\n    // Node authors rewrote Buffer internals to make it compatible with\n    // Uint8Array and we cannot patch key functions since then.\n    // Note: this does use older Buffer API on a purpose\n    iconv.supportsNodeEncodingsExtension = !(Buffer.from || new Buffer(0) instanceof Uint8Array);\n\n    iconv.extendNodeEncodings = function extendNodeEncodings() {\n        if (original) return;\n        original = {};\n\n        if (!iconv.supportsNodeEncodingsExtension) {\n            console.error(\"ACTION NEEDED: require('iconv-lite').extendNodeEncodings() is not supported in your version of Node\");\n            console.error(\"See more info at https://github.com/ashtuchkin/iconv-lite/wiki/Node-v4-compatibility\");\n            return;\n        }\n\n        var nodeNativeEncodings = {\n            'hex': true, 'utf8': true, 'utf-8': true, 'ascii': true, 'binary': true, \n            'base64': true, 'ucs2': true, 'ucs-2': true, 'utf16le': true, 'utf-16le': true,\n        };\n\n        Buffer.isNativeEncoding = function(enc) {\n            return enc && nodeNativeEncodings[enc.toLowerCase()];\n        }\n\n        // -- SlowBuffer -----------------------------------------------------------\n        var SlowBuffer = require('buffer').SlowBuffer;\n\n        original.SlowBufferToString = SlowBuffer.prototype.toString;\n        SlowBuffer.prototype.toString = function(encoding, start, end) {\n            encoding = String(encoding || 'utf8').toLowerCase();\n\n            // Use native conversion when possible\n            if (Buffer.isNativeEncoding(encoding))\n                return original.SlowBufferToString.call(this, encoding, start, end);\n\n            // Otherwise, use our decoding method.\n            if (typeof start == 'undefined') start = 0;\n            if (typeof end == 'undefined') end = this.length;\n            return iconv.decode(this.slice(start, end), encoding);\n        }\n\n        original.SlowBufferWrite = SlowBuffer.prototype.write;\n        SlowBuffer.prototype.write = function(string, offset, length, encoding) {\n            // Support both (string, offset, length, encoding)\n            // and the legacy (string, encoding, offset, length)\n            if (isFinite(offset)) {\n                if (!isFinite(length)) {\n                    encoding = length;\n                    length = undefined;\n                }\n            } else {  // legacy\n                var swap = encoding;\n                encoding = offset;\n                offset = length;\n                length = swap;\n            }\n\n            offset = +offset || 0;\n            var remaining = this.length - offset;\n            if (!length) {\n                length = remaining;\n            } else {\n                length = +length;\n                if (length > remaining) {\n                    length = remaining;\n                }\n            }\n            encoding = String(encoding || 'utf8').toLowerCase();\n\n            // Use native conversion when possible\n            if (Buffer.isNativeEncoding(encoding))\n                return original.SlowBufferWrite.call(this, string, offset, length, encoding);\n\n            if (string.length > 0 && (length < 0 || offset < 0))\n                throw new RangeError('attempt to write beyond buffer bounds');\n\n            // Otherwise, use our encoding method.\n            var buf = iconv.encode(string, encoding);\n            if (buf.length < length) length = buf.length;\n            buf.copy(this, offset, 0, length);\n            return length;\n        }\n\n        // -- Buffer ---------------------------------------------------------------\n\n        original.BufferIsEncoding = Buffer.isEncoding;\n        Buffer.isEncoding = function(encoding) {\n            return Buffer.isNativeEncoding(encoding) || iconv.encodingExists(encoding);\n        }\n\n        original.BufferByteLength = Buffer.byteLength;\n        Buffer.byteLength = SlowBuffer.byteLength = function(str, encoding) {\n            encoding = String(encoding || 'utf8').toLowerCase();\n\n            // Use native conversion when possible\n            if (Buffer.isNativeEncoding(encoding))\n                return original.BufferByteLength.call(this, str, encoding);\n\n            // Slow, I know, but we don't have a better way yet.\n            return iconv.encode(str, encoding).length;\n        }\n\n        original.BufferToString = Buffer.prototype.toString;\n        Buffer.prototype.toString = function(encoding, start, end) {\n            encoding = String(encoding || 'utf8').toLowerCase();\n\n            // Use native conversion when possible\n            if (Buffer.isNativeEncoding(encoding))\n                return original.BufferToString.call(this, encoding, start, end);\n\n            // Otherwise, use our decoding method.\n            if (typeof start == 'undefined') start = 0;\n            if (typeof end == 'undefined') end = this.length;\n            return iconv.decode(this.slice(start, end), encoding);\n        }\n\n        original.BufferWrite = Buffer.prototype.write;\n        Buffer.prototype.write = function(string, offset, length, encoding) {\n            var _offset = offset, _length = length, _encoding = encoding;\n            // Support both (string, offset, length, encoding)\n            // and the legacy (string, encoding, offset, length)\n            if (isFinite(offset)) {\n                if (!isFinite(length)) {\n                    encoding = length;\n                    length = undefined;\n                }\n            } else {  // legacy\n                var swap = encoding;\n                encoding = offset;\n                offset = length;\n                length = swap;\n            }\n\n            encoding = String(encoding || 'utf8').toLowerCase();\n\n            // Use native conversion when possible\n            if (Buffer.isNativeEncoding(encoding))\n                return original.BufferWrite.call(this, string, _offset, _length, _encoding);\n\n            offset = +offset || 0;\n            var remaining = this.length - offset;\n            if (!length) {\n                length = remaining;\n            } else {\n                length = +length;\n                if (length > remaining) {\n                    length = remaining;\n                }\n            }\n\n            if (string.length > 0 && (length < 0 || offset < 0))\n                throw new RangeError('attempt to write beyond buffer bounds');\n\n            // Otherwise, use our encoding method.\n            var buf = iconv.encode(string, encoding);\n            if (buf.length < length) length = buf.length;\n            buf.copy(this, offset, 0, length);\n            return length;\n\n            // TODO: Set _charsWritten.\n        }\n\n\n        // -- Readable -------------------------------------------------------------\n        if (iconv.supportsStreams) {\n            var Readable = require('stream').Readable;\n\n            original.ReadableSetEncoding = Readable.prototype.setEncoding;\n            Readable.prototype.setEncoding = function setEncoding(enc, options) {\n                // Use our own decoder, it has the same interface.\n                // We cannot use original function as it doesn't handle BOM-s.\n                this._readableState.decoder = iconv.getDecoder(enc, options);\n                this._readableState.encoding = enc;\n            }\n\n            Readable.prototype.collect = iconv._collect;\n        }\n    }\n\n    // Remove iconv-lite Node primitive extensions.\n    iconv.undoExtendNodeEncodings = function undoExtendNodeEncodings() {\n        if (!iconv.supportsNodeEncodingsExtension)\n            return;\n        if (!original)\n            throw new Error(\"require('iconv-lite').undoExtendNodeEncodings(): Nothing to undo; extendNodeEncodings() is not called.\")\n\n        delete Buffer.isNativeEncoding;\n\n        var SlowBuffer = require('buffer').SlowBuffer;\n\n        SlowBuffer.prototype.toString = original.SlowBufferToString;\n        SlowBuffer.prototype.write = original.SlowBufferWrite;\n\n        Buffer.isEncoding = original.BufferIsEncoding;\n        Buffer.byteLength = original.BufferByteLength;\n        Buffer.prototype.toString = original.BufferToString;\n        Buffer.prototype.write = original.BufferWrite;\n\n        if (iconv.supportsStreams) {\n            var Readable = require('stream').Readable;\n\n            Readable.prototype.setEncoding = original.ReadableSetEncoding;\n            delete Readable.prototype.collect;\n        }\n\n        original = undefined;\n    }\n}\n","'use strict';\nimport { TextDocument, TextEditor, Uri } from 'vscode';\n\nabstract class Comparer<T> {\n    abstract equals(lhs: T, rhs: T): boolean;\n}\n\nclass UriComparer extends Comparer<Uri> {\n    equals(lhs: Uri | undefined, rhs: Uri | undefined, options: { exact?: boolean } = { exact: false }) {\n        if (lhs === rhs) return true;\n        if (lhs === undefined || rhs === undefined) return false;\n\n        if (options.exact) {\n            return lhs.toString(true) === rhs.toString(true);\n        }\n        return lhs.scheme === rhs.scheme && lhs.fsPath === rhs.fsPath;\n    }\n}\n\nclass TextDocumentComparer extends Comparer<TextDocument> {\n    equals(lhs: TextDocument | undefined, rhs: TextDocument | undefined) {\n        return lhs === rhs;\n        // if (lhs === rhs) return true;\n        // if (lhs === undefined || rhs === undefined) return false;\n\n        // return uriComparer.equals(lhs.uri, rhs.uri);\n    }\n}\n\nclass TextEditorComparer extends Comparer<TextEditor> {\n    equals(\n        lhs: TextEditor | undefined,\n        rhs: TextEditor | undefined,\n        options: { useId: boolean; usePosition: boolean } = { useId: false, usePosition: false }\n    ) {\n        if (lhs === rhs) return true;\n        if (lhs === undefined || rhs === undefined) return false;\n\n        if (options.usePosition && lhs.viewColumn !== rhs.viewColumn) return false;\n\n        if (options.useId && (!lhs.document || !rhs.document)) {\n            if ((lhs as any).id !== (rhs as any).id) return false;\n\n            return true;\n        }\n\n        return textDocumentComparer.equals(lhs.document, rhs.document);\n    }\n}\n\nconst textDocumentComparer = new TextDocumentComparer();\nconst textEditorComparer = new TextEditorComparer();\nconst uriComparer = new UriComparer();\nexport {\n    textDocumentComparer as TextDocumentComparer,\n    textEditorComparer as TextEditorComparer,\n    uriComparer as UriComparer\n};\n","'use strict';\nimport { TraceLevel } from './logger';\n\nexport interface Config {\n    blame: {\n        avatars: boolean;\n        compact: boolean;\n        dateFormat: string | null;\n        format: string;\n        heatmap: {\n            enabled: boolean;\n            location: 'left' | 'right';\n        };\n        highlight: {\n            enabled: boolean;\n            locations: HighlightLocations[];\n        };\n        ignoreWhitespace: boolean;\n        separateLines: boolean;\n        toggleMode: AnnotationsToggleMode;\n    };\n    currentLine: {\n        dateFormat: string | null;\n        enabled: boolean;\n        format: string;\n        scrollable: boolean;\n    };\n    codeLens: CodeLensConfig;\n    debug: boolean;\n    defaultDateFormat: string | null;\n    defaultDateShortFormat: string | null;\n    defaultDateSource: DateSource;\n    defaultDateStyle: DateStyle;\n    defaultGravatarsStyle: GravatarDefaultStyle;\n    heatmap: {\n        ageThreshold: number;\n        coldColor: string;\n        hotColor: string;\n        toggleMode: AnnotationsToggleMode;\n    };\n    hovers: {\n        annotations: {\n            changes: boolean;\n            details: boolean;\n            enabled: boolean;\n            over: 'line' | 'annotation';\n        };\n        currentLine: {\n            changes: boolean;\n            details: boolean;\n            enabled: boolean;\n            over: 'line' | 'annotation';\n        };\n        avatars: boolean;\n        changesDiff: 'line' | 'hunk';\n        detailsMarkdownFormat: string;\n        enabled: boolean;\n    };\n    insiders: boolean;\n    keymap: KeyMap;\n    liveshare: {\n        allowGuestAccess: boolean;\n    };\n    menus: boolean | MenuConfig;\n    mode: {\n        active: string;\n        statusBar: {\n            enabled: boolean;\n            alignment: 'left' | 'right';\n        };\n    };\n    modes: { [key: string]: ModeConfig };\n    outputLevel: TraceLevel;\n    recentChanges: {\n        highlight: {\n            locations: HighlightLocations[];\n        };\n        toggleMode: AnnotationsToggleMode;\n    };\n    remotes: RemotesConfig[];\n    showWhatsNewAfterUpgrades: boolean;\n    statusBar: {\n        alignment: 'left' | 'right';\n        command: StatusBarCommand;\n        dateFormat: string | null;\n        enabled: boolean;\n        format: string;\n        reduceFlicker: boolean;\n    };\n    strings: {\n        codeLens: {\n            unsavedChanges: {\n                recentChangeAndAuthors: string;\n                recentChangeOnly: string;\n                authorsOnly: string;\n            };\n        };\n    };\n    views: ViewsConfig;\n    advanced: AdvancedConfig;\n}\n\nexport enum AnnotationsToggleMode {\n    File = 'file',\n    Window = 'window'\n}\n\nexport enum CodeLensCommand {\n    DiffWithPrevious = 'gitlens.diffWithPrevious',\n    ShowQuickCommitDetails = 'gitlens.showQuickCommitDetails',\n    ShowQuickCommitFileDetails = 'gitlens.showQuickCommitFileDetails',\n    ShowQuickCurrentBranchHistory = 'gitlens.showQuickRepoHistory',\n    ShowQuickFileHistory = 'gitlens.showQuickFileHistory',\n    ToggleFileBlame = 'gitlens.toggleFileBlame'\n}\n\nexport enum CodeLensScopes {\n    Document = 'document',\n    Containers = 'containers',\n    Blocks = 'blocks'\n}\n\nexport enum CustomRemoteType {\n    Bitbucket = 'Bitbucket',\n    BitbucketServer = 'BitbucketServer',\n    Custom = 'Custom',\n    GitHub = 'GitHub',\n    GitLab = 'GitLab'\n}\n\nexport enum DateSource {\n    Authored = 'authored',\n    Committed = 'committed'\n}\n\nexport enum DateStyle {\n    Absolute = 'absolute',\n    Relative = 'relative'\n}\n\nexport enum FileAnnotationType {\n    Blame = 'blame',\n    Heatmap = 'heatmap',\n    RecentChanges = 'recentChanges'\n}\n\nexport enum GravatarDefaultStyle {\n    Faces = 'wavatar',\n    Geometric = 'identicon',\n    Monster = 'monsterid',\n    MysteryPerson = 'mp',\n    Retro = 'retro',\n    Robot = 'robohash'\n}\n\nexport enum HighlightLocations {\n    Gutter = 'gutter',\n    Line = 'line',\n    Overview = 'overview'\n}\n\nexport enum KeyMap {\n    Alternate = 'alternate',\n    Chorded = 'chorded',\n    None = 'none'\n}\n\nexport enum StatusBarCommand {\n    DiffWithPrevious = 'gitlens.diffWithPrevious',\n    DiffWithWorking = 'gitlens.diffWithWorking',\n    ShowQuickCommitDetails = 'gitlens.showQuickCommitDetails',\n    ShowQuickCommitFileDetails = 'gitlens.showQuickCommitFileDetails',\n    ShowQuickCurrentBranchHistory = 'gitlens.showQuickRepoHistory',\n    ShowQuickFileHistory = 'gitlens.showQuickFileHistory',\n    ToggleCodeLens = 'gitlens.toggleCodeLens',\n    ToggleFileBlame = 'gitlens.toggleFileBlame'\n}\n\nexport enum ViewBranchesLayout {\n    List = 'list',\n    Tree = 'tree'\n}\n\nexport enum ViewFilesLayout {\n    Auto = 'auto',\n    List = 'list',\n    Tree = 'tree'\n}\n\nexport enum ViewLocation {\n    Explorer = 'explorer',\n    GitLens = 'gitlens',\n    SourceControl = 'scm'\n}\n\nexport interface AdvancedConfig {\n    abbreviatedShaLength: number;\n    blame: {\n        customArguments: string[] | null;\n        delayAfterEdit: number;\n        sizeThresholdAfterEdit: number;\n    };\n    caching: {\n        enabled: boolean;\n    };\n    fileHistoryFollowsRenames: boolean;\n    maxListItems: number;\n    maxSearchItems: number;\n    messages: {\n        suppressCommitHasNoPreviousCommitWarning: boolean;\n        suppressCommitNotFoundWarning: boolean;\n        suppressFileNotUnderSourceControlWarning: boolean;\n        suppressGitDisabledWarning: boolean;\n        suppressGitVersionWarning: boolean;\n        suppressLineUncommittedWarning: boolean;\n        suppressNoRepositoryWarning: boolean;\n        suppressSupportGitLensNotification: boolean;\n    };\n    quickPick: {\n        closeOnFocusOut: boolean;\n    };\n    repositorySearchDepth: number;\n    similarityThreshold: number;\n    telemetry: {\n        enabled: boolean;\n    };\n}\n\nexport interface CodeLensConfig {\n    authors: {\n        enabled: boolean;\n        command: CodeLensCommand;\n    };\n    enabled: boolean;\n    includeSingleLineSymbols: boolean;\n    recentChange: {\n        enabled: boolean;\n        command: CodeLensCommand;\n    };\n    scopes: CodeLensScopes[];\n    scopesByLanguage: CodeLensLanguageScope[];\n    symbolScopes: string[];\n}\n\nexport interface CodeLensLanguageScope {\n    language: string | undefined;\n    scopes?: CodeLensScopes[];\n    symbolScopes?: string[];\n}\n\nexport interface CompareViewConfig {\n    avatars: boolean;\n    enabled: boolean;\n    files: ViewsFilesConfig;\n    location: ViewLocation;\n}\n\nexport interface FileHistoryViewConfig {\n    avatars: boolean;\n    enabled: boolean;\n    location: ViewLocation;\n}\n\nexport interface LineHistoryViewConfig {\n    avatars: boolean;\n    enabled: boolean;\n    location: ViewLocation;\n}\n\nexport interface MenuConfig {\n    editor:\n        | false\n        | {\n              blame: boolean;\n              clipboard: boolean;\n              compare: boolean;\n              details: boolean;\n              history: boolean;\n              remote: boolean;\n          };\n    editorGroup:\n        | false\n        | {\n              compare: boolean;\n              history: boolean;\n          };\n    editorTab:\n        | false\n        | {\n              clipboard: boolean;\n              compare: boolean;\n              history: boolean;\n              remote: boolean;\n          };\n    explorer:\n        | false\n        | {\n              clipboard: boolean;\n              compare: boolean;\n              history: boolean;\n              remote: boolean;\n          };\n    scmGroup:\n        | false\n        | {\n              compare: boolean;\n              openClose: boolean;\n              stash: boolean;\n              stashInline: boolean;\n          };\n    scmItem:\n        | false\n        | {\n              clipboard: boolean;\n              compare: boolean;\n              history: boolean;\n              remote: boolean;\n              stash: boolean;\n          };\n}\n\nexport interface ModeConfig {\n    name: string;\n    statusBarItemName?: string;\n    description?: string;\n    annotations?: 'blame' | 'heatmap' | 'recentChanges';\n    codeLens?: boolean;\n    currentLine?: boolean;\n    hovers?: boolean;\n    statusBar?: boolean;\n    views?: boolean;\n}\n\nexport interface RemotesConfig {\n    domain: string;\n    name?: string;\n    protocol?: string;\n    type: CustomRemoteType;\n    urls?: RemotesUrlsConfig;\n}\n\nexport interface RemotesUrlsConfig {\n    repository: string;\n    branches: string;\n    branch: string;\n    commit: string;\n    file: string;\n    fileInBranch: string;\n    fileInCommit: string;\n    fileLine: string;\n    fileRange: string;\n}\n\nexport interface RepositoriesViewConfig {\n    autoRefresh: boolean;\n    autoReveal: boolean;\n    avatars: boolean;\n    branches: {\n        layout: ViewBranchesLayout;\n    };\n    compact: boolean;\n    enabled: boolean;\n    files: ViewsFilesConfig;\n    includeWorkingTree: boolean;\n    location: ViewLocation;\n    showTrackingBranch: boolean;\n}\n\nexport interface SearchViewConfig {\n    avatars: boolean;\n    enabled: boolean;\n    files: ViewsFilesConfig;\n    location: ViewLocation;\n}\n\nexport interface ViewsConfig {\n    fileHistory: FileHistoryViewConfig;\n    commitFileDescriptionFormat: string;\n    commitFileFormat: string;\n    commitDescriptionFormat: string;\n    commitFormat: string;\n    compare: CompareViewConfig;\n    defaultItemLimit: number;\n    lineHistory: LineHistoryViewConfig;\n    pageItemLimit: number;\n    repositories: RepositoriesViewConfig;\n    search: SearchViewConfig;\n    showRelativeDateMarkers: boolean;\n    stashFileDescriptionFormat: string;\n    stashFileFormat: string;\n    stashDescriptionFormat: string;\n    stashFormat: string;\n    statusFileDescriptionFormat: string;\n    statusFileFormat: string;\n}\n\nexport interface ViewsFilesConfig {\n    compact: boolean;\n    layout: ViewFilesLayout;\n    threshold: number;\n}\n","'use strict';\nimport { commands, TextDocument, TextEditor, window } from 'vscode';\n\nexport const applicationInsightsKey = 'a9c302f8-6483-4d01-b92c-c159c799c679';\nexport const extensionId = 'gitlens';\nexport const extensionOutputChannelName = 'GitLens';\nexport const extensionQualifiedId = `eamodio.${extensionId}`;\nexport const extensionTerminalName = 'GitLens';\n\nexport enum BuiltInCommands {\n    CloseActiveEditor = 'workbench.action.closeActiveEditor',\n    CloseAllEditors = 'workbench.action.closeAllEditors',\n    CursorMove = 'cursorMove',\n    Diff = 'vscode.diff',\n    EditorScroll = 'editorScroll',\n    ExecuteDocumentSymbolProvider = 'vscode.executeDocumentSymbolProvider',\n    ExecuteCodeLensProvider = 'vscode.executeCodeLensProvider',\n    FocusFilesExplorer = 'workbench.files.action.focusFilesExplorer',\n    Open = 'vscode.open',\n    OpenFolder = 'vscode.openFolder',\n    OpenInTerminal = 'openInTerminal',\n    NextEditor = 'workbench.action.nextEditor',\n    PreviewHtml = 'vscode.previewHtml',\n    RevealLine = 'revealLine',\n    SetContext = 'setContext',\n    ShowExplorerActivity = 'workbench.view.explorer',\n    ShowReferences = 'editor.action.showReferences'\n}\n\nexport enum CommandContext {\n    ActiveFileStatus = 'gitlens:activeFileStatus',\n    AnnotationStatus = 'gitlens:annotationStatus',\n    CanToggleCodeLens = 'gitlens:canToggleCodeLens',\n    Enabled = 'gitlens:enabled',\n    HasRemotes = 'gitlens:hasRemotes',\n    Key = 'gitlens:key',\n    Readonly = 'gitlens:readonly',\n    ViewsCanCompare = 'gitlens:views:canCompare',\n    ViewsCanCompareFile = 'gitlens:views:canCompare:file',\n    ViewsCompareKeepResults = 'gitlens:views:compare:keepResults',\n    ViewsHideSupportGitLens = 'gitlens:views:supportGitLens:hide',\n    ViewsFileHistoryEditorFollowing = 'gitlens:views:fileHistory:editorFollowing',\n    ViewsLineHistoryEditorFollowing = 'gitlens:views:lineHistory:editorFollowing',\n    ViewsRepositoriesAutoRefresh = 'gitlens:views:repositories:autoRefresh',\n    ViewsSearchKeepResults = 'gitlens:views:search:keepResults',\n    Vsls = 'gitlens:vsls'\n}\n\nexport function setCommandContext(key: CommandContext | string, value: any) {\n    return commands.executeCommand(BuiltInCommands.SetContext, key, value);\n}\n\nexport enum DocumentSchemes {\n    DebugConsole = 'debug',\n    File = 'file',\n    Git = 'git',\n    GitLens = 'gitlens',\n    Output = 'output',\n    Vsls = 'vsls'\n}\n\nexport function getEditorIfActive(document: TextDocument): TextEditor | undefined {\n    const editor = window.activeTextEditor;\n    return editor != null && editor.document === document ? editor : undefined;\n}\n\nexport function isActiveDocument(document: TextDocument): boolean {\n    const editor = window.activeTextEditor;\n    return editor != null && editor.document === document;\n}\n\nexport function isTextEditor(editor: TextEditor): boolean {\n    const scheme = editor.document.uri.scheme;\n    return scheme !== DocumentSchemes.Output && scheme !== DocumentSchemes.DebugConsole;\n}\n\nexport enum GlyphChars {\n    AngleBracketLeftHeavy = '\\u2770',\n    AngleBracketRightHeavy = '\\u2771',\n    ArrowBack = '\\u21a9',\n    ArrowDown = '\\u2193',\n    ArrowDropRight = '\\u2937',\n    ArrowHeadRight = '\\u27A4',\n    ArrowLeft = '\\u2190',\n    ArrowLeftDouble = '\\u21d0',\n    ArrowLeftRight = '\\u2194',\n    ArrowLeftRightDouble = '\\u21d4',\n    ArrowLeftRightDoubleStrike = '\\u21ce',\n    ArrowLeftRightLong = '\\u27f7',\n    ArrowRight = '\\u2192',\n    ArrowRightDouble = '\\u21d2',\n    ArrowRightHollow = '\\u21e8',\n    ArrowUp = '\\u2191',\n    ArrowUpRight = '\\u2197',\n    ArrowsHalfLeftRight = '\\u21cb',\n    ArrowsHalfRightLeft = '\\u21cc',\n    ArrowsLeftRight = '\\u21c6',\n    ArrowsRightLeft = '\\u21c4',\n    Asterisk = '\\u2217',\n    Check = '\\u2713',\n    Dash = '\\u2014',\n    Dot = '\\u2022',\n    Ellipsis = '\\u2026',\n    EnDash = '\\u2013',\n    Envelope = '\\u2709',\n    EqualsTriple = '\\u2261',\n    Flag = '\\u2691',\n    FlagHollow = '\\u2690',\n    MiddleEllipsis = '\\u22EF',\n    MuchLessThan = '\\u226A',\n    MuchGreaterThan = '\\u226B',\n    Pencil = '\\u270E',\n    Space = '\\u00a0',\n    SpaceThin = '\\u2009',\n    SpaceThinnest = '\\u200A',\n    SquareWithBottomShadow = '\\u274F',\n    SquareWithTopShadow = '\\u2750',\n    ZeroWidthSpace = '\\u200b'\n}\n\nexport enum GlobalState {\n    GitLensVersion = 'gitlensVersion'\n}\n\nexport const ImageMimetypes: { [key: string]: string } = {\n    '.png': 'image/png',\n    '.gif': 'image/gif',\n    '.jpg': 'image/jpeg',\n    '.jpeg': 'image/jpeg',\n    '.jpe': 'image/jpeg',\n    '.webp': 'image/webp',\n    '.tif': 'image/tiff',\n    '.tiff': 'image/tiff',\n    '.bmp': 'image/bmp'\n};\n\nexport interface NamedRef {\n    label?: string;\n    ref: string;\n}\n\nexport interface PinnedComparison {\n    path: string;\n    ref1: NamedRef;\n    ref2: NamedRef;\n}\n\nexport interface PinnedComparisons {\n    [id: string]: PinnedComparison;\n}\n\nexport interface StarredBranches {\n    [id: string]: boolean;\n}\n\nexport interface StarredRepositories {\n    [id: string]: boolean;\n}\n\nexport enum WorkspaceState {\n    DefaultRemote = 'gitlens:remote:default',\n    PinnedComparisons = 'gitlens:pinned:comparisons',\n    StarredBranches = 'gitlens:starred:branches',\n    StarredRepositories = 'gitlens:starred:repositories',\n    ViewsCompareKeepResults = 'gitlens:views:compare:keepResults',\n    ViewsRepositoriesAutoRefresh = 'gitlens:views:repositories:autoRefresh',\n    ViewsSearchKeepResults = 'gitlens:views:search:keepResults'\n}\n","'use strict';\n\nexport namespace Arrays {\n    export function countUniques<T>(source: T[], accessor: (item: T) => string): { [key: string]: number } {\n        const uniqueCounts = Object.create(null);\n        for (const item of source) {\n            const value = accessor(item);\n            uniqueCounts[value] = (uniqueCounts[value] || 0) + 1;\n        }\n        return uniqueCounts;\n    }\n\n    export function filterMap<T, TMapped>(\n        source: T[],\n        predicateMapper: (item: T) => TMapped | null | undefined\n    ): TMapped[] {\n        return source.reduce(\n            (accumulator, current) => {\n                const mapped = predicateMapper(current);\n                if (mapped != null) {\n                    accumulator.push(mapped);\n                }\n                return accumulator;\n            },\n            [] as TMapped[]\n        );\n    }\n\n    export function filterMapAsync<T, TMapped>(\n        source: T[],\n        predicateMapper: (item: T) => Promise<TMapped | null | undefined>\n    ): Promise<TMapped[]> {\n        return source.reduce(\n            async (accumulator, current) => {\n                const mapped = await predicateMapper(current);\n                if (mapped != null) {\n                    accumulator.push(mapped);\n                }\n                return accumulator;\n            },\n            [] as any\n        );\n    }\n\n    export function groupBy<T>(source: T[], accessor: (item: T) => string): { [key: string]: T[] } {\n        return source.reduce((groupings, current) => {\n            const value = accessor(current);\n            groupings[value] = groupings[value] || [];\n            groupings[value].push(current);\n            return groupings;\n        }, Object.create(null));\n    }\n\n    export function groupByMap<TKey, TValue>(source: TValue[], accessor: (item: TValue) => TKey): Map<TKey, TValue[]> {\n        return source.reduce((groupings, current) => {\n            const value = accessor(current);\n            const group = groupings.get(value) || [];\n            groupings.set(value, group);\n            group.push(current);\n            return groupings;\n        }, new Map<TKey, TValue[]>());\n    }\n\n    export function groupByFilterMap<TKey, TValue, TMapped>(\n        source: TValue[],\n        accessor: (item: TValue) => TKey,\n        predicateMapper: (item: TValue) => TMapped | null | undefined\n    ): Map<TKey, TMapped[]> {\n        return source.reduce((groupings, current) => {\n            const mapped = predicateMapper(current);\n            if (mapped != null) {\n                const value = accessor(current);\n                const group = groupings.get(value) || [];\n                groupings.set(value, group);\n                group.push(mapped);\n            }\n            return groupings;\n        }, new Map<TKey, TMapped[]>());\n    }\n\n    export interface HierarchicalItem<T> {\n        name: string;\n        relativePath: string;\n        value?: T;\n\n        parent?: HierarchicalItem<T>;\n        children: Map<string, HierarchicalItem<T>> | undefined;\n        descendants: T[] | undefined;\n    }\n\n    export function makeHierarchical<T>(\n        values: T[],\n        splitPath: (i: T) => string[],\n        joinPath: (...paths: string[]) => string,\n        compact: boolean = false\n    ): HierarchicalItem<T> {\n        const seed = {\n            name: '',\n            relativePath: '',\n            children: new Map(),\n            descendants: []\n        };\n\n        const hierarchy = values.reduce((root: HierarchicalItem<T>, value) => {\n            let folder = root;\n\n            let relativePath = '';\n            for (const folderName of splitPath(value)) {\n                relativePath = joinPath(relativePath, folderName);\n\n                if (folder.children === undefined) {\n                    folder.children = new Map();\n                }\n\n                let f = folder.children!.get(folderName);\n                if (f === undefined) {\n                    f = {\n                        name: folderName,\n                        relativePath: relativePath,\n                        parent: folder,\n                        children: undefined,\n                        descendants: undefined\n                    };\n                    folder.children.set(folderName, f);\n                }\n\n                if (folder.descendants === undefined) {\n                    folder.descendants = [];\n                }\n                folder.descendants.push(value);\n                folder = f;\n            }\n\n            folder.value = value;\n\n            return root;\n        }, seed);\n\n        if (compact) return compactHierarchy(hierarchy, joinPath, true);\n        return hierarchy;\n    }\n\n    export function compactHierarchy<T>(\n        root: HierarchicalItem<T>,\n        joinPath: (...paths: string[]) => string,\n        isRoot: boolean = true\n    ): HierarchicalItem<T> {\n        if (root.children === undefined) return root;\n\n        const children = [...root.children.values()];\n\n        // Less nesting but duplicate roots\n        if (!isRoot && children.every(c => c.value === undefined)) {\n            const siblings = root.parent && root.parent.children;\n            if (siblings !== undefined) {\n                if (siblings.get(root.name) !== undefined) {\n                    siblings.delete(root.name);\n\n                    for (const child of children) {\n                        child.name = joinPath(root.name, child.name);\n                        siblings.set(child.name, child);\n                    }\n                }\n            }\n        }\n\n        for (const child of children) {\n            compactHierarchy(child, joinPath, false);\n        }\n\n        if (!isRoot && children.length === 1) {\n            const child = children[0];\n            if (child.value === undefined) {\n                root.name = joinPath(root.name, child.name);\n                root.relativePath = child.relativePath;\n                root.children = child.children;\n            }\n        }\n\n        return root;\n    }\n\n    export function uniqueBy<T>(source: T[], accessor: (item: T) => any, predicate?: (item: T) => boolean): T[] {\n        const uniqueValues = Object.create(null);\n        return source.filter(item => {\n            const value = accessor(item);\n            if (uniqueValues[value]) return false;\n\n            uniqueValues[value] = accessor;\n            return predicate ? predicate(item) : true;\n        });\n    }\n}\n","'use strict';\nimport * as dayjs from 'dayjs';\nimport * as advancedFormat from 'dayjs/plugin/advancedFormat';\nimport * as relativeTime from 'dayjs/plugin/relativeTime';\n\ndayjs.extend(advancedFormat);\ndayjs.extend(relativeTime);\n\nexport namespace Dates {\n    export const MillisecondsPerMinute = 60000; // 60 * 1000\n    export const MillisecondsPerHour = 3600000; // 60 * 60 * 1000\n    export const MillisecondsPerDay = 86400000; // 24 * 60 * 60 * 1000\n\n    export interface DateFormatter {\n        fromNow(): string;\n        format(format: string): string;\n    }\n\n    export function getFormatter(date: Date): DateFormatter {\n        return dayjs(date);\n    }\n}\n","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nexport default isObject;\n","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nexport default freeGlobal;\n","import freeGlobal from './_freeGlobal.js';\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nexport default root;\n","import root from './_root.js';\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\nexport default now;\n","import root from './_root.js';\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nexport default Symbol;\n","import Symbol from './_Symbol.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nexport default getRawTag;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nexport default objectToString;\n","import Symbol from './_Symbol.js';\nimport getRawTag from './_getRawTag.js';\nimport objectToString from './_objectToString.js';\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nexport default baseGetTag;\n","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nexport default isObjectLike;\n","import baseGetTag from './_baseGetTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\nexport default isSymbol;\n","import isObject from './isObject.js';\nimport isSymbol from './isSymbol.js';\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nexport default toNumber;\n","import isObject from './isObject.js';\nimport now from './now.js';\nimport toNumber from './toNumber.js';\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        timeWaiting = wait - timeSinceLastCall;\n\n    return maxing\n      ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)\n      : timeWaiting;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\nexport default debounce;\n","import toNumber from './toNumber.js';\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0,\n    MAX_INTEGER = 1.7976931348623157e+308;\n\n/**\n * Converts `value` to a finite number.\n *\n * @static\n * @memberOf _\n * @since 4.12.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted number.\n * @example\n *\n * _.toFinite(3.2);\n * // => 3.2\n *\n * _.toFinite(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toFinite(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toFinite('3.2');\n * // => 3.2\n */\nfunction toFinite(value) {\n  if (!value) {\n    return value === 0 ? value : 0;\n  }\n  value = toNumber(value);\n  if (value === INFINITY || value === -INFINITY) {\n    var sign = (value < 0 ? -1 : 1);\n    return sign * MAX_INTEGER;\n  }\n  return value === value ? value : 0;\n}\n\nexport default toFinite;\n","import toFinite from './toFinite.js';\n\n/**\n * Converts `value` to an integer.\n *\n * **Note:** This method is loosely based on\n * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.toInteger(3.2);\n * // => 3\n *\n * _.toInteger(Number.MIN_VALUE);\n * // => 0\n *\n * _.toInteger(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toInteger('3.2');\n * // => 3\n */\nfunction toInteger(value) {\n  var result = toFinite(value),\n      remainder = result % 1;\n\n  return result === result ? (remainder ? result - remainder : result) : 0;\n}\n\nexport default toInteger;\n","import toInteger from './toInteger.js';\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a function that invokes `func`, with the `this` binding and arguments\n * of the created function, while it's called less than `n` times. Subsequent\n * calls to the created function return the result of the last `func` invocation.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Function\n * @param {number} n The number of calls at which `func` is no longer invoked.\n * @param {Function} func The function to restrict.\n * @returns {Function} Returns the new restricted function.\n * @example\n *\n * jQuery(element).on('click', _.before(5, addContactToList));\n * // => Allows adding up to 4 contacts to the list.\n */\nfunction before(n, func) {\n  var result;\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  n = toInteger(n);\n  return function() {\n    if (--n > 0) {\n      result = func.apply(this, arguments);\n    }\n    if (n <= 1) {\n      func = undefined;\n    }\n    return result;\n  };\n}\n\nexport default before;\n","import before from './before.js';\n\n/**\n * Creates a function that is restricted to invoking `func` once. Repeat calls\n * to the function return the value of the first invocation. The `func` is\n * invoked with the `this` binding and arguments of the created function.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to restrict.\n * @returns {Function} Returns the new restricted function.\n * @example\n *\n * var initialize = _.once(createApplication);\n * initialize();\n * initialize();\n * // => `createApplication` is invoked once\n */\nfunction once(func) {\n  return before(2, func);\n}\n\nexport default once;\n","'use strict';\nimport { debounce as _debounce, once as _once } from 'lodash-es';\nimport { CancellationToken, Disposable } from 'vscode';\n\nexport interface Deferrable {\n    cancel(): void;\n    flush(...args: any[]): void;\n    pending?(): boolean;\n}\n\ninterface PropOfValue {\n    (): any;\n    value: string | undefined;\n}\n\nexport namespace Functions {\n    export function cachedOnce<T>(fn: (...args: any[]) => Promise<T>, seed: T): (...args: any[]) => Promise<T> {\n        let cached: T | undefined = seed;\n        return (...args: any[]) => {\n            if (cached !== undefined) {\n                const promise = Promise.resolve(cached);\n                cached = undefined;\n\n                return promise;\n            }\n            return fn(...args);\n        };\n    }\n\n    export function cancellable<T>(promise: Promise<T>, token: CancellationToken): Promise<T | undefined> {\n        return new Promise<T | undefined>((resolve, reject) => {\n            token.onCancellationRequested(() => resolve(undefined));\n\n            promise.then(resolve, reject);\n        });\n    }\n\n    export interface DebounceOptions {\n        leading?: boolean;\n        maxWait?: number;\n        track?: boolean;\n        trailing?: boolean;\n    }\n\n    export function debounce<T extends (...args: any[]) => any>(\n        fn: T,\n        wait?: number,\n        options?: DebounceOptions\n    ): T & Deferrable {\n        const { track, ...opts }: DebounceOptions = {\n            track: false,\n            ...(options || {})\n        };\n\n        if (track !== true) return _debounce(fn, wait, opts);\n\n        let pending = false;\n\n        const debounced = _debounce(\n            (function(this: any, ...args: any[]) {\n                pending = false;\n                return fn.apply(this, args);\n            } as any) as T,\n            wait,\n            options\n        ) as T & Deferrable;\n\n        const tracked = (function(this: any, ...args: any[]) {\n            pending = true;\n            return debounced.apply(this, args);\n        } as any) as T & Deferrable;\n\n        tracked.pending = function() {\n            return pending;\n        };\n        tracked.cancel = function() {\n            return debounced.cancel.apply(debounced);\n        };\n        tracked.flush = function(...args: any[]) {\n            // eslint-disable-next-line prefer-spread\n            return debounced.flush.apply(debounced, args);\n        };\n\n        return tracked;\n    }\n\n    const comma = ',';\n    const emptyStr = '';\n    const equals = '=';\n    const openBrace = '{';\n    const openParen = '(';\n    const closeParen = ')';\n\n    const fnBodyRegex = /\\(([\\s\\S]*)\\)/;\n    const fnBodyStripCommentsRegex = /(\\/\\*([\\s\\S]*?)\\*\\/|([^:]|^)\\/\\/(.*)$)/gm;\n    const fnBodyStripParamDefaultValueRegex = /\\s?=.*$/;\n\n    export function getParameters(fn: Function): string[] {\n        if (typeof fn !== 'function') throw new Error('Not supported');\n\n        if (fn.length === 0) return [];\n\n        let fnBody: string = Function.prototype.toString.call(fn);\n        fnBody = fnBody.replace(fnBodyStripCommentsRegex, emptyStr) || fnBody;\n        fnBody = fnBody.slice(0, fnBody.indexOf(openBrace));\n\n        let open = fnBody.indexOf(openParen);\n        let close = fnBody.indexOf(closeParen);\n\n        open = open >= 0 ? open + 1 : 0;\n        close = close > 0 ? close : fnBody.indexOf(equals);\n\n        fnBody = fnBody.slice(open, close);\n        fnBody = `(${fnBody})`;\n\n        const match = fnBody.match(fnBodyRegex);\n        return match != null\n            ? match[1].split(comma).map(param => param.trim().replace(fnBodyStripParamDefaultValueRegex, emptyStr))\n            : [];\n    }\n\n    export function is<T extends object>(o: object, prop: keyof T, value?: any): o is T;\n    export function is<T extends object>(o: object, matcher: (o: object) => boolean): o is T;\n    export function is<T extends object>(\n        o: object,\n        propOrMatcher: keyof T | ((o: any) => boolean),\n        value?: any\n    ): o is T {\n        if (typeof propOrMatcher === 'function') {\n            return propOrMatcher(o);\n        }\n\n        return value === undefined ? (o as any)[propOrMatcher] !== undefined : (o as any)[propOrMatcher] === value;\n    }\n\n    export function isPromise<T>(obj: T | Promise<T>): obj is Promise<T> {\n        return obj && typeof (obj as Promise<T>).then === 'function';\n    }\n\n    export function once<T extends (...args: any[]) => any>(fn: T): T {\n        return _once(fn);\n    }\n\n    export function propOf<T, K extends Extract<keyof T, string>>(o: T, key: K) {\n        const propOfCore = <T, K extends Extract<keyof T, string>>(o: T, key: K) => {\n            const value: string =\n                (propOfCore as PropOfValue).value === undefined ? key : `${(propOfCore as PropOfValue).value}.${key}`;\n            (propOfCore as PropOfValue).value = value;\n            const fn = <Y extends Extract<keyof T[K], string>>(k: Y) => propOfCore(o[key], k);\n            return Object.assign(fn, { value: value });\n        };\n        return propOfCore(o, key);\n    }\n\n    export function interval(fn: (...args: any[]) => void, ms: number): Disposable {\n        let timer: NodeJS.Timer | undefined;\n        const disposable = {\n            dispose: () => {\n                if (timer !== undefined) {\n                    clearInterval(timer);\n                    timer = undefined;\n                }\n            }\n        };\n        timer = setInterval(fn, ms);\n\n        return disposable;\n    }\n\n    export async function wait(ms: number) {\n        await new Promise(resolve => setTimeout(resolve, ms));\n    }\n\n    export async function waitUntil(fn: (...args: any[]) => boolean, timeout: number): Promise<boolean> {\n        const max = Math.round(timeout / 100);\n        let counter = 0;\n        while (true) {\n            if (fn()) return true;\n            if (counter > max) return false;\n\n            await wait(100);\n            counter++;\n        }\n    }\n}\n","'use strict';\nimport { Functions } from '../function';\n\nexport function gate() {\n    return (target: any, key: string, descriptor: PropertyDescriptor) => {\n        let fn: Function | undefined;\n        if (typeof descriptor.value === 'function') {\n            fn = descriptor.value;\n        }\n        else if (typeof descriptor.get === 'function') {\n            fn = descriptor.get;\n        }\n        if (fn == null) throw new Error('Not supported');\n\n        const gateKey = `$gate$${key}`;\n\n        descriptor.value = function(this: any, ...args: any[]) {\n            if (!this.hasOwnProperty(gateKey)) {\n                Object.defineProperty(this, gateKey, {\n                    configurable: false,\n                    enumerable: false,\n                    writable: true,\n                    value: undefined\n                });\n            }\n\n            let promise = this[gateKey];\n            if (promise === undefined) {\n                const result = fn!.apply(this, args);\n                if (result == null || !Functions.isPromise(result)) {\n                    return result;\n                }\n\n                this[gateKey] = promise = result.then((r: any) => {\n                    this[gateKey] = undefined;\n                    return r;\n                });\n            }\n\n            return promise;\n        };\n    };\n}\n","'use strict';\nimport { ExtensionContext, OutputChannel, Uri, window } from 'vscode';\nimport { extensionOutputChannelName } from './constants';\nimport { getCorrelationContext } from './system';\n// import { Telemetry } from './telemetry';\n\nconst emptyStr = '';\n\nexport enum TraceLevel {\n    Silent = 'silent',\n    Errors = 'errors',\n    Verbose = 'verbose',\n    Debug = 'debug'\n}\n\nconst ConsolePrefix = `[${extensionOutputChannelName}]`;\n\nconst isDebuggingRegex = /\\bgitlens\\b/i;\n\nexport interface LogCorrelationContext {\n    readonly correlationId?: number;\n    readonly prefix: string;\n    exitDetails?: string;\n}\n\nexport class Logger {\n    static output: OutputChannel | undefined;\n    static customLoggableFn: ((o: object) => string | undefined) | undefined;\n\n    static configure(context: ExtensionContext, level: TraceLevel, loggableFn?: (o: any) => string | undefined) {\n        this.customLoggableFn = loggableFn;\n\n        this.level = level;\n    }\n\n    private static _level: TraceLevel = TraceLevel.Silent;\n    static get level() {\n        return this._level;\n    }\n    static set level(value: TraceLevel) {\n        this._level = value;\n        if (value === TraceLevel.Silent) {\n            if (this.output !== undefined) {\n                this.output.dispose();\n                this.output = undefined;\n            }\n        }\n        else {\n            this.output = this.output || window.createOutputChannel(extensionOutputChannelName);\n        }\n    }\n\n    static debug(message: string, ...params: any[]): void;\n    static debug(context: LogCorrelationContext | undefined, message: string, ...params: any[]): void;\n    static debug(contextOrMessage: LogCorrelationContext | string | undefined, ...params: any[]): void {\n        if (this.level !== TraceLevel.Debug && !Logger.isDebugging) return;\n\n        let message;\n        if (typeof contextOrMessage === 'string') {\n            message = contextOrMessage;\n        }\n        else {\n            message = params.shift();\n\n            if (contextOrMessage !== undefined) {\n                message = `${contextOrMessage.prefix} ${message || emptyStr}`;\n            }\n        }\n\n        if (Logger.isDebugging) {\n            console.log(this.timestamp, ConsolePrefix, message || emptyStr, ...params);\n        }\n\n        if (this.output !== undefined && this.level === TraceLevel.Debug) {\n            this.output.appendLine(`${this.timestamp} ${message || emptyStr}${this.toLoggableParams(true, params)}`);\n        }\n    }\n\n    static error(ex: Error, message?: string, ...params: any[]): void;\n    static error(ex: Error, context?: LogCorrelationContext, message?: string, ...params: any[]): void;\n    static error(ex: Error, contextOrMessage: LogCorrelationContext | string | undefined, ...params: any[]): void {\n        if (this.level === TraceLevel.Silent && !Logger.isDebugging) return;\n\n        let message;\n        if (contextOrMessage === undefined || typeof contextOrMessage === 'string') {\n            message = contextOrMessage;\n        }\n        else {\n            message = params.shift();\n\n            if (contextOrMessage !== undefined) {\n                message = `${contextOrMessage.prefix} ${message || emptyStr}`;\n            }\n        }\n\n        if (message === undefined) {\n            const stack = ex.stack;\n            if (stack) {\n                const match = /.*\\s*?at\\s(.+?)\\s/.exec(stack);\n                if (match != null) {\n                    message = match[1];\n                }\n            }\n        }\n\n        if (Logger.isDebugging) {\n            console.error(this.timestamp, ConsolePrefix, message || emptyStr, ...params, ex);\n        }\n\n        if (this.output !== undefined && this.level !== TraceLevel.Silent) {\n            this.output.appendLine(\n                `${this.timestamp} ${message || emptyStr}${this.toLoggableParams(false, params)}\\n${ex}`\n            );\n        }\n\n        // Telemetry.trackException(ex);\n    }\n\n    static getCorrelationContext() {\n        return getCorrelationContext();\n    }\n\n    static log(message: string, ...params: any[]): void;\n    static log(context: LogCorrelationContext | undefined, message: string, ...params: any[]): void;\n    static log(contextOrMessage: LogCorrelationContext | string | undefined, ...params: any[]): void {\n        if (this.level !== TraceLevel.Verbose && this.level !== TraceLevel.Debug && !Logger.isDebugging) {\n            return;\n        }\n\n        let message;\n        if (typeof contextOrMessage === 'string') {\n            message = contextOrMessage;\n        }\n        else {\n            message = params.shift();\n\n            if (contextOrMessage !== undefined) {\n                message = `${contextOrMessage.prefix} ${message || emptyStr}`;\n            }\n        }\n\n        if (Logger.isDebugging) {\n            console.log(this.timestamp, ConsolePrefix, message || emptyStr, ...params);\n        }\n\n        if (this.output !== undefined && (this.level === TraceLevel.Verbose || this.level === TraceLevel.Debug)) {\n            this.output.appendLine(`${this.timestamp} ${message || emptyStr}${this.toLoggableParams(false, params)}`);\n        }\n    }\n\n    static logWithDebugParams(message: string, ...params: any[]): void;\n    static logWithDebugParams(context: LogCorrelationContext | undefined, message: string, ...params: any[]): void;\n    static logWithDebugParams(contextOrMessage: LogCorrelationContext | string | undefined, ...params: any[]): void {\n        if (this.level !== TraceLevel.Verbose && this.level !== TraceLevel.Debug && !Logger.isDebugging) {\n            return;\n        }\n\n        let message;\n        if (typeof contextOrMessage === 'string') {\n            message = contextOrMessage;\n        }\n        else {\n            message = params.shift();\n\n            if (contextOrMessage !== undefined) {\n                message = `${contextOrMessage.prefix} ${message || emptyStr}`;\n            }\n        }\n\n        if (Logger.isDebugging) {\n            console.log(this.timestamp, ConsolePrefix, message || emptyStr, ...params);\n        }\n\n        if (this.output !== undefined && (this.level === TraceLevel.Verbose || this.level === TraceLevel.Debug)) {\n            this.output.appendLine(`${this.timestamp} ${message || emptyStr}${this.toLoggableParams(true, params)}`);\n        }\n    }\n\n    static warn(message: string, ...params: any[]): void;\n    static warn(context: LogCorrelationContext | undefined, message: string, ...params: any[]): void;\n    static warn(contextOrMessage: LogCorrelationContext | string | undefined, ...params: any[]): void {\n        if (this.level === TraceLevel.Silent && !Logger.isDebugging) return;\n\n        let message;\n        if (typeof contextOrMessage === 'string') {\n            message = contextOrMessage;\n        }\n        else {\n            message = params.shift();\n\n            if (contextOrMessage !== undefined) {\n                message = `${contextOrMessage.prefix} ${message || emptyStr}`;\n            }\n        }\n\n        if (Logger.isDebugging) {\n            console.warn(this.timestamp, ConsolePrefix, message || emptyStr, ...params);\n        }\n\n        if (this.output !== undefined && this.level !== TraceLevel.Silent) {\n            this.output.appendLine(`${this.timestamp} ${message || emptyStr}${this.toLoggableParams(false, params)}`);\n        }\n    }\n\n    static showOutputChannel() {\n        if (this.output === undefined) return;\n\n        this.output.show();\n    }\n\n    static toLoggable(p: any, sanitize?: ((key: string, value: any) => any) | undefined) {\n        if (typeof p !== 'object') return String(p);\n        if (this.customLoggableFn !== undefined) {\n            const loggable = this.customLoggableFn(p);\n            if (loggable != null) return loggable;\n        }\n        if (p instanceof Uri) return `Uri(${p.toString(true)})`;\n\n        try {\n            return JSON.stringify(p, sanitize);\n        }\n        catch {\n            return '<error>';\n        }\n    }\n\n    static toLoggableName(instance: Function | object) {\n        let name;\n        if (typeof instance === 'function') {\n            if (instance.prototype == null || instance.prototype.constructor == null) {\n                return instance.name;\n            }\n\n            name = instance.prototype.constructor.name;\n        }\n        else {\n            name = instance.constructor != null ? instance.constructor.name : emptyStr;\n        }\n\n        // Strip webpack module name (since I never name classes with an _)\n        const index = name.indexOf('_');\n        return index === -1 ? name : name.substr(index + 1);\n    }\n\n    private static get timestamp(): string {\n        const now = new Date();\n        return `[${now\n            .toISOString()\n            .replace(/T/, ' ')\n            .replace(/\\..+/, emptyStr)}:${`00${now.getUTCMilliseconds()}`.slice(-3)}]`;\n    }\n\n    private static toLoggableParams(debugOnly: boolean, params: any[]) {\n        if (params.length === 0 || (debugOnly && this.level !== TraceLevel.Debug && !Logger.isDebugging)) {\n            return emptyStr;\n        }\n\n        const loggableParams = params.map(p => this.toLoggable(p)).join(', ');\n        return loggableParams.length !== 0 ? ` \\u2014 ${loggableParams}` : emptyStr;\n    }\n\n    private static _isDebugging: boolean | undefined;\n    static get isDebugging() {\n        if (this._isDebugging === undefined) {\n            const env = process.env;\n            this._isDebugging =\n                env && env.VSCODE_DEBUGGING_EXTENSION ? isDebuggingRegex.test(env.VSCODE_DEBUGGING_EXTENSION) : false;\n        }\n\n        return this._isDebugging;\n    }\n\n    static gitOutput: OutputChannel | undefined;\n\n    static logGitCommand(command: string, ex?: Error): void {\n        if (this.level !== TraceLevel.Debug) return;\n\n        if (this.gitOutput === undefined) {\n            this.gitOutput = window.createOutputChannel(`${extensionOutputChannelName} (Git)`);\n        }\n        this.gitOutput.appendLine(`${this.timestamp} ${command}${ex != null ? `\\n\\n${ex.toString()}` : emptyStr}`);\n    }\n}\n","'use strict';\nimport { LogCorrelationContext, Logger, TraceLevel } from '../../logger';\nimport { Functions } from '../function';\nimport { Strings } from '../string';\n\nconst emptyStr = '';\n\nconst correlationContext = new Map<number, LogCorrelationContext>();\nlet correlationCounter = 0;\n\nexport function getCorrelationContext() {\n    return correlationContext.get(correlationCounter);\n}\n\nexport function getCorrelationId() {\n    return correlationCounter;\n}\n\nfunction getNextCorrelationId() {\n    if (correlationCounter === Number.MAX_SAFE_INTEGER) {\n        correlationCounter = 0;\n    }\n    return ++correlationCounter;\n}\n\nfunction clearCorrelationContext(correlationId: number) {\n    correlationContext.delete(correlationId);\n}\n\nfunction setCorrelationContext(correlationId: number, context: LogCorrelationContext) {\n    correlationContext.set(correlationId, context);\n}\n\nexport interface LogContext<T> {\n    id: number;\n    instance: T;\n    instanceName: string;\n    name: string;\n    prefix: string;\n}\n\nexport const LogInstanceNameFn = Symbol('logInstanceNameFn');\n\nexport function logName<T>(fn: (c: T, name: string) => string) {\n    return (target: Function) => {\n        (target as any)[LogInstanceNameFn] = fn;\n    };\n}\n\nexport function debug<T extends (...arg: any) => any>(\n    options: {\n        args?: false | { [arg: string]: (arg: any) => string | false };\n        condition?(...args: Parameters<T>): boolean;\n        correlate?: boolean;\n        enter?(...args: Parameters<T>): string;\n        exit?(result: PromiseType<ReturnType<T>>): string;\n        prefix?(context: LogContext<T>, ...args: Parameters<T>): string;\n        sanitize?(key: string, value: any): any;\n        singleLine?: boolean;\n        timed?: boolean;\n    } = { timed: true }\n) {\n    return log<T>({ debug: true, ...options });\n}\n\ntype PromiseType<T> = T extends Promise<infer U> ? U : T;\n\nexport function log<T extends (...arg: any) => any>(\n    options: {\n        args?: false | { [arg: number]: (arg: any) => string | false };\n        condition?(...args: Parameters<T>): boolean;\n        correlate?: boolean;\n        debug?: boolean;\n        enter?(...args: Parameters<T>): string;\n        exit?(result: PromiseType<ReturnType<T>>): string;\n        prefix?(context: LogContext<T>, ...args: Parameters<T>): string;\n        sanitize?(key: string, value: any): any;\n        singleLine?: boolean;\n        timed?: boolean;\n    } = { timed: true }\n) {\n    options = { timed: true, ...options };\n\n    const logFn = (options.debug ? Logger.debug.bind(Logger) : Logger.log.bind(Logger)) as\n        | typeof Logger.debug\n        | typeof Logger.log;\n\n    return (target: any, key: string, descriptor: PropertyDescriptor) => {\n        let fn: Function | undefined;\n        if (typeof descriptor.value === 'function') {\n            fn = descriptor.value;\n        }\n        else if (typeof descriptor.get === 'function') {\n            fn = descriptor.get;\n        }\n        if (fn == null) throw new Error('Not supported');\n\n        const parameters = Functions.getParameters(fn);\n\n        descriptor.value = function(this: any, ...args: Parameters<T>) {\n            const correlationId = getNextCorrelationId();\n\n            if (\n                (!Logger.isDebugging &&\n                    Logger.level !== TraceLevel.Debug &&\n                    !(Logger.level === TraceLevel.Verbose && !options.debug)) ||\n                (typeof options.condition === 'function' && !options.condition(...args))\n            ) {\n                return fn!.apply(this, args);\n            }\n\n            let instanceName: string;\n            if (this != null) {\n                instanceName = Logger.toLoggableName(this);\n                if (this.constructor != null && this.constructor[LogInstanceNameFn]) {\n                    instanceName = target.constructor[LogInstanceNameFn](this, instanceName);\n                }\n            }\n            else {\n                instanceName = emptyStr;\n            }\n\n            let { correlate } = options;\n            if (!correlate && options.timed) {\n                correlate = true;\n            }\n\n            let prefix = `${correlate ? `[${correlationId.toString(16)}] ` : emptyStr}${\n                instanceName ? `${instanceName}.` : emptyStr\n            }${key}`;\n\n            if (options.prefix != null) {\n                prefix = options.prefix(\n                    {\n                        id: correlationId,\n                        instance: this,\n                        instanceName: instanceName,\n                        name: key,\n                        prefix: prefix\n                    },\n                    ...args\n                );\n            }\n\n            let correlationContext: LogCorrelationContext | undefined;\n            if (correlate) {\n                correlationContext = { correlationId: correlationId, prefix: prefix };\n                setCorrelationContext(correlationId, correlationContext);\n            }\n\n            const enter = options.enter != null ? options.enter(...args) : emptyStr;\n\n            let loggableParams: string;\n            if (options.args === false || args.length === 0) {\n                loggableParams = emptyStr;\n\n                if (!options.singleLine) {\n                    logFn(`${prefix}${enter}`);\n                }\n            }\n            else {\n                const argFns = typeof options.args === 'object' ? options.args : undefined;\n                let argFn;\n                let loggable;\n                loggableParams = args\n                    .map((v: any, index: number) => {\n                        const p = parameters[index];\n\n                        argFn = argFns !== undefined ? argFns[index] : undefined;\n                        if (argFn !== undefined) {\n                            loggable = argFn(v);\n                            if (loggable === false) return undefined;\n                        }\n                        else {\n                            loggable = Logger.toLoggable(v, options.sanitize);\n                        }\n\n                        return p ? `${p}=${loggable}` : loggable;\n                    })\n                    .filter(Boolean)\n                    .join(', ');\n\n                if (!options.singleLine) {\n                    if (!options.debug) {\n                        Logger.logWithDebugParams(`${prefix}${enter}`, loggableParams);\n                    }\n                    else {\n                        logFn(`${prefix}${enter}`, loggableParams);\n                    }\n                }\n            }\n\n            if (options.singleLine || options.timed || options.exit != null) {\n                const start = options.timed ? process.hrtime() : undefined;\n\n                const logError = (ex: Error) => {\n                    const timing =\n                        start !== undefined ? ` \\u2022 ${Strings.getDurationMilliseconds(start)} ms` : emptyStr;\n                    if (options.singleLine) {\n                        Logger.error(\n                            ex,\n                            `${prefix}${enter}`,\n                            `failed${\n                                correlationContext !== undefined && correlationContext.exitDetails\n                                    ? correlationContext.exitDetails\n                                    : emptyStr\n                            }${timing}`,\n                            loggableParams\n                        );\n                    }\n                    else {\n                        Logger.error(\n                            ex,\n                            prefix,\n                            `failed${\n                                correlationContext !== undefined && correlationContext.exitDetails\n                                    ? correlationContext.exitDetails\n                                    : emptyStr\n                            }${timing}`\n                        );\n                    }\n\n                    if (correlate) {\n                        clearCorrelationContext(correlationId);\n                    }\n                };\n\n                let result;\n                try {\n                    result = fn!.apply(this, args);\n                }\n                catch (ex) {\n                    logError(ex);\n                    throw ex;\n                }\n\n                const logResult = (r: any) => {\n                    const timing =\n                        start !== undefined ? ` \\u2022 ${Strings.getDurationMilliseconds(start)} ms` : emptyStr;\n                    let exit;\n                    if (options.exit != null) {\n                        try {\n                            exit = options.exit(r);\n                        }\n                        catch (ex) {\n                            exit = `@log.exit error: ${ex}`;\n                        }\n                    }\n                    else {\n                        exit = 'completed';\n                    }\n\n                    if (options.singleLine) {\n                        if (!options.debug) {\n                            Logger.logWithDebugParams(\n                                `${prefix}${enter} ${exit}${\n                                    correlationContext !== undefined && correlationContext.exitDetails\n                                        ? correlationContext.exitDetails\n                                        : emptyStr\n                                }${timing}`,\n                                loggableParams\n                            );\n                        }\n                        else {\n                            logFn(\n                                `${prefix}${enter} ${exit}${\n                                    correlationContext !== undefined && correlationContext.exitDetails\n                                        ? correlationContext.exitDetails\n                                        : emptyStr\n                                }${timing}`,\n                                loggableParams\n                            );\n                        }\n                    }\n                    else {\n                        logFn(\n                            `${prefix} ${exit}${\n                                correlationContext !== undefined && correlationContext.exitDetails\n                                    ? correlationContext.exitDetails\n                                    : emptyStr\n                            }${timing}`\n                        );\n                    }\n\n                    if (correlate) {\n                        clearCorrelationContext(correlationId);\n                    }\n                };\n\n                if (result != null && Functions.isPromise(result)) {\n                    const promise = result.then(logResult);\n                    promise.catch(logError);\n                }\n                else {\n                    logResult(result);\n                }\n\n                return result;\n            }\n\n            return fn!.apply(this, args);\n        };\n    };\n}\n","'use strict';\nimport { createHash, HexBase64Latin1Encoding } from 'crypto';\n\nconst emptyStr = '';\n\nexport namespace Strings {\n    export const enum CharCode {\n        /**\n         * The `/` character.\n         */\n        Slash = 47,\n        /**\n         * The `\\` character.\n         */\n        Backslash = 92\n    }\n\n    export function getCommonBase(s1: string, s2: string, delimiter: string) {\n        let char;\n        let index = 0;\n        for (let i = 0; i < s1.length; i++) {\n            char = s1[i];\n            if (char !== s2[i]) break;\n\n            if (char === delimiter) {\n                index = i;\n            }\n        }\n\n        return index > 0 ? s1.substring(0, index + 1) : undefined;\n    }\n\n    export function getDurationMilliseconds(start: [number, number]) {\n        const [secs, nanosecs] = process.hrtime(start);\n        return secs * 1000 + Math.floor(nanosecs / 1000000);\n    }\n\n    const pathNormalizeRegex = /\\\\/g;\n    const pathStripTrailingSlashRegex = /\\/$/g;\n    const tokenRegex = /\\$\\{(\\W*)?([^|]*?)(?:\\|(\\d+)(-|\\?)?)?(\\W*)?\\}/g;\n    const tokenSanitizeRegex = /\\$\\{(?:\\W*)?(\\w*?)(?:[\\W\\d]*)\\}/g;\n\n    export interface TokenOptions {\n        collapseWhitespace: boolean;\n        padDirection: 'left' | 'right';\n        prefix: string | undefined;\n        suffix: string | undefined;\n        truncateTo: number | undefined;\n    }\n\n    export function getTokensFromTemplate(template: string) {\n        const tokens: { key: string; options: TokenOptions }[] = [];\n\n        let match;\n        do {\n            match = tokenRegex.exec(template);\n            if (match == null) break;\n\n            const [, prefix, key, truncateTo, option, suffix] = match;\n            tokens.push({\n                key: key,\n                options: {\n                    collapseWhitespace: option === '?',\n                    padDirection: option === '-' ? 'left' : 'right',\n                    prefix: prefix,\n                    suffix: suffix,\n                    truncateTo: truncateTo == null ? undefined : parseInt(truncateTo, 10)\n                }\n            });\n        } while (match != null);\n\n        return tokens;\n    }\n\n    export function interpolate(template: string, context: object | undefined): string {\n        if (!template) return template;\n        if (context === undefined) return template.replace(tokenSanitizeRegex, emptyStr);\n\n        // eslint-disable-next-line no-template-curly-in-string\n        template = template.replace(tokenSanitizeRegex, '$${this.$1}');\n        return new Function(`return \\`${template}\\`;`).call(context);\n    }\n\n    export function* lines(s: string): IterableIterator<string> {\n        let i = 0;\n        while (i < s.length) {\n            let j = s.indexOf('\\n', i);\n            if (j === -1) {\n                j = s.length;\n            }\n\n            yield s.substring(i, j);\n            i = j + 1;\n        }\n    }\n\n    export function md5(s: string, encoding: HexBase64Latin1Encoding = 'base64'): string {\n        return createHash('md5')\n            .update(s)\n            .digest(encoding);\n    }\n\n    export function normalizePath(\n        fileName: string,\n        options: { addLeadingSlash?: boolean; stripTrailingSlash?: boolean } = { stripTrailingSlash: true }\n    ) {\n        if (fileName == null || fileName.length === 0) return fileName;\n\n        let normalized = fileName.replace(pathNormalizeRegex, '/');\n\n        const { addLeadingSlash, stripTrailingSlash } = { stripTrailingSlash: true, ...options };\n\n        if (stripTrailingSlash) {\n            normalized = normalized.replace(pathStripTrailingSlashRegex, emptyStr);\n        }\n\n        if (addLeadingSlash && normalized.charCodeAt(0) !== CharCode.Slash) {\n            normalized = `/${normalized}`;\n        }\n\n        return normalized;\n    }\n\n    export function pad(s: string, before: number = 0, after: number = 0, padding: string = '\\u00a0') {\n        if (before === 0 && after === 0) return s;\n\n        return `${before === 0 ? emptyStr : padding.repeat(before)}${s}${\n            after === 0 ? emptyStr : padding.repeat(after)\n        }`;\n    }\n\n    export function padLeft(s: string, padTo: number, padding: string = '\\u00a0', width?: number) {\n        const diff = padTo - (width || getWidth(s));\n        return diff <= 0 ? s : padding.repeat(diff) + s;\n    }\n\n    export function padLeftOrTruncate(s: string, max: number, padding?: string, width?: number) {\n        width = width || getWidth(s);\n        if (width < max) return padLeft(s, max, padding, width);\n        if (width > max) return truncate(s, max, undefined, width);\n        return s;\n    }\n\n    export function padRight(s: string, padTo: number, padding: string = '\\u00a0', width?: number) {\n        const diff = padTo - (width || getWidth(s));\n        return diff <= 0 ? s : s + padding.repeat(diff);\n    }\n\n    export function padOrTruncate(s: string, max: number, padding?: string, width?: number) {\n        const left = max < 0;\n        max = Math.abs(max);\n\n        width = width || getWidth(s);\n        if (width < max) return left ? padLeft(s, max, padding, width) : padRight(s, max, padding, width);\n        if (width > max) return truncate(s, max, undefined, width);\n        return s;\n    }\n\n    export function padRightOrTruncate(s: string, max: number, padding?: string, width?: number) {\n        width = width || getWidth(s);\n        if (width < max) return padRight(s, max, padding, width);\n        if (width > max) return truncate(s, max);\n        return s;\n    }\n\n    export function pluralize(\n        s: string,\n        count: number,\n        options?: { number?: string; plural?: string; suffix?: string; zero?: string }\n    ) {\n        if (options === undefined) return `${count} ${s}${count === 1 ? emptyStr : 's'}`;\n\n        return `${count === 0 ? options.zero || count : options.number || count} ${\n            count === 1 ? s : options.plural || `${s}${options.suffix || 's'}`\n        }`;\n    }\n\n    // Removes \\ / : * ? \" < > | and C0 and C1 control codes\n    // eslint-disable-next-line no-control-regex\n    const illegalCharsForFSRegex = /[\\\\/:*?\"<>|\\x00-\\x1f\\x80-\\x9f]/g;\n\n    export function sanitizeForFileSystem(s: string, replacement: string = '_') {\n        if (!s) return s;\n        return s.replace(illegalCharsForFSRegex, replacement);\n    }\n\n    export function sha1(s: string, encoding: HexBase64Latin1Encoding = 'base64'): string {\n        return createHash('sha1')\n            .update(s)\n            .digest(encoding);\n    }\n\n    export function splitSingle(s: string, splitter: string) {\n        const parts = s.split(splitter, 1);\n        const first = parts[0];\n        return first.length === s.length ? parts : [first, s.substr(first.length + 1)];\n    }\n\n    export function truncate(s: string, truncateTo: number, ellipsis: string = '\\u2026', width?: number) {\n        if (!s) return s;\n\n        width = width || getWidth(s);\n        if (width <= truncateTo) return s;\n        if (width === s.length) return `${s.substring(0, truncateTo - 1)}${ellipsis}`;\n\n        // Skip ahead to start as far as we can by assuming all the double-width characters won't be truncated\n        let chars = Math.floor(truncateTo / (width / s.length));\n        let count = getWidth(s.substring(0, chars));\n        while (count < truncateTo) {\n            count += getWidth(s[chars++]);\n        }\n\n        if (count >= truncateTo) {\n            chars--;\n        }\n\n        return `${s.substring(0, chars)}${ellipsis}`;\n    }\n\n    const ansiRegex = /[\\\\u001B\\\\u009B][[\\\\]()#;?]*(?:(?:(?:[a-zA-Z\\\\d]*(?:;[a-zA-Z\\\\d]*)*)?\\\\u0007)|(?:(?:\\\\d{1,4}(?:;\\\\d{0,4})*)?[\\\\dA-PRZcf-ntqry=><~]))/g;\n    const containsNonAsciiRegex = /[^\\x20-\\x7F\\u00a0\\u2026]/;\n\n    export function getWidth(s: string): number {\n        if (s == null || s.length === 0) return 0;\n\n        // Shortcut to avoid needless string `RegExp`s, replacements, and allocations\n        if (!containsNonAsciiRegex.test(s)) return s.length;\n\n        s = s.replace(ansiRegex, emptyStr);\n\n        let count = 0;\n        let emoji = 0;\n        let joiners = 0;\n\n        const graphemes = [...s];\n        for (let i = 0; i < graphemes.length; i++) {\n            const code = graphemes[i].codePointAt(0)!;\n\n            // Ignore control characters\n            if (code <= 0x1f || (code >= 0x7f && code <= 0x9f)) continue;\n\n            // Ignore combining characters\n            if (code >= 0x300 && code <= 0x36f) continue;\n\n            // https://stackoverflow.com/questions/30757193/find-out-if-character-in-string-is-emoji\n            if (\n                (code >= 0x1f600 && code <= 0x1f64f) || // Emoticons\n                (code >= 0x1f300 && code <= 0x1f5ff) || // Misc Symbols and Pictographs\n                (code >= 0x1f680 && code <= 0x1f6ff) || // Transport and Map\n                (code >= 0x2600 && code <= 0x26ff) || // Misc symbols\n                (code >= 0x2700 && code <= 0x27bf) || // Dingbats\n                (code >= 0xfe00 && code <= 0xfe0f) || // Variation Selectors\n                (code >= 0x1f900 && code <= 0x1f9ff) || // Supplemental Symbols and Pictographs\n                (code >= 65024 && code <= 65039) || // Variation selector\n                (code >= 8400 && code <= 8447) // Combining Diacritical Marks for Symbols\n            ) {\n                if (code >= 0x1f3fb && code <= 0x1f3ff) continue; // emoji modifier fitzpatrick type\n\n                emoji++;\n                count += 2;\n                continue;\n            }\n\n            // Ignore zero-width joiners '\\u200d'\n            if (code === 8205) {\n                joiners++;\n                count -= 2;\n                continue;\n            }\n\n            // Surrogates\n            if (code > 0xffff) {\n                i++;\n            }\n\n            count += isFullwidthCodePoint(code) ? 2 : 1;\n        }\n\n        const offset = emoji - joiners;\n        if (offset > 1) {\n            count += offset - 1;\n        }\n        return count;\n    }\n\n    function isFullwidthCodePoint(cp: number) {\n        // code points are derived from:\n        // http://www.unix.org/Public/UNIDATA/EastAsianWidth.txt\n        if (\n            cp >= 0x1100 &&\n            (cp <= 0x115f || // Hangul Jamo\n            cp === 0x2329 || // LEFT-POINTING ANGLE BRACKET\n            cp === 0x232a || // RIGHT-POINTING ANGLE BRACKET\n                // CJK Radicals Supplement .. Enclosed CJK Letters and Months\n                (cp >= 0x2e80 && cp <= 0x3247 && cp !== 0x303f) ||\n                // Enclosed CJK Letters and Months .. CJK Unified Ideographs Extension A\n                (cp >= 0x3250 && cp <= 0x4dbf) ||\n                // CJK Unified Ideographs .. Yi Radicals\n                (cp >= 0x4e00 && cp <= 0xa4c6) ||\n                // Hangul Jamo Extended-A\n                (cp >= 0xa960 && cp <= 0xa97c) ||\n                // Hangul Syllables\n                (cp >= 0xac00 && cp <= 0xd7a3) ||\n                // CJK Compatibility Ideographs\n                (cp >= 0xf900 && cp <= 0xfaff) ||\n                // Vertical Forms\n                (cp >= 0xfe10 && cp <= 0xfe19) ||\n                // CJK Compatibility Forms .. Small Form Variants\n                (cp >= 0xfe30 && cp <= 0xfe6b) ||\n                // Halfwidth and Fullwidth Forms\n                (cp >= 0xff01 && cp <= 0xff60) ||\n                (cp >= 0xffe0 && cp <= 0xffe6) ||\n                // Kana Supplement\n                (cp >= 0x1b000 && cp <= 0x1b001) ||\n                // Enclosed Ideographic Supplement\n                (cp >= 0x1f200 && cp <= 0x1f251) ||\n                // CJK Unified Ideographs Extension B .. Tertiary Ideographic Plane\n                (cp >= 0x20000 && cp <= 0x3fffd))\n        ) {\n            return true;\n        }\n\n        return false;\n    }\n}\n","'use strict';\n\nconst emptyStr = '';\n\nfunction defaultResolver(...args: any[]): string {\n    if (args.length === 1) {\n        const arg0 = args[0];\n        if (arg0 == null) return emptyStr;\n        if (typeof arg0 === 'string') return arg0;\n        if (typeof arg0 === 'number' || typeof arg0 === 'boolean') {\n            return String(arg0);\n        }\n\n        return JSON.stringify(arg0);\n    }\n\n    return JSON.stringify(args);\n}\n\nexport function memoize<T extends (...arg: any) => any>(resolver?: (...args: Parameters<T>) => string) {\n    return (target: any, key: string, descriptor: PropertyDescriptor & { [key: string]: any }) => {\n        let fn: Function | undefined;\n        let fnKey: string | undefined;\n\n        if (typeof descriptor.value === 'function') {\n            fn = descriptor.value;\n            fnKey = 'value';\n        }\n        else if (typeof descriptor.get === 'function') {\n            fn = descriptor.get;\n            fnKey = 'get';\n        }\n        else {\n            throw new Error('Not supported');\n        }\n\n        if (!fn || !fnKey) throw new Error('Not supported');\n\n        const memoizeKey = `$memoize$${key}`;\n\n        let result;\n        descriptor[fnKey] = function(...args: any[]) {\n            const prop =\n                fnKey === 'get' || args.length === 0\n                    ? memoizeKey\n                    : `${memoizeKey}$${(resolver || defaultResolver)(...(args as Parameters<T>))}`;\n\n            if (this.hasOwnProperty(prop)) {\n                result = this[prop];\n\n                return result;\n            }\n\n            result = fn!.apply(this, args);\n            Object.defineProperty(this, prop, {\n                configurable: false,\n                enumerable: false,\n                writable: false,\n                value: result\n            });\n\n            return result;\n        };\n    };\n}\n","'use strict';\n\nexport namespace Iterables {\n    export function count<T>(source: Iterable<T> | IterableIterator<T>, predicate?: (item: T) => boolean): number {\n        let count = 0;\n        let next: IteratorResult<T>;\n\n        while (true) {\n            next = (source as IterableIterator<T>).next();\n            if (next.done) break;\n\n            if (predicate === undefined || predicate(next.value)) {\n                count++;\n            }\n        }\n\n        return count;\n    }\n\n    export function every<T>(source: Iterable<T> | IterableIterator<T>, predicate: (item: T) => boolean): boolean {\n        for (const item of source) {\n            if (!predicate(item)) return false;\n        }\n        return true;\n    }\n\n    export function filter<T>(\n        source: Iterable<T | undefined | null> | IterableIterator<T | undefined | null>\n    ): Iterable<T>;\n    export function filter<T>(source: Iterable<T> | IterableIterator<T>, predicate: (item: T) => boolean): Iterable<T>;\n    export function* filter<T>(\n        source: Iterable<T> | IterableIterator<T>,\n        predicate?: (item: T) => boolean\n    ): Iterable<T> {\n        if (predicate === undefined) {\n            for (const item of source) {\n                if (item != null) yield item;\n            }\n        }\n        else {\n            for (const item of source) {\n                if (predicate(item)) yield item;\n            }\n        }\n    }\n\n    export function* filterMap<T, TMapped>(\n        source: Iterable<T> | IterableIterator<T>,\n        predicateMapper: (item: T) => TMapped | undefined | null\n    ): Iterable<TMapped> {\n        for (const item of source) {\n            const mapped = predicateMapper(item);\n            if (mapped != null) yield mapped;\n        }\n    }\n\n    export function forEach<T>(source: Iterable<T> | IterableIterator<T>, fn: (item: T, index: number) => void): void {\n        let i = 0;\n        for (const item of source) {\n            fn(item, i);\n            i++;\n        }\n    }\n\n    export function find<T>(source: Iterable<T> | IterableIterator<T>, predicate: (item: T) => boolean): T | null {\n        for (const item of source) {\n            if (predicate(item)) return item;\n        }\n        return null;\n    }\n\n    export function first<T>(source: Iterable<T>): T {\n        return source[Symbol.iterator]().next().value;\n    }\n\n    export function* flatMap<T, TMapped>(\n        source: Iterable<T> | IterableIterator<T>,\n        mapper: (item: T) => Iterable<TMapped>\n    ): Iterable<TMapped> {\n        for (const item of source) {\n            yield* mapper(item);\n        }\n    }\n\n    export function has<T>(source: Iterable<T> | IterableIterator<T>, item: T): boolean {\n        return some(source, i => i === item);\n    }\n\n    export function isIterable(source: Iterable<any>): boolean {\n        return typeof source[Symbol.iterator] === 'function';\n    }\n\n    export function join(source: Iterable<any>, separator: string): string {\n        let value = '';\n\n        const iterator = source[Symbol.iterator]();\n        let next = iterator.next();\n        if (next.done) return value;\n\n        while (true) {\n            const s = next.value.toString();\n\n            next = iterator.next();\n            if (next.done) {\n                value += s;\n                break;\n            }\n\n            value += `${s}${separator}`;\n        }\n\n        return value;\n    }\n\n    export function last<T>(source: Iterable<T>): T | undefined {\n        let item: T | undefined;\n        for (item of source) {\n            /* noop */\n        }\n        return item;\n    }\n\n    export function* map<T, TMapped>(\n        source: Iterable<T> | IterableIterator<T>,\n        mapper: (item: T) => TMapped\n    ): Iterable<TMapped> {\n        for (const item of source) {\n            yield mapper(item);\n        }\n    }\n\n    export function next<T>(source: IterableIterator<T>): T {\n        return source.next().value;\n    }\n\n    export function* skip<T>(source: Iterable<T> | IterableIterator<T>, count: number): IterableIterator<T> {\n        let i = 0;\n        for (const item of source) {\n            if (i >= count) yield item;\n            i++;\n        }\n    }\n\n    export function some<T>(source: Iterable<T> | IterableIterator<T>, predicate: (item: T) => boolean): boolean {\n        for (const item of source) {\n            if (predicate(item)) return true;\n        }\n        return false;\n    }\n\n    export function* take<T>(source: Iterable<T> | IterableIterator<T>, count: number): Iterable<T> {\n        if (count > 0) {\n            let i = 0;\n            for (const item of source) {\n                yield item;\n                i++;\n                if (i >= count) break;\n            }\n        }\n    }\n\n    export function* union<T>(...sources: (Iterable<T> | IterableIterator<T>)[]): Iterable<T> {\n        for (const source of sources) {\n            for (const item of source) {\n                yield item;\n            }\n        }\n    }\n}\n","'use strict';\n\nexport namespace Objects {\n    export function entries<T>(o: { [key: string]: T }): IterableIterator<[string, T]>;\n    export function entries<T>(o: { [key: number]: T }): IterableIterator<[string, T]>;\n    export function* entries<T>(o: any): IterableIterator<[string, T]> {\n        for (const key in o) {\n            yield [key, o[key]];\n        }\n    }\n\n    export function flatten(o: any, prefix: string = '', stringify: boolean = false): { [key: string]: any } {\n        const flattened = Object.create(null);\n        _flatten(flattened, prefix, o, stringify);\n        return flattened;\n    }\n\n    function _flatten(flattened: { [key: string]: any }, key: string, value: any, stringify: boolean = false) {\n        if (Object(value) !== value) {\n            if (stringify) {\n                if (value == null) {\n                    flattened[key] = null;\n                }\n                else if (typeof value === 'string') {\n                    flattened[key] = value;\n                }\n                else {\n                    flattened[key] = JSON.stringify(value);\n                }\n            }\n            else {\n                flattened[key] = value;\n            }\n        }\n        else if (Array.isArray(value)) {\n            const len = value.length;\n            for (let i = 0; i < len; i++) {\n                _flatten(flattened, `${key}[${i}]`, value[i], stringify);\n            }\n            if (len === 0) {\n                flattened[key] = null;\n            }\n        }\n        else {\n            let isEmpty = true;\n            for (const p in value) {\n                isEmpty = false;\n                _flatten(flattened, key ? `${key}.${p}` : p, value[p], stringify);\n            }\n            if (isEmpty && key) {\n                flattened[key] = null;\n            }\n        }\n    }\n\n    export function paths(o: { [key: string]: any }, path?: string): string[] {\n        const results = [];\n\n        for (const key in o) {\n            const child = o[key];\n            if (typeof child === 'object') {\n                results.push(...paths(child, path === undefined ? key : `${path}.${key}`));\n            }\n            else {\n                results.push(path === undefined ? key : `${path}.${key}`);\n            }\n        }\n\n        return results;\n    }\n\n    export function values<T>(o: { [key: string]: T }): IterableIterator<T>;\n    export function values<T>(o: { [key: number]: T }): IterableIterator<T>;\n    export function* values<T>(o: any): IterableIterator<T> {\n        for (const key in o) {\n            yield o[key];\n        }\n    }\n}\n","'use strict';\nimport { Iterables } from './iterable';\nimport { Strings } from './string';\n\n// Code stolen from https://github.com/Microsoft/vscode/blob/b3e6d5bb039a4a9362b52a2c8726267ca68cf64e/src/vs/base/common/map.ts#L352\n\nconst FIN = { done: true, value: undefined };\n\n// eslint-disable-next-line @typescript-eslint/interface-name-prefix\nexport interface IKeyIterator {\n    reset(key: string): this;\n    next(): this;\n\n    hasNext(): boolean;\n    cmp(a: string): number;\n    value(): string;\n}\n\nexport class StringIterator implements IKeyIterator {\n    private _value: string = '';\n    private _pos: number = 0;\n\n    reset(key: string): this {\n        this._value = key;\n        this._pos = 0;\n        return this;\n    }\n\n    next(): this {\n        this._pos += 1;\n        return this;\n    }\n\n    hasNext(): boolean {\n        return this._pos < this._value.length - 1;\n    }\n\n    cmp(a: string): number {\n        const aCode = a.charCodeAt(0);\n        const thisCode = this._value.charCodeAt(this._pos);\n        return aCode - thisCode;\n    }\n\n    value(): string {\n        return this._value[this._pos];\n    }\n}\n\nexport class PathIterator implements IKeyIterator {\n    private _value!: string;\n    private _from!: number;\n    private _to!: number;\n\n    reset(key: string): this {\n        this._value = key.replace(/\\\\$|\\/$/, '');\n        this._from = 0;\n        this._to = 0;\n        return this.next();\n    }\n\n    hasNext(): boolean {\n        return this._to < this._value.length;\n    }\n\n    next(): this {\n        // this._data = key.split(/[\\\\/]/).filter(s => !!s);\n        this._from = this._to;\n        let justSeps = true;\n        for (; this._to < this._value.length; this._to++) {\n            const ch = this._value.charCodeAt(this._to);\n            if (ch === Strings.CharCode.Slash || ch === Strings.CharCode.Backslash) {\n                if (justSeps) {\n                    this._from++;\n                }\n                else {\n                    break;\n                }\n            }\n            else {\n                justSeps = false;\n            }\n        }\n        return this;\n    }\n\n    cmp(a: string): number {\n        let aPos = 0;\n        const aLen = a.length;\n        let thisPos = this._from;\n\n        while (aPos < aLen && thisPos < this._to) {\n            const cmp = a.charCodeAt(aPos) - this._value.charCodeAt(thisPos);\n            if (cmp !== 0) {\n                return cmp;\n            }\n\n            aPos += 1;\n            thisPos += 1;\n        }\n\n        if (aLen === this._to - this._from) {\n            return 0;\n        }\n\n        if (aPos < aLen) {\n            return -1;\n        }\n\n        return 1;\n    }\n\n    value(): string {\n        return this._value.substring(this._from, this._to);\n    }\n}\n\nclass TernarySearchTreeNode<E> {\n    segment!: string;\n    value: E | undefined;\n    key!: string;\n    left: TernarySearchTreeNode<E> | undefined;\n    mid: TernarySearchTreeNode<E> | undefined;\n    right: TernarySearchTreeNode<E> | undefined;\n\n    isEmpty(): boolean {\n        return !this.left && !this.mid && !this.right && !this.value;\n    }\n}\n\nexport class TernarySearchTree<E> {\n    static forPaths<E>(): TernarySearchTree<E> {\n        return new TernarySearchTree<E>(new PathIterator());\n    }\n\n    static forStrings<E>(): TernarySearchTree<E> {\n        return new TernarySearchTree<E>(new StringIterator());\n    }\n\n    private _iter: IKeyIterator;\n    private _root: TernarySearchTreeNode<E> | undefined;\n\n    constructor(segments: IKeyIterator) {\n        this._iter = segments;\n    }\n\n    clear(): void {\n        this._root = undefined;\n    }\n\n    set(key: string, element: E): E | undefined {\n        const iter = this._iter.reset(key);\n        let node: TernarySearchTreeNode<E>;\n\n        if (!this._root) {\n            this._root = new TernarySearchTreeNode<E>();\n            this._root.segment = iter.value();\n        }\n\n        node = this._root;\n        while (true) {\n            const val = iter.cmp(node.segment);\n            if (val > 0) {\n                // left\n                if (!node.left) {\n                    node.left = new TernarySearchTreeNode<E>();\n                    node.left.segment = iter.value();\n                }\n                node = node.left;\n            }\n            else if (val < 0) {\n                // right\n                if (!node.right) {\n                    node.right = new TernarySearchTreeNode<E>();\n                    node.right.segment = iter.value();\n                }\n                node = node.right;\n            }\n            else if (iter.hasNext()) {\n                // mid\n                iter.next();\n                if (!node.mid) {\n                    node.mid = new TernarySearchTreeNode<E>();\n                    node.mid.segment = iter.value();\n                }\n                node = node.mid;\n            }\n            else {\n                break;\n            }\n        }\n        const oldElement = node.value;\n        node.value = element;\n        node.key = key;\n        return oldElement;\n    }\n\n    get(key: string): E | undefined {\n        const iter = this._iter.reset(key);\n        let node = this._root;\n        while (node) {\n            const val = iter.cmp(node.segment);\n            if (val > 0) {\n                // left\n                node = node.left;\n            }\n            else if (val < 0) {\n                // right\n                node = node.right;\n            }\n            else if (iter.hasNext()) {\n                // mid\n                iter.next();\n                node = node.mid;\n            }\n            else {\n                break;\n            }\n        }\n        return node ? node.value : undefined;\n    }\n\n    delete(key: string): void {\n        const iter = this._iter.reset(key);\n        const stack: [-1 | 0 | 1, TernarySearchTreeNode<E>][] = [];\n        let node = this._root;\n\n        // find and unset node\n        while (node) {\n            const val = iter.cmp(node.segment);\n            if (val > 0) {\n                // left\n                stack.push([1, node]);\n                node = node.left;\n            }\n            else if (val < 0) {\n                // right\n                stack.push([-1, node]);\n                node = node.right;\n            }\n            else if (iter.hasNext()) {\n                // mid\n                iter.next();\n                stack.push([0, node]);\n                node = node.mid;\n            }\n            else {\n                // remove element\n                node.value = undefined;\n\n                // clean up empty nodes\n                while (stack.length > 0 && node.isEmpty()) {\n                    const [dir, parent] = stack.pop()!;\n                    switch (dir) {\n                        case 1:\n                            parent.left = undefined;\n                            break;\n                        case 0:\n                            parent.mid = undefined;\n                            break;\n                        case -1:\n                            parent.right = undefined;\n                            break;\n                    }\n                    node = parent;\n                }\n                break;\n            }\n        }\n    }\n\n    findSubstr(key: string): E | undefined {\n        const iter = this._iter.reset(key);\n        let node = this._root;\n        let candidate: E | undefined;\n        while (node) {\n            const val = iter.cmp(node.segment);\n            if (val > 0) {\n                // left\n                node = node.left;\n            }\n            else if (val < 0) {\n                // right\n                node = node.right;\n            }\n            else if (iter.hasNext()) {\n                // mid\n                iter.next();\n                candidate = node.value || candidate;\n                node = node.mid;\n            }\n            else {\n                break;\n            }\n        }\n        return (node && node.value) || candidate;\n    }\n\n    findSuperstr(key: string, limit: boolean = false): Iterable<E> | undefined {\n        const iter = this._iter.reset(key);\n        let node = this._root;\n        while (node) {\n            const val = iter.cmp(node.segment);\n            if (val > 0) {\n                // left\n                node = node.left;\n            }\n            else if (val < 0) {\n                // right\n                node = node.right;\n            }\n            else if (iter.hasNext()) {\n                // mid\n                iter.next();\n                node = node.mid;\n            }\n            else {\n                // collect\n                if (!node.mid) {\n                    return undefined;\n                }\n\n                node = node.mid;\n                return {\n                    // eslint-disable-next-line no-loop-func\n                    [Symbol.iterator]: () => this._nodeIterator(node!, limit)\n                };\n            }\n        }\n        return undefined;\n    }\n\n    private _nodeIterator(node: TernarySearchTreeNode<E>, limit: boolean = false): Iterator<E> {\n        let res: { done: false; value: E };\n        let idx: number;\n        let data: E[];\n        const next = (): IteratorResult<E> => {\n            if (!data) {\n                // lazy till first invocation\n                data = [];\n                idx = 0;\n                this._forEach(node, value => data.push(value), limit);\n            }\n            if (idx >= data.length) {\n                return (FIN as unknown) as IteratorResult<E>;\n            }\n\n            if (!res) {\n                res = { done: false, value: data[idx++] };\n            }\n            else {\n                res.value = data[idx++];\n            }\n            return res;\n        };\n        return { next: next };\n    }\n\n    forEach(callback: (value: E, index: string) => any) {\n        this._forEach(this._root, callback);\n    }\n\n    private _forEach(\n        node: TernarySearchTreeNode<E> | undefined,\n        callback: (value: E, index: string) => any,\n        limit: boolean = false\n    ) {\n        if (node === undefined) return;\n\n        // left\n        this._forEach(node.left, callback, limit);\n\n        // node\n        if (node.value) {\n            callback(node.value, node.key);\n        }\n\n        if (!limit) {\n            // mid\n            this._forEach(node.mid, callback, limit);\n        }\n\n        // right\n        this._forEach(node.right, callback, limit);\n    }\n\n    any(): boolean {\n        return this._root !== undefined && !this._root.isEmpty();\n    }\n\n    count(predicate?: (entry: E) => boolean): number {\n        if (this._root === undefined || this._root.isEmpty()) return 0;\n\n        return Iterables.count(this.entries(), predicate === undefined ? undefined : ([e]) => predicate(e));\n    }\n\n    entries(): Iterable<[E, string]> {\n        return this._iterator(this._root);\n    }\n\n    values(): Iterable<E> {\n        return Iterables.map(this.entries(), ([e]) => e);\n    }\n\n    highlander(): [E, string] | undefined {\n        if (this._root === undefined || this._root.isEmpty()) return undefined;\n\n        const entries = this.entries() as IterableIterator<[E, string]>;\n\n        let count = 0;\n        let next: IteratorResult<[E, string]>;\n        let value: [E, string] | undefined;\n\n        while (true) {\n            next = entries.next();\n            if (next.done) break;\n\n            value = next.value;\n\n            count++;\n            if (count > 1) return undefined;\n        }\n\n        return value;\n    }\n\n    some(predicate: (entry: E) => boolean): boolean {\n        if (this._root === undefined || this._root.isEmpty()) return false;\n\n        return Iterables.some(this.entries(), ([e]) => predicate(e));\n    }\n\n    private *_iterator(node: TernarySearchTreeNode<E> | undefined): IterableIterator<[E, string]> {\n        if (node !== undefined) {\n            // left\n            yield* this._iterator(node.left);\n\n            // node\n            if (node.value) {\n                yield [node.value, node.key];\n            }\n\n            // mid\n            yield* this._iterator(node.mid);\n\n            // right\n            yield* this._iterator(node.right);\n        }\n    }\n}\n","'use strict';\n\nexport namespace Versions {\n    declare type VersionComparisonResult = -1 | 0 | 1;\n\n    export interface Version {\n        major: number;\n        minor: number;\n        patch: number;\n        pre?: string;\n    }\n\n    export function compare(v1: Version, v2: Version): VersionComparisonResult {\n        if (v1.major > v2.major) return 1;\n        if (v1.major < v2.major) return -1;\n\n        if (v1.minor > v2.minor) return 1;\n        if (v1.minor < v2.minor) return -1;\n\n        if (v1.patch > v2.patch) return 1;\n        if (v1.patch < v2.patch) return -1;\n\n        if (v1.pre === undefined && v2.pre !== undefined) return 1;\n        if (v1.pre !== undefined && v2.pre === undefined) return -1;\n\n        if (v1.pre !== undefined && v2.pre !== undefined) {\n            return v1.pre.localeCompare(v2.pre) as VersionComparisonResult;\n        }\n\n        return 0;\n    }\n\n    export function from(\n        major: string | number,\n        minor: string | number,\n        patch: string | number,\n        pre?: string\n    ): Version {\n        return {\n            major: typeof major === 'string' ? parseInt(major, 10) : major,\n            minor: typeof minor === 'string' ? parseInt(minor, 10) : minor,\n            patch: typeof patch === 'string' ? parseInt(patch, 10) : patch,\n            pre: pre\n        };\n    }\n\n    export function fromString(version: string): Version {\n        const [ver, pre] = version.split('-');\n        const [major, minor, patch] = ver.split('.');\n        return from(major, minor, patch, pre);\n    }\n}\n","'use strict';\nexport * from './config';\n\nimport {\n    ConfigurationChangeEvent,\n    ConfigurationTarget,\n    Event,\n    EventEmitter,\n    ExtensionContext,\n    Uri,\n    workspace\n} from 'vscode';\nimport { Config } from './config';\nimport { extensionId } from './constants';\nimport { Functions } from './system';\n\n// eslint-disable-next-line @typescript-eslint/no-object-literal-type-assertion\nconst emptyConfig: Config = new Proxy<Config>({} as Config, {\n    get: function() {\n        return emptyConfig;\n    }\n});\n\nexport interface ConfigurationWillChangeEvent {\n    change: ConfigurationChangeEvent;\n    transform?(e: ConfigurationChangeEvent): ConfigurationChangeEvent;\n}\n\nexport class Configuration {\n    static configure(context: ExtensionContext) {\n        context.subscriptions.push(\n            workspace.onDidChangeConfiguration(configuration.onConfigurationChanged, configuration)\n        );\n    }\n\n    private _onDidChange = new EventEmitter<ConfigurationChangeEvent>();\n    get onDidChange(): Event<ConfigurationChangeEvent> {\n        return this._onDidChange.event;\n    }\n\n    private _onWillChange = new EventEmitter<ConfigurationWillChangeEvent>();\n    get onWillChange(): Event<ConfigurationWillChangeEvent> {\n        return this._onWillChange.event;\n    }\n\n    private onConfigurationChanged(e: ConfigurationChangeEvent) {\n        if (!e.affectsConfiguration(extensionId, null!)) return;\n\n        const evt: ConfigurationWillChangeEvent = {\n            change: e\n        };\n        this._onWillChange.fire(evt);\n\n        if (evt.transform !== undefined) {\n            e = evt.transform(e);\n        }\n\n        this._onDidChange.fire(e);\n    }\n\n    readonly initializingChangeEvent: ConfigurationChangeEvent = {\n        affectsConfiguration: (section: string, resource?: Uri) => true\n    };\n\n    get<T>(section?: string, resource?: Uri | null, defaultValue?: T) {\n        return defaultValue === undefined\n            ? workspace\n                  .getConfiguration(section === undefined ? undefined : extensionId, resource!)\n                  .get<T>(section === undefined ? extensionId : section)!\n            : workspace\n                  .getConfiguration(section === undefined ? undefined : extensionId, resource!)\n                  .get<T>(section === undefined ? extensionId : section, defaultValue)!;\n    }\n\n    changed(e: ConfigurationChangeEvent, section: string, resource?: Uri | null) {\n        return e.affectsConfiguration(`${extensionId}.${section}`, resource!);\n    }\n\n    initializing(e: ConfigurationChangeEvent) {\n        return e === this.initializingChangeEvent;\n    }\n\n    inspect(section?: string, resource?: Uri | null) {\n        return workspace\n            .getConfiguration(section === undefined ? undefined : extensionId, resource!)\n            .inspect(section === undefined ? extensionId : section);\n    }\n\n    async migrate<TFrom, TTo>(\n        from: string,\n        to: string,\n        options: { fallbackValue?: TTo; migrationFn?(value: TFrom): TTo } = {}\n    ): Promise<boolean> {\n        const inspection = configuration.inspect(from);\n        if (inspection === undefined) return false;\n\n        let migrated = false;\n        if (inspection.globalValue !== undefined) {\n            await this.update(\n                to,\n                options.migrationFn ? options.migrationFn(inspection.globalValue as TFrom) : inspection.globalValue,\n                ConfigurationTarget.Global\n            );\n            migrated = true;\n            // Can't delete the old setting currently because it errors with `Unable to write to User Settings because <setting name> is not a registered configuration`\n            // if (from !== to) {\n            //     try {\n            //         await this.update(from, undefined, ConfigurationTarget.Global);\n            //     }\n            //     catch { }\n            // }\n        }\n\n        if (inspection.workspaceValue !== undefined) {\n            await this.update(\n                to,\n                options.migrationFn\n                    ? options.migrationFn(inspection.workspaceValue as TFrom)\n                    : inspection.workspaceValue,\n                ConfigurationTarget.Workspace\n            );\n            migrated = true;\n            // Can't delete the old setting currently because it errors with `Unable to write to User Settings because <setting name> is not a registered configuration`\n            // if (from !== to) {\n            //     try {\n            //         await this.update(from, undefined, ConfigurationTarget.Workspace);\n            //     }\n            //     catch { }\n            // }\n        }\n\n        if (inspection.workspaceFolderValue !== undefined) {\n            await this.update(\n                to,\n                options.migrationFn\n                    ? options.migrationFn(inspection.workspaceFolderValue as TFrom)\n                    : inspection.workspaceFolderValue,\n                ConfigurationTarget.WorkspaceFolder\n            );\n            migrated = true;\n            // Can't delete the old setting currently because it errors with `Unable to write to User Settings because <setting name> is not a registered configuration`\n            // if (from !== to) {\n            //     try {\n            //         await this.update(from, undefined, ConfigurationTarget.WorkspaceFolder);\n            //     }\n            //     catch { }\n            // }\n        }\n\n        if (!migrated && options.fallbackValue !== undefined) {\n            await this.update(to, options.fallbackValue, ConfigurationTarget.Global);\n            migrated = true;\n        }\n\n        return migrated;\n    }\n\n    async migrateIfMissing<TFrom, TTo>(from: string, to: string, options: { migrationFn?(value: TFrom): TTo } = {}) {\n        const fromInspection = configuration.inspect(from);\n        if (fromInspection === undefined) return;\n\n        const toInspection = configuration.inspect(to);\n        if (fromInspection.globalValue !== undefined) {\n            if (toInspection === undefined || toInspection.globalValue === undefined) {\n                await this.update(\n                    to,\n                    options.migrationFn\n                        ? options.migrationFn(fromInspection.globalValue as TFrom)\n                        : fromInspection.globalValue,\n                    ConfigurationTarget.Global\n                );\n                // Can't delete the old setting currently because it errors with `Unable to write to User Settings because <setting name> is not a registered configuration`\n                // if (from !== to) {\n                //     try {\n                //         await this.update(from, undefined, ConfigurationTarget.Global);\n                //     }\n                //     catch { }\n                // }\n            }\n        }\n\n        if (fromInspection.workspaceValue !== undefined) {\n            if (toInspection === undefined || toInspection.workspaceValue === undefined) {\n                await this.update(\n                    to,\n                    options.migrationFn\n                        ? options.migrationFn(fromInspection.workspaceValue as TFrom)\n                        : fromInspection.workspaceValue,\n                    ConfigurationTarget.Workspace\n                );\n                // Can't delete the old setting currently because it errors with `Unable to write to User Settings because <setting name> is not a registered configuration`\n                // if (from !== to) {\n                //     try {\n                //         await this.update(from, undefined, ConfigurationTarget.Workspace);\n                //     }\n                //     catch { }\n                // }\n            }\n        }\n\n        if (fromInspection.workspaceFolderValue !== undefined) {\n            if (toInspection === undefined || toInspection.workspaceFolderValue === undefined) {\n                await this.update(\n                    to,\n                    options.migrationFn\n                        ? options.migrationFn(fromInspection.workspaceFolderValue as TFrom)\n                        : fromInspection.workspaceFolderValue,\n                    ConfigurationTarget.WorkspaceFolder\n                );\n                // Can't delete the old setting currently because it errors with `Unable to write to User Settings because <setting name> is not a registered configuration`\n                // if (from !== to) {\n                //     try {\n                //         await this.update(from, undefined, ConfigurationTarget.WorkspaceFolder);\n                //     }\n                //     catch { }\n                // }\n            }\n        }\n    }\n\n    name<K extends keyof Config>(name: K) {\n        return Functions.propOf(emptyConfig as Config, name);\n    }\n\n    update(section: string, value: any, target: ConfigurationTarget, resource?: Uri | null) {\n        return workspace\n            .getConfiguration(extensionId, target === ConfigurationTarget.Global ? undefined : resource!)\n            .update(section, value, target);\n    }\n\n    async updateEffective(section: string, value: any, resource: Uri | null = null) {\n        const inspect = await configuration.inspect(section, resource)!;\n        if (inspect.workspaceFolderValue !== undefined) {\n            if (value === inspect.workspaceFolderValue) return undefined;\n\n            return void configuration.update(section, value, ConfigurationTarget.WorkspaceFolder, resource);\n        }\n\n        if (inspect.workspaceValue !== undefined) {\n            if (value === inspect.workspaceValue) return undefined;\n\n            return void configuration.update(section, value, ConfigurationTarget.Workspace);\n        }\n\n        if (inspect.globalValue === value || (inspect.globalValue === undefined && value === inspect.defaultValue)) {\n            return undefined;\n        }\n\n        return void configuration.update(\n            section,\n            value === inspect.defaultValue ? undefined : value,\n            ConfigurationTarget.Global\n        );\n    }\n}\n\nexport const configuration = new Configuration();\n","'use strict';\nimport {\n    DecorationOptions,\n    Disposable,\n    Range,\n    TextDocument,\n    TextEditor,\n    TextEditorDecorationType,\n    TextEditorSelectionChangeEvent,\n    Uri,\n    window\n} from 'vscode';\nimport { TextDocumentComparer } from '../comparers';\nimport { FileAnnotationType } from '../configuration';\nimport { CommandContext, setCommandContext } from '../constants';\nimport { Functions } from '../system';\nimport { GitDocumentState, TrackedDocument } from '../trackers/gitDocumentTracker';\n\nexport enum AnnotationStatus {\n    Computing = 'computing',\n    Computed = 'computed'\n}\n\nexport type TextEditorCorrelationKey = string;\n\nexport abstract class AnnotationProviderBase implements Disposable {\n    static getCorrelationKey(editor: TextEditor | undefined): TextEditorCorrelationKey {\n        return editor !== undefined ? (editor as any).id : '';\n    }\n\n    annotationType: FileAnnotationType | undefined;\n    correlationKey: TextEditorCorrelationKey;\n    document: TextDocument;\n    status: AnnotationStatus | undefined;\n\n    protected decorations: DecorationOptions[] | undefined;\n    protected disposable: Disposable;\n\n    constructor(\n        public editor: TextEditor,\n        protected readonly trackedDocument: TrackedDocument<GitDocumentState>,\n        protected decoration: TextEditorDecorationType,\n        protected highlightDecoration: TextEditorDecorationType | undefined\n    ) {\n        this.correlationKey = AnnotationProviderBase.getCorrelationKey(this.editor);\n        this.document = this.editor.document;\n\n        this.disposable = Disposable.from(\n            window.onDidChangeTextEditorSelection(this.onTextEditorSelectionChanged, this)\n        );\n    }\n\n    dispose() {\n        this.clear();\n\n        this.disposable && this.disposable.dispose();\n    }\n\n    private onTextEditorSelectionChanged(e: TextEditorSelectionChangeEvent) {\n        if (!TextDocumentComparer.equals(this.document, e.textEditor && e.textEditor.document)) return;\n\n        this.selection(e.selections[0].active.line);\n    }\n\n    get editorId(): string {\n        if (this.editor === undefined || this.editor.document === undefined) return '';\n        return (this.editor as any).id;\n    }\n\n    get editorUri(): Uri | undefined {\n        if (this.editor === undefined || this.editor.document === undefined) return undefined;\n        return this.editor.document.uri;\n    }\n\n    protected additionalDecorations: { decoration: TextEditorDecorationType; ranges: Range[] }[] | undefined;\n\n    clear() {\n        this.status = undefined;\n        if (this.editor === undefined) return;\n\n        if (this.decoration !== undefined) {\n            try {\n                this.editor.setDecorations(this.decoration, []);\n            }\n            catch {}\n        }\n\n        if (this.additionalDecorations !== undefined && this.additionalDecorations.length > 0) {\n            for (const d of this.additionalDecorations) {\n                try {\n                    this.editor.setDecorations(d.decoration, []);\n                }\n                catch {}\n            }\n\n            this.additionalDecorations = undefined;\n        }\n\n        if (this.highlightDecoration !== undefined) {\n            try {\n                this.editor.setDecorations(this.highlightDecoration, []);\n            }\n            catch {}\n        }\n    }\n\n    private _resetDebounced:\n        | ((changes?: {\n              decoration: TextEditorDecorationType;\n              highlightDecoration: TextEditorDecorationType | undefined;\n          }) => void)\n        | undefined;\n\n    reset(changes?: {\n        decoration: TextEditorDecorationType;\n        highlightDecoration: TextEditorDecorationType | undefined;\n    }) {\n        if (this._resetDebounced === undefined) {\n            this._resetDebounced = Functions.debounce(this.onReset, 250);\n        }\n\n        this._resetDebounced(changes);\n    }\n\n    async onReset(changes?: {\n        decoration: TextEditorDecorationType;\n        highlightDecoration: TextEditorDecorationType | undefined;\n    }) {\n        if (changes !== undefined) {\n            this.clear();\n\n            this.decoration = changes.decoration;\n            this.highlightDecoration = changes.highlightDecoration;\n        }\n\n        await this.provideAnnotation(this.editor === undefined ? undefined : this.editor.selection.active.line);\n    }\n\n    async restore(editor: TextEditor) {\n        // If the editor isn't disposed then we don't need to do anything\n        // Explicitly check for `false`\n        if ((this.editor as any)._disposed === false) return;\n\n        this.status = AnnotationStatus.Computing;\n        if (editor === window.activeTextEditor) {\n            await setCommandContext(CommandContext.AnnotationStatus, this.status);\n        }\n\n        this.editor = editor;\n        this.correlationKey = AnnotationProviderBase.getCorrelationKey(editor);\n        this.document = editor.document;\n\n        if (this.decorations !== undefined && this.decorations.length) {\n            this.editor.setDecorations(this.decoration, this.decorations);\n\n            if (this.additionalDecorations !== undefined && this.additionalDecorations.length) {\n                for (const d of this.additionalDecorations) {\n                    this.editor.setDecorations(d.decoration, d.ranges);\n                }\n            }\n        }\n\n        this.status = AnnotationStatus.Computed;\n        if (editor === window.activeTextEditor) {\n            await setCommandContext(CommandContext.AnnotationStatus, this.status);\n        }\n    }\n\n    async provideAnnotation(shaOrLine?: string | number): Promise<boolean> {\n        this.status = AnnotationStatus.Computing;\n        if (await this.onProvideAnnotation(shaOrLine)) {\n            this.status = AnnotationStatus.Computed;\n            return true;\n        }\n\n        this.status = undefined;\n        return false;\n    }\n\n    abstract onProvideAnnotation(shaOrLine?: string | number): Promise<boolean>;\n    abstract selection(shaOrLine?: string | number): Promise<void>;\n    abstract validate(): Promise<boolean>;\n}\n","'use strict';\nimport { commands, ConfigurationTarget, env, MessageItem, Uri, window } from 'vscode';\nimport { Commands } from './commands';\nimport { configuration, ViewLocation } from './configuration';\nimport { CommandContext, setCommandContext } from './constants';\nimport { GitCommit } from './git/gitService';\nimport { Logger } from './logger';\nimport { Versions } from './system';\nimport { Container } from './container';\n\nexport enum SuppressedMessages {\n    CommitHasNoPreviousCommitWarning = 'suppressCommitHasNoPreviousCommitWarning',\n    CommitNotFoundWarning = 'suppressCommitNotFoundWarning',\n    FileNotUnderSourceControlWarning = 'suppressFileNotUnderSourceControlWarning',\n    GitDisabledWarning = 'suppressGitDisabledWarning',\n    GitVersionWarning = 'suppressGitVersionWarning',\n    LineUncommittedWarning = 'suppressLineUncommittedWarning',\n    NoRepositoryWarning = 'suppressNoRepositoryWarning',\n    SupportGitLensNotification = 'suppressSupportGitLensNotification'\n}\n\nexport class Messages {\n    static showCommitHasNoPreviousCommitWarningMessage(commit?: GitCommit): Promise<MessageItem | undefined> {\n        if (commit === undefined) {\n            return Messages.showMessage(\n                'info',\n                'There is no previous commit.',\n                SuppressedMessages.CommitHasNoPreviousCommitWarning\n            );\n        }\n        return Messages.showMessage(\n            'info',\n            `Commit ${commit.shortSha} (${commit.author}, ${commit.formattedDate}) has no previous commit.`,\n            SuppressedMessages.CommitHasNoPreviousCommitWarning\n        );\n    }\n\n    static showCommitNotFoundWarningMessage(message: string): Promise<MessageItem | undefined> {\n        return Messages.showMessage(\n            'warn',\n            `${message}. The commit could not be found.`,\n            SuppressedMessages.CommitNotFoundWarning\n        );\n    }\n\n    static async showGenericErrorMessage(message: string): Promise<MessageItem | undefined> {\n        const actions: MessageItem[] = [{ title: 'Open Output Channel' }];\n        const result = await Messages.showMessage(\n            'error',\n            `${message}. See output channel for more details`,\n            undefined,\n            null,\n            ...actions\n        );\n\n        if (result !== undefined) {\n            Logger.showOutputChannel();\n        }\n        return result;\n    }\n\n    static showFileNotUnderSourceControlWarningMessage(message: string): Promise<MessageItem | undefined> {\n        return Messages.showMessage(\n            'warn',\n            `${message}. The file is probably not under source control.`,\n            SuppressedMessages.FileNotUnderSourceControlWarning\n        );\n    }\n\n    static showGitDisabledErrorMessage() {\n        return Messages.showMessage(\n            'error',\n            'GitLens requires Git to be enabled. Please re-enable Git \\u2014 set `git.enabled` to true and reload',\n            SuppressedMessages.GitDisabledWarning\n        );\n    }\n\n    static showGitVersionUnsupportedErrorMessage(version: string): Promise<MessageItem | undefined> {\n        return Messages.showMessage(\n            'error',\n            `GitLens requires a newer version of Git (>= 2.2.0) than is currently installed (${version}). Please install a more recent version of Git.`,\n            SuppressedMessages.GitVersionWarning\n        );\n    }\n\n    static showLineUncommittedWarningMessage(message: string): Promise<MessageItem | undefined> {\n        return Messages.showMessage(\n            'warn',\n            `${message}. The line has uncommitted changes.`,\n            SuppressedMessages.LineUncommittedWarning\n        );\n    }\n\n    static showNoRepositoryWarningMessage(message: string): Promise<MessageItem | undefined> {\n        return Messages.showMessage(\n            'warn',\n            `${message}. No repository could be found.`,\n            SuppressedMessages.NoRepositoryWarning\n        );\n    }\n\n    static async showSupportGitLensMessage() {\n        const actions: MessageItem[] = [\n            { title: 'Become a Sponsor' },\n            { title: 'Donate via PayPal' },\n            { title: 'Donate via Cash App' }\n        ];\n\n        const result = await Messages.showMessage(\n            'info',\n            'While GitLens is offered to everyone for free, if you find it useful, please consider [supporting](https://gitlens.amod.io/#support-gitlens) it. Thank you! ❤',\n            undefined,\n            null,\n            ...actions\n        );\n\n        if (result != null) {\n            let uri;\n            if (result === actions[0]) {\n                uri = Uri.parse('https://www.patreon.com/eamodio');\n            }\n            else if (result === actions[1]) {\n                uri = Uri.parse('https://www.paypal.me/eamodio');\n            }\n            else if (result === actions[2]) {\n                uri = Uri.parse('https://cash.me/$eamodio');\n            }\n\n            if (uri !== undefined) {\n                await setCommandContext(CommandContext.ViewsHideSupportGitLens, true);\n                await this.suppressedMessage(SuppressedMessages.SupportGitLensNotification!);\n                await env.openExternal(uri);\n            }\n        }\n    }\n\n    static async showSetupViewLayoutMessage(previousVersion: string | undefined) {\n        if (\n            Container.config.views.repositories.location !== ViewLocation.GitLens ||\n            Container.config.views.fileHistory.location !== ViewLocation.GitLens ||\n            Container.config.views.lineHistory.location !== ViewLocation.GitLens ||\n            Container.config.views.search.location !== ViewLocation.GitLens ||\n            Container.config.views.compare.location !== ViewLocation.GitLens\n        ) {\n            return;\n        }\n\n        if (\n            previousVersion !== undefined &&\n            Versions.compare(Versions.fromString(previousVersion), Versions.from(9, 6, 3)) === 1\n        ) {\n            return;\n        }\n\n        const actions: MessageItem[] = [{ title: 'Customize...' }, { title: 'Use Defaults' }];\n        const result = await Messages.showMessage(\n            'info',\n            'GitLens views can be configured to be shown in different side bar layouts to best match your workflow. You can easily change the default layout (where all views are shown together on the GitLens side bar) below.',\n            undefined,\n            null,\n            ...actions\n        );\n\n        if (result != null && result === actions[0]) {\n            await commands.executeCommand(Commands.ShowSettingsPage, 'views-layout');\n        }\n    }\n\n    static async showWhatsNewMessage(version: string) {\n        const actions: MessageItem[] = [{ title: \"What's New\" }, { title: 'Release Notes' }, { title: '❤' }];\n\n        const result = await Messages.showMessage(\n            'info',\n            `GitLens has been updated to v${version} — check out what's new!`,\n            undefined,\n            null,\n            ...actions\n        );\n\n        if (result != null) {\n            if (result === actions[0]) {\n                await commands.executeCommand(Commands.ShowWelcomePage);\n            }\n            else if (result === actions[1]) {\n                await env.openExternal(Uri.parse('https://github.com/eamodio/vscode-gitlens/blob/master/CHANGELOG.md'));\n            }\n            else if (result === actions[2]) {\n                await env.openExternal(Uri.parse('https://gitlens.amod.io/#support-gitlens'));\n            }\n        }\n    }\n\n    private static async showMessage(\n        type: 'info' | 'warn' | 'error',\n        message: string,\n        suppressionKey?: SuppressedMessages,\n        dontShowAgain: MessageItem | null = { title: \"Don't Show Again\" },\n        ...actions: MessageItem[]\n    ): Promise<MessageItem | undefined> {\n        Logger.log(`ShowMessage(${type}, '${message}', ${suppressionKey}, ${dontShowAgain})`);\n\n        if (\n            suppressionKey !== undefined &&\n            configuration.get<boolean>(configuration.name('advanced')('messages')(suppressionKey).value)\n        ) {\n            Logger.log(`ShowMessage(${type}, '${message}', ${suppressionKey}, ${dontShowAgain}) skipped`);\n            return undefined;\n        }\n\n        if (suppressionKey !== undefined && dontShowAgain !== null) {\n            actions.push(dontShowAgain);\n        }\n\n        let result: MessageItem | undefined = undefined;\n        switch (type) {\n            case 'info':\n                result = await window.showInformationMessage(message, ...actions);\n                break;\n\n            case 'warn':\n                result = await window.showWarningMessage(message, ...actions);\n                break;\n\n            case 'error':\n                result = await window.showErrorMessage(message, ...actions);\n                break;\n        }\n\n        if ((suppressionKey !== undefined && dontShowAgain === null) || result === dontShowAgain) {\n            Logger.log(\n                `ShowMessage(${type}, '${message}', ${suppressionKey}, ${dontShowAgain}) don't show again requested`\n            );\n            await this.suppressedMessage(suppressionKey!);\n\n            if (result === dontShowAgain) return undefined;\n        }\n\n        Logger.log(\n            `ShowMessage(${type}, '${message}', ${suppressionKey}, ${dontShowAgain}) returned ${\n                result ? result.title : result\n            }`\n        );\n        return result;\n    }\n\n    private static suppressedMessage(suppressionKey: SuppressedMessages) {\n        const section = configuration.name('advanced')('messages').value;\n        const messages: { [key: string]: boolean | undefined } = configuration.get<{}>(section);\n\n        messages[suppressionKey] = true;\n\n        for (const [key, value] of Object.entries(messages)) {\n            if (value !== true) {\n                messages[key] = undefined;\n            }\n        }\n\n        return configuration.update(section, messages, ConfigurationTarget.Global);\n    }\n}\n","'use strict';\nimport { Disposable, Event, EventEmitter, TextDocument, TextEditor, Uri } from 'vscode';\nimport { CommandContext, getEditorIfActive, isActiveDocument, setCommandContext } from '../constants';\nimport { Container } from '../container';\nimport { GitService, GitUri, Repository, RepositoryChange, RepositoryChangeEvent } from '../git/gitService';\nimport { Logger } from '../logger';\nimport { Functions } from '../system';\n\nexport interface DocumentBlameStateChangeEvent<T> {\n    readonly editor: TextEditor;\n    readonly document: TrackedDocument<T>;\n    readonly blameable: boolean;\n}\n\nexport class TrackedDocument<T> implements Disposable {\n    private _onDidBlameStateChange = new EventEmitter<DocumentBlameStateChangeEvent<T>>();\n    get onDidBlameStateChange(): Event<DocumentBlameStateChangeEvent<T>> {\n        return this._onDidBlameStateChange.event;\n    }\n\n    state: T | undefined;\n\n    private _disposable: Disposable | undefined;\n    private _disposed: boolean = false;\n    private _repo: Promise<Repository | undefined>;\n    private _uri!: GitUri;\n\n    constructor(\n        private readonly _document: TextDocument,\n        public readonly key: string,\n        public dirty: boolean,\n        private _eventDelegates: { onDidBlameStateChange(e: DocumentBlameStateChangeEvent<T>): void }\n    ) {\n        this._repo = this.initialize(_document.uri);\n    }\n\n    dispose() {\n        this._disposed = true;\n        this.reset('dispose');\n        this._disposable && this._disposable.dispose();\n    }\n\n    private async initialize(uri: Uri): Promise<Repository | undefined> {\n        // Since there is a bit of a chicken & egg problem with the DocumentTracker and the GitService, wait for the GitService to load if it isn't\n        if (Container.git === undefined) {\n            if (!(await Functions.waitUntil(() => Container.git !== undefined, 2000))) {\n                Logger.log(\n                    `TrackedDocument.initialize(${uri.toString(true)})`,\n                    'Timed out waiting for the GitService to start'\n                );\n                throw new Error('TrackedDocument timed out waiting for the GitService to start');\n            }\n        }\n\n        this._uri = await GitUri.fromUri(uri);\n        if (this._disposed) return undefined;\n\n        const repo = await Container.git.getRepository(this._uri);\n        if (this._disposed) return undefined;\n\n        if (repo !== undefined) {\n            this._disposable = repo.onDidChange(this.onRepositoryChanged, this);\n        }\n\n        await this.update({ initializing: true, repo: repo });\n\n        return repo;\n    }\n\n    private onRepositoryChanged(e: RepositoryChangeEvent) {\n        if (!e.changed(RepositoryChange.Repository)) return;\n\n        // Reset any cached state\n        this.reset('repository');\n        void this.update();\n    }\n\n    private _forceDirtyStateChangeOnNextDocumentChange: boolean = false;\n    get forceDirtyStateChangeOnNextDocumentChange() {\n        return this._forceDirtyStateChangeOnNextDocumentChange;\n    }\n\n    private _hasRemotes: boolean = false;\n    get hasRemotes() {\n        return this._hasRemotes;\n    }\n\n    get isBlameable() {\n        if (this._blameFailed) return false;\n\n        return this._isTracked;\n    }\n\n    private _isDirtyIdle: boolean = false;\n    get isDirtyIdle() {\n        return this._isDirtyIdle;\n    }\n    set isDirtyIdle(value: boolean) {\n        this._isDirtyIdle = value;\n    }\n\n    get isRevision() {\n        return this._uri !== undefined\n            ? Boolean(this._uri.sha) && this._uri.sha !== GitService.deletedOrMissingSha\n            : false;\n    }\n\n    private _isTracked: boolean = false;\n    get isTracked() {\n        return this._isTracked;\n    }\n\n    get lineCount(): number {\n        return this._document.lineCount;\n    }\n\n    get uri() {\n        return this._uri;\n    }\n\n    activate() {\n        setCommandContext(CommandContext.ActiveFileStatus, this.getStatus());\n    }\n\n    async ensureInitialized() {\n        await this._repo;\n    }\n\n    is(document: TextDocument) {\n        return document === this._document;\n    }\n\n    reset(reason: 'config' | 'dispose' | 'document' | 'repository') {\n        this._blameFailed = false;\n        this._isDirtyIdle = false;\n\n        if (this.state === undefined) return;\n\n        // // Don't remove broken blame on change (since otherwise we'll have to run the broken blame again)\n        // if (!this.state.hasErrors) {\n\n        this.state = undefined;\n        Logger.log(`Reset state for '${this.key}', reason=${reason}`);\n\n        // }\n    }\n\n    private _blameFailed: boolean = false;\n    setBlameFailure() {\n        const wasBlameable = this.isBlameable;\n\n        this._blameFailed = true;\n\n        if (wasBlameable && isActiveDocument(this._document)) {\n            void this.update({ forceBlameChange: true });\n        }\n    }\n\n    resetForceDirtyStateChangeOnNextDocumentChange() {\n        this._forceDirtyStateChangeOnNextDocumentChange = false;\n    }\n\n    setForceDirtyStateChangeOnNextDocumentChange() {\n        this._forceDirtyStateChangeOnNextDocumentChange = true;\n    }\n\n    async update(options: { forceBlameChange?: boolean; initializing?: boolean; repo?: Repository } = {}) {\n        if (this._disposed || this._uri === undefined) {\n            this._hasRemotes = false;\n            this._isTracked = false;\n\n            return;\n        }\n\n        this._isDirtyIdle = false;\n\n        const active = getEditorIfActive(this._document);\n        const wasBlameable = options.forceBlameChange ? undefined : this.isBlameable;\n\n        this._isTracked = await Container.git.isTracked(this._uri);\n\n        let repo = undefined;\n        if (this._isTracked) {\n            repo = options.repo;\n            if (repo === undefined) {\n                repo = await this._repo;\n            }\n        }\n\n        if (repo !== undefined) {\n            this._hasRemotes = await repo.hasRemotes();\n        }\n        else {\n            this._hasRemotes = false;\n        }\n\n        if (active !== undefined) {\n            const blameable = this.isBlameable;\n\n            setCommandContext(CommandContext.ActiveFileStatus, this.getStatus());\n\n            if (!options.initializing && wasBlameable !== blameable) {\n                const e: DocumentBlameStateChangeEvent<T> = { editor: active, document: this, blameable: blameable };\n                this._onDidBlameStateChange.fire(e);\n                this._eventDelegates.onDidBlameStateChange(e);\n            }\n        }\n    }\n\n    private getStatus() {\n        let status = '';\n        if (this.isTracked) {\n            status += 'tracked|';\n        }\n        if (this.isBlameable) {\n            status += 'blameable|';\n        }\n        if (this.isRevision) {\n            status += 'revision|';\n        }\n        if (this.hasRemotes) {\n            status += 'remotes|';\n        }\n\n        return status ? status : undefined;\n    }\n}\n","'use strict';\nimport {\n    ConfigurationChangeEvent,\n    Disposable,\n    EndOfLine,\n    Event,\n    EventEmitter,\n    Position,\n    Range,\n    TextDocument,\n    TextDocumentChangeEvent,\n    TextEditor,\n    TextLine,\n    Uri,\n    window,\n    workspace\n} from 'vscode';\nimport { configuration } from '../configuration';\nimport { CommandContext, DocumentSchemes, isActiveDocument, isTextEditor, setCommandContext } from '../constants';\nimport { GitUri } from '../git/gitService';\nimport { Deferrable, Functions } from '../system';\nimport { DocumentBlameStateChangeEvent, TrackedDocument } from './trackedDocument';\n\nexport * from './trackedDocument';\n\nexport interface DocumentDirtyStateChangeEvent<T> {\n    readonly editor: TextEditor;\n    readonly document: TrackedDocument<T>;\n    readonly dirty: boolean;\n}\n\nexport interface DocumentDirtyIdleTriggerEvent<T> {\n    readonly editor: TextEditor;\n    readonly document: TrackedDocument<T>;\n}\n\nexport class DocumentTracker<T> implements Disposable {\n    private _onDidChangeBlameState = new EventEmitter<DocumentBlameStateChangeEvent<T>>();\n    get onDidChangeBlameState(): Event<DocumentBlameStateChangeEvent<T>> {\n        return this._onDidChangeBlameState.event;\n    }\n\n    private _onDidChangeDirtyState = new EventEmitter<DocumentDirtyStateChangeEvent<T>>();\n    get onDidChangeDirtyState(): Event<DocumentDirtyStateChangeEvent<T>> {\n        return this._onDidChangeDirtyState.event;\n    }\n\n    private _onDidTriggerDirtyIdle = new EventEmitter<DocumentDirtyIdleTriggerEvent<T>>();\n    get onDidTriggerDirtyIdle(): Event<DocumentDirtyIdleTriggerEvent<T>> {\n        return this._onDidTriggerDirtyIdle.event;\n    }\n\n    private _dirtyIdleTriggerDelay!: number;\n    private readonly _disposable: Disposable | undefined;\n    private readonly _documentMap: Map<TextDocument | string, TrackedDocument<T>> = new Map();\n\n    constructor() {\n        this._disposable = Disposable.from(\n            configuration.onDidChange(this.onConfigurationChanged, this),\n            window.onDidChangeActiveTextEditor(this.onActiveTextEditorChanged, this),\n            // window.onDidChangeVisibleTextEditors(Functions.debounce(this.onVisibleEditorsChanged, 5000), this),\n            workspace.onDidChangeTextDocument(Functions.debounce(this.onTextDocumentChanged, 50), this),\n            workspace.onDidCloseTextDocument(this.onTextDocumentClosed, this),\n            workspace.onDidSaveTextDocument(this.onTextDocumentSaved, this)\n        );\n\n        this.onConfigurationChanged(configuration.initializingChangeEvent);\n    }\n\n    dispose() {\n        this._disposable && this._disposable.dispose();\n\n        this.clear();\n    }\n\n    initialize() {\n        this.onActiveTextEditorChanged(window.activeTextEditor);\n    }\n\n    private onConfigurationChanged(e: ConfigurationChangeEvent) {\n        // Only rest the cached state if we aren't initializing\n        if (\n            !configuration.initializing(e) &&\n            (configuration.changed(e, configuration.name('blame')('ignoreWhitespace').value, null) ||\n                configuration.changed(e, configuration.name('advanced')('caching')('enabled').value))\n        ) {\n            for (const d of this._documentMap.values()) {\n                d.reset('config');\n            }\n        }\n\n        const section = configuration.name('advanced')('blame')('delayAfterEdit').value;\n        if (configuration.changed(e, section)) {\n            this._dirtyIdleTriggerDelay = configuration.get<number>(section);\n            this._dirtyIdleTriggeredDebounced = undefined;\n        }\n    }\n\n    private _timer: NodeJS.Timer | undefined;\n    private onActiveTextEditorChanged(editor: TextEditor | undefined) {\n        if (editor !== undefined && !isTextEditor(editor)) return;\n\n        if (this._timer !== undefined) {\n            clearTimeout(this._timer);\n            this._timer = undefined;\n        }\n\n        if (editor === undefined) {\n            this._timer = setTimeout(() => {\n                this._timer = undefined;\n\n                setCommandContext(CommandContext.ActiveFileStatus, undefined);\n            }, 250);\n\n            return;\n        }\n\n        const doc = this._documentMap.get(editor.document);\n        if (doc !== undefined) {\n            doc.activate();\n\n            return;\n        }\n\n        // No need to activate this, as it is implicit in initialization if currently active\n        this.addCore(editor.document);\n    }\n\n    private onTextDocumentChanged(e: TextDocumentChangeEvent) {\n        const { scheme } = e.document.uri;\n        if (scheme !== DocumentSchemes.File && scheme !== DocumentSchemes.Vsls) return;\n\n        let doc = this._documentMap.get(e.document);\n        if (doc === undefined) {\n            doc = this.addCore(e.document);\n        }\n\n        doc.reset('document');\n\n        const dirty = e.document.isDirty;\n        const editor = window.activeTextEditor;\n\n        // If we have an idle tracker, either reset or cancel it\n        if (this._dirtyIdleTriggeredDebounced !== undefined) {\n            if (dirty) {\n                this._dirtyIdleTriggeredDebounced({ editor: editor!, document: doc });\n            }\n            else {\n                this._dirtyIdleTriggeredDebounced.cancel();\n            }\n        }\n\n        if (!doc.forceDirtyStateChangeOnNextDocumentChange && doc.dirty === dirty) return;\n\n        doc.resetForceDirtyStateChangeOnNextDocumentChange();\n        doc.dirty = dirty;\n\n        // Only fire state change events for the active document\n        if (editor === undefined || editor.document !== e.document) return;\n\n        this.fireDocumentDirtyStateChanged({ editor: editor, document: doc, dirty: doc.dirty });\n    }\n\n    private onTextDocumentClosed(document: TextDocument) {\n        const doc = this._documentMap.get(document);\n        if (doc === undefined) return;\n\n        doc.dispose();\n        this._documentMap.delete(document);\n        this._documentMap.delete(doc.key);\n    }\n\n    private onTextDocumentSaved(document: TextDocument) {\n        const doc = this._documentMap.get(document);\n        if (doc !== undefined) {\n            void doc.update({ forceBlameChange: true });\n\n            return;\n        }\n\n        // If we are saving the active document make sure we are tracking it\n        if (isActiveDocument(document)) {\n            void this.addCore(document);\n        }\n    }\n\n    // private onVisibleEditorsChanged(editors: TextEditor[]) {\n    //     if (this._documentMap.size === 0) return;\n\n    //     // If we have no visible editors, or no \"real\" visible editors reset our cache\n    //     if (editors.length === 0 || editors.every(e => !isTextEditor(e))) {\n    //         this.clear();\n    //     }\n    // }\n\n    add(document: TextDocument): Promise<TrackedDocument<T>>;\n    add(uri: Uri): Promise<TrackedDocument<T>>;\n    add(documentOrId: TextDocument | Uri): Promise<TrackedDocument<T>> {\n        return this._add(documentOrId);\n    }\n\n    clear() {\n        for (const d of this._documentMap.values()) {\n            d.dispose();\n        }\n\n        this._documentMap.clear();\n    }\n\n    get(fileName: string): Promise<TrackedDocument<T> | undefined>;\n    get(document: TextDocument): Promise<TrackedDocument<T> | undefined>;\n    get(uri: Uri): Promise<TrackedDocument<T> | undefined>;\n    get(documentOrId: string | TextDocument | Uri): Promise<TrackedDocument<T> | undefined> {\n        return this._get(documentOrId);\n    }\n\n    async getOrAdd(document: TextDocument): Promise<TrackedDocument<T>>;\n    async getOrAdd(uri: Uri): Promise<TrackedDocument<T>>;\n    async getOrAdd(documentOrId: TextDocument | Uri): Promise<TrackedDocument<T>> {\n        let doc = await this._get(documentOrId);\n        if (doc === undefined) {\n            doc = await this._add(documentOrId);\n        }\n        return doc;\n    }\n\n    has(fileName: string): boolean;\n    has(document: TextDocument): boolean;\n    has(uri: Uri): boolean;\n    has(key: string | TextDocument | Uri): boolean {\n        if (typeof key === 'string' || key instanceof Uri) {\n            key = GitUri.toKey(key);\n        }\n        return this._documentMap.has(key);\n    }\n\n    private async _add(documentOrId: TextDocument | Uri): Promise<TrackedDocument<T>> {\n        let document;\n        if (documentOrId instanceof GitUri) {\n            try {\n                document = await workspace.openTextDocument(documentOrId.documentUri({ useVersionedPath: true }));\n            }\n            catch (ex) {\n                const msg = ex.toString();\n                if (msg.includes('File seems to be binary and cannot be opened as text')) {\n                    document = new BinaryTextDocument(documentOrId);\n                }\n                else if (msg.includes('File not found')) {\n                    // If we can't find the file, assume it is because the file has been renamed or deleted at some point\n                    document = new MissingRevisionTextDocument(documentOrId);\n\n                    // const [fileName, repoPath] = await Container.git.findWorkingFileName(documentOrId, undefined, ref);\n                    // if (fileName === undefined) throw new Error(`Failed to add tracking for document: ${documentOrId}`);\n\n                    // documentOrId = await workspace.openTextDocument(path.resolve(repoPath!, fileName));\n                }\n                else {\n                    throw ex;\n                }\n            }\n        }\n        else if (documentOrId instanceof Uri) {\n            document = await workspace.openTextDocument(documentOrId);\n        }\n        else {\n            document = documentOrId;\n        }\n\n        const doc = await this.addCore(document);\n        await doc.ensureInitialized();\n\n        return doc;\n    }\n\n    private async _get(documentOrId: string | TextDocument | Uri) {\n        if (documentOrId instanceof GitUri) {\n            documentOrId = GitUri.toKey(documentOrId.documentUri({ useVersionedPath: true }));\n        }\n        else if (typeof documentOrId === 'string' || documentOrId instanceof Uri) {\n            documentOrId = GitUri.toKey(documentOrId);\n        }\n\n        const doc = this._documentMap.get(documentOrId);\n        if (doc === undefined) return undefined;\n\n        await doc.ensureInitialized();\n        return doc;\n    }\n\n    private addCore(document: TextDocument): TrackedDocument<T> {\n        const key = GitUri.toKey(document.uri);\n\n        // Always start out false, so we will fire the event if needed\n        const doc = new TrackedDocument<T>(document, key, false, {\n            onDidBlameStateChange: (e: DocumentBlameStateChangeEvent<T>) => this._onDidChangeBlameState.fire(e)\n        });\n        this._documentMap.set(document, doc);\n        this._documentMap.set(key, doc);\n\n        return doc;\n    }\n\n    private _dirtyIdleTriggeredDebounced: (((e: DocumentDirtyIdleTriggerEvent<T>) => void) & Deferrable) | undefined;\n    private _dirtyStateChangedDebounced: (((e: DocumentDirtyStateChangeEvent<T>) => void) & Deferrable) | undefined;\n    private fireDocumentDirtyStateChanged(e: DocumentDirtyStateChangeEvent<T>) {\n        if (e.dirty) {\n            setImmediate(async () => {\n                if (this._dirtyStateChangedDebounced !== undefined) {\n                    this._dirtyStateChangedDebounced.cancel();\n                }\n\n                if (window.activeTextEditor !== e.editor) return;\n\n                await e.document.ensureInitialized();\n                this._onDidChangeDirtyState.fire(e);\n            });\n\n            if (this._dirtyIdleTriggerDelay > 0) {\n                if (this._dirtyIdleTriggeredDebounced === undefined) {\n                    this._dirtyIdleTriggeredDebounced = Functions.debounce(\n                        async (e: DocumentDirtyIdleTriggerEvent<T>) => {\n                            if (\n                                this._dirtyIdleTriggeredDebounced !== undefined &&\n                                this._dirtyIdleTriggeredDebounced.pending!()\n                            ) {\n                                return;\n                            }\n\n                            await e.document.ensureInitialized();\n\n                            e.document.isDirtyIdle = true;\n                            this._onDidTriggerDirtyIdle.fire(e);\n                        },\n                        this._dirtyIdleTriggerDelay,\n                        { track: true }\n                    );\n                }\n\n                this._dirtyIdleTriggeredDebounced({ editor: e.editor, document: e.document });\n            }\n\n            return;\n        }\n\n        if (this._dirtyStateChangedDebounced === undefined) {\n            this._dirtyStateChangedDebounced = Functions.debounce(async (e: DocumentDirtyStateChangeEvent<T>) => {\n                if (window.activeTextEditor !== e.editor) return;\n\n                await e.document.ensureInitialized();\n                this._onDidChangeDirtyState.fire(e);\n            }, 250);\n        }\n\n        this._dirtyStateChangedDebounced(e);\n    }\n}\n\nclass EmptyTextDocument implements TextDocument {\n    readonly eol: EndOfLine;\n    readonly fileName: string;\n    readonly isClosed: boolean;\n    readonly isDirty: boolean;\n    readonly isUntitled: boolean;\n    readonly languageId: string;\n    readonly lineCount: number;\n    readonly uri: Uri;\n    readonly version: number;\n\n    constructor(public readonly gitUri: GitUri) {\n        this.uri = gitUri.documentUri({ useVersionedPath: true });\n\n        this.eol = EndOfLine.LF;\n        this.fileName = this.uri.fsPath;\n        this.isClosed = false;\n        this.isDirty = false;\n        this.isUntitled = false;\n        this.languageId = '';\n        this.lineCount = 0;\n        this.version = 0;\n    }\n\n    getText(range?: Range | undefined): string {\n        throw new Error('Method not supported.');\n    }\n\n    getWordRangeAtPosition(position: Position, regex?: RegExp | undefined): Range | undefined {\n        throw new Error('Method not supported.');\n    }\n\n    lineAt(line: number): TextLine;\n    lineAt(position: Position): TextLine;\n    lineAt(position: any): TextLine {\n        throw new Error('Method not supported.');\n    }\n\n    offsetAt(position: Position): number {\n        throw new Error('Method not supported.');\n    }\n\n    positionAt(offset: number): Position {\n        throw new Error('Method not supported.');\n    }\n\n    save(): Thenable<boolean> {\n        throw new Error('Method not supported.');\n    }\n\n    validatePosition(position: Position): Position {\n        throw new Error('Method not supported.');\n    }\n\n    validateRange(range: Range): Range {\n        throw new Error('Method not supported.');\n    }\n}\n\nclass BinaryTextDocument extends EmptyTextDocument {}\nclass MissingRevisionTextDocument extends EmptyTextDocument {}\n","'use strict';\nimport { GitBlame, GitDiff, GitLog } from '../git/git';\nimport { DocumentTracker } from './documentTracker';\n\nexport * from './documentTracker';\n\ninterface CachedItem<T> {\n    item: Promise<T>;\n    errorMessage?: string;\n}\n\nexport type CachedBlame = CachedItem<GitBlame>;\nexport type CachedDiff = CachedItem<GitDiff>;\nexport type CachedLog = CachedItem<GitLog>;\n\nexport class GitDocumentState {\n    private cache: Map<string, CachedBlame | CachedDiff | CachedLog> = new Map();\n\n    constructor(public readonly key: string) {}\n\n    get<T extends CachedBlame | CachedDiff | CachedLog>(key: string): T | undefined {\n        return this.cache.get(key) as T;\n    }\n\n    set<T extends CachedBlame | CachedDiff | CachedLog>(key: string, value: T) {\n        this.cache.set(key, value);\n    }\n}\n\nexport class GitDocumentTracker extends DocumentTracker<GitDocumentState> {}\n","'use strict';\nimport { execFile } from 'child_process';\nimport * as fs from 'fs';\nimport * as paths from 'path';\nimport * as iconv from 'iconv-lite';\nimport { Logger } from '../logger';\n\nconst isWindows = process.platform === 'win32';\n\n/**\n * Search PATH to see if a file exists in any of the path folders.\n *\n * @param  {string} exe The file to search for\n * @return {string}     A fully qualified path, or the original path if nothing\n *                      is found\n *\n * @private\n */\nfunction runDownPath(exe: string): string {\n    // NB: Windows won't search PATH looking for executables in spawn like\n    // Posix does\n\n    // Files with any directory path don't get this applied\n    if (exe.match(/[\\\\/]/)) return exe;\n\n    const target = paths.join('.', exe);\n    try {\n        if (fs.statSync(target)) return target;\n    }\n    catch {}\n\n    const path = process.env.PATH;\n    if (path != null && path.length !== 0) {\n        const haystack = path.split(isWindows ? ';' : ':');\n        for (const p of haystack) {\n            const needle = paths.join(p, exe);\n            try {\n                if (fs.statSync(needle)) return needle;\n            }\n            catch {}\n        }\n    }\n\n    return exe;\n}\n\n/**\n * Finds the executable and parameters to run on Windows. This method\n * mimics the POSIX behavior of being able to run scripts as executables by\n * replacing the passed-in executable with the script runner, for PowerShell,\n * CMD, and node scripts.\n *\n * This method also does the work of running down PATH, which spawn on Windows\n * also doesn't do, unlike on POSIX.\n */\nexport function findExecutable(exe: string, args: string[]): { cmd: string; args: string[] } {\n    // POSIX can just execute scripts directly, no need for silly goosery\n    if (!isWindows) return { cmd: runDownPath(exe), args: args };\n\n    if (!fs.existsSync(exe)) {\n        // NB: When you write something like `surf-client ... -- surf-build` on Windows,\n        // a shell would normally convert that to surf-build.cmd, but since it's passed\n        // in as an argument, it doesn't happen\n        const possibleExts = ['.exe', '.bat', '.cmd', '.ps1'];\n        for (const ext of possibleExts) {\n            const possibleFullPath = runDownPath(`${exe}${ext}`);\n\n            if (fs.existsSync(possibleFullPath)) return findExecutable(possibleFullPath, args);\n        }\n    }\n\n    if (exe.match(/\\.ps1$/i)) {\n        const cmd = paths.join(\n            process.env.SYSTEMROOT || 'C:\\\\WINDOWS',\n            'System32',\n            'WindowsPowerShell',\n            'v1.0',\n            'PowerShell.exe'\n        );\n        const psargs = ['-ExecutionPolicy', 'Unrestricted', '-NoLogo', '-NonInteractive', '-File', exe];\n\n        return { cmd: cmd, args: psargs.concat(args) };\n    }\n\n    if (exe.match(/\\.(bat|cmd)$/i)) {\n        const cmd = paths.join(process.env.SYSTEMROOT || 'C:\\\\WINDOWS', 'System32', 'cmd.exe');\n        const cmdArgs = ['/C', exe, ...args];\n\n        return { cmd: cmd, args: cmdArgs };\n    }\n\n    if (exe.match(/\\.(js)$/i)) {\n        const cmd = process.execPath;\n        const nodeArgs = [exe];\n\n        return { cmd: cmd, args: nodeArgs.concat(args) };\n    }\n\n    return { cmd: exe, args: args };\n}\n\nexport interface RunOptions {\n    cwd?: string;\n    readonly env?: Record<string, any>;\n    readonly encoding?: BufferEncoding | 'buffer';\n    /**\n     * The size the output buffer to allocate to the spawned process. Set this\n     * if you are anticipating a large amount of output.\n     *\n     * If not specified, this will be 10MB (10485760 bytes) which should be\n     * enough for most Git operations.\n     */\n    readonly maxBuffer?: number;\n    /**\n     * An optional string or buffer which will be written to\n     * the child process stdin stream immediately immediately\n     * after spawning the process.\n     */\n    readonly stdin?: string | Buffer;\n    /**\n     * The encoding to use when writing to stdin, if the stdin\n     * parameter is a string.\n     */\n    readonly stdinEncoding?: string;\n}\n\nconst bufferExceededRegex = /stdout maxBuffer( length)? exceeded/;\n\nexport function run<TOut extends string | Buffer>(\n    command: string,\n    args: any[],\n    encoding: BufferEncoding | 'buffer',\n    options: RunOptions = {}\n): Promise<TOut> {\n    const { stdin, stdinEncoding, ...opts }: RunOptions = { maxBuffer: 100 * 1024 * 1024, ...options };\n\n    return new Promise<TOut>((resolve, reject) => {\n        const proc = execFile(\n            command,\n            args,\n            opts,\n            (error: (Error & { stdout?: TOut | undefined }) | null, stdout, stderr) => {\n                if (error != null) {\n                    if (bufferExceededRegex.test(error.message)) {\n                        error.message = `Command output exceeded the allocated stdout buffer. Set 'options.maxBuffer' to a larger value than ${\n                            opts.maxBuffer\n                        } bytes`;\n                    }\n\n                    error.stdout =\n                        encoding === 'utf8' || encoding === 'binary' || encoding === 'buffer'\n                            ? (stdout as TOut)\n                            : (iconv.decode(Buffer.from(stdout, 'binary'), encoding) as TOut);\n                    reject(error);\n\n                    return;\n                }\n\n                if (stderr) {\n                    Logger.warn(`Warning(${command} ${args.join(' ')}): ${stderr}`);\n                }\n\n                resolve(\n                    encoding === 'utf8' || encoding === 'binary' || encoding === 'buffer'\n                        ? (stdout as TOut)\n                        : (iconv.decode(Buffer.from(stdout, 'binary'), encoding) as TOut)\n                );\n            }\n        );\n\n        if (stdin) {\n            proc.stdin.end(stdin, stdinEncoding || 'utf8');\n        }\n    });\n}\n","'use strict';\nimport * as paths from 'path';\nimport { findExecutable, run } from './shell';\n\nexport interface GitLocation {\n    path: string;\n    version: string;\n}\n\nfunction parseVersion(raw: string): string {\n    return raw.replace(/^git version /, '');\n}\n\nasync function findSpecificGit(path: string): Promise<GitLocation> {\n    const version = await run<string>(path, ['--version'], 'utf8');\n    // If needed, let's update our path to avoid the search on every command\n    if (!path || path === 'git') {\n        path = findExecutable(path, ['--version']).cmd;\n    }\n\n    return {\n        path: path,\n        version: parseVersion(version.trim())\n    };\n}\n\nasync function findGitDarwin(): Promise<GitLocation> {\n    try {\n        let path = await run<string>('which', ['git'], 'utf8');\n        path = path.replace(/^\\s+|\\s+$/g, '');\n\n        if (path !== '/usr/bin/git') {\n            return findSpecificGit(path);\n        }\n\n        try {\n            await run<string>('xcode-select', ['-p'], 'utf8');\n            return findSpecificGit(path);\n        }\n        catch (ex) {\n            if (ex.code === 2) {\n                return Promise.reject(new Error('Unable to find git'));\n            }\n            return findSpecificGit(path);\n        }\n    }\n    catch (ex) {\n        return Promise.reject(new Error('Unable to find git'));\n    }\n}\n\nfunction findSystemGitWin32(basePath: string | null | undefined): Promise<GitLocation> {\n    if (basePath == null || basePath.length === 0) return Promise.reject(new Error('Unable to find git'));\n    return findSpecificGit(paths.join(basePath, 'Git', 'cmd', 'git.exe'));\n}\n\nfunction findGitWin32(): Promise<GitLocation> {\n    return findSystemGitWin32(process.env['ProgramW6432'])\n        .then(null, () => findSystemGitWin32(process.env['ProgramFiles(x86)']))\n        .then(null, () => findSystemGitWin32(process.env['ProgramFiles']))\n        .then(null, () => findSpecificGit('git'));\n}\n\nexport async function findGitPath(path?: string): Promise<GitLocation> {\n    try {\n        return await findSpecificGit(path || 'git');\n    }\n    catch (ex) {\n        try {\n            switch (process.platform) {\n                case 'darwin':\n                    return await findGitDarwin();\n                case 'win32':\n                    return await findGitWin32();\n                default:\n                    return Promise.reject('Unable to find git');\n            }\n        }\n        catch (ex) {\n            return Promise.reject(new Error('Unable to find git'));\n        }\n    }\n}\n","'use strict';\nimport * as paths from 'path';\nimport { Git, GitAuthor, GitBlame, GitBlameCommit, GitCommitLine } from '../git';\nimport { debug, Strings } from '../../system';\n\nconst emptyStr = '';\nconst slash = '/';\n\ninterface BlameEntry {\n    sha: string;\n\n    line: number;\n    originalLine: number;\n    lineCount: number;\n\n    author: string;\n    authorDate?: string;\n    authorTimeZone?: string;\n    authorEmail?: string;\n\n    committerDate?: string;\n    committerTimeZone?: string;\n\n    previousSha?: string;\n    previousFileName?: string;\n\n    fileName?: string;\n\n    summary?: string;\n}\n\nexport class GitBlameParser {\n    @debug({ args: false, singleLine: true })\n    static parse(\n        data: string,\n        repoPath: string | undefined,\n        fileName: string,\n        currentUser: { name?: string; email?: string } | undefined\n    ): GitBlame | undefined {\n        if (!data) return undefined;\n\n        const authors: Map<string, GitAuthor> = new Map();\n        const commits: Map<string, GitBlameCommit> = new Map();\n        const lines: GitCommitLine[] = [];\n\n        let relativeFileName = repoPath && fileName;\n\n        let entry: BlameEntry | undefined = undefined;\n        let line: string;\n        let lineParts: string[];\n\n        let first = true;\n\n        for (line of Strings.lines(data)) {\n            lineParts = line.split(' ');\n            if (lineParts.length < 2) continue;\n\n            if (entry === undefined) {\n                entry = {\n                    author: undefined!,\n                    sha: lineParts[0],\n                    originalLine: parseInt(lineParts[1], 10),\n                    line: parseInt(lineParts[2], 10),\n                    lineCount: parseInt(lineParts[3], 10)\n                };\n\n                continue;\n            }\n\n            switch (lineParts[0]) {\n                case 'author':\n                    if (Git.isUncommitted(entry.sha)) {\n                        entry.author = 'You';\n                    }\n                    else {\n                        entry.author = lineParts\n                            .slice(1)\n                            .join(' ')\n                            .trim();\n                    }\n                    break;\n\n                case 'author-mail': {\n                    if (Git.isUncommitted(entry.sha)) {\n                        entry.authorEmail = currentUser !== undefined ? currentUser.email : undefined;\n                        continue;\n                    }\n\n                    entry.authorEmail = lineParts\n                        .slice(1)\n                        .join(' ')\n                        .trim();\n                    const start = entry.authorEmail.indexOf('<');\n                    if (start >= 0) {\n                        const end = entry.authorEmail.indexOf('>', start);\n                        if (end > start) {\n                            entry.authorEmail = entry.authorEmail.substring(start + 1, end);\n                        }\n                        else {\n                            entry.authorEmail = entry.authorEmail.substring(start + 1);\n                        }\n                    }\n\n                    break;\n                }\n                case 'author-time':\n                    entry.authorDate = lineParts[1];\n                    break;\n\n                case 'author-tz':\n                    entry.authorTimeZone = lineParts[1];\n                    break;\n\n                case 'committer-time':\n                    entry.committerDate = lineParts[1];\n                    break;\n\n                case 'committer-tz':\n                    entry.committerTimeZone = lineParts[1];\n                    break;\n\n                case 'summary':\n                    entry.summary = lineParts\n                        .slice(1)\n                        .join(' ')\n                        .trim();\n                    break;\n\n                case 'previous':\n                    entry.previousSha = lineParts[1];\n                    entry.previousFileName = lineParts.slice(2).join(' ');\n                    break;\n\n                case 'filename':\n                    entry.fileName = lineParts.slice(1).join(' ');\n\n                    if (first && repoPath === undefined) {\n                        // Try to get the repoPath from the most recent commit\n                        repoPath = Strings.normalizePath(\n                            fileName.replace(\n                                fileName.startsWith(slash) ? `/${entry.fileName}` : entry.fileName!,\n                                emptyStr\n                            )\n                        );\n                        relativeFileName = Strings.normalizePath(paths.relative(repoPath, fileName));\n                    }\n                    else {\n                        relativeFileName = entry.fileName!;\n                    }\n                    first = false;\n\n                    GitBlameParser.parseEntry(entry, repoPath, relativeFileName, commits, authors, lines, currentUser);\n\n                    entry = undefined;\n                    break;\n\n                default:\n                    break;\n            }\n        }\n\n        for (const [, c] of commits) {\n            if (c.author === undefined) return undefined;\n\n            const author = authors.get(c.author);\n            if (author === undefined) return undefined;\n\n            author.lineCount += c.lines.length;\n        }\n\n        const sortedAuthors = new Map([...authors.entries()].sort((a, b) => b[1].lineCount - a[1].lineCount));\n\n        const blame: GitBlame = {\n            repoPath: repoPath!,\n            authors: sortedAuthors,\n            commits: commits,\n            lines: lines\n        };\n        return blame;\n    }\n\n    private static parseEntry(\n        entry: BlameEntry,\n        repoPath: string | undefined,\n        relativeFileName: string,\n        commits: Map<string, GitBlameCommit>,\n        authors: Map<string, GitAuthor>,\n        lines: GitCommitLine[],\n        currentUser: { name?: string; email?: string } | undefined\n    ) {\n        let commit = commits.get(entry.sha);\n        if (commit === undefined) {\n            if (entry.author !== undefined) {\n                if (\n                    currentUser !== undefined &&\n                    // Name or e-mail is configured\n                    (currentUser.name !== undefined || currentUser.email !== undefined) &&\n                    // Match on name if configured\n                    (currentUser.name === undefined || currentUser.name === entry.author) &&\n                    // Match on email if configured\n                    (currentUser.email === undefined || currentUser.email === entry.authorEmail)\n                ) {\n                    entry.author = 'You';\n                }\n\n                let author = authors.get(entry.author);\n                if (author === undefined) {\n                    author = {\n                        name: entry.author,\n                        lineCount: 0\n                    };\n                    authors.set(entry.author, author);\n                }\n            }\n\n            commit = new GitBlameCommit(\n                repoPath!,\n                entry.sha,\n                entry.author,\n                entry.authorEmail,\n                new Date((entry.authorDate as any) * 1000),\n                new Date((entry.committerDate as any) * 1000),\n                entry.summary!,\n                relativeFileName,\n                entry.previousFileName !== undefined && entry.previousFileName !== entry.fileName\n                    ? entry.previousFileName\n                    : undefined,\n                entry.previousSha,\n                entry.previousSha && entry.previousFileName,\n                []\n            );\n\n            commits.set(entry.sha, commit);\n        }\n\n        for (let i = 0, len = entry.lineCount; i < len; i++) {\n            const line: GitCommitLine = {\n                sha: entry.sha,\n                line: entry.line + i,\n                originalLine: entry.originalLine + i\n            };\n\n            if (commit.previousSha) {\n                line.previousSha = commit.previousSha;\n            }\n\n            commit.lines.push(line);\n            lines[line.line - 1] = line;\n        }\n    }\n}\n","'use strict';\n/* eslint-disable constructor-super */\nimport * as paths from 'path';\nimport { Uri } from 'vscode';\nimport { UriComparer } from '../comparers';\nimport { DocumentSchemes, GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { GitCommit, GitFile, GitService } from '../git/gitService';\nimport { Logger } from '../logger';\nimport { debug, memoize, Strings } from '../system';\n\nconst emptyStr = '';\nconst slash = '/';\n\nexport interface GitCommitish {\n    fileName?: string;\n    repoPath: string;\n    sha?: string;\n    versionedPath?: string;\n}\n\n// Taken from https://github.com/Microsoft/vscode/blob/master/src/vs/base/common/uri.ts#L331-L337\ninterface UriComponents {\n    scheme: string;\n    authority: string;\n    path: string;\n    query: string;\n    fragment: string;\n}\n\ninterface UriEx {\n    new (): Uri;\n    new (scheme: string, authority: string, path: string, query: string, fragment: string): Uri;\n    // Use this ctor, because vscode doesn't validate it\n    new (components: UriComponents): Uri;\n}\n\nexport class GitUri extends ((Uri as any) as UriEx) {\n    readonly repoPath?: string;\n    readonly sha?: string;\n    readonly versionedPath?: string;\n\n    constructor(uri?: Uri);\n    constructor(uri: Uri, commit: GitCommitish);\n    constructor(uri: Uri, repoPath: string | undefined);\n    constructor(uri?: Uri, commitOrRepoPath?: GitCommitish | string) {\n        if (uri == null) {\n            super('unknown', emptyStr, emptyStr, emptyStr, emptyStr);\n\n            return;\n        }\n\n        if (uri.scheme === DocumentSchemes.GitLens) {\n            const data = JSON.parse(uri.query) as UriRevisionData;\n\n            // When Uri's come from the FileSystemProvider, the uri.query only contains the root repo info (not the actual file path), so fix that here\n            const index = uri.path.indexOf(data.path);\n            if (index + data.path.length < uri.path.length) {\n                data.path = uri.path.substr(index);\n            }\n\n            super({\n                scheme: uri.scheme,\n                authority: uri.authority,\n                path: data.path,\n                query: JSON.stringify(data),\n                fragment: uri.fragment\n            });\n\n            this.repoPath = data.repoPath;\n            if (GitService.isUncommittedStaged(data.ref) || !GitService.isUncommitted(data.ref)) {\n                this.sha = data.ref;\n            }\n\n            return;\n        }\n\n        if (commitOrRepoPath === undefined) {\n            super(uri);\n\n            return;\n        }\n\n        if (typeof commitOrRepoPath === 'string') {\n            super(uri);\n\n            this.repoPath = commitOrRepoPath;\n\n            return;\n        }\n\n        const [authority, fsPath] = GitUri.ensureValidUNCPath(\n            uri.authority,\n            GitUri.resolve(commitOrRepoPath.fileName || uri.fsPath, commitOrRepoPath.repoPath)\n        );\n\n        let path;\n        switch (uri.scheme) {\n            case 'https':\n            case 'http':\n            case 'file':\n                if (!fsPath) {\n                    path = slash;\n                }\n                else if (fsPath[0] !== slash) {\n                    path = `/${fsPath}`;\n                }\n                else {\n                    path = fsPath;\n                }\n                break;\n            default:\n                path = fsPath;\n                break;\n        }\n\n        super({\n            scheme: uri.scheme,\n            authority: authority,\n            path: path,\n            query: uri.query,\n            fragment: uri.fragment\n        });\n        this.repoPath = commitOrRepoPath.repoPath;\n        this.versionedPath = commitOrRepoPath.versionedPath;\n        if (GitService.isUncommittedStaged(commitOrRepoPath.sha) || !GitService.isUncommitted(commitOrRepoPath.sha)) {\n            this.sha = commitOrRepoPath.sha;\n        }\n    }\n\n    @memoize()\n    get directory(): string {\n        return GitUri.getDirectory(this.relativeFsPath);\n    }\n\n    @memoize()\n    get fileName(): string {\n        return paths.basename(this.relativeFsPath);\n    }\n\n    @memoize()\n    get isUncommitted() {\n        return GitService.isUncommitted(this.sha);\n    }\n\n    @memoize()\n    get isUncommittedStaged() {\n        return GitService.isUncommittedStaged(this.sha);\n    }\n\n    @memoize()\n    private get relativeFsPath() {\n        return this.repoPath == null || this.repoPath.length === 0\n            ? this.fsPath\n            : paths.relative(this.repoPath, this.fsPath);\n    }\n\n    @memoize()\n    get relativePath() {\n        return Strings.normalizePath(this.relativeFsPath);\n    }\n\n    @memoize()\n    get shortSha() {\n        return GitService.shortenSha(this.sha);\n    }\n\n    @memoize<GitUri['documentUri']>(options => `${options!.useVersionedPath ? 'versioned' : ''}`)\n    documentUri({ useVersionedPath }: { useVersionedPath?: boolean } = {}) {\n        if (useVersionedPath && this.versionedPath !== undefined) return GitUri.file(this.versionedPath);\n        if (this.scheme !== 'file') return this;\n\n        return GitUri.file(this.fsPath);\n    }\n\n    equals(uri: Uri | undefined) {\n        if (!UriComparer.equals(this, uri)) return false;\n\n        return this.sha === (uri instanceof GitUri ? uri.sha : undefined);\n    }\n\n    getFormattedPath(options: { relativeTo?: string; separator?: string; suffix?: string } = {}): string {\n        const {\n            relativeTo = this.repoPath,\n            separator = Strings.pad(GlyphChars.Dot, 2, 2),\n            suffix = emptyStr\n        } = options;\n\n        const directory = GitUri.getDirectory(this.fsPath, relativeTo);\n        return `${paths.basename(this.fsPath)}${suffix}${directory ? `${separator}${directory}` : emptyStr}`;\n    }\n\n    @memoize()\n    toFileUri() {\n        return GitUri.file(this.fsPath);\n    }\n\n    private static ensureValidUNCPath(authority: string, fsPath: string): [string, string] {\n        // Taken from https://github.com/Microsoft/vscode/blob/e444eaa768a1e8bd8315f2cee265d725e96a8162/src/vs/base/common/uri.ts#L300-L325\n        // check for authority as used in UNC shares or use the path as given\n        if (fsPath[0] === slash && fsPath[1] === slash) {\n            const index = fsPath.indexOf(slash, 2);\n            if (index === -1) {\n                authority = fsPath.substring(2);\n                fsPath = slash;\n            }\n            else {\n                authority = fsPath.substring(2, index);\n                fsPath = fsPath.substring(index) || slash;\n            }\n        }\n\n        return [authority, fsPath];\n    }\n\n    static file(path: string, useVslsScheme?: boolean) {\n        const uri = Uri.file(path);\n        if (Container.vsls.isMaybeGuest && useVslsScheme !== false) {\n            return uri.with({ scheme: DocumentSchemes.Vsls });\n        }\n\n        return uri;\n    }\n\n    static fromCommit(commit: GitCommit, previous: boolean = false) {\n        if (!previous) return new GitUri(commit.uri, commit);\n\n        return new GitUri(commit.previousUri, {\n            repoPath: commit.repoPath,\n            sha: commit.previousSha\n        });\n    }\n\n    static fromFile(fileName: string, repoPath: string, ref?: string): GitUri;\n    static fromFile(file: GitFile, repoPath: string, ref?: string, original?: boolean): GitUri;\n    static fromFile(fileOrName: GitFile | string, repoPath: string, ref?: string, original: boolean = false): GitUri {\n        const uri = GitUri.resolveToUri(\n            typeof fileOrName === 'string'\n                ? fileOrName\n                : (original && fileOrName.originalFileName) || fileOrName.fileName,\n            repoPath\n        );\n        return ref == null || ref.length === 0\n            ? new GitUri(uri, repoPath)\n            : new GitUri(uri, { repoPath: repoPath, sha: ref });\n    }\n\n    static fromRepoPath(repoPath: string, ref?: string) {\n        return ref == null || ref.length === 0\n            ? new GitUri(GitUri.file(repoPath), repoPath)\n            : new GitUri(GitUri.file(repoPath), { repoPath: repoPath, sha: ref });\n    }\n\n    static fromRevisionUri(uri: Uri): GitUri {\n        return new GitUri(uri);\n    }\n\n    @debug({\n        exit: uri => `returned ${Logger.toLoggable(uri)}`\n    })\n    static async fromUri(uri: Uri) {\n        if (uri instanceof GitUri) return uri;\n\n        if (!Container.git.isTrackable(uri)) return new GitUri(uri);\n\n        if (uri.scheme === DocumentSchemes.GitLens) return new GitUri(uri);\n\n        // If this is a git uri, find its repoPath\n        if (uri.scheme === DocumentSchemes.Git) {\n            const data: { path: string; ref: string } = JSON.parse(uri.query);\n\n            const repoPath = await Container.git.getRepoPath(data.path);\n\n            let ref;\n            switch (data.ref) {\n                case emptyStr:\n                case '~':\n                    ref = GitService.uncommittedStagedSha;\n                    break;\n\n                case null:\n                    ref = undefined;\n                    break;\n\n                default:\n                    ref = data.ref;\n                    break;\n            }\n\n            const commitish: GitCommitish = {\n                fileName: data.path,\n                repoPath: repoPath!,\n                sha: ref\n            };\n            return new GitUri(uri, commitish);\n        }\n\n        return new GitUri(uri, await Container.git.getRepoPath(uri));\n    }\n\n    static getDirectory(fileName: string, relativeTo?: string): string {\n        let directory: string | undefined = paths.dirname(fileName);\n        if (relativeTo !== undefined) {\n            directory = paths.relative(relativeTo, directory);\n        }\n        directory = Strings.normalizePath(directory);\n        return directory == null || directory.length === 0 || directory === '.' ? emptyStr : directory;\n    }\n\n    static getFormattedPath(\n        fileNameOrUri: string | Uri,\n        options: { relativeTo?: string; separator?: string; suffix?: string } = {}\n    ): string {\n        const { relativeTo, separator = Strings.pad(GlyphChars.Dot, 2, 2), suffix = emptyStr } = options;\n\n        let fileName: string;\n        if (fileNameOrUri instanceof Uri) {\n            if (fileNameOrUri instanceof GitUri) return fileNameOrUri.getFormattedPath(options);\n\n            fileName = fileNameOrUri.fsPath;\n        }\n        else {\n            fileName = fileNameOrUri;\n        }\n\n        const directory = GitUri.getDirectory(fileName, relativeTo);\n        return !directory\n            ? `${paths.basename(fileName)}${suffix}`\n            : `${paths.basename(fileName)}${suffix}${separator}${directory}`;\n    }\n\n    static relativeTo(fileNameOrUri: string | Uri, relativeTo: string | undefined): string {\n        const fileName = fileNameOrUri instanceof Uri ? fileNameOrUri.fsPath : fileNameOrUri;\n        const relativePath =\n            relativeTo == null || relativeTo.length === 0 || !paths.isAbsolute(fileName)\n                ? fileName\n                : paths.relative(relativeTo, fileName);\n        return Strings.normalizePath(relativePath);\n    }\n\n    static git(fileName: string, repoPath?: string) {\n        const path = GitUri.resolve(fileName, repoPath);\n        return Uri.parse(\n            // Change encoded / back to / otherwise uri parsing won't work properly\n            `${DocumentSchemes.Git}:${encodeURIComponent(path).replace(/%2F/g, slash)}?${encodeURIComponent(\n                JSON.stringify({\n                    // Ensure we use the fsPath here, otherwise the url won't open properly\n                    path: Uri.file(path).fsPath,\n                    ref: '~'\n                })\n            )}`\n        );\n    }\n\n    static resolve(fileName: string, repoPath?: string) {\n        const normalizedFileName = Strings.normalizePath(fileName);\n        if (repoPath === undefined) return normalizedFileName;\n\n        const normalizedRepoPath = Strings.normalizePath(repoPath);\n        if (normalizedFileName == null || normalizedFileName.length === 0) return normalizedRepoPath;\n\n        if (normalizedFileName.startsWith(normalizedRepoPath)) return normalizedFileName;\n\n        return Strings.normalizePath(paths.join(normalizedRepoPath, normalizedFileName));\n    }\n\n    static resolveToUri(fileName: string, repoPath?: string) {\n        return GitUri.file(this.resolve(fileName, repoPath));\n    }\n\n    static toKey(fileName: string): string;\n    static toKey(uri: Uri): string;\n    static toKey(fileNameOrUri: string | Uri): string;\n    static toKey(fileNameOrUri: string | Uri): string {\n        return Strings.normalizePath(typeof fileNameOrUri === 'string' ? fileNameOrUri : fileNameOrUri.fsPath);\n\n        // return typeof fileNameOrUri === 'string'\n        //     ? GitUri.file(fileNameOrUri).toString(true)\n        //     : fileNameOrUri.toString(true);\n    }\n\n    static toRevisionUri(uri: GitUri): Uri;\n    static toRevisionUri(ref: string, fileName: string, repoPath: string): Uri;\n    static toRevisionUri(ref: string, file: GitFile, repoPath: string): Uri;\n    static toRevisionUri(uriOrRef: string | GitUri, fileNameOrFile?: string | GitFile, repoPath?: string): Uri {\n        let fileName: string;\n        let ref: string | undefined;\n        let shortSha: string | undefined;\n\n        if (typeof uriOrRef === 'string') {\n            if (typeof fileNameOrFile === 'string') {\n                fileName = fileNameOrFile;\n            }\n            else {\n                fileName = GitUri.resolve(fileNameOrFile!.fileName, repoPath);\n            }\n\n            ref = uriOrRef;\n            shortSha = GitService.shortenSha(ref);\n        }\n        else {\n            fileName = uriOrRef.fsPath!;\n            repoPath = uriOrRef.repoPath!;\n            ref = uriOrRef.sha;\n            shortSha = uriOrRef.shortSha;\n        }\n\n        if (ref == null || ref.length === 0) {\n            return Uri.file(fileName);\n        }\n\n        if (GitService.isUncommitted(ref)) {\n            return GitService.isUncommittedStaged(ref) ? GitUri.git(fileName, repoPath) : Uri.file(fileName);\n        }\n\n        const filePath = Strings.normalizePath(fileName, { addLeadingSlash: true });\n        const data: UriRevisionData = {\n            path: filePath,\n            ref: ref,\n            repoPath: Strings.normalizePath(repoPath!)\n        };\n\n        const uri = Uri.parse(\n            // Replace / in the authority with a similar unicode characters otherwise parsing will be wrong\n            `${DocumentSchemes.GitLens}://${encodeURIComponent(shortSha!.replace(/\\//g, '\\u200A\\u2215\\u200A'))}${\n                // Change encoded / back to / otherwise uri parsing won't work properly\n                filePath === slash ? emptyStr : encodeURIComponent(filePath).replace(/%2F/g, slash)\n            }?${encodeURIComponent(JSON.stringify(data))}`\n        );\n        return uri;\n    }\n}\n\ninterface UriRevisionData {\n    path: string;\n    ref?: string;\n    repoPath: string;\n}\n","'use strict';\nimport { GlyphChars } from '../../constants';\nimport { Strings } from '../../system';\nimport { GitUri } from '../gitUri';\nimport { GitLogCommit } from './logCommit';\n\nexport declare type GitFileStatus = '!' | '?' | 'A' | 'C' | 'D' | 'M' | 'R' | 'T' | 'U' | 'X' | 'B';\n\nexport interface GitFile {\n    status: GitFileStatus;\n    readonly repoPath?: string;\n    readonly indexStatus?: GitFileStatus;\n    readonly workingTreeStatus?: GitFileStatus;\n    readonly fileName: string;\n    readonly originalFileName?: string;\n}\n\nexport interface GitFileWithCommit extends GitFile {\n    readonly commit: GitLogCommit;\n}\n\nexport namespace GitFile {\n    export function getFormattedDirectory(\n        file: GitFile,\n        includeOriginal: boolean = false,\n        relativeTo?: string\n    ): string {\n        const directory = GitUri.getDirectory(file.fileName, relativeTo);\n        return includeOriginal && file.status === 'R' && file.originalFileName\n            ? `${directory} ${Strings.pad(GlyphChars.ArrowLeft, 1, 1)} ${file.originalFileName}`\n            : directory;\n    }\n\n    export function getFormattedPath(\n        file: GitFile,\n        options: { relativeTo?: string; separator?: string; suffix?: string } = {}\n    ): string {\n        return GitUri.getFormattedPath(file.fileName, options);\n    }\n\n    export function getOriginalRelativePath(file: GitFile, relativeTo?: string): string {\n        if (file.originalFileName == null || file.originalFileName.length === 0) return '';\n\n        return GitUri.relativeTo(file.originalFileName, relativeTo);\n    }\n\n    export function getRelativePath(file: GitFile, relativeTo?: string): string {\n        return GitUri.relativeTo(file.fileName, relativeTo);\n    }\n\n    const statusIconsMap = {\n        '!': 'icon-status-ignored.svg',\n        '?': 'icon-status-untracked.svg',\n        A: 'icon-status-added.svg',\n        C: 'icon-status-copied.svg',\n        D: 'icon-status-deleted.svg',\n        M: 'icon-status-modified.svg',\n        R: 'icon-status-renamed.svg',\n        T: 'icon-status-modified.svg',\n        U: 'icon-status-conflict.svg',\n        X: 'icon-status-unknown.svg',\n        B: 'icon-status-unknown.svg'\n    };\n\n    export function getStatusIcon(status: GitFileStatus): string {\n        return statusIconsMap[status] || statusIconsMap['X'];\n    }\n\n    const statusOcticonsMap = {\n        '!': '$(diff-ignored)',\n        '?': '$(diff-added)',\n        A: '$(diff-added)',\n        C: '$(diff-added)',\n        D: '$(diff-removed)',\n        M: '$(diff-modified)',\n        R: '$(diff-renamed)',\n        T: '$(diff-modified)',\n        U: '$(alert)',\n        X: '$(question)',\n        B: '$(question)'\n    };\n\n    export function getStatusOcticon(status: GitFileStatus, missing: string = GlyphChars.Space.repeat(4)): string {\n        return statusOcticonsMap[status] || missing;\n    }\n\n    const statusTextMap = {\n        '!': 'Ignored',\n        '?': 'Untracked',\n        A: 'Added',\n        C: 'Copied',\n        D: 'Deleted',\n        M: 'Modified',\n        R: 'Renamed',\n        T: 'Modified',\n        U: 'Conflict',\n        X: 'Unknown',\n        B: 'Unknown'\n    };\n\n    export function getStatusText(status: GitFileStatus): string {\n        return statusTextMap[status] || statusTextMap['X'];\n    }\n}\n","'use strict';\nimport { Uri } from 'vscode';\nimport { GlyphChars } from '../../constants';\nimport { memoize, Strings } from '../../system';\nimport { GitUri } from '../gitUri';\nimport { GitBranch, GitTrackingState } from './branch';\nimport { GitFile, GitFileStatus } from './file';\n\nexport class GitStatus {\n    readonly detached: boolean;\n\n    constructor(\n        public readonly repoPath: string,\n        public readonly branch: string,\n        public readonly sha: string,\n        public readonly files: GitStatusFile[],\n        public readonly state: GitTrackingState,\n        public readonly upstream?: string\n    ) {\n        this.detached = GitBranch.isDetached(branch);\n        if (this.detached) {\n            this.branch = GitBranch.formatDetached(this.sha);\n        }\n    }\n\n    get ref() {\n        return this.detached ? this.sha : this.branch;\n    }\n\n    @memoize()\n    getDiffStatus() {\n        const diff = {\n            added: 0,\n            deleted: 0,\n            changed: 0\n        };\n\n        if (this.files.length === 0) return diff;\n\n        for (const f of this.files) {\n            switch (f.status) {\n                case 'A':\n                case '?':\n                    diff.added++;\n                    break;\n                case 'D':\n                    diff.deleted++;\n                    break;\n                default:\n                    diff.changed++;\n                    break;\n            }\n        }\n\n        return diff;\n    }\n\n    getFormattedDiffStatus({\n        compact,\n        empty,\n        expand,\n        prefix = '',\n        separator = ' ',\n        suffix = ''\n    }: {\n        compact?: boolean;\n        empty?: string;\n        expand?: boolean;\n        prefix?: string;\n        separator?: string;\n        suffix?: string;\n    } = {}): string {\n        const { added, changed, deleted } = this.getDiffStatus();\n        if (added === 0 && changed === 0 && deleted === 0) return empty || '';\n\n        if (expand) {\n            let status = '';\n            if (added) {\n                status += `${Strings.pluralize('file', added)} added`;\n            }\n            if (changed) {\n                status += `${status.length === 0 ? '' : separator}${Strings.pluralize('file', changed)} changed`;\n            }\n            if (deleted) {\n                status += `${status.length === 0 ? '' : separator}${Strings.pluralize('file', deleted)} deleted`;\n            }\n            return `${prefix}${status}${suffix}`;\n        }\n\n        let status = '';\n        if (compact) {\n            if (added !== 0) {\n                status += `+${added}`;\n            }\n            if (changed !== 0) {\n                status += `${status.length === 0 ? '' : separator}~${changed}`;\n            }\n            if (deleted !== 0) {\n                status += `${status.length === 0 ? '' : separator}-${deleted}`;\n            }\n        }\n        else {\n            status += `+${added}${separator}~${changed}${separator}-${deleted}`;\n        }\n\n        return `${prefix}${status}${suffix}`;\n    }\n\n    getUpstreamStatus(options: {\n        empty?: string;\n        expand?: boolean;\n        prefix?: string;\n        separator?: string;\n        suffix?: string;\n    }): string {\n        return GitStatus.getUpstreamStatus(this.upstream, this.state, options);\n    }\n\n    static getUpstreamStatus(\n        upstream: string | undefined,\n        state: { ahead: number; behind: number },\n        options: { empty?: string; expand?: boolean; prefix?: string; separator?: string; suffix?: string } = {}\n    ): string {\n        if (upstream === undefined || (state.behind === 0 && state.ahead === 0)) return options.empty || '';\n\n        const { expand, prefix = '', separator = ' ', suffix = '' } = options;\n        if (expand) {\n            let status = '';\n            if (state.behind) {\n                status += `${Strings.pluralize('commit', state.behind)} behind`;\n            }\n            if (state.ahead) {\n                status += `${status.length === 0 ? '' : separator}${Strings.pluralize('commit', state.ahead)} ahead`;\n            }\n            return `${prefix}${status}${suffix}`;\n        }\n\n        return `${prefix}${state.behind}${GlyphChars.ArrowDown}${separator}${state.ahead}${\n            GlyphChars.ArrowUp\n        }${suffix}`;\n    }\n}\n\nexport class GitStatusFile implements GitFile {\n    constructor(\n        public readonly repoPath: string,\n        public readonly indexStatus: GitFileStatus | undefined,\n        public readonly workingTreeStatus: GitFileStatus | undefined,\n        public readonly fileName: string,\n        public readonly originalFileName?: string\n    ) {}\n\n    get status(): GitFileStatus {\n        return (this.indexStatus || this.workingTreeStatus || '?') as GitFileStatus;\n    }\n\n    get staged() {\n        return this.indexStatus !== undefined;\n    }\n\n    @memoize()\n    get uri(): Uri {\n        return GitUri.resolveToUri(this.fileName, this.repoPath);\n    }\n\n    getFormattedDirectory(includeOriginal: boolean = false): string {\n        return GitFile.getFormattedDirectory(this, includeOriginal);\n    }\n\n    getFormattedPath(options: { relativeTo?: string; separator?: string; suffix?: string } = {}): string {\n        return GitFile.getFormattedPath(this, options);\n    }\n\n    getOcticon() {\n        return GitFile.getStatusOcticon(this.status);\n    }\n\n    getStatusText(): string {\n        return GitFile.getStatusText(this.status);\n    }\n\n    with(changes: {\n        indexStatus?: GitFileStatus | null;\n        workTreeStatus?: GitFileStatus | null;\n        fileName?: string;\n        originalFileName?: string | null;\n    }): GitStatusFile {\n        return new GitStatusFile(\n            this.repoPath,\n            this.getChangedValue(changes.indexStatus, this.indexStatus) as GitFileStatus,\n            this.getChangedValue(changes.workTreeStatus, this.workingTreeStatus) as GitFileStatus,\n            changes.fileName || this.fileName,\n            this.getChangedValue(changes.originalFileName, this.originalFileName)\n        );\n    }\n\n    protected getChangedValue<T>(change: T | null | undefined, original: T | undefined): T | undefined {\n        if (change === undefined) return original;\n        return change !== null ? change : undefined;\n    }\n}\n","'use strict';\nimport { StarredBranches, WorkspaceState } from '../../constants';\nimport { Container } from '../../container';\nimport { Git } from '../git';\nimport { GitStatus } from './status';\nimport { memoize } from '../../system';\n\nexport interface GitTrackingState {\n    ahead: number;\n    behind: number;\n}\n\nexport class GitBranch {\n    readonly detached: boolean;\n    readonly id: string;\n    readonly tracking?: string;\n    readonly state: GitTrackingState;\n\n    constructor(\n        public readonly repoPath: string,\n        public readonly name: string,\n        public readonly remote: boolean,\n        public readonly current: boolean,\n        public readonly sha?: string,\n        tracking?: string,\n        ahead: number = 0,\n        behind: number = 0,\n        detached: boolean = false\n    ) {\n        this.id = `${repoPath}|${remote ? 'remotes/' : 'heads/'}${name}`;\n\n        this.detached = detached || (this.current ? GitBranch.isDetached(name) : false);\n        if (this.detached) {\n            this.name = GitBranch.formatDetached(this.sha!);\n        }\n\n        this.tracking = tracking == null || tracking.length === 0 ? undefined : tracking;\n        this.state = {\n            ahead: ahead,\n            behind: behind\n        };\n    }\n\n    get ref() {\n        return this.detached ? this.sha! : this.name;\n    }\n\n    @memoize()\n    getBasename(): string {\n        const name = this.getName();\n        const index = name.lastIndexOf('/');\n        return index !== -1 ? name.substring(index + 1) : name;\n    }\n\n    @memoize()\n    getName(): string {\n        return this.remote ? this.name.substring(this.name.indexOf('/') + 1) : this.name;\n    }\n\n    @memoize()\n    getRemote(): string | undefined {\n        if (this.remote) return GitBranch.getRemote(this.name);\n        if (this.tracking !== undefined) return GitBranch.getRemote(this.tracking);\n\n        return undefined;\n    }\n\n    getTrackingStatus(options?: {\n        empty?: string;\n        expand?: boolean;\n        prefix?: string;\n        separator?: string;\n        suffix?: string;\n    }): string {\n        return GitStatus.getUpstreamStatus(this.tracking, this.state, options);\n    }\n\n    get starred() {\n        const starred = Container.context.workspaceState.get<StarredBranches>(WorkspaceState.StarredBranches);\n        return starred !== undefined && starred[this.id] === true;\n    }\n\n    star() {\n        return this.updateStarred(true);\n    }\n\n    unstar() {\n        return this.updateStarred(false);\n    }\n\n    private async updateStarred(star: boolean) {\n        let starred = Container.context.workspaceState.get<StarredBranches>(WorkspaceState.StarredBranches);\n        if (starred === undefined) {\n            starred = Object.create(null);\n        }\n\n        if (star) {\n            starred![this.id] = true;\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\n            const { [this.id]: _, ...rest } = starred!;\n            starred = rest;\n        }\n        await Container.context.workspaceState.update(WorkspaceState.StarredBranches, starred);\n    }\n\n    static formatDetached(sha: string): string {\n        return `(${Git.shortenSha(sha)}...)`;\n    }\n\n    static getRemote(branch: string): string {\n        return branch.substring(0, branch.indexOf('/'));\n    }\n\n    static isDetached(name: string): boolean {\n        // If there is whitespace in the name assume this is not a valid branch name\n        // Deals with detached HEAD states\n        return name.match(/\\s/) !== null || name.match(/\\(detached\\)/) !== null;\n    }\n}\n","'use strict';\nimport { GitBranch } from '../models/branch';\nimport { debug } from '../../system';\n\nconst branchWithTrackingRegex = /^<h>(.+)<n>(.+)<u>(.*)<t>(?:\\[(?:ahead ([0-9]+))?[,\\s]*(?:behind ([0-9]+))?]|\\[gone])?<r>(.*)$/gm;\n\n// Using %x00 codes because some shells seem to try to expand things if not\nconst lb = '%3c'; // `%${'<'.charCodeAt(0).toString(16)}`;\nconst rb = '%3e'; // `%${'>'.charCodeAt(0).toString(16)}`;\n\nexport class GitBranchParser {\n    static defaultFormat = [\n        `${lb}h${rb}%(HEAD)`, // HEAD indicator\n        `${lb}n${rb}%(refname)`, // branch name\n        `${lb}u${rb}%(upstream:short)`, // branch upstream\n        `${lb}t${rb}%(upstream:track)`, // branch upstream tracking state\n        `${lb}r${rb}%(objectname)` // ref\n    ].join('');\n\n    @debug({ args: false, singleLine: true })\n    static parse(data: string, repoPath: string): GitBranch[] {\n        const branches: GitBranch[] = [];\n\n        if (!data) return branches;\n\n        let current;\n        let name;\n        let tracking;\n        let ahead;\n        let behind;\n        let ref;\n\n        let remote;\n\n        let match: RegExpExecArray | null;\n        do {\n            match = branchWithTrackingRegex.exec(data);\n            if (match == null) break;\n\n            [, current, name, tracking, ahead, behind, ref] = match;\n\n            if (name.startsWith('refs/remotes/')) {\n                // Strip off refs/remotes/\n                name = name.substr(13);\n                remote = true;\n            }\n            else {\n                // Strip off refs/heads/\n                name = name.substr(11);\n                remote = false;\n            }\n\n            branches.push(\n                new GitBranch(\n                    repoPath,\n                    name,\n                    remote,\n                    current.charCodeAt(0) === 42, // '*',\n                    // Stops excessive memory usage -- https://bugs.chromium.org/p/v8/issues/detail?id=2869\n                    ref == null || ref.length === 0 ? undefined : ` ${ref}`.substr(1),\n                    // Stops excessive memory usage -- https://bugs.chromium.org/p/v8/issues/detail?id=2869\n                    tracking == null || tracking.length === 0 ? undefined : ` ${tracking}`.substr(1),\n                    Number(ahead) || 0,\n                    Number(behind) || 0\n                )\n            );\n        } while (match != null);\n\n        return branches;\n    }\n}\n","'use strict';\nimport { GitDiff, GitDiffHunk, GitDiffHunkLine, GitDiffLine, GitDiffShortStat, GitFile, GitFileStatus } from '../git';\nimport { debug, Strings } from '../../system';\n\nconst nameStatusDiffRegex = /^(.*?)\\t(.*?)(?:\\t(.*?))?$/gm;\nconst shortStatDiffRegex = /^\\s*(\\d+)\\sfiles? changed(?:,\\s+(\\d+)\\s+insertions?\\(\\+\\))?(?:,\\s+(\\d+)\\s+deletions?\\(-\\))?/;\nconst unifiedDiffRegex = /^@@ -([\\d]+)(?:,([\\d]+))? \\+([\\d]+)(?:,([\\d]+))? @@(?:.*?)\\n([\\s\\S]*?)(?=^@@)/gm;\n\nexport class GitDiffParser {\n    @debug({ args: false, singleLine: true })\n    static parse(data: string, debug: boolean = false): GitDiff | undefined {\n        if (!data) return undefined;\n\n        const hunks: GitDiffHunk[] = [];\n\n        let previousStart;\n        let previousCount;\n        let currentStart;\n        let currentCount;\n        let hunk;\n\n        let match: RegExpExecArray | null;\n        do {\n            match = unifiedDiffRegex.exec(`${data}\\n@@`);\n            if (match == null) break;\n\n            [, previousStart, previousCount, currentStart, currentCount, hunk] = match;\n\n            previousStart = Number(previousStart) || 0;\n            currentStart = Number(currentStart) || 0;\n\n            hunks.push(\n                new GitDiffHunk(\n                    // Stops excessive memory usage -- https://bugs.chromium.org/p/v8/issues/detail?id=2869\n                    ` ${hunk}`.substr(1),\n                    {\n                        start: currentStart,\n                        end: currentStart + (Number(currentCount) || 0)\n                    },\n                    {\n                        start: previousStart,\n                        end: previousStart + (Number(previousCount) || 0)\n                    }\n                )\n            );\n        } while (match != null);\n\n        if (!hunks.length) return undefined;\n\n        const diff: GitDiff = {\n            diff: debug ? data : undefined,\n            hunks: hunks\n        };\n        return diff;\n    }\n\n    @debug({ args: false, singleLine: true })\n    static parseHunk(hunk: GitDiffHunk): GitDiffHunkLine[] {\n        const currentLines: (GitDiffLine | undefined)[] = [];\n        const previousLines: (GitDiffLine | undefined)[] = [];\n\n        let removed = 0;\n        for (const l of Strings.lines(hunk.diff)) {\n            switch (l[0]) {\n                case '+':\n                    currentLines.push({\n                        line: ` ${l.substring(1)}`,\n                        state: 'added'\n                    });\n\n                    if (removed > 0) {\n                        removed--;\n                    }\n                    else {\n                        previousLines.push(undefined);\n                    }\n\n                    break;\n\n                case '-':\n                    removed++;\n\n                    previousLines.push({\n                        line: ` ${l.substring(1)}`,\n                        state: 'removed'\n                    });\n\n                    break;\n\n                default:\n                    while (removed > 0) {\n                        removed--;\n                        currentLines.push(undefined);\n                    }\n\n                    currentLines.push({ line: l, state: 'unchanged' });\n                    previousLines.push({ line: l, state: 'unchanged' });\n\n                    break;\n            }\n        }\n\n        while (removed > 0) {\n            removed--;\n            currentLines.push(undefined);\n        }\n\n        const hunkLines: GitDiffHunkLine[] = [];\n\n        for (let i = 0; i < currentLines.length; i++) {\n            hunkLines.push({\n                hunk: hunk,\n                current: currentLines[i],\n                previous: previousLines[i]\n            });\n        }\n\n        return hunkLines;\n    }\n\n    @debug({ args: false, singleLine: true })\n    static parseNameStatus(data: string, repoPath: string): GitFile[] | undefined {\n        if (!data) return undefined;\n\n        const files: GitFile[] = [];\n\n        let status: string;\n        let fileName: string;\n        let originalFileName: string;\n\n        let match: RegExpExecArray | null;\n        do {\n            match = nameStatusDiffRegex.exec(data);\n            if (match == null) break;\n\n            [, status, fileName, originalFileName] = match;\n\n            files.push({\n                repoPath: repoPath,\n                status: (status[0] !== '.' ? status[0].trim() : '?') as GitFileStatus,\n                indexStatus: undefined,\n                workingTreeStatus: undefined,\n                // Stops excessive memory usage -- https://bugs.chromium.org/p/v8/issues/detail?id=2869\n                fileName: ` ${fileName}`.substr(1),\n                // Stops excessive memory usage -- https://bugs.chromium.org/p/v8/issues/detail?id=2869\n                originalFileName:\n                    originalFileName == null || originalFileName.length === 0\n                        ? undefined\n                        : ` ${originalFileName}`.substr(1)\n            });\n        } while (match != null);\n\n        return files;\n    }\n\n    @debug({ args: false, singleLine: true })\n    static parseShortStat(data: string): GitDiffShortStat | undefined {\n        if (!data) return undefined;\n\n        const match = shortStatDiffRegex.exec(data);\n        if (match == null) return undefined;\n\n        const [, files, insertions, deletions] = match;\n\n        const diffShortStat: GitDiffShortStat = {\n            files: files == null ? 0 : parseInt(files, 10),\n            insertions: insertions == null ? 0 : parseInt(insertions, 10),\n            deletions: deletions == null ? 0 : parseInt(deletions, 10)\n        };\n\n        return diffShortStat;\n    }\n}\n","'use strict';\nimport * as paths from 'path';\nimport { Range } from 'vscode';\nimport { Git, GitAuthor, GitCommitType, GitFile, GitFileStatus, GitLog, GitLogCommit, GitLogCommitLine } from '../git';\nimport { Arrays, debug, Strings } from '../../system';\n\nconst emptyEntry: LogEntry = {};\nconst emptyStr = '';\nconst slash = '/';\n\nconst diffRegex = /diff --git a\\/(.*) b\\/(.*)/;\nconst diffRangeRegex = /^@@ -(\\d+?),(\\d+?) \\+(\\d+?),(\\d+?) @@/;\n\nexport const fileStatusRegex = /(\\S)\\S*\\t([^\\t\\n]+)(?:\\t(.+))?/;\nconst logFileSimpleRegex = /^<r> (.*)\\s*(?:(?:diff --git a\\/(.*) b\\/(.*))|(?:(\\S)\\S*\\t([^\\t\\n]+)(?:\\t(.+))?))/gm;\nconst logFileSimpleRenamedRegex = /^<r> (\\S+)\\s*(.*)$/s;\nconst logFileSimpleRenamedFilesRegex = /^(\\S)\\S*\\t([^\\t\\n]+)(?:\\t(.+)?)$/gm;\n\n// Using %x00 codes because some shells seem to try to expand things if not\nconst lb = '%x3c'; // `%x${'<'.charCodeAt(0).toString(16)}`;\nconst rb = '%x3e'; // `%x${'>'.charCodeAt(0).toString(16)}`;\nconst sl = '%x2f'; // `%x${'/'.charCodeAt(0).toString(16)}`;\nconst sp = '%x20'; // `%x${' '.charCodeAt(0).toString(16)}`;\n\ninterface LogEntry {\n    ref?: string;\n\n    author?: string;\n    date?: string;\n    committedDate?: string;\n    email?: string;\n\n    parentShas?: string[];\n\n    fileName?: string;\n    originalFileName?: string;\n    files?: GitFile[];\n\n    status?: GitFileStatus;\n\n    summary?: string;\n\n    line?: GitLogCommitLine;\n}\n\nexport class GitLogParser {\n    static defaultFormat = [\n        `${lb}${sl}f${rb}`,\n        `${lb}r${rb}${sp}%H`, // ref\n        `${lb}a${rb}${sp}%aN`, // author\n        `${lb}e${rb}${sp}%aE`, // email\n        `${lb}d${rb}${sp}%at`, // date\n        `${lb}c${rb}${sp}%ct`, // committed date\n        `${lb}p${rb}${sp}%P`, // parents\n        `${lb}s${rb}`,\n        '%B', // summary\n        `${lb}${sl}s${rb}`,\n        `${lb}f${rb}`\n    ].join('%n');\n\n    static simpleFormat = `${lb}r${rb}${sp}%H`;\n\n    @debug({ args: false })\n    static parse(\n        data: string,\n        type: GitCommitType,\n        repoPath: string | undefined,\n        fileName: string | undefined,\n        sha: string | undefined,\n        currentUser: { name?: string; email?: string } | undefined,\n        maxCount: number | undefined,\n        reverse: boolean,\n        range: Range | undefined\n    ): GitLog | undefined {\n        if (!data) return undefined;\n\n        let relativeFileName: string;\n        let recentCommit: GitLogCommit | undefined = undefined;\n\n        let entry: LogEntry = emptyEntry;\n        let line: string | undefined = undefined;\n        let token: number;\n\n        let i = 0;\n        let first = true;\n\n        const lines = Strings.lines(`${data}</f>`);\n        // Skip the first line since it will always be </f>\n        let next = lines.next();\n        if (next.done) return undefined;\n\n        if (repoPath !== undefined) {\n            repoPath = Strings.normalizePath(repoPath);\n        }\n\n        const authors: Map<string, GitAuthor> = new Map();\n        const commits: Map<string, GitLogCommit> = new Map();\n        let truncationCount = maxCount;\n\n        let match;\n        let renamedFileName;\n\n        while (true) {\n            next = lines.next();\n            if (next.done) break;\n\n            line = next.value;\n\n            // Since log --reverse doesn't properly honor a max count -- enforce it here\n            if (reverse && maxCount && i >= maxCount) break;\n\n            // <1-char token> data\n            // e.g. <r> bd1452a2dc\n            token = line.charCodeAt(1);\n\n            switch (token) {\n                case 114: // 'r': // ref\n                    entry = {\n                        ref: line.substring(4)\n                    };\n                    break;\n\n                case 97: // 'a': // author\n                    if (Git.isUncommitted(entry.ref)) {\n                        entry.author = 'You';\n                    }\n                    else {\n                        entry.author = line.substring(4);\n                    }\n                    break;\n\n                case 101: // 'e': // author-mail\n                    entry.email = line.substring(4);\n                    break;\n\n                case 100: // 'd': // author-date\n                    entry.date = line.substring(4);\n                    break;\n\n                case 99: // 'c': // committer-date\n                    entry.committedDate = line.substring(4);\n                    break;\n\n                case 112: // 'p': // parents\n                    entry.parentShas = line.substring(4).split(' ');\n                    break;\n\n                case 115: // 's': // summary\n                    while (true) {\n                        next = lines.next();\n                        if (next.done) break;\n\n                        line = next.value;\n                        if (line === '</s>') break;\n\n                        if (entry.summary === undefined) {\n                            entry.summary = line;\n                        }\n                        else {\n                            entry.summary += `\\n${line}`;\n                        }\n                    }\n\n                    // Remove the trailing newline\n                    if (entry.summary != null && entry.summary.charCodeAt(entry.summary.length - 1) === 10) {\n                        entry.summary = entry.summary.slice(0, -1);\n                    }\n                    break;\n\n                case 102: {\n                    // 'f': // files\n                    // Skip the blank line git adds before the files\n                    next = lines.next();\n                    if (next.done || next.value === '</f>') break;\n\n                    while (true) {\n                        next = lines.next();\n                        if (next.done) break;\n\n                        line = next.value;\n                        if (line === '</f>') break;\n\n                        if (line.startsWith('warning:')) continue;\n\n                        if (type === GitCommitType.Log) {\n                            match = fileStatusRegex.exec(line);\n                            if (match != null) {\n                                if (entry.files === undefined) {\n                                    entry.files = [];\n                                }\n\n                                renamedFileName = match[3];\n                                if (renamedFileName !== undefined) {\n                                    entry.files.push({\n                                        status: match[1] as GitFileStatus,\n                                        fileName: renamedFileName,\n                                        originalFileName: match[2]\n                                    });\n                                }\n                                else {\n                                    entry.files.push({\n                                        status: match[1] as GitFileStatus,\n                                        fileName: match[2]\n                                    });\n                                }\n                            }\n                        }\n                        else {\n                            match = diffRegex.exec(line);\n                            if (match != null) {\n                                [, entry.originalFileName, entry.fileName] = match;\n                                if (entry.fileName === entry.originalFileName) {\n                                    entry.originalFileName = undefined;\n                                    entry.status = 'M';\n                                }\n                                else {\n                                    entry.status = 'R';\n                                }\n\n                                next = lines.next();\n                                next = lines.next();\n                                next = lines.next();\n\n                                match = diffRangeRegex.exec(next.value);\n                                if (match !== null) {\n                                    entry.line = {\n                                        from: {\n                                            line: parseInt(match[1], 10),\n                                            count: parseInt(match[2], 10)\n                                        },\n                                        to: {\n                                            line: parseInt(match[3], 10),\n                                            count: parseInt(match[4], 10)\n                                        }\n                                    };\n                                }\n\n                                while (true) {\n                                    next = lines.next();\n                                    if (next.done || next.value === '</f>') break;\n                                }\n                                break;\n                            }\n                            else {\n                                match = fileStatusRegex.exec(line);\n                                if (match != null) {\n                                    entry.status = match[1] as GitFileStatus;\n                                    renamedFileName = match[3];\n                                    if (renamedFileName !== undefined) {\n                                        entry.fileName = renamedFileName;\n                                        entry.originalFileName = match[2];\n                                    }\n                                    else {\n                                        entry.fileName = match[2];\n                                    }\n                                }\n                            }\n                        }\n                    }\n\n                    if (entry.files !== undefined) {\n                        entry.fileName = Arrays.filterMap(entry.files, f => (f.fileName ? f.fileName : undefined)).join(\n                            ', '\n                        );\n                    }\n\n                    if (first && repoPath === undefined && type === GitCommitType.LogFile && fileName !== undefined) {\n                        // Try to get the repoPath from the most recent commit\n                        repoPath = Strings.normalizePath(\n                            fileName.replace(\n                                fileName.startsWith(slash) ? `/${entry.fileName}` : entry.fileName!,\n                                emptyStr\n                            )\n                        );\n                        relativeFileName = Strings.normalizePath(paths.relative(repoPath, fileName));\n                    }\n                    else {\n                        relativeFileName = entry.fileName!;\n                    }\n                    first = false;\n\n                    const commit = commits.get(entry.ref!);\n                    if (commit === undefined) {\n                        i++;\n                    }\n                    else if (truncationCount) {\n                        // Since this matches an existing commit it will be skipped, so reduce our truncationCount to ensure accurate truncation detection\n                        truncationCount--;\n                    }\n\n                    recentCommit = GitLogParser.parseEntry(\n                        entry,\n                        commit,\n                        type,\n                        repoPath,\n                        relativeFileName,\n                        commits,\n                        authors,\n                        recentCommit,\n                        currentUser\n                    );\n\n                    break;\n                }\n            }\n        }\n\n        const log: GitLog = {\n            repoPath: repoPath!,\n            authors: authors,\n            commits: commits,\n            sha: sha,\n            count: i,\n            maxCount: maxCount,\n            range: range,\n            truncated: Boolean(truncationCount && i >= truncationCount && truncationCount !== 1)\n        };\n        return log;\n    }\n\n    private static parseEntry(\n        entry: LogEntry,\n        commit: GitLogCommit | undefined,\n        type: GitCommitType,\n        repoPath: string | undefined,\n        relativeFileName: string,\n        commits: Map<string, GitLogCommit>,\n        authors: Map<string, GitAuthor>,\n        recentCommit: GitLogCommit | undefined,\n        currentUser: { name?: string; email?: string } | undefined\n    ): GitLogCommit | undefined {\n        if (commit === undefined) {\n            if (entry.author !== undefined) {\n                if (\n                    currentUser !== undefined &&\n                    // Name or e-mail is configured\n                    (currentUser.name !== undefined || currentUser.email !== undefined) &&\n                    // Match on name if configured\n                    (currentUser.name === undefined || currentUser.name === entry.author) &&\n                    // Match on email if configured\n                    (currentUser.email === undefined || currentUser.email === entry.email)\n                ) {\n                    entry.author = 'You';\n                }\n\n                let author = authors.get(entry.author);\n                if (author === undefined) {\n                    author = {\n                        name: entry.author,\n                        lineCount: 0\n                    };\n                    authors.set(entry.author, author);\n                }\n            }\n\n            const originalFileName =\n                entry.originalFileName || (relativeFileName !== entry.fileName ? entry.fileName : undefined);\n            if (type === GitCommitType.LogFile) {\n                entry.files = [\n                    {\n                        status: entry.status!,\n                        fileName: relativeFileName,\n                        originalFileName: originalFileName\n                    }\n                ];\n            }\n\n            commit = new GitLogCommit(\n                type,\n                repoPath!,\n                entry.ref!,\n                entry.author!,\n                entry.email,\n                new Date((entry.date! as any) * 1000),\n                new Date((entry.committedDate! as any) * 1000),\n                entry.summary === undefined ? emptyStr : entry.summary,\n                relativeFileName,\n                entry.files || [],\n                entry.status,\n                originalFileName,\n                type === GitCommitType.Log ? entry.parentShas![0] : undefined,\n                undefined,\n                entry.parentShas!,\n                entry.line\n            );\n\n            commits.set(entry.ref!, commit);\n        }\n        // else {\n        //     Logger.log(`merge commit? ${entry.sha}`);\n        // }\n\n        if (recentCommit !== undefined) {\n            // If the commit sha's match (merge commit), just forward it along\n            commit.nextSha = commit.sha !== recentCommit.sha ? recentCommit.sha : recentCommit.nextSha;\n\n            // Only add a filename if this is a file log\n            if (type === GitCommitType.LogFile) {\n                recentCommit.previousFileName = commit.originalFileName || commit.fileName;\n                commit.nextFileName = recentCommit.originalFileName || recentCommit.fileName;\n            }\n        }\n        return commit;\n    }\n\n    @debug({ args: false })\n    static parseSimple(\n        data: string,\n        skip: number,\n        lineRef?: string\n    ): [string | undefined, string | undefined, GitFileStatus | undefined] {\n        // Don't skip 1 extra for line-based previous, as we will be skipping the line ref as needed\n        if (lineRef !== undefined) {\n            skip--;\n        }\n\n        let ref;\n        let diffFile;\n        let diffRenamed;\n        let status;\n        let file;\n        let renamed;\n\n        let match: RegExpExecArray | null;\n        do {\n            match = logFileSimpleRegex.exec(data);\n            if (match == null) break;\n\n            if (skip-- > 0) continue;\n\n            [, ref, diffFile, diffRenamed, status, file, renamed] = match;\n\n            if (lineRef === ref) {\n                skip++;\n\n                continue;\n            }\n\n            // Stops excessive memory usage -- https://bugs.chromium.org/p/v8/issues/detail?id=2869\n            file = ` ${diffRenamed || diffFile || renamed || file}`.substr(1);\n            // Stops excessive memory usage -- https://bugs.chromium.org/p/v8/issues/detail?id=2869\n            status = status == null || status.length === 0 ? undefined : ` ${status}`.substr(1);\n        } while (skip >= 0);\n\n        // Ensure the regex state is reset\n        logFileSimpleRegex.lastIndex = 0;\n\n        // Stops excessive memory usage -- https://bugs.chromium.org/p/v8/issues/detail?id=2869\n        return [` ${ref}`.substr(1), file, status as GitFileStatus | undefined];\n    }\n\n    @debug({ args: false })\n    static parseSimpleRenamed(\n        data: string,\n        originalFileName: string\n    ): [string | undefined, string | undefined, GitFileStatus | undefined] {\n        let match = logFileSimpleRenamedRegex.exec(data);\n        if (match == null) return [undefined, undefined, undefined];\n\n        const [, ref, files] = match;\n\n        let status;\n        let file;\n        let renamed;\n\n        do {\n            match = logFileSimpleRenamedFilesRegex.exec(files);\n            if (match == null) break;\n\n            [, status, file, renamed] = match;\n\n            if (originalFileName !== file) continue;\n\n            // Stops excessive memory usage -- https://bugs.chromium.org/p/v8/issues/detail?id=2869\n            file = ` ${renamed || file}`.substr(1);\n            // Stops excessive memory usage -- https://bugs.chromium.org/p/v8/issues/detail?id=2869\n            status = status == null || status.length === 0 ? undefined : ` ${status}`.substr(1);\n\n            break;\n        } while (match != null);\n\n        // Ensure the regex state is reset\n        logFileSimpleRenamedFilesRegex.lastIndex = 0;\n\n        // Stops excessive memory usage -- https://bugs.chromium.org/p/v8/issues/detail?id=2869\n        return [` ${ref}`.substr(1), file, status as GitFileStatus | undefined];\n    }\n}\n","'use strict';\nimport { Dates, memoize } from '../../system';\nimport { CommitFormatting, Git } from '../git';\nimport { DateStyle } from '../../config';\n\nexport interface GitReflog {\n    readonly repoPath: string;\n    readonly records: GitReflogRecord[];\n\n    readonly count: number;\n    readonly maxCount: number | undefined;\n    readonly truncated: boolean;\n}\n\nexport class GitReflogRecord {\n    private _previousSha: string | undefined;\n\n    constructor(\n        public readonly repoPath: string,\n        public readonly sha: string,\n        private _selector: string,\n        public readonly date: Date,\n        public readonly command: string,\n        public readonly commandArgs: string | undefined,\n        public readonly details: string | undefined\n    ) {}\n\n    @memoize<GitReflogRecord['formatDate']>(format => (format == null ? 'MMMM Do, YYYY h:mma' : format))\n    formatDate(format?: string | null) {\n        if (format == null) {\n            format = 'MMMM Do, YYYY h:mma';\n        }\n\n        return this.dateFormatter.format(format);\n    }\n\n    formatDateFromNow() {\n        return this.dateFormatter.fromNow();\n    }\n\n    get formattedDate(): string {\n        return CommitFormatting.dateStyle === DateStyle.Absolute\n            ? this.formatDate(CommitFormatting.dateFormat)\n            : this.formatDateFromNow();\n    }\n\n    @memoize()\n    get HEAD() {\n        if (this._selector == null || this._selector.length === 0) return '';\n\n        if (this._selector.startsWith('refs/heads')) {\n            return this._selector.substr(11);\n        }\n\n        if (this._selector.startsWith('refs/remotes')) {\n            return this._selector.substr(13);\n        }\n\n        return this._selector;\n    }\n\n    get previousSha() {\n        return this._previousSha;\n    }\n\n    @memoize()\n    get previousShortSha() {\n        return Git.shortenSha(this._previousSha);\n    }\n\n    get selector() {\n        return this._selector;\n    }\n\n    @memoize()\n    get shortSha() {\n        return Git.shortenSha(this.sha);\n    }\n\n    update(previousSha?: string, selector?: string) {\n        if (previousSha !== undefined) {\n            this._previousSha = previousSha;\n        }\n        if (selector !== undefined) {\n            this._selector = selector;\n        }\n    }\n\n    @memoize()\n    private get dateFormatter(): Dates.DateFormatter {\n        return Dates.getFormatter(this.date);\n    }\n}\n","'use strict';\nimport { debug } from '../../system';\nimport { GitReflog, GitReflogRecord } from '../models/reflog';\n\nconst reflogRegex = /^<r>(.+)<d>(.+?)@{(.+)}<s>(\\w*)(.*?)(?::(.*))?$/gm;\n// const reflogRegex = /^<r>(.+)<d>(.+?)@{(.+)}<s>(\\w*)(.*?)(?::(.*))?<n>(.*)$/gm;\nconst reflogHEADRegex = /.*?\\/?HEAD$/;\n\n// Using %x00 codes because some shells seem to try to expand things if not\nconst lb = '%x3c'; // `%x${'<'.charCodeAt(0).toString(16)}`;\nconst rb = '%x3e'; // `%x${'>'.charCodeAt(0).toString(16)}`;\n\nexport class GitReflogParser {\n    static defaultFormat = [\n        `${lb}r${rb}%H`, // ref\n        `${lb}d${rb}%gD`, // reflog selector (with UNIX timestamp)\n        `${lb}s${rb}%gs` // reflog subject\n        // `${lb}n${rb}%D` // ref names\n    ].join('');\n\n    @debug({ args: false })\n    static parse(data: string, repoPath: string, commands: string[], maxCount: number): GitReflog | undefined {\n        if (!data) return undefined;\n\n        const records: GitReflogRecord[] = [];\n\n        let sha;\n        let selector;\n        let date;\n        let command;\n        let commandArgs;\n        let details;\n\n        let head;\n        let headDate;\n        let headSha;\n\n        let count = 0;\n        let recordDate;\n        let record: GitReflogRecord | undefined;\n        let truncated = false;\n\n        let match: RegExpExecArray | null;\n        do {\n            match = reflogRegex.exec(data);\n            if (match == null) break;\n\n            [, sha, selector, date, command, commandArgs, details] = match;\n\n            if (record !== undefined) {\n                // If the next record has the same sha as the previous, use it if it is not pointing to just HEAD and the previous is\n                if (\n                    sha === record.sha &&\n                    (date !== recordDate || !reflogHEADRegex.test(record.selector) || reflogHEADRegex.test(selector))\n                ) {\n                    continue;\n                }\n\n                if (sha !== record.sha) {\n                    if (\n                        head != null &&\n                        headDate === recordDate &&\n                        headSha == record.sha &&\n                        reflogHEADRegex.test(record.selector)\n                    ) {\n                        record.update(sha, head);\n                    }\n                    else {\n                        record.update(sha);\n                    }\n\n                    records.push(record);\n                    record = undefined;\n                    recordDate = undefined;\n\n                    count++;\n                    if (maxCount !== 0 && count >= maxCount) {\n                        truncated = true;\n                        break;\n                    }\n                }\n            }\n\n            if (command === 'HEAD') {\n                head = selector;\n                headDate = date;\n                headSha = sha;\n\n                continue;\n            }\n\n            if (commands.includes(command)) {\n                record = new GitReflogRecord(\n                    repoPath,\n                    // Stops excessive memory usage -- https://bugs.chromium.org/p/v8/issues/detail?id=2869\n                    ` ${sha}`.substr(1),\n                    // Stops excessive memory usage -- https://bugs.chromium.org/p/v8/issues/detail?id=2869\n                    ` ${selector}`.substr(1),\n                    new Date(Number(date) * 1000),\n                    // Stops excessive memory usage -- https://bugs.chromium.org/p/v8/issues/detail?id=2869\n                    ` ${command}`.substr(1),\n                    // Stops excessive memory usage -- https://bugs.chromium.org/p/v8/issues/detail?id=2869\n                    commandArgs == null || commandArgs.length === 0 ? undefined : commandArgs.substr(1),\n                    // Stops excessive memory usage -- https://bugs.chromium.org/p/v8/issues/detail?id=2869\n                    details == null || details.length === 0 ? undefined : details.substr(1)\n                );\n                recordDate = date;\n            }\n        } while (match != null);\n\n        // Ensure the regex state is reset\n        reflogRegex.lastIndex = 0;\n\n        return {\n            repoPath: repoPath,\n            records: records,\n            count: count,\n            maxCount: maxCount,\n            truncated: truncated\n        };\n    }\n}\n","'use strict';\nimport { GitRemoteType } from '../models/remote';\nimport { RemoteProvider } from '../remotes/factory';\nimport { GitRemote } from '../git';\nimport { debug } from '../../system';\n\nconst emptyStr = '';\n\nconst remoteRegex = /^(.*)\\t(.*)\\s\\((.*)\\)$/gm;\nconst urlRegex = /^(?:(git:\\/\\/)(.*?)\\/|(https?:\\/\\/)(?:.*?@)?(.*?)\\/|git@(.*):|(ssh:\\/\\/)(?:.*@)?(.*?)(?::.*?)?(?:\\/|(?=~))|(?:.*?@)(.*?):)(.*)$/;\n\n// Test git urls\n/*\nhttp://host.xz/user/project.git\nhttp://host.xz/path/to/repo.git\nhttp://host.xz/path/to/repo.git/\nhttp://username@host.xz/user/project.git\nhttp://username:password@host.xz/user/project.git\nhttps://host.xz/user/project.git\nhttps://host.xz/path/to/repo.git\nhttps://host.xz/path/to/repo.git/\nhttps://username@host.xz/user/project.git\nhttps://username:password@host.xz/user/project.git\n\ngit@host.xz:user/project.git\ngit://host.xz/path/to/repo.git/\ngit://host.xz/~user/path/to/repo.git/\n\nssh://host.xz/project.git\nssh://host.xz/path/to/repo.git\nssh://host.xz/path/to/repo.git/\nssh://host.xz:~project.git\nssh://host.xz:port/path/to/repo.git/\nssh://user@host.xz/project.git\nssh://user@host.xz/path/to/repo.git\nssh://user@host.xz/path/to/repo.git/\nssh://user@host.xz:port/path/to/repo.git/\nssh://user:password@host.xz/project.git\nssh://user:password@host.xz/path/to/repo.git\nssh://user:password@host.xz/path/to/repo.git/\n\nuser@host.xz:project.git\nuser@host.xz:path/to/repo.git\nuser@host.xz:/path/to/repo.git/\nuser:password@host.xz:project.git\nuser:password@host.xz:/path/to/repo.git\nuser:password@host.xz:/path/to/repo.git/\n*/\n\nexport class GitRemoteParser {\n    @debug({ args: false, singleLine: true })\n    static parse(\n        data: string,\n        repoPath: string,\n        providerFactory: (domain: string, path: string) => RemoteProvider | undefined\n    ): GitRemote[] | undefined {\n        if (!data) return undefined;\n\n        const remotes: GitRemote[] = [];\n        const groups = Object.create(null);\n\n        let name;\n        let url;\n        let type;\n\n        let scheme;\n        let domain;\n        let path;\n\n        let uniqueness;\n        let remote: GitRemote | undefined;\n\n        let match: RegExpExecArray | null;\n        do {\n            match = remoteRegex.exec(data);\n            if (match == null) break;\n\n            [, name, url, type] = match;\n\n            // Stops excessive memory usage -- https://bugs.chromium.org/p/v8/issues/detail?id=2869\n            url = ` ${url}`.substr(1);\n\n            [scheme, domain, path] = this.parseGitUrl(url);\n\n            uniqueness = `${domain}/${path}`;\n            remote = groups[uniqueness];\n            if (remote === undefined) {\n                const provider = providerFactory(domain, path);\n\n                remote = new GitRemote(\n                    repoPath,\n                    uniqueness,\n                    // Stops excessive memory usage -- https://bugs.chromium.org/p/v8/issues/detail?id=2869\n                    ` ${name}`.substr(1),\n                    scheme,\n                    provider !== undefined ? provider.domain : domain,\n                    provider !== undefined ? provider.path : path,\n                    provider,\n                    // Stops excessive memory usage -- https://bugs.chromium.org/p/v8/issues/detail?id=2869\n                    [{ url: url, type: ` ${type}`.substr(1) as GitRemoteType }]\n                );\n                remotes.push(remote);\n                groups[uniqueness] = remote;\n            }\n            else {\n                // Stops excessive memory usage -- https://bugs.chromium.org/p/v8/issues/detail?id=2869\n                remote.types.push({ url: url, type: ` ${type}`.substr(1) as GitRemoteType });\n            }\n        } while (match != null);\n\n        return remotes;\n    }\n\n    static parseGitUrl(url: string): [string, string, string] {\n        const match = urlRegex.exec(url);\n        if (match == null) return [emptyStr, emptyStr, emptyStr];\n\n        return [\n            match[1] || match[3] || match[6],\n            match[2] || match[4] || match[5] || match[7] || match[8],\n            match[9].replace(/\\.git\\/?$/, emptyStr)\n        ];\n    }\n}\n","'use strict';\nimport { GitContributor, GitShortLog } from '../git';\nimport { debug } from '../../system';\n\nconst shortlogRegex = /^(.*?)\\t(.*?) <(.*?)>$/gm;\n\nexport class GitShortLogParser {\n    @debug({ args: false, singleLine: true })\n    static parse(data: string, repoPath: string): GitShortLog | undefined {\n        if (!data) return undefined;\n\n        const contributors: GitContributor[] = [];\n\n        let count;\n        let name;\n        let email;\n\n        let match: RegExpExecArray | null;\n        do {\n            match = shortlogRegex.exec(data);\n            if (match == null) break;\n\n            [, count, name, email] = match;\n\n            contributors.push(\n                new GitContributor(\n                    repoPath,\n                    // Stops excessive memory usage -- https://bugs.chromium.org/p/v8/issues/detail?id=2869\n                    ` ${name}`.substr(1),\n                    // Stops excessive memory usage -- https://bugs.chromium.org/p/v8/issues/detail?id=2869\n                    ` ${email}`.substr(1),\n                    Number(count) || 0\n                )\n            );\n        } while (match != null);\n\n        return { repoPath: repoPath, contributors: contributors };\n    }\n}\n","'use strict';\nimport { fileStatusRegex, GitCommitType, GitFile, GitFileStatus, GitStash, GitStashCommit } from '../git';\nimport { Arrays, debug, Strings } from '../../system';\n// import { Logger } from './logger';\n\n// Using %x00 codes because some shells seem to try to expand things if not\nconst lb = '%x3c'; // `%x${'<'.charCodeAt(0).toString(16)}`;\nconst rb = '%x3e'; // `%x${'>'.charCodeAt(0).toString(16)}`;\nconst sl = '%x2f'; // `%x${'/'.charCodeAt(0).toString(16)}`;\nconst sp = '%x20'; // `%x${' '.charCodeAt(0).toString(16)}`;\n\nconst emptyStr = '';\nconst emptyEntry: StashEntry = {};\n\ninterface StashEntry {\n    ref?: string;\n    date?: string;\n    committedDate?: string;\n    fileNames?: string;\n    files?: GitFile[];\n    summary?: string;\n    stashName?: string;\n}\n\nexport class GitStashParser {\n    static defaultFormat = [\n        `${lb}${sl}f${rb}`,\n        `${lb}r${rb}${sp}%H`, // ref\n        `${lb}d${rb}${sp}%at`, // date\n        `${lb}c${rb}${sp}%ct`, // committed date\n        `${lb}l${rb}${sp}%gd`, // reflog-selector\n        `${lb}s${rb}`,\n        '%B', // summary\n        `${lb}${sl}s${rb}`,\n        `${lb}f${rb}`\n    ].join('%n');\n\n    @debug({ args: false, singleLine: true })\n    static parse(data: string, repoPath: string): GitStash | undefined {\n        if (!data) return undefined;\n\n        const lines = Strings.lines(`${data}</f>`);\n        // Skip the first line since it will always be </f>\n        let next = lines.next();\n        if (next.done) return undefined;\n\n        if (repoPath !== undefined) {\n            repoPath = Strings.normalizePath(repoPath);\n        }\n\n        const commits: Map<string, GitStashCommit> = new Map();\n\n        let entry: StashEntry = emptyEntry;\n        let line: string | undefined = undefined;\n        let token: number;\n\n        let match;\n        let renamedFileName;\n\n        while (true) {\n            next = lines.next();\n            if (next.done) break;\n\n            line = next.value;\n\n            // <<1-char token>> <data>\n            // e.g. <r> bd1452a2dc\n            token = line.charCodeAt(1);\n\n            switch (token) {\n                case 114: // 'r': // ref\n                    entry = {\n                        ref: line.substring(4)\n                    };\n                    break;\n\n                case 100: // 'd': // author-date\n                    entry.date = line.substring(4);\n                    break;\n\n                case 99: // 'c': // committer-date\n                    entry.committedDate = line.substring(4);\n                    break;\n\n                case 108: // 'l': // reflog-selector\n                    entry.stashName = line.substring(4);\n                    break;\n\n                case 115: // 's': // summary\n                    while (true) {\n                        next = lines.next();\n                        if (next.done) break;\n\n                        line = next.value;\n                        if (line === '</s>') break;\n\n                        if (entry.summary === undefined) {\n                            entry.summary = line;\n                        }\n                        else {\n                            entry.summary += `\\n${line}`;\n                        }\n                    }\n\n                    // Remove the trailing newline\n                    if (entry.summary != null && entry.summary.charCodeAt(entry.summary.length - 1) === 10) {\n                        entry.summary = entry.summary.slice(0, -1);\n                    }\n                    break;\n\n                case 102: // 'f': // files\n                    // Skip the blank line git adds before the files\n                    next = lines.next();\n                    if (!next.done && next.value !== '</f>') {\n                        while (true) {\n                            next = lines.next();\n                            if (next.done) break;\n\n                            line = next.value;\n                            if (line === '</f>') break;\n\n                            if (line.startsWith('warning:')) continue;\n\n                            match = fileStatusRegex.exec(line);\n                            if (match != null) {\n                                if (entry.files === undefined) {\n                                    entry.files = [];\n                                }\n\n                                renamedFileName = match[3];\n                                if (renamedFileName !== undefined) {\n                                    entry.files.push({\n                                        status: match[1] as GitFileStatus,\n                                        fileName: renamedFileName,\n                                        originalFileName: match[2]\n                                    });\n                                }\n                                else {\n                                    entry.files.push({\n                                        status: match[1] as GitFileStatus,\n                                        fileName: match[2]\n                                    });\n                                }\n                            }\n                        }\n\n                        if (entry.files !== undefined) {\n                            entry.fileNames = Arrays.filterMap(entry.files, f =>\n                                f.fileName ? f.fileName : undefined\n                            ).join(', ');\n                        }\n                    }\n\n                    GitStashParser.parseEntry(entry, repoPath, commits);\n            }\n        }\n\n        const stash: GitStash = {\n            repoPath: repoPath,\n            commits: commits\n        };\n        return stash;\n    }\n\n    private static parseEntry(entry: StashEntry, repoPath: string, commits: Map<string, GitStashCommit>) {\n        let commit = commits.get(entry.ref!);\n        if (commit === undefined) {\n            commit = new GitStashCommit(\n                GitCommitType.Stash,\n                entry.stashName!,\n                repoPath,\n                entry.ref!,\n                new Date((entry.date! as any) * 1000),\n                new Date((entry.committedDate! as any) * 1000),\n                entry.summary === undefined ? emptyStr : entry.summary,\n                entry.fileNames!,\n                entry.files || []\n            );\n        }\n\n        commits.set(entry.ref!, commit);\n    }\n}\n","'use strict';\nimport { debug, Strings } from '../../system';\nimport { GitFileStatus, GitStatus, GitStatusFile } from '../git';\n\nconst emptyStr = '';\n\nconst aheadStatusV1Regex = /(?:ahead ([0-9]+))/;\nconst behindStatusV1Regex = /(?:behind ([0-9]+))/;\n\nexport class GitStatusParser {\n    @debug({ args: false, singleLine: true })\n    static parse(data: string, repoPath: string, porcelainVersion: number): GitStatus | undefined {\n        if (!data) return undefined;\n\n        const lines = data.split('\\n').filter(Boolean);\n        if (lines.length === 0) return undefined;\n\n        if (porcelainVersion < 2) return this.parseV1(lines, repoPath);\n\n        return this.parseV2(lines, repoPath);\n    }\n\n    @debug({ args: false, singleLine: true })\n    private static parseV1(lines: string[], repoPath: string): GitStatus {\n        let branch: string | undefined;\n        const files = [];\n        const state = {\n            ahead: 0,\n            behind: 0\n        };\n        let upstream;\n\n        let position = -1;\n        while (++position < lines.length) {\n            const line = lines[position];\n            // Header\n            if (line.startsWith('##')) {\n                const lineParts = line.split(' ');\n                [branch, upstream] = lineParts[1].split('...');\n                if (lineParts.length > 2) {\n                    const upstreamStatus = lineParts.slice(2).join(' ');\n\n                    const aheadStatus = aheadStatusV1Regex.exec(upstreamStatus);\n                    state.ahead = aheadStatus == null ? 0 : Number(aheadStatus[1]) || 0;\n\n                    const behindStatus = behindStatusV1Regex.exec(upstreamStatus);\n                    state.behind = behindStatus == null ? 0 : Number(behindStatus[1]) || 0;\n                }\n            }\n            else {\n                const rawStatus = line.substring(0, 2);\n                const fileName = line.substring(3);\n                if (rawStatus[0] === 'R') {\n                    const [file1, file2] = fileName.replace(/\"/g, emptyStr).split('->');\n                    files.push(this.parseStatusFile(repoPath, rawStatus, file2.trim(), file1.trim()));\n                }\n                else {\n                    files.push(this.parseStatusFile(repoPath, rawStatus, fileName));\n                }\n            }\n        }\n\n        return new GitStatus(Strings.normalizePath(repoPath), branch || emptyStr, emptyStr, files, state, upstream);\n    }\n\n    @debug({ args: false, singleLine: true })\n    private static parseV2(lines: string[], repoPath: string): GitStatus {\n        let branch: string | undefined;\n        const files = [];\n        let sha: string | undefined;\n        const state = {\n            ahead: 0,\n            behind: 0\n        };\n        let upstream;\n\n        let position = -1;\n        while (++position < lines.length) {\n            const line = lines[position];\n            // Headers\n            if (line.startsWith('#')) {\n                const lineParts = line.split(' ');\n                switch (lineParts[1]) {\n                    case 'branch.oid':\n                        sha = lineParts[2];\n                        break;\n                    case 'branch.head':\n                        branch = lineParts[2];\n                        break;\n                    case 'branch.upstream':\n                        upstream = lineParts[2];\n                        break;\n                    case 'branch.ab':\n                        state.ahead = Number(lineParts[2].substring(1));\n                        state.behind = Number(lineParts[3].substring(1));\n                        break;\n                }\n            }\n            else {\n                const lineParts = line.split(' ');\n                switch (lineParts[0][0]) {\n                    case '1': // normal\n                        files.push(this.parseStatusFile(repoPath, lineParts[1], lineParts.slice(8).join(' ')));\n                        break;\n                    case '2': {\n                        // rename\n                        const file = lineParts\n                            .slice(9)\n                            .join(' ')\n                            .split('\\t');\n                        files.push(this.parseStatusFile(repoPath, lineParts[1], file[0], file[1]));\n                        break;\n                    }\n                    case 'u': // unmerged\n                        files.push(this.parseStatusFile(repoPath, lineParts[1], lineParts.slice(10).join(' ')));\n                        break;\n                    case '?': // untracked\n                        files.push(this.parseStatusFile(repoPath, ' ?', lineParts.slice(1).join(' ')));\n                        break;\n                }\n            }\n        }\n\n        return new GitStatus(\n            Strings.normalizePath(repoPath),\n            branch || emptyStr,\n            sha || emptyStr,\n            files,\n            state,\n            upstream\n        );\n    }\n\n    static parseStatusFile(\n        repoPath: string,\n        rawStatus: string,\n        fileName: string,\n        originalFileName?: string\n    ): GitStatusFile {\n        let indexStatus = rawStatus[0] !== '.' ? rawStatus[0].trim() : undefined;\n        if (indexStatus == null || indexStatus.length === 0) {\n            indexStatus = undefined;\n        }\n\n        let workTreeStatus = undefined;\n        if (rawStatus.length > 1) {\n            workTreeStatus = rawStatus[1] !== '.' ? rawStatus[1].trim() : undefined;\n            if (workTreeStatus == null || workTreeStatus.length === 0) {\n                workTreeStatus = undefined;\n            }\n        }\n\n        return new GitStatusFile(\n            repoPath,\n            indexStatus as GitFileStatus | undefined,\n            workTreeStatus as GitFileStatus | undefined,\n            fileName,\n            originalFileName\n        );\n    }\n}\n","'use strict';\nimport { GitTag } from '../git';\nimport { debug } from '../../system';\n\nconst tagWithRefRegex = /([0-9,a-f]+)\\srefs\\/tags\\/(.*)/gm;\nconst tagWithAnnotationRegex = /^(.+?)(?:$|(?:\\s+)(.*)$)/gm;\n\nexport class GitTagParser {\n    @debug({ args: false, singleLine: true })\n    static parse(data: string, repoPath: string): GitTag[] | undefined {\n        if (!data) return undefined;\n\n        const tags: GitTag[] = [];\n\n        let name;\n        let annotation;\n\n        let match: RegExpExecArray | null;\n        do {\n            match = tagWithAnnotationRegex.exec(data);\n            if (match == null) break;\n\n            [, name, annotation] = match;\n\n            tags.push(\n                new GitTag(\n                    repoPath,\n                    // Stops excessive memory usage -- https://bugs.chromium.org/p/v8/issues/detail?id=2869\n                    ` ${name}`.substr(1),\n                    undefined,\n                    // Stops excessive memory usage -- https://bugs.chromium.org/p/v8/issues/detail?id=2869\n                    annotation == null || annotation.length === 0 ? undefined : ` ${annotation}`.substr(1)\n                )\n            );\n        } while (match != null);\n\n        return tags;\n    }\n\n    static parseWithRef(data: string, repoPath: string): GitTag[] | undefined {\n        if (!data) return undefined;\n\n        const tags: GitTag[] = [];\n\n        let sha;\n        let name;\n\n        let match: RegExpExecArray | null;\n        do {\n            match = tagWithRefRegex.exec(data);\n            if (match == null) break;\n\n            [, sha, name] = match;\n\n            tags.push(\n                new GitTag(\n                    repoPath,\n                    // Stops excessive memory usage -- https://bugs.chromium.org/p/v8/issues/detail?id=2869\n                    ` ${name}`.substr(1),\n                    // Stops excessive memory usage -- https://bugs.chromium.org/p/v8/issues/detail?id=2869\n                    ` ${sha}`.substr(1)\n                )\n            );\n        } while (match != null);\n\n        return tags;\n    }\n}\n","'use strict';\nimport { GitTree } from '../git';\nimport { debug } from '../../system';\n\nconst emptyStr = '';\nconst treeRegex = /(?:.+?)\\s+(.+?)\\s+(.+?)\\s+(.+?)\\s+(.+)/gm;\n\nexport class GitTreeParser {\n    @debug({ args: false, singleLine: true })\n    static parse(data: string | undefined): GitTree[] | undefined {\n        if (!data) return undefined;\n\n        const trees: GitTree[] = [];\n\n        let type;\n        let sha;\n        let size;\n        let filePath;\n\n        let match: RegExpExecArray | null;\n        do {\n            match = treeRegex.exec(data);\n            if (match == null) break;\n\n            [, type, sha, size, filePath] = match;\n\n            trees.push({\n                // Stops excessive memory usage -- https://bugs.chromium.org/p/v8/issues/detail?id=2869\n                commitSha: sha == null || sha.length === 0 ? emptyStr : ` ${sha}`.substr(1),\n                // Stops excessive memory usage -- https://bugs.chromium.org/p/v8/issues/detail?id=2869\n                path: filePath == null || filePath.length === 0 ? emptyStr : ` ${filePath}`.substr(1),\n                size: Number(size) || 0,\n                // Stops excessive memory usage -- https://bugs.chromium.org/p/v8/issues/detail?id=2869\n                type: (type == null || type.length === 0 ? emptyStr : ` ${type}`.substr(1)) as 'blob' | 'tree'\n            });\n        } while (match != null);\n\n        return trees;\n    }\n}\n","'use strict';\nimport { Strings } from '../../system';\n\nconst emptyStr = '';\n\nexport interface FormatOptions {\n    dateFormat?: string | null;\n    tokenOptions?: { [id: string]: Strings.TokenOptions | undefined };\n}\n\ntype Constructor<T = {}> = new (...args: any[]) => T;\n\nconst spaceReplacementRegex = / /g;\n\ndeclare type RequiredTokenOptions<TOptions extends FormatOptions> = TOptions & Required<Pick<TOptions, 'tokenOptions'>>;\n\nexport abstract class Formatter<TItem = any, TOptions extends FormatOptions = FormatOptions> {\n    protected _item!: TItem;\n    protected _options!: RequiredTokenOptions<TOptions>;\n\n    constructor(item: TItem, options?: TOptions) {\n        this.reset(item, options);\n    }\n\n    reset(item: TItem, options?: TOptions) {\n        this._item = item;\n\n        if (options === undefined && this._options !== undefined) return;\n\n        if (options === undefined) {\n            // eslint-disable-next-line @typescript-eslint/no-object-literal-type-assertion\n            options = {} as TOptions;\n        }\n\n        if (options.dateFormat == null) {\n            options.dateFormat = 'MMMM Do, YYYY h:mma';\n        }\n\n        if (options.tokenOptions == null) {\n            options.tokenOptions = {};\n        }\n\n        this._options = options as RequiredTokenOptions<TOptions>;\n    }\n\n    private collapsableWhitespace: number = 0;\n\n    protected _padOrTruncate(s: string, options: Strings.TokenOptions | undefined) {\n        if (s == null || s.length === 0) return s;\n\n        // NOTE: the collapsable whitespace logic relies on the javascript template evaluation to be left to right\n        if (options === undefined) {\n            options = {\n                collapseWhitespace: false,\n                padDirection: 'left',\n                prefix: undefined,\n                suffix: undefined,\n                truncateTo: undefined\n            };\n        }\n\n        let max = options.truncateTo;\n        if (max === undefined) {\n            this.collapsableWhitespace = 0;\n        }\n        else {\n            max += this.collapsableWhitespace;\n            this.collapsableWhitespace = 0;\n\n            const width = Strings.getWidth(s);\n            const diff = max - width;\n            if (diff > 0) {\n                if (options.collapseWhitespace) {\n                    this.collapsableWhitespace = diff;\n                }\n\n                if (options.padDirection === 'left') {\n                    s = Strings.padLeft(s, max, undefined, width);\n                }\n                else {\n                    if (options.collapseWhitespace) {\n                        max -= diff;\n                    }\n                    s = Strings.padRight(s, max, undefined, width);\n                }\n            }\n            else if (diff < 0) {\n                s = Strings.truncate(s, max, undefined, width);\n            }\n        }\n\n        if (options.prefix || options.suffix) {\n            s = `${options.prefix || emptyStr}${s}${options.suffix || emptyStr}`;\n        }\n\n        return s;\n    }\n\n    private static _formatter: Formatter | undefined = undefined;\n\n    protected static fromTemplateCore<\n        TFormatter extends Formatter<TItem, TOptions>,\n        TItem,\n        TOptions extends FormatOptions\n    >(\n        formatter: TFormatter | Constructor<TFormatter>,\n        template: string,\n        item: TItem,\n        dateFormatOrOptions?: string | null | TOptions\n    ): string {\n        // Preserve spaces\n        template = template.replace(spaceReplacementRegex, '\\u00a0');\n        if (formatter instanceof Formatter) return Strings.interpolate(template, formatter);\n\n        let options: TOptions | undefined = undefined;\n        if (dateFormatOrOptions == null || typeof dateFormatOrOptions === 'string') {\n            // eslint-disable-next-line @typescript-eslint/no-object-literal-type-assertion\n            options = {\n                dateFormat: dateFormatOrOptions\n            } as TOptions;\n        }\n        else {\n            options = dateFormatOrOptions;\n        }\n\n        if (options.tokenOptions == null) {\n            const tokenOptions = Strings.getTokensFromTemplate(template).reduce<{\n                [token: string]: Strings.TokenOptions | undefined;\n            }>((map, token) => {\n                map[token.key] = token.options;\n                return map;\n            }, Object.create(null));\n\n            options.tokenOptions = tokenOptions;\n        }\n\n        if (this._formatter === undefined) {\n            this._formatter = new formatter(item, options);\n        }\n        else {\n            this._formatter.reset(item, options);\n        }\n\n        return Strings.interpolate(template, this._formatter);\n    }\n}\n","'use strict';\nimport {\n    DiffWithCommand,\n    InviteToLiveShareCommand,\n    OpenCommitInRemoteCommand,\n    OpenFileRevisionCommand,\n    ShowQuickCommitDetailsCommand,\n    ShowQuickCommitFileDetailsCommand\n} from '../../commands';\nimport { DateStyle, FileAnnotationType } from '../../configuration';\nimport { GlyphChars } from '../../constants';\nimport { Container } from '../../container';\nimport { GitCommit, GitCommitType, GitLogCommit, GitRemote, GitService, GitUri } from '../gitService';\nimport { Strings } from '../../system';\nimport { FormatOptions, Formatter } from './formatter';\nimport * as emojis from '../../emojis.json';\nimport { ContactPresence } from '../../vsls/vsls';\n\nconst emptyStr = '';\nconst emojiMap: { [key: string]: string } = emojis;\nconst emojiRegex = /:([-+_a-z0-9]+):/g;\n\nconst escapeMarkdownRegex = /[`>#*_\\-+.]/g;\n// const sampleMarkdown = '## message `not code` *not important* _no underline_ \\n> don\\'t quote me \\n- don\\'t list me \\n+ don\\'t list me \\n1. don\\'t list me \\nnot h1 \\n=== \\nnot h2 \\n---\\n***\\n---\\n___';\nconst markdownHeaderReplacement = `${GlyphChars.ZeroWidthSpace}===`;\n\nexport interface CommitFormatOptions extends FormatOptions {\n    annotationType?: FileAnnotationType;\n    dateStyle?: DateStyle;\n    line?: number;\n    markdown?: boolean;\n    presence?: ContactPresence;\n    previousLineDiffUris?: { current: GitUri; previous: GitUri | undefined };\n    remotes?: GitRemote[];\n    truncateMessageAtNewLine?: boolean;\n\n    tokenOptions?: {\n        ago?: Strings.TokenOptions;\n        agoOrDate?: Strings.TokenOptions;\n        author?: Strings.TokenOptions;\n        authorAgo?: Strings.TokenOptions;\n        authorAgoOrDate?: Strings.TokenOptions;\n        changes?: Strings.TokenOptions;\n        changesShort?: Strings.TokenOptions;\n        date?: Strings.TokenOptions;\n        email?: Strings.TokenOptions;\n        id?: Strings.TokenOptions;\n        message?: Strings.TokenOptions;\n    };\n}\n\nexport class CommitFormatter extends Formatter<GitCommit, CommitFormatOptions> {\n    private get _authorDate() {\n        return this._item.formatAuthorDate(this._options.dateFormat);\n    }\n\n    private get _authorDateAgo() {\n        return this._item.formatAuthorDateFromNow();\n    }\n\n    private get _authorDateOrAgo() {\n        const dateStyle =\n            this._options.dateStyle !== undefined ? this._options.dateStyle : Container.config.defaultDateStyle;\n        return dateStyle === DateStyle.Absolute ? this._authorDate : this._authorDateAgo;\n    }\n\n    private get _committerDate() {\n        return this._item.formatCommitterDate(this._options.dateFormat);\n    }\n\n    private get _committerDateAgo() {\n        return this._item.formatCommitterDateFromNow();\n    }\n\n    private get _committerDateOrAgo() {\n        const dateStyle =\n            this._options.dateStyle !== undefined ? this._options.dateStyle : Container.config.defaultDateStyle;\n        return dateStyle === DateStyle.Absolute ? this._committerDate : this._committerDateAgo;\n    }\n\n    private get _date() {\n        return this._item.formatDate(this._options.dateFormat);\n    }\n\n    private get _dateAgo() {\n        return this._item.formatDateFromNow();\n    }\n\n    private get _dateOrAgo() {\n        const dateStyle =\n            this._options.dateStyle !== undefined ? this._options.dateStyle : Container.config.defaultDateStyle;\n        return dateStyle === DateStyle.Absolute ? this._date : this._dateAgo;\n    }\n\n    get ago() {\n        return this._padOrTruncate(this._dateAgo, this._options.tokenOptions.ago);\n    }\n\n    get agoOrDate() {\n        return this._padOrTruncate(this._dateOrAgo, this._options.tokenOptions.agoOrDate);\n    }\n\n    get author() {\n        const author = this._padOrTruncate(this._item.author, this._options.tokenOptions.author);\n        if (!this._options.markdown) {\n            return author;\n        }\n\n        return `[${author}](mailto:${this._item.email} \"Email ${this._item.author} (${this._item.email})\")`;\n    }\n\n    get authorAgo() {\n        return this._padOrTruncate(this._authorDateAgo, this._options.tokenOptions.authorAgo);\n    }\n\n    get authorAgoOrDate() {\n        return this._padOrTruncate(this._authorDateOrAgo, this._options.tokenOptions.authorAgoOrDate);\n    }\n\n    get authorDate() {\n        return this._padOrTruncate(this._authorDate, this._options.tokenOptions.date);\n    }\n\n    get avatar() {\n        if (!this._options.markdown || !Container.config.hovers.avatars) {\n            return emptyStr;\n        }\n\n        let avatar = `![](${this._item.getGravatarUri(Container.config.defaultGravatarsStyle).toString(true)})`;\n\n        const presence = this._options.presence;\n        if (presence != null) {\n            const title = `${this._item.author} ${this._item.author === 'You' ? 'are' : 'is'} ${\n                presence.status === 'dnd' ? 'in ' : ''\n            }${presence.statusText.toLocaleLowerCase()}`;\n\n            avatar += `![${title}](${encodeURI(\n                `file:///${Container.context.asAbsolutePath(`images/dark/icon-presence-${presence.status}.svg`)}`\n            )})`;\n            avatar = `[${avatar}](# \"${title}\")`;\n        }\n\n        return avatar;\n    }\n\n    get changes() {\n        if (!(this._item instanceof GitLogCommit) || this._item.type === GitCommitType.LogFile) {\n            return this._padOrTruncate(emptyStr, this._options.tokenOptions.changes);\n        }\n\n        return this._padOrTruncate(this._item.getFormattedDiffStatus(), this._options.tokenOptions.changes);\n    }\n\n    get changesShort() {\n        if (!(this._item instanceof GitLogCommit) || this._item.type === GitCommitType.LogFile) {\n            return this._padOrTruncate(emptyStr, this._options.tokenOptions.changesShort);\n        }\n\n        return this._padOrTruncate(\n            this._item.getFormattedDiffStatus({ compact: true, separator: emptyStr }),\n            this._options.tokenOptions.changesShort\n        );\n    }\n\n    get commands() {\n        if (!this._options.markdown) return emptyStr;\n\n        let commands;\n        if (this._item.isUncommitted) {\n            const { previousLineDiffUris: diffUris } = this._options;\n            if (diffUris !== undefined && diffUris.previous !== undefined) {\n                commands = `\\`${this._padOrTruncate(\n                    GitService.shortenSha(\n                        GitService.isUncommittedStaged(diffUris.current.sha)\n                            ? diffUris.current.sha\n                            : GitService.uncommittedSha\n                    )!,\n                    this._options.tokenOptions.id\n                )}\\``;\n\n                commands += ` **[\\`${GlyphChars.MuchLessThan}\\`](${DiffWithCommand.getMarkdownCommandArgs({\n                    lhs: {\n                        sha: diffUris.previous.sha || '',\n                        uri: diffUris.previous.documentUri()\n                    },\n                    rhs: {\n                        sha: diffUris.current.sha || '',\n                        uri: diffUris.current.documentUri()\n                    },\n                    repoPath: this._item.repoPath,\n                    line: this._options.line\n                })} \"Open Changes\")** `;\n            }\n            else {\n                commands = `\\`${this._padOrTruncate(\n                    GitService.shortenSha(\n                        this._item.isUncommittedStaged ? GitService.uncommittedStagedSha : GitService.uncommittedSha\n                    )!,\n                    this._options.tokenOptions.id\n                )}\\``;\n            }\n\n            return commands;\n        }\n\n        commands = `[\\`${this.id}\\`](${ShowQuickCommitDetailsCommand.getMarkdownCommandArgs(\n            this._item.sha\n        )} \"Show Commit Details\") `;\n\n        commands += `**[\\`${GlyphChars.MuchLessThan}\\`](${DiffWithCommand.getMarkdownCommandArgs(\n            this._item,\n            this._options.line\n        )} \"Open Changes\")** `;\n\n        if (this._item.previousSha !== undefined) {\n            let annotationType = this._options.annotationType;\n            if (annotationType === FileAnnotationType.RecentChanges) {\n                annotationType = FileAnnotationType.Blame;\n            }\n\n            const uri = GitUri.toRevisionUri(\n                this._item.previousSha,\n                this._item.previousUri.fsPath,\n                this._item.repoPath\n            );\n            commands += `**[\\` ${GlyphChars.EqualsTriple} \\`](${OpenFileRevisionCommand.getMarkdownCommandArgs(\n                uri,\n                annotationType || FileAnnotationType.Blame,\n                this._options.line\n            )} \"Blame Previous Revision\")** `;\n        }\n\n        if (this._options.remotes !== undefined && this._options.remotes.length !== 0) {\n            commands += `**[\\` ${GlyphChars.ArrowUpRight} \\`](${OpenCommitInRemoteCommand.getMarkdownCommandArgs(\n                this._item.sha\n            )} \"Open in Remote\")** `;\n        }\n\n        if (this._item.author !== 'You') {\n            const presence = this._options.presence;\n            if (presence != null) {\n                commands += `[\\` ${GlyphChars.Envelope}+ \\`](${InviteToLiveShareCommand.getMarkdownCommandArgs(\n                    this._item.email\n                )} \"Invite ${this._item.author} (${presence.statusText}) to a Live Share Session\") `;\n            }\n        }\n\n        commands += `[\\`${GlyphChars.MiddleEllipsis}\\`](${ShowQuickCommitFileDetailsCommand.getMarkdownCommandArgs({\n            revisionUri: GitUri.toRevisionUri(this._item.toGitUri()).toString(true)\n        })} \"Show More Actions\")`;\n\n        return commands;\n    }\n\n    get committerAgo() {\n        return this._padOrTruncate(this._committerDateAgo, this._options.tokenOptions.ago);\n    }\n\n    get committerAgoOrDate() {\n        return this._padOrTruncate(this._committerDateOrAgo, this._options.tokenOptions.agoOrDate);\n    }\n\n    get committerDate() {\n        return this._padOrTruncate(this._committerDate, this._options.tokenOptions.date);\n    }\n\n    get date() {\n        return this._padOrTruncate(this._date, this._options.tokenOptions.date);\n    }\n\n    get email() {\n        return this._padOrTruncate(this._item.email || emptyStr, this._options.tokenOptions.email);\n    }\n\n    get id() {\n        return this._padOrTruncate(this._item.shortSha || emptyStr, this._options.tokenOptions.id);\n    }\n\n    get message() {\n        let message: string;\n        if (this._item.isUncommitted) {\n            if (\n                this._item.isUncommittedStaged ||\n                (this._options.previousLineDiffUris !== undefined &&\n                    this._options.previousLineDiffUris.current.isUncommittedStaged)\n            ) {\n                message = 'Staged changes';\n            }\n            else {\n                message = 'Uncommitted changes';\n            }\n        }\n        else {\n            if (this._options.truncateMessageAtNewLine) {\n                const index = this._item.message.indexOf('\\n');\n                message =\n                    index === -1\n                        ? this._item.message\n                        : `${this._item.message.substring(0, index)}${GlyphChars.Space}${GlyphChars.Ellipsis}`;\n            }\n            else {\n                message = this._item.message;\n            }\n\n            message = message.replace(emojiRegex, (s, code) => emojiMap[code] || s);\n        }\n\n        message = this._padOrTruncate(message, this._options.tokenOptions.message);\n\n        if (!this._options.markdown) {\n            return message;\n        }\n\n        if (this._options.remotes !== undefined) {\n            this._options.remotes.sort(\n                (a, b) =>\n                    (a.default ? -1 : 1) - (b.default ? -1 : 1) ||\n                    a.name.localeCompare(b.name, undefined, { numeric: true, sensitivity: 'base' })\n            );\n\n            for (const r of this._options.remotes) {\n                if (r.provider === undefined) continue;\n\n                message = r.provider.enrichMessage(message);\n                break;\n            }\n        }\n\n        return `\\n> ${message\n            // Escape markdown\n            .replace(escapeMarkdownRegex, '\\\\$&')\n            // Escape markdown header (since the above regex won't match it)\n            .replace(/^===/gm, markdownHeaderReplacement)\n            // Keep under the same block-quote but with line breaks\n            .replace(/\\n/g, '\\t\\n>  ')}`;\n    }\n\n    get sha() {\n        return this.id;\n    }\n\n    static fromTemplate(template: string, commit: GitCommit, dateFormat: string | null): string;\n    static fromTemplate(template: string, commit: GitCommit, options?: CommitFormatOptions): string;\n    static fromTemplate(\n        template: string,\n        commit: GitCommit,\n        dateFormatOrOptions?: string | null | CommitFormatOptions\n    ): string;\n    static fromTemplate(\n        template: string,\n        commit: GitCommit,\n        dateFormatOrOptions?: string | null | CommitFormatOptions\n    ): string {\n        return super.fromTemplateCore(this, template, commit, dateFormatOrOptions);\n    }\n}\n","'use strict';\nimport * as paths from 'path';\nimport { GlyphChars } from '../../constants';\nimport { Strings } from '../../system';\nimport { GitFile, GitFileWithCommit } from '../models/file';\nimport { FormatOptions, Formatter } from './formatter';\n\nexport interface StatusFormatOptions extends FormatOptions {\n    relativePath?: string;\n\n    tokenOptions?: {\n        directory?: Strings.TokenOptions;\n        file?: Strings.TokenOptions;\n        filePath?: Strings.TokenOptions;\n        originalPath?: Strings.TokenOptions;\n        path?: Strings.TokenOptions;\n        status?: Strings.TokenOptions;\n        working?: Strings.TokenOptions;\n    };\n}\n\nexport class StatusFileFormatter extends Formatter<GitFile, StatusFormatOptions> {\n    get directory() {\n        const directory = GitFile.getFormattedDirectory(this._item, false, this._options.relativePath);\n        return this._padOrTruncate(directory, this._options.tokenOptions.directory);\n    }\n\n    get file() {\n        const file = paths.basename(this._item.fileName);\n        return this._padOrTruncate(file, this._options.tokenOptions.file);\n    }\n\n    get filePath() {\n        const filePath = GitFile.getFormattedPath(this._item, { relativeTo: this._options.relativePath });\n        return this._padOrTruncate(filePath, this._options.tokenOptions.filePath);\n    }\n\n    get originalPath() {\n        // if (\n        //     // this._item.status !== 'R' ||\n        //     this._item.originalFileName == null ||\n        //     this._item.originalFileName.length === 0\n        // ) {\n        //     return '';\n        // }\n\n        const originalPath = GitFile.getOriginalRelativePath(this._item, this._options.relativePath);\n        return this._padOrTruncate(originalPath, this._options.tokenOptions.originalPath);\n    }\n\n    get path() {\n        const directory = GitFile.getRelativePath(this._item, this._options.relativePath);\n        return this._padOrTruncate(directory, this._options.tokenOptions.path);\n    }\n\n    get status() {\n        const status = GitFile.getStatusText(this._item.status);\n        return this._padOrTruncate(status, this._options.tokenOptions.status);\n    }\n\n    get working() {\n        const commit = (this._item as GitFileWithCommit).commit;\n        const statusFile = commit === undefined ? this._item : commit.files[0];\n\n        let icon;\n        if (statusFile.workingTreeStatus !== undefined && statusFile.indexStatus !== undefined) {\n            icon = `${GlyphChars.Pencil}${GlyphChars.Space}${GlyphChars.SpaceThinnest}${GlyphChars.Check}`;\n        }\n        else if (statusFile.workingTreeStatus !== undefined) {\n            icon = `${GlyphChars.Pencil}${GlyphChars.SpaceThin}${GlyphChars.SpaceThinnest}${GlyphChars.EnDash}${\n                GlyphChars.Space\n            }`;\n        }\n        else if (statusFile.indexStatus !== undefined) {\n            icon = `${GlyphChars.Space}${GlyphChars.EnDash}${GlyphChars.Space.repeat(2)}${GlyphChars.Check}`;\n        }\n        else {\n            icon = '';\n        }\n        return this._padOrTruncate(icon, this._options.tokenOptions.working);\n    }\n\n    static fromTemplate(template: string, file: GitFile | GitFileWithCommit, dateFormat: string | null): string;\n    static fromTemplate(template: string, file: GitFile | GitFileWithCommit, options?: StatusFormatOptions): string;\n    static fromTemplate(\n        template: string,\n        file: GitFile,\n        dateFormatOrOptions?: string | null | StatusFormatOptions\n    ): string;\n    static fromTemplate(\n        template: string,\n        file: GitFile,\n        dateFormatOrOptions?: string | null | StatusFormatOptions\n    ): string {\n        return super.fromTemplateCore(this, template, file, dateFormatOrOptions);\n    }\n}\n","'use strict';\nimport { Uri } from 'vscode';\nimport { GravatarDefaultStyle } from './config';\nimport { Strings } from './system';\n\nconst gravatarCache: Map<string, Uri> = new Map();\nconst missingGravatarHash = '00000000000000000000000000000000';\n\nexport function clearGravatarCache() {\n    gravatarCache.clear();\n}\n\nexport function getGravatarUri(email: string | undefined, fallback: GravatarDefaultStyle, size: number = 16): Uri {\n    const hash =\n        email != null && email.length !== 0 ? Strings.md5(email.trim().toLowerCase(), 'hex') : missingGravatarHash;\n\n    const key = `${hash}:${size}`;\n    let gravatar = gravatarCache.get(key);\n    if (gravatar !== undefined) return gravatar;\n\n    gravatar = Uri.parse(`https://www.gravatar.com/avatar/${hash}.jpg?s=${size}&d=${fallback}`);\n    gravatarCache.set(key, gravatar);\n\n    return gravatar;\n}\n","'use strict';\nimport { Uri } from 'vscode';\nimport { configuration, DateSource, DateStyle, GravatarDefaultStyle } from '../../configuration';\nimport { Container } from '../../container';\nimport { Dates, memoize } from '../../system';\nimport { CommitFormatter } from '../formatters/formatters';\nimport { Git } from '../git';\nimport { GitUri } from '../gitUri';\nimport { getGravatarUri } from '../../gravatar';\n\nexport interface GitAuthor {\n    name: string;\n    lineCount: number;\n}\n\nexport interface GitCommitLine {\n    sha: string;\n    previousSha?: string;\n    line: number;\n    originalLine: number;\n    code?: string;\n}\n\nexport enum GitCommitType {\n    Blame = 'blame',\n    Log = 'log',\n    LogFile = 'logFile',\n    Stash = 'stash',\n    StashFile = 'stashFile'\n}\n\nexport const CommitFormatting = {\n    dateFormat: undefined! as string | null,\n    dateSource: undefined! as DateSource,\n    dateStyle: undefined! as DateStyle,\n\n    reset: () => {\n        CommitFormatting.dateFormat = configuration.get<string | null>(configuration.name('defaultDateFormat').value);\n        CommitFormatting.dateSource = configuration.get<DateSource>(configuration.name('defaultDateSource').value);\n        CommitFormatting.dateStyle = configuration.get<DateStyle>(configuration.name('defaultDateStyle').value);\n    }\n};\n\nexport abstract class GitCommit {\n    constructor(\n        public readonly type: GitCommitType,\n        public readonly repoPath: string,\n        public readonly sha: string,\n        public readonly author: string,\n        public readonly email: string | undefined,\n        public readonly authorDate: Date,\n        public readonly committerDate: Date,\n        public readonly message: string,\n        fileName: string,\n        public readonly originalFileName: string | undefined,\n        public previousSha: string | undefined,\n        public previousFileName: string | undefined\n    ) {\n        this._fileName = fileName || '';\n    }\n\n    private readonly _fileName: string;\n    get fileName() {\n        // If we aren't a single-file commit, return an empty file name (makes it default to the repoPath)\n        return this.isFile ? this._fileName : '';\n    }\n\n    get date(): Date {\n        return CommitFormatting.dateSource === DateSource.Committed ? this.committerDate : this.authorDate;\n    }\n\n    get formattedDate(): string {\n        return CommitFormatting.dateStyle === DateStyle.Absolute\n            ? this.formatDate(CommitFormatting.dateFormat)\n            : this.formatDateFromNow();\n    }\n\n    @memoize()\n    get shortSha() {\n        return Git.shortenSha(this.sha);\n    }\n\n    get isFile() {\n        return (\n            this.type === GitCommitType.Blame ||\n            this.type === GitCommitType.LogFile ||\n            this.type === GitCommitType.StashFile\n        );\n    }\n\n    get isStash() {\n        return this.type === GitCommitType.Stash || this.type === GitCommitType.StashFile;\n    }\n\n    @memoize()\n    get isUncommitted(): boolean {\n        return Git.isUncommitted(this.sha);\n    }\n\n    @memoize()\n    get isUncommittedStaged(): boolean {\n        return Git.isUncommittedStaged(this.sha);\n    }\n\n    get previousFileSha(): string {\n        return `${this.sha}^`;\n    }\n\n    get previousShortSha() {\n        return this.previousSha && Git.shortenSha(this.previousSha);\n    }\n\n    get previousUri(): Uri {\n        return this.previousFileName ? GitUri.resolveToUri(this.previousFileName, this.repoPath) : this.uri;\n    }\n\n    @memoize()\n    get uri(): Uri {\n        return GitUri.resolveToUri(this.fileName, this.repoPath);\n    }\n\n    @memoize<GitCommit['getPreviousLineDiffUris']>(\n        (uri, editorLine, ref) => `${uri.toString(true)}|${editorLine || ''}|${ref || ''}`\n    )\n    getPreviousLineDiffUris(uri: Uri, editorLine: number, ref: string | undefined) {\n        if (!this.isFile) return Promise.resolve(undefined);\n\n        return Container.git.getPreviousLineDiffUris(this.repoPath, uri, editorLine, ref);\n    }\n\n    @memoize()\n    getWorkingUri(): Promise<Uri | undefined> {\n        if (!this.isFile) return Promise.resolve(undefined);\n\n        return Container.git.getWorkingUri(this.repoPath, this.uri);\n    }\n\n    @memoize()\n    private get authorDateFormatter(): Dates.DateFormatter {\n        return Dates.getFormatter(this.authorDate);\n    }\n\n    @memoize()\n    private get committerDateFormatter(): Dates.DateFormatter {\n        return Dates.getFormatter(this.committerDate);\n    }\n\n    private get dateFormatter(): Dates.DateFormatter {\n        return CommitFormatting.dateSource === DateSource.Committed\n            ? this.committerDateFormatter\n            : this.authorDateFormatter;\n    }\n\n    @memoize<GitCommit['formatAuthorDate']>(format => (format == null ? 'MMMM Do, YYYY h:mma' : format))\n    formatAuthorDate(format?: string | null) {\n        if (format == null) {\n            format = 'MMMM Do, YYYY h:mma';\n        }\n\n        return this.authorDateFormatter.format(format);\n    }\n\n    formatAuthorDateFromNow() {\n        return this.authorDateFormatter.fromNow();\n    }\n\n    @memoize<GitCommit['formatCommitterDate']>(format => (format == null ? 'MMMM Do, YYYY h:mma' : format))\n    formatCommitterDate(format?: string | null) {\n        if (format == null) {\n            format = 'MMMM Do, YYYY h:mma';\n        }\n\n        return this.committerDateFormatter.format(format);\n    }\n\n    formatCommitterDateFromNow() {\n        return this.committerDateFormatter.fromNow();\n    }\n\n    @memoize<GitCommit['formatDate']>(format => (format == null ? 'MMMM Do, YYYY h:mma' : format))\n    formatDate(format?: string | null) {\n        if (format == null) {\n            format = 'MMMM Do, YYYY h:mma';\n        }\n\n        return this.dateFormatter.format(format);\n    }\n\n    formatDateFromNow() {\n        return this.dateFormatter.fromNow();\n    }\n\n    getFormattedPath(options: { relativeTo?: string; separator?: string; suffix?: string } = {}): string {\n        return GitUri.getFormattedPath(this.fileName, options);\n    }\n\n    getGravatarUri(fallback: GravatarDefaultStyle, size: number = 16): Uri {\n        return getGravatarUri(this.email, fallback, size);\n    }\n\n    @memoize()\n    getShortMessage() {\n        // eslint-disable-next-line no-template-curly-in-string\n        return CommitFormatter.fromTemplate('${message}', this, { truncateMessageAtNewLine: true });\n    }\n\n    @memoize()\n    toGitUri(previous: boolean = false): GitUri {\n        return GitUri.fromCommit(this, previous);\n    }\n\n    abstract with(changes: {\n        type?: GitCommitType;\n        sha?: string;\n        fileName?: string;\n        originalFileName?: string | null;\n        previousFileName?: string | null;\n        previousSha?: string | null;\n    }): GitCommit;\n\n    protected getChangedValue<T>(change: T | null | undefined, original: T | undefined): T | undefined {\n        if (change === undefined) return original;\n        return change !== null ? change : undefined;\n    }\n}\n","'use strict';\nimport { GitCommit, GitCommitLine, GitCommitType } from './commit';\n\nexport class GitBlameCommit extends GitCommit {\n    constructor(\n        repoPath: string,\n        sha: string,\n        author: string,\n        email: string | undefined,\n        authorDate: Date,\n        committerDate: Date,\n        message: string,\n        fileName: string,\n        originalFileName: string | undefined,\n        previousSha: string | undefined,\n        previousFileName: string | undefined,\n        public readonly lines: GitCommitLine[]\n    ) {\n        super(\n            GitCommitType.Blame,\n            repoPath,\n            sha,\n            author,\n            email,\n            authorDate,\n            committerDate,\n            message,\n            fileName,\n            originalFileName,\n            previousSha,\n            previousFileName\n        );\n    }\n\n    with(changes: {\n        sha?: string;\n        fileName?: string;\n        originalFileName?: string | null;\n        previousFileName?: string | null;\n        previousSha?: string | null;\n        lines?: GitCommitLine[] | null;\n    }): GitBlameCommit {\n        return new GitBlameCommit(\n            this.repoPath,\n            changes.sha || this.sha,\n            this.author,\n            this.email,\n            this.authorDate,\n            this.committerDate,\n            this.message,\n            changes.fileName || this.fileName,\n            this.getChangedValue(changes.originalFileName, this.originalFileName),\n            this.getChangedValue(changes.previousSha, this.previousSha),\n            this.getChangedValue(changes.previousFileName, this.previousFileName),\n            this.getChangedValue(changes.lines, changes.sha || changes.fileName ? [] : this.lines) || []\n        );\n    }\n}\n","'use strict';\nimport { Uri } from 'vscode';\nimport { GravatarDefaultStyle } from '../../configuration';\nimport { getGravatarUri } from '../../gravatar';\n\nexport class GitContributor {\n    constructor(\n        public readonly repoPath: string,\n        public readonly name: string,\n        public readonly email: string,\n        public readonly count: number\n    ) {}\n\n    getGravatarUri(fallback: GravatarDefaultStyle, size: number = 16): Uri {\n        return getGravatarUri(this.email, fallback, size);\n    }\n}\n","'use strict';\nimport { WorkspaceState } from '../../constants';\nimport { Container } from '../../container';\nimport { RemoteProvider } from '../remotes/factory';\n\nexport enum GitRemoteType {\n    Fetch = 'fetch',\n    Push = 'push'\n}\n\nexport class GitRemote {\n    constructor(\n        public readonly repoPath: string,\n        public readonly id: string,\n        public readonly name: string,\n        public readonly scheme: string,\n        public readonly domain: string,\n        public readonly path: string,\n        public readonly provider: RemoteProvider | undefined,\n        public readonly types: { type: GitRemoteType; url: string }[]\n    ) {}\n\n    get default() {\n        const defaultRemote = Container.context.workspaceState.get<string>(WorkspaceState.DefaultRemote);\n        return this.id === defaultRemote;\n    }\n\n    setAsDefault(state: boolean = true) {\n        return Container.context.workspaceState.update(WorkspaceState.DefaultRemote, state ? this.id : undefined);\n    }\n}\n","'use strict';\nimport { env, Range, Uri, window } from 'vscode';\nimport { Logger } from '../../logger';\nimport { Messages } from '../../messages';\nimport { GitLogCommit } from '../models/logCommit';\n\nexport enum RemoteResourceType {\n    Branch = 'branch',\n    Branches = 'branches',\n    Commit = 'commit',\n    File = 'file',\n    Repo = 'repo',\n    Revision = 'revision'\n}\n\nexport type RemoteResource =\n    | {\n          type: RemoteResourceType.Branch;\n          branch: string;\n      }\n    | {\n          type: RemoteResourceType.Branches;\n      }\n    | {\n          type: RemoteResourceType.Commit;\n          sha: string;\n      }\n    | {\n          type: RemoteResourceType.File;\n          branch?: string;\n          fileName: string;\n          range?: Range;\n      }\n    | {\n          type: RemoteResourceType.Repo;\n      }\n    | {\n          type: RemoteResourceType.Revision;\n          branch?: string;\n          commit?: GitLogCommit;\n          fileName: string;\n          range?: Range;\n          sha?: string;\n      };\n\nexport function getNameFromRemoteResource(resource: RemoteResource) {\n    switch (resource.type) {\n        case RemoteResourceType.Branch:\n            return 'Branch';\n        case RemoteResourceType.Branches:\n            return 'Branches';\n        case RemoteResourceType.Commit:\n            return 'Commit';\n        case RemoteResourceType.File:\n            return 'File';\n        case RemoteResourceType.Repo:\n            return 'Repository';\n        case RemoteResourceType.Revision:\n            return 'Revision';\n        default:\n            return '';\n    }\n}\n\nexport abstract class RemoteProvider {\n    private _name: string | undefined;\n\n    constructor(\n        public readonly domain: string,\n        public readonly path: string,\n        public readonly protocol: string = 'https',\n        name?: string,\n        public readonly custom: boolean = false\n    ) {\n        this._name = name;\n    }\n\n    get icon(): string {\n        return 'remote';\n    }\n\n    get displayPath(): string {\n        return this.path;\n    }\n\n    abstract get name(): string;\n\n    protected get baseUrl() {\n        return `${this.protocol}://${this.domain}/${this.path}`;\n    }\n\n    enrichMessage(message: string): string {\n        return message;\n    }\n\n    protected formatName(name: string) {\n        if (this._name !== undefined) return this._name;\n        return `${name}${this.custom ? ` (${this.domain})` : ''}`;\n    }\n\n    protected splitPath(): [string, string] {\n        const index = this.path.indexOf('/');\n        return [this.path.substring(0, index), this.path.substring(index + 1)];\n    }\n\n    protected getUrlForRepository(): string {\n        return this.baseUrl;\n    }\n    protected abstract getUrlForBranches(): string;\n    protected abstract getUrlForBranch(branch: string): string;\n    protected abstract getUrlForCommit(sha: string): string;\n    protected abstract getUrlForFile(fileName: string, branch?: string, sha?: string, range?: Range): string;\n\n    private openUrl(url?: string): Thenable<{} | undefined> {\n        if (url === undefined) return Promise.resolve(undefined);\n\n        return env.openExternal(Uri.parse(url));\n    }\n\n    async copy(resource: RemoteResource): Promise<{} | undefined> {\n        const url = this.url(resource);\n        if (url === undefined) return undefined;\n\n        try {\n            void (await env.clipboard.writeText(url));\n\n            return undefined;\n        }\n        catch (ex) {\n            if (ex.message.includes(\"Couldn't find the required `xsel` binary\")) {\n                window.showErrorMessage(\n                    'Unable to copy remote url, xsel is not installed. Please install it via your package manager, e.g. `sudo apt install xsel`'\n                );\n                return undefined;\n            }\n\n            Logger.error(ex, 'CopyRemoteUrlToClipboardCommand');\n            return Messages.showGenericErrorMessage('Unable to copy remote url');\n        }\n    }\n\n    open(resource: RemoteResource): Thenable<{} | undefined> {\n        return this.openUrl(this.url(resource));\n    }\n\n    url(resource: RemoteResource): string | undefined {\n        switch (resource.type) {\n            case RemoteResourceType.Branch:\n                return this.getUrlForBranch(encodeURIComponent(resource.branch));\n            case RemoteResourceType.Branches:\n                return this.getUrlForBranches();\n            case RemoteResourceType.Commit:\n                return this.getUrlForCommit(encodeURIComponent(resource.sha));\n            case RemoteResourceType.File:\n                return this.getUrlForFile(\n                    resource.fileName,\n                    resource.branch !== undefined ? encodeURIComponent(resource.branch) : undefined,\n                    undefined,\n                    resource.range\n                );\n            case RemoteResourceType.Repo:\n                return this.getUrlForRepository();\n            case RemoteResourceType.Revision:\n                return this.getUrlForFile(\n                    resource.fileName,\n                    resource.branch !== undefined ? encodeURIComponent(resource.branch) : undefined,\n                    resource.sha !== undefined ? encodeURIComponent(resource.sha) : undefined,\n                    resource.range\n                );\n        }\n\n        return undefined;\n    }\n}\n","'use strict';\nimport { GitDiffParser } from '../parsers/diffParser';\nimport { memoize } from '../../system';\n\nexport interface GitDiffLine {\n    line: string;\n    state: 'added' | 'removed' | 'unchanged';\n}\n\nexport interface GitDiffHunkLine {\n    hunk: GitDiffHunk;\n    current: GitDiffLine | undefined;\n    previous: GitDiffLine | undefined;\n}\n\nexport class GitDiffHunk {\n    constructor(\n        public readonly diff: string,\n        public currentPosition: { start: number; end: number },\n        public previousPosition: { start: number; end: number }\n    ) {}\n\n    @memoize()\n    get lines(): GitDiffHunkLine[] {\n        return GitDiffParser.parseHunk(this);\n    }\n}\n\nexport interface GitDiff {\n    readonly hunks: GitDiffHunk[];\n\n    readonly diff?: string;\n}\n\nexport interface GitDiffShortStat {\n    readonly files: number;\n    readonly insertions: number;\n    readonly deletions: number;\n}\n","'use strict';\nimport * as paths from 'path';\nimport { Uri } from 'vscode';\nimport { memoize, Strings } from '../../system';\nimport { GitUri } from '../gitUri';\nimport { GitCommit, GitCommitType } from './commit';\nimport { GitFile, GitFileStatus } from './file';\n\nexport interface GitLogCommitLine {\n    from: {\n        line: number;\n        count: number;\n    };\n    to: {\n        line: number;\n        count: number;\n    };\n}\n\nexport class GitLogCommit extends GitCommit {\n    nextSha?: string;\n    nextFileName?: string;\n\n    constructor(\n        type: GitCommitType,\n        repoPath: string,\n        sha: string,\n        author: string,\n        email: string | undefined,\n        authorDate: Date,\n        committerDate: Date,\n        message: string,\n        fileName: string,\n        public readonly files: GitFile[],\n        public readonly status?: GitFileStatus | undefined,\n        originalFileName?: string | undefined,\n        previousSha?: string | undefined,\n        previousFileName?: string | undefined,\n        public readonly parentShas?: string[],\n        public readonly line?: GitLogCommitLine\n    ) {\n        super(\n            type,\n            repoPath,\n            sha,\n            author,\n            email,\n            authorDate,\n            committerDate,\n            message,\n            fileName,\n            originalFileName,\n            previousSha || `${sha}^`,\n            previousFileName\n        );\n    }\n\n    get isMerge() {\n        return this.parentShas && this.parentShas.length > 1;\n    }\n\n    get nextUri(): Uri {\n        return this.nextFileName ? GitUri.resolveToUri(this.nextFileName, this.repoPath) : this.uri;\n    }\n\n    get previousFileSha(): string {\n        return this.isFile ? this.previousSha! : `${this.sha}^`;\n    }\n\n    @memoize()\n    getDiffStatus() {\n        const diff = {\n            added: 0,\n            deleted: 0,\n            changed: 0\n        };\n        if (this.files.length === 0) return diff;\n\n        for (const f of this.files) {\n            switch (f.status) {\n                case 'A':\n                case '?':\n                    diff.added++;\n                    break;\n                case 'D':\n                    diff.deleted++;\n                    break;\n                default:\n                    diff.changed++;\n                    break;\n            }\n        }\n\n        return diff;\n    }\n\n    getFormattedDiffStatus({\n        compact,\n        empty,\n        expand,\n        prefix = '',\n        separator = ' ',\n        suffix = ''\n    }: {\n        compact?: boolean;\n        empty?: string;\n        expand?: boolean;\n        prefix?: string;\n        separator?: string;\n        suffix?: string;\n    } = {}): string {\n        const { added, changed, deleted } = this.getDiffStatus();\n        if (added === 0 && changed === 0 && deleted === 0) return empty || '';\n\n        if (expand) {\n            let status = '';\n            if (added) {\n                status += `${Strings.pluralize('file', added)} added`;\n            }\n            if (changed) {\n                status += `${status.length === 0 ? '' : separator}${Strings.pluralize('file', changed)} changed`;\n            }\n            if (deleted) {\n                status += `${status.length === 0 ? '' : separator}${Strings.pluralize('file', deleted)} deleted`;\n            }\n            return `${prefix}${status}${suffix}`;\n        }\n\n        return `${prefix}${compact && added === 0 ? '' : `+${added}${separator}`}${\n            compact && changed === 0 ? '' : `~${changed}${separator}`\n        }${compact && deleted === 0 ? '' : `-${deleted}`}${suffix}`;\n    }\n\n    toFileCommit(fileName: string): GitLogCommit | undefined;\n    toFileCommit(file: GitFile): GitLogCommit;\n    toFileCommit(fileNameOrFile: string | GitFile): GitLogCommit | undefined {\n        let file: GitFile | undefined;\n        if (typeof fileNameOrFile === 'string') {\n            const fileName = Strings.normalizePath(paths.relative(this.repoPath, fileNameOrFile));\n            file = this.files.find(f => f.fileName === fileName);\n            if (file === undefined) return undefined;\n        }\n        else {\n            file = fileNameOrFile;\n        }\n\n        let sha;\n        // If this is a stash commit with an untracked file\n        if (this.type === GitCommitType.Stash && file.status === '?') {\n            sha = `${this.sha}^3`;\n        }\n\n        // If this isn't a single-file commit, we can't trust the previousSha\n        const previousSha = this.isFile ? this.previousSha : `${this.sha}^`;\n\n        return this.with({\n            type: this.isStash ? GitCommitType.StashFile : GitCommitType.LogFile,\n            sha: sha,\n            fileName: file.fileName,\n            originalFileName: file.originalFileName,\n            previousSha: previousSha,\n            previousFileName: file.originalFileName || file.fileName,\n            status: file.status,\n            files: [file]\n        });\n    }\n\n    with(changes: {\n        type?: GitCommitType;\n        sha?: string | null;\n        fileName?: string;\n        author?: string;\n        email?: string;\n        authorDate?: Date;\n        committedDate?: Date;\n        message?: string;\n        originalFileName?: string | null;\n        previousFileName?: string | null;\n        previousSha?: string | null;\n        status?: GitFileStatus;\n        files?: GitFile[] | null;\n    }): GitLogCommit {\n        return new GitLogCommit(\n            changes.type || this.type,\n            this.repoPath,\n            this.getChangedValue(changes.sha, this.sha)!,\n            changes.author || this.author,\n            changes.email || this.email,\n            changes.authorDate || this.authorDate,\n            changes.committedDate || this.committerDate,\n            changes.message || this.message,\n            changes.fileName || this.fileName,\n            this.getChangedValue(changes.files, this.files) || [],\n            changes.status || this.status,\n            this.getChangedValue(changes.originalFileName, this.originalFileName),\n            this.getChangedValue(changes.previousSha, this.previousSha),\n            this.getChangedValue(changes.previousFileName, this.previousFileName),\n            undefined\n        );\n    }\n}\n","'use strict';\nimport { Range } from 'vscode';\nimport { RemoteProvider } from './provider';\n\nconst issueEnricherRegex = /(^|\\s)(#([0-9]+))\\b/gi;\n\nconst gitRegex = /\\/_git\\/?/i;\nconst legacyDefaultCollectionRegex = /^DefaultCollection\\//i;\nconst orgAndProjectRegex = /^(.*?)\\/(.*?)\\/(.*)/;\nconst sshDomainRegex = /^(ssh|vs-ssh)\\./i;\nconst sshPathRegex = /^\\/?v\\d\\//i;\n\nexport class AzureDevOpsRemote extends RemoteProvider {\n    constructor(domain: string, path: string, protocol?: string, name?: string, legacy: boolean = false) {\n        if (sshDomainRegex.test(domain)) {\n            path = path.replace(sshPathRegex, '');\n            domain = domain.replace(sshDomainRegex, '');\n\n            // Add in /_git/ into ssh urls\n            const match = orgAndProjectRegex.exec(path);\n            if (match != null) {\n                const [, org, project, rest] = match;\n\n                // Handle legacy vsts urls\n                if (legacy) {\n                    domain = `${org}.${domain}`;\n                    path = `${project}/_git/${rest}`;\n                }\n                else {\n                    path = `${org}/${project}/_git/${rest}`;\n                }\n            }\n        }\n\n        super(domain, path, protocol, name);\n    }\n\n    get icon() {\n        return 'vsts';\n    }\n\n    get name() {\n        return 'Azure DevOps';\n    }\n\n    private _displayPath: string | undefined;\n    get displayPath(): string {\n        if (this._displayPath === undefined) {\n            this._displayPath = this.path.replace(gitRegex, '/').replace(legacyDefaultCollectionRegex, '');\n        }\n        return this._displayPath;\n    }\n\n    enrichMessage(message: string): string {\n        // Strip off any `_git` part from the repo url\n        const baseUrl = this.baseUrl.replace(gitRegex, '/');\n        // Matches #123\n        return message.replace(issueEnricherRegex, `$1[$2](${baseUrl}/_workitems/edit/$3 \"Open Work Item $2\")`);\n    }\n\n    protected getUrlForBranches(): string {\n        return `${this.baseUrl}/branches`;\n    }\n\n    protected getUrlForBranch(branch: string): string {\n        return `${this.baseUrl}/?version=GB${branch}&_a=history`;\n    }\n\n    protected getUrlForCommit(sha: string): string {\n        return `${this.baseUrl}/commit/${sha}`;\n    }\n\n    protected getUrlForFile(fileName: string, branch?: string, sha?: string, range?: Range): string {\n        let line;\n        if (range) {\n            if (range.start.line === range.end.line) {\n                line = `&line=${range.start.line}`;\n            }\n            else {\n                line = `&line=${range.start.line}&lineEnd=${range.end.line}`;\n            }\n        }\n        else {\n            line = '';\n        }\n\n        if (sha) return `${this.baseUrl}/commit/${sha}/?_a=contents&path=%2F${fileName}${line}`;\n        if (branch) return `${this.baseUrl}/?path=%2F${fileName}&version=GB${branch}&_a=contents${line}`;\n        return `${this.baseUrl}?path=%2F${fileName}${line}`;\n    }\n}\n","'use strict';\nimport { Range } from 'vscode';\nimport { RemoteProvider } from './provider';\n\nconst issueEnricherRegex = /(^|\\s)(issue #([0-9]+))\\b/gi;\nconst prEnricherRegex = /(^|\\s)(pull request #([0-9]+))\\b/gi;\n\nexport class BitbucketRemote extends RemoteProvider {\n    constructor(domain: string, path: string, protocol?: string, name?: string, custom: boolean = false) {\n        super(domain, path, protocol, name, custom);\n    }\n\n    get icon() {\n        return 'bitbucket';\n    }\n\n    get name() {\n        return this.formatName('Bitbucket');\n    }\n\n    enrichMessage(message: string): string {\n        return (\n            message\n                // Matches issue #123\n                .replace(issueEnricherRegex, `$1[$2](${this.baseUrl}/issues/$3 \"Open Issue $2\")`)\n                // Matches pull request #123\n                .replace(prEnricherRegex, `$1[$2](${this.baseUrl}/pull-requests/$3 \"Open PR $2\")`)\n        );\n    }\n\n    protected getUrlForBranches(): string {\n        return `${this.baseUrl}/branches`;\n    }\n\n    protected getUrlForBranch(branch: string): string {\n        return `${this.baseUrl}/commits/branch/${branch}`;\n    }\n\n    protected getUrlForCommit(sha: string): string {\n        return `${this.baseUrl}/commits/${sha}`;\n    }\n\n    protected getUrlForFile(fileName: string, branch?: string, sha?: string, range?: Range): string {\n        let line;\n        if (range) {\n            if (range.start.line === range.end.line) {\n                line = `#${fileName}-${range.start.line}`;\n            }\n            else {\n                line = `#${fileName}-${range.start.line}:${range.end.line}`;\n            }\n        }\n        else {\n            line = '';\n        }\n\n        if (sha) return `${this.baseUrl}/src/${sha}/${fileName}${line}`;\n        if (branch) return `${this.baseUrl}/src/${branch}/${fileName}${line}`;\n        return `${this.baseUrl}?path=${fileName}${line}`;\n    }\n}\n","'use strict';\nimport { Range } from 'vscode';\nimport { RemoteProvider } from './provider';\n\nconst issueEnricherRegex = /(^|\\s)(issue #([0-9]+))\\b/gi;\nconst prEnricherRegex = /(^|\\s)(pull request #([0-9]+))\\b/gi;\n\nexport class BitbucketServerRemote extends RemoteProvider {\n    constructor(domain: string, path: string, protocol?: string, name?: string, custom: boolean = false) {\n        super(domain, path, protocol, name, custom);\n    }\n\n    protected get baseUrl() {\n        const [project, repo] = this.splitPath();\n        return `https://${this.domain}/projects/${project}/repos/${repo}`;\n    }\n\n    get icon() {\n        return 'bitbucket';\n    }\n\n    get name() {\n        return this.formatName('Bitbucket Server');\n    }\n\n    enrichMessage(message: string): string {\n        return (\n            message\n                // Matches issue #123\n                .replace(issueEnricherRegex, `$1[$2](${this.baseUrl}/issues/$3 \"Open Issue $2\")`)\n                // Matches pull request #123\n                .replace(prEnricherRegex, `$1[$2](${this.baseUrl}/pull-requests/$3 \"Open PR $2\")`)\n        );\n    }\n\n    protected getUrlForBranches(): string {\n        return `${this.baseUrl}/branches`;\n    }\n\n    protected getUrlForBranch(branch: string): string {\n        return `${this.baseUrl}/commits?until=${branch}`;\n    }\n\n    protected getUrlForCommit(sha: string): string {\n        return `${this.baseUrl}/commits/${sha}`;\n    }\n\n    protected getUrlForFile(fileName: string, branch?: string, sha?: string, range?: Range): string {\n        let line;\n        if (range) {\n            if (range.start.line === range.end.line) {\n                line = `#${range.start.line}`;\n            }\n            else {\n                line = `#${range.start.line}-${range.end.line}`;\n            }\n        }\n        else {\n            line = '';\n        }\n        if (sha) return `${this.baseUrl}/browse/${fileName}?at=${sha}${line}`;\n        if (branch) return `${this.baseUrl}/browse/${fileName}?at=${branch}${line}`;\n        return `${this.baseUrl}/browse/${fileName}${line}`;\n    }\n}\n","'use strict';\nimport { Range } from 'vscode';\nimport { RemotesUrlsConfig } from '../../configuration';\nimport { Strings } from '../../system';\nimport { RemoteProvider } from './provider';\n\nexport class CustomRemote extends RemoteProvider {\n    private readonly urls: RemotesUrlsConfig;\n\n    constructor(domain: string, path: string, urls: RemotesUrlsConfig, protocol?: string, name?: string) {\n        super(domain, path, protocol, name, true);\n        this.urls = urls;\n    }\n\n    get name() {\n        return this.formatName('Custom');\n    }\n\n    protected getUrlForRepository(): string {\n        return Strings.interpolate(this.urls.repository, this.getContext());\n    }\n\n    protected getUrlForBranches(): string {\n        return Strings.interpolate(this.urls.branches, this.getContext());\n    }\n\n    protected getUrlForBranch(branch: string): string {\n        return Strings.interpolate(this.urls.branch, this.getContext({ branch: branch }));\n    }\n\n    protected getUrlForCommit(sha: string): string {\n        return Strings.interpolate(this.urls.commit, this.getContext({ id: sha }));\n    }\n\n    protected getUrlForFile(fileName: string, branch?: string, sha?: string, range?: Range): string {\n        let line;\n        if (range) {\n            if (range.start.line === range.end.line) {\n                line = Strings.interpolate(this.urls.fileLine, { line: range.start.line });\n            }\n            else {\n                line = Strings.interpolate(this.urls.fileRange, { start: range.start.line, end: range.end.line });\n            }\n        }\n        else {\n            line = '';\n        }\n\n        if (sha) {\n            return Strings.interpolate(\n                this.urls.fileInCommit,\n                this.getContext({ id: sha, file: fileName, line: line })\n            );\n        }\n        if (branch) {\n            return Strings.interpolate(\n                this.urls.fileInBranch,\n                this.getContext({ branch: branch, file: fileName, line: line })\n            );\n        }\n        return Strings.interpolate(this.urls.file, this.getContext({ file: fileName, line: line }));\n    }\n\n    private getContext(context?: {}) {\n        const [repoBase, repoPath] = this.splitPath();\n        return {\n            repo: this.path,\n            repoBase: repoBase,\n            repoPath: repoPath,\n            ...(context || {})\n        };\n    }\n}\n","'use strict';\nimport { Range } from 'vscode';\nimport { RemoteProvider } from './provider';\n\nconst issueEnricherRegex = /(^|\\s)((?:#|gh-)([0-9]+))\\b/gi;\nconst issueEnricher3rdParyRegex = /\\b((\\w+-?\\w+(?!-)\\/\\w+-?\\w+(?!-))#([0-9]+))\\b/g;\n\nexport class GitHubRemote extends RemoteProvider {\n    constructor(domain: string, path: string, protocol?: string, name?: string, custom: boolean = false) {\n        super(domain, path, protocol, name, custom);\n    }\n\n    get icon() {\n        return 'github';\n    }\n\n    get name() {\n        return this.formatName('GitHub');\n    }\n\n    enrichMessage(message: string): string {\n        return (\n            message\n                // Matches #123 or gh-123 or GH-123\n                .replace(issueEnricherRegex, `$1[$2](${this.baseUrl}/issues/$3 \"Open Issue $2\")`)\n                // Matches eamodio/vscode-gitlens#123\n                .replace(\n                    issueEnricher3rdParyRegex,\n                    `[$1](${this.protocol}://${this.domain}/$2/issues/$3 \"Open Issue #$3 from $2\")`\n                )\n        );\n    }\n\n    protected getUrlForBranches(): string {\n        return `${this.baseUrl}/branches`;\n    }\n\n    protected getUrlForBranch(branch: string): string {\n        return `${this.baseUrl}/commits/${branch}`;\n    }\n\n    protected getUrlForCommit(sha: string): string {\n        return `${this.baseUrl}/commit/${sha}`;\n    }\n\n    protected getUrlForFile(fileName: string, branch?: string, sha?: string, range?: Range): string {\n        let line;\n        if (range) {\n            if (range.start.line === range.end.line) {\n                line = `#L${range.start.line}`;\n            }\n            else {\n                line = `#L${range.start.line}-L${range.end.line}`;\n            }\n        }\n        else {\n            line = '';\n        }\n\n        if (sha) return `${this.baseUrl}/blob/${sha}/${fileName}${line}`;\n        if (branch) return `${this.baseUrl}/blob/${branch}/${fileName}${line}`;\n        return `${this.baseUrl}?path=${fileName}${line}`;\n    }\n}\n","'use strict';\nimport { Range } from 'vscode';\nimport { RemoteProvider } from './provider';\n\nconst issueEnricherRegex = /(^|\\s)(#([0-9]+))\\b/gi;\n\nexport class GitLabRemote extends RemoteProvider {\n    constructor(domain: string, path: string, protocol?: string, name?: string, custom: boolean = false) {\n        super(domain, path, protocol, name, custom);\n    }\n\n    get icon() {\n        return 'gitlab';\n    }\n\n    get name() {\n        return this.formatName('GitLab');\n    }\n\n    enrichMessage(message: string): string {\n        // Matches #123\n        return message.replace(issueEnricherRegex, `$1[$2](${this.baseUrl}/issues/$3 \"Open Issue $2\")`);\n    }\n\n    protected getUrlForBranches(): string {\n        return `${this.baseUrl}/branches`;\n    }\n\n    protected getUrlForBranch(branch: string): string {\n        return `${this.baseUrl}/commits/${branch}`;\n    }\n\n    protected getUrlForCommit(sha: string): string {\n        return `${this.baseUrl}/commit/${sha}`;\n    }\n\n    protected getUrlForFile(fileName: string, branch?: string, sha?: string, range?: Range): string {\n        let line;\n        if (range) {\n            if (range.start.line === range.end.line) {\n                line = `#L${range.start.line}`;\n            }\n            else {\n                line = `#L${range.start.line}-${range.end.line}`;\n            }\n        }\n        else {\n            line = '';\n        }\n\n        if (sha) return `${this.baseUrl}/blob/${sha}/${fileName}${line}`;\n        if (branch) return `${this.baseUrl}/blob/${branch}/${fileName}${line}`;\n        return `${this.baseUrl}?path=${fileName}${line}`;\n    }\n}\n","'use strict';\nimport { CustomRemoteType, RemotesConfig } from '../../configuration';\nimport { Logger } from '../../logger';\nimport { AzureDevOpsRemote } from './azure-devops';\nimport { BitbucketRemote } from './bitbucket';\nimport { BitbucketServerRemote } from './bitbucket-server';\nimport { CustomRemote } from './custom';\nimport { GitHubRemote } from './github';\nimport { GitLabRemote } from './gitlab';\nimport { RemoteProvider } from './provider';\n\nexport { RemoteProvider };\nexport type RemoteProviders = [string | RegExp, ((domain: string, path: string) => RemoteProvider)][];\n\nconst defaultProviders: RemoteProviders = [\n    ['bitbucket.org', (domain: string, path: string) => new BitbucketRemote(domain, path)],\n    ['github.com', (domain: string, path: string) => new GitHubRemote(domain, path)],\n    ['gitlab.com', (domain: string, path: string) => new GitLabRemote(domain, path)],\n    [/\\bdev\\.azure\\.com$/i, (domain: string, path: string) => new AzureDevOpsRemote(domain, path)],\n    [/\\bbitbucket\\b/i, (domain: string, path: string) => new BitbucketServerRemote(domain, path)],\n    [/\\bgitlab\\b/i, (domain: string, path: string) => new GitLabRemote(domain, path)],\n    [\n        /\\bvisualstudio\\.com$/i,\n        (domain: string, path: string) => new AzureDevOpsRemote(domain, path, undefined, undefined, true)\n    ]\n];\n\nexport class RemoteProviderFactory {\n    static factory(providers: RemoteProviders): (domain: string, path: string) => RemoteProvider | undefined {\n        return (domain: string, path: string) => this.create(providers, domain, path);\n    }\n\n    static create(providers: RemoteProviders, domain: string, path: string): RemoteProvider | undefined {\n        try {\n            const key = domain.toLowerCase();\n            for (const [matcher, creator] of providers) {\n                if (\n                    (typeof matcher === 'string' && matcher === key) ||\n                    (typeof matcher !== 'string' && matcher.test(key))\n                ) {\n                    return creator(domain, path);\n                }\n            }\n\n            return undefined;\n        }\n        catch (ex) {\n            Logger.error(ex, 'RemoteProviderFactory');\n            return undefined;\n        }\n    }\n\n    static loadProviders(cfg: RemotesConfig[] | null | undefined): RemoteProviders {\n        const providers: RemoteProviders = [];\n\n        if (cfg != null && cfg.length > 0) {\n            for (const rc of cfg) {\n                const provider = this.getCustomProvider(rc);\n                if (provider === undefined) continue;\n\n                providers.push([rc.domain.toLowerCase(), provider]);\n            }\n        }\n\n        providers.push(...defaultProviders);\n        return providers;\n    }\n\n    private static getCustomProvider(cfg: RemotesConfig) {\n        switch (cfg.type) {\n            case CustomRemoteType.Bitbucket:\n                return (domain: string, path: string) =>\n                    new BitbucketRemote(domain, path, cfg.protocol, cfg.name, true);\n            case CustomRemoteType.BitbucketServer:\n                return (domain: string, path: string) =>\n                    new BitbucketServerRemote(domain, path, cfg.protocol, cfg.name, true);\n            case CustomRemoteType.Custom:\n                return (domain: string, path: string) =>\n                    new CustomRemote(domain, path, cfg.urls!, cfg.protocol, cfg.name);\n            case CustomRemoteType.GitHub:\n                return (domain: string, path: string) => new GitHubRemote(domain, path, cfg.protocol, cfg.name, true);\n            case CustomRemoteType.GitLab:\n                return (domain: string, path: string) => new GitLabRemote(domain, path, cfg.protocol, cfg.name, true);\n        }\n        return undefined;\n    }\n}\n","'use strict';\nimport * as fs from 'fs';\nimport * as paths from 'path';\nimport {\n    commands,\n    ConfigurationChangeEvent,\n    Disposable,\n    Event,\n    EventEmitter,\n    ProgressLocation,\n    RelativePattern,\n    Uri,\n    window,\n    workspace,\n    WorkspaceFolder\n} from 'vscode';\nimport { configuration, RemotesConfig } from '../../configuration';\nimport { StarredRepositories, WorkspaceState } from '../../constants';\nimport { Container } from '../../container';\nimport { Functions, gate, log } from '../../system';\nimport { GitBranch, GitContributor, GitDiffShortStat, GitRemote, GitStash, GitStatus, GitTag } from '../git';\nimport { GitUri } from '../gitUri';\nimport { RemoteProviderFactory, RemoteProviders } from '../remotes/factory';\n\nexport enum RepositoryChange {\n    Config = 'config',\n    Closed = 'closed',\n    // FileSystem = 'file-system',\n    Remotes = 'remotes',\n    Repository = 'repository',\n    Stashes = 'stashes',\n    Tags = 'tags'\n}\n\nexport class RepositoryChangeEvent {\n    readonly changes: RepositoryChange[] = [];\n\n    constructor(public readonly repository?: Repository) {}\n\n    changed(change: RepositoryChange, solely: boolean = false) {\n        if (solely) return this.changes.length === 1 && this.changes[0] === change;\n\n        return this.changes.includes(change);\n\n        // const changed = this.changes.includes(change);\n        // if (changed) return true;\n\n        // if (change === RepositoryChange.Repository) {\n        //     return this.changes.includes(RepositoryChange.Stashes);\n        // }\n\n        // return false;\n    }\n}\n\nexport interface RepositoryFileSystemChangeEvent {\n    readonly repository?: Repository;\n    readonly uris: Uri[];\n}\n\nexport class Repository implements Disposable {\n    private _onDidChange = new EventEmitter<RepositoryChangeEvent>();\n    get onDidChange(): Event<RepositoryChangeEvent> {\n        return this._onDidChange.event;\n    }\n\n    private _onDidChangeFileSystem = new EventEmitter<RepositoryFileSystemChangeEvent>();\n    get onDidChangeFileSystem(): Event<RepositoryFileSystemChangeEvent> {\n        return this._onDidChangeFileSystem.event;\n    }\n\n    readonly formattedName: string;\n    readonly id: string;\n    readonly index: number;\n    readonly name: string;\n    readonly normalizedPath: string;\n    readonly supportsChangeEvents: boolean = true;\n\n    private _branch: Promise<GitBranch | undefined> | undefined;\n    private readonly _disposable: Disposable;\n    private _fireChangeDebounced: ((e: RepositoryChangeEvent) => void) | undefined = undefined;\n    private _fireFileSystemChangeDebounced: ((e: RepositoryFileSystemChangeEvent) => void) | undefined = undefined;\n    private _fsWatchCounter = 0;\n    private _fsWatcherDisposable: Disposable | undefined;\n    private _pendingChanges: { repo?: RepositoryChangeEvent; fs?: RepositoryFileSystemChangeEvent } = {};\n    private _providers: RemoteProviders | undefined;\n    private _remotes: Promise<GitRemote[]> | undefined;\n    private _suspended: boolean;\n\n    constructor(\n        public readonly folder: WorkspaceFolder,\n        public readonly path: string,\n        public readonly root: boolean,\n        private readonly onAnyRepositoryChanged: (repo: Repository, reason: RepositoryChange) => void,\n        suspended: boolean,\n        closed: boolean = false\n    ) {\n        const relativePath = paths.relative(folder.uri.fsPath, path);\n        if (root) {\n            // Check if the repository is not contained by a workspace folder\n            const repoFolder = workspace.getWorkspaceFolder(GitUri.fromRepoPath(path));\n            if (repoFolder === undefined) {\n                // If it isn't within a workspace folder we can't get change events, see: https://github.com/Microsoft/vscode/issues/3025\n                this.supportsChangeEvents = false;\n                this.formattedName = this.name = paths.basename(path);\n            }\n            else {\n                this.formattedName = this.name = folder.name;\n            }\n        }\n        else {\n            this.formattedName = relativePath ? `${folder.name} (${relativePath})` : folder.name;\n            this.name = folder.name;\n        }\n        this.index = folder.index;\n\n        this.normalizedPath = (path.endsWith('/') ? path : `${path}/`).toLowerCase();\n        this.id = this.normalizedPath;\n\n        this._suspended = suspended;\n        this._closed = closed;\n\n        // TODO: createFileSystemWatcher doesn't work unless the folder is part of the workspaceFolders\n        // https://github.com/Microsoft/vscode/issues/3025\n        const watcher = workspace.createFileSystemWatcher(\n            new RelativePattern(\n                folder,\n                '{\\\n**/.git/config,\\\n**/.git/index,\\\n**/.git/HEAD,\\\n**/.git/refs/stash,\\\n**/.git/refs/heads/**,\\\n**/.git/refs/remotes/**,\\\n**/.git/refs/tags/**,\\\n**/.gitignore\\\n}'\n            )\n        );\n        this._disposable = Disposable.from(\n            watcher,\n            watcher.onDidChange(this.onRepositoryChanged, this),\n            watcher.onDidCreate(this.onRepositoryChanged, this),\n            watcher.onDidDelete(this.onRepositoryChanged, this),\n            configuration.onDidChange(this.onConfigurationChanged, this)\n        );\n        this.onConfigurationChanged(configuration.initializingChangeEvent);\n    }\n\n    dispose() {\n        this.stopWatchingFileSystem();\n\n        // // Clean up any disposables in storage\n        // for (const item of this.storage.values()) {\n        //     if (item != null && typeof item.dispose === 'function') {\n        //         item.dispose();\n        //     }\n        // }\n\n        this._disposable && this._disposable.dispose();\n    }\n\n    private onConfigurationChanged(e: ConfigurationChangeEvent) {\n        const section = configuration.name('remotes').value;\n        if (configuration.changed(e, section, this.folder.uri)) {\n            this._providers = RemoteProviderFactory.loadProviders(\n                configuration.get<RemotesConfig[] | null | undefined>(section, this.folder.uri)\n            );\n\n            if (!configuration.initializing(e)) {\n                this._remotes = undefined;\n                this.fireChange(RepositoryChange.Remotes);\n            }\n        }\n    }\n\n    private onFileSystemChanged(uri: Uri) {\n        // Ignore .git changes\n        if (/\\.git(?:\\/|\\\\|$)/.test(uri.fsPath)) return;\n\n        this.fireFileSystemChange(uri);\n    }\n\n    private onRepositoryChanged(uri: Uri) {\n        if (uri !== undefined && uri.path.endsWith('refs/stash')) {\n            this.fireChange(RepositoryChange.Stashes);\n\n            return;\n        }\n\n        this._branch = undefined;\n\n        if (uri !== undefined && uri.path.endsWith('refs/remotes')) {\n            this._remotes = undefined;\n            this.fireChange(RepositoryChange.Remotes);\n\n            return;\n        }\n\n        if (uri !== undefined && uri.path.endsWith('refs/tags')) {\n            this.fireChange(RepositoryChange.Tags);\n\n            return;\n        }\n\n        if (uri !== undefined && uri.path.endsWith('config')) {\n            this._remotes = undefined;\n            this.fireChange(RepositoryChange.Config, RepositoryChange.Remotes);\n\n            return;\n        }\n\n        this.onAnyRepositoryChanged(this, RepositoryChange.Repository);\n        this.fireChange(RepositoryChange.Repository);\n    }\n\n    private _closed: boolean = false;\n    get closed(): boolean {\n        return this._closed;\n    }\n    set closed(value: boolean) {\n        const changed = this._closed !== value;\n        this._closed = value;\n        if (changed) {\n            this.onAnyRepositoryChanged(this, RepositoryChange.Closed);\n            this.fireChange(RepositoryChange.Closed);\n        }\n    }\n\n    containsUri(uri: Uri) {\n        if (uri instanceof GitUri) {\n            uri = uri.repoPath !== undefined ? GitUri.file(uri.repoPath) : uri.documentUri();\n        }\n\n        return this.folder === workspace.getWorkspaceFolder(uri);\n    }\n\n    @gate()\n    @log()\n    async fetch(options: { progress?: boolean; remote?: string } = {}) {\n        const { progress, ...opts } = { progress: true, ...options };\n        if (!progress) return this.fetchCore(opts);\n\n        return void (await window.withProgress(\n            {\n                location: ProgressLocation.Notification,\n                title: `Fetching ${opts.remote ? `${opts.remote} of ` : ''}${this.formattedName}...`,\n                cancellable: false\n            },\n            () => this.fetchCore(opts)\n        ));\n    }\n\n    private async fetchCore(options: { remote?: string } = {}) {\n        void (await Container.git.fetch(this.path, options.remote));\n\n        this.fireChange(RepositoryChange.Repository);\n    }\n\n    getBranch(): Promise<GitBranch | undefined> {\n        if (this._branch === undefined || !this.supportsChangeEvents) {\n            this._branch = Container.git.getBranch(this.path);\n        }\n        return this._branch;\n    }\n\n    getBranches(): Promise<GitBranch[]> {\n        return Container.git.getBranches(this.path);\n    }\n\n    getChangedFilesCount(sha?: string): Promise<GitDiffShortStat | undefined> {\n        return Container.git.getChangedFilesCount(this.path, sha);\n    }\n\n    getContributors(): Promise<GitContributor[]> {\n        return Container.git.getContributors(this.path);\n    }\n\n    async getLastFetched(): Promise<number> {\n        const hasRemotes = await this.hasRemotes();\n        if (!hasRemotes || Container.vsls.isMaybeGuest) return 0;\n\n        return new Promise<number>((resolve, reject) =>\n            fs.stat(paths.join(this.path, '.git/FETCH_HEAD'), (err, stat) => resolve(err ? 0 : stat.mtime.getTime()))\n        );\n    }\n\n    getRemotes(): Promise<GitRemote[]> {\n        if (this._remotes === undefined || !this.supportsChangeEvents) {\n            if (this._providers === undefined) {\n                const remotesCfg = configuration.get<RemotesConfig[] | null | undefined>(\n                    configuration.name('remotes').value,\n                    this.folder.uri\n                );\n                this._providers = RemoteProviderFactory.loadProviders(remotesCfg);\n            }\n\n            this._remotes = Container.git.getRemotesCore(this.path, this._providers);\n        }\n\n        return this._remotes;\n    }\n\n    getStashList(): Promise<GitStash | undefined> {\n        return Container.git.getStashList(this.path);\n    }\n\n    getStatus(): Promise<GitStatus | undefined> {\n        return Container.git.getStatusForRepo(this.path);\n    }\n\n    getTags(options?: { includeRefs?: boolean }): Promise<GitTag[]> {\n        return Container.git.getTags(this.path, options);\n    }\n\n    async hasRemotes(): Promise<boolean> {\n        const remotes = await this.getRemotes();\n        return remotes !== undefined && remotes.length > 0;\n    }\n\n    async hasTrackingBranch(): Promise<boolean> {\n        const branch = await this.getBranch();\n        return branch !== undefined && branch.tracking !== undefined;\n    }\n\n    @gate()\n    @log()\n    async pull(options: { progress?: boolean } = {}) {\n        const { progress } = { progress: true, ...options };\n        if (!progress) return this.pullCore();\n\n        return void (await window.withProgress(\n            {\n                location: ProgressLocation.Notification,\n                title: `Pulling ${this.formattedName}...`,\n                cancellable: false\n            },\n            () => this.pullCore()\n        ));\n    }\n\n    private async pullCore() {\n        void (await commands.executeCommand('git.pull', this.path));\n\n        this.fireChange(RepositoryChange.Repository);\n    }\n\n    @gate()\n    @log()\n    async push(options: { force?: boolean; progress?: boolean } = {}) {\n        const { force, progress } = { progress: true, ...options };\n        if (!progress) return this.pushCore(force);\n\n        return void (await window.withProgress(\n            {\n                location: ProgressLocation.Notification,\n                title: `Pushing ${this.formattedName}...`,\n                cancellable: false\n            },\n            () => this.pushCore(force)\n        ));\n    }\n\n    private async pushCore(force: boolean = false) {\n        void (await commands.executeCommand(force ? 'git.pushForce' : 'git.push', this.path));\n\n        this.fireChange(RepositoryChange.Repository);\n    }\n\n    resume() {\n        if (!this._suspended) return;\n\n        this._suspended = false;\n\n        // If we've come back into focus and we are dirty, fire the change events\n\n        if (this._pendingChanges.repo !== undefined) {\n            this._fireChangeDebounced!(this._pendingChanges.repo);\n        }\n\n        if (this._pendingChanges.fs !== undefined) {\n            this._fireFileSystemChangeDebounced!(this._pendingChanges.fs);\n        }\n    }\n\n    get starred() {\n        const starred = Container.context.workspaceState.get<StarredRepositories>(WorkspaceState.StarredRepositories);\n        return starred !== undefined && starred[this.id] === true;\n    }\n\n    star() {\n        return this.updateStarred(true);\n    }\n\n    unstar() {\n        return this.updateStarred(false);\n    }\n\n    private async updateStarred(star: boolean) {\n        let starred = Container.context.workspaceState.get<StarredRepositories>(WorkspaceState.StarredRepositories);\n        if (starred === undefined) {\n            starred = Object.create(null);\n        }\n\n        if (star) {\n            starred![this.id] = true;\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\n            const { [this.id]: _, ...rest } = starred!;\n            starred = rest;\n        }\n        await Container.context.workspaceState.update(WorkspaceState.StarredRepositories, starred);\n    }\n\n    startWatchingFileSystem() {\n        this._fsWatchCounter++;\n        if (this._fsWatcherDisposable !== undefined) return;\n\n        // TODO: createFileSystemWatcher doesn't work unless the folder is part of the workspaceFolders\n        // https://github.com/Microsoft/vscode/issues/3025\n        const watcher = workspace.createFileSystemWatcher(new RelativePattern(this.folder, '**'));\n        this._fsWatcherDisposable = Disposable.from(\n            watcher,\n            watcher.onDidChange(this.onFileSystemChanged, this),\n            watcher.onDidCreate(this.onFileSystemChanged, this),\n            watcher.onDidDelete(this.onFileSystemChanged, this)\n        );\n    }\n\n    stopWatchingFileSystem() {\n        if (this._fsWatcherDisposable === undefined) return;\n        if (--this._fsWatchCounter > 0) return;\n\n        this._fsWatcherDisposable.dispose();\n        this._fsWatcherDisposable = undefined;\n    }\n\n    suspend() {\n        this._suspended = true;\n    }\n\n    private fireChange(...reasons: RepositoryChange[]) {\n        if (this._fireChangeDebounced === undefined) {\n            this._fireChangeDebounced = Functions.debounce(this.fireChangeCore, 250);\n        }\n\n        if (this._pendingChanges.repo === undefined) {\n            this._pendingChanges.repo = new RepositoryChangeEvent(this);\n        }\n\n        const e = this._pendingChanges.repo;\n\n        for (const reason of reasons) {\n            if (!e.changes.includes(reason)) {\n                e.changes.push(reason);\n            }\n        }\n\n        if (this._suspended) return;\n\n        this._fireChangeDebounced(e);\n    }\n\n    private fireChangeCore(e: RepositoryChangeEvent) {\n        this._pendingChanges.repo = undefined;\n\n        this._onDidChange.fire(e);\n    }\n\n    private fireFileSystemChange(uri: Uri) {\n        if (this._fireFileSystemChangeDebounced === undefined) {\n            this._fireFileSystemChangeDebounced = Functions.debounce(this.fireFileSystemChangeCore, 2500);\n        }\n\n        if (this._pendingChanges.fs === undefined) {\n            this._pendingChanges.fs = { repository: this, uris: [] };\n        }\n\n        const e = this._pendingChanges.fs;\n        e.uris.push(uri);\n\n        if (this._suspended) return;\n\n        this._fireFileSystemChangeDebounced(e);\n    }\n\n    private fireFileSystemChangeCore(e: RepositoryFileSystemChangeEvent) {\n        this._pendingChanges.fs = undefined;\n\n        this._onDidChangeFileSystem.fire(e);\n    }\n}\n","'use strict';\nimport { GitCommitType } from './commit';\nimport { GitFile } from './file';\nimport { GitLogCommit } from './logCommit';\n\nexport class GitStashCommit extends GitLogCommit {\n    static is(commit: GitLogCommit): commit is GitStashCommit {\n        return commit.isStash;\n    }\n\n    constructor(\n        type: GitCommitType,\n        public readonly stashName: string,\n        repoPath: string,\n        sha: string,\n        authorDate: Date,\n        committedDate: Date,\n        message: string,\n        fileName: string,\n        files: GitFile[]\n    ) {\n        super(type, repoPath, sha, 'You', undefined, authorDate, committedDate, message, fileName, files);\n    }\n\n    get shortSha() {\n        return this.stashName;\n    }\n\n    with(changes: {\n        type?: GitCommitType;\n        sha?: string | null;\n        fileName?: string;\n        authorDate?: Date;\n        committedDate?: Date;\n        message?: string;\n        files?: GitFile[] | null;\n    }): GitLogCommit {\n        return new GitStashCommit(\n            changes.type || this.type,\n            this.stashName,\n            this.repoPath,\n            this.getChangedValue(changes.sha, this.sha)!,\n            changes.authorDate || this.authorDate,\n            changes.committedDate || this.committerDate,\n            changes.message || this.message,\n            changes.fileName || this.fileName,\n            this.getChangedValue(changes.files, this.files) || []\n        );\n    }\n}\n","'use strict';\nimport { memoize } from '../../system';\n\nexport class GitTag {\n    constructor(\n        public readonly repoPath: string,\n        public readonly name: string,\n        public readonly sha?: string,\n        public readonly annotation?: string\n    ) {}\n\n    get ref() {\n        return this.name;\n    }\n\n    @memoize()\n    getBasename(): string {\n        const index = this.name.lastIndexOf('/');\n        return index !== -1 ? this.name.substring(index + 1) : this.name;\n    }\n}\n","'use strict';\n/* eslint-disable @typescript-eslint/camelcase */\nimport * as paths from 'path';\nimport * as iconv from 'iconv-lite';\nimport { GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { Logger } from '../logger';\nimport { Objects, Strings } from '../system';\nimport { findGitPath, GitLocation } from './locator';\nimport { run, RunOptions } from './shell';\nimport { GitBranchParser, GitLogParser, GitReflogParser, GitStashParser } from './parsers/parsers';\nimport { GitFileStatus } from './models/file';\n\nexport { GitLocation } from './locator';\nexport * from './models/models';\nexport * from './parsers/parsers';\nexport * from './remotes/provider';\n\nexport type GitLogDiffFilter = Exclude<GitFileStatus, '!' | '?'>;\n\nconst emptyArray = (Object.freeze([]) as any) as any[];\nconst emptyObj = Object.freeze({});\nconst emptyStr = '';\nconst slash = '/';\n\n// This is a root sha of all git repo's if using sha1\nconst rootSha = '4b825dc642cb6eb9a060e54bf8d69288fbee4904';\n\nexport const GitErrors = {\n    badRevision: /bad revision '(.*?)'/i,\n    notAValidObjectName: /Not a valid object name/i,\n    invalidLineCount: /file .+? has only \\d+ lines/i\n};\n\nconst GitWarnings = {\n    notARepository: /Not a git repository/i,\n    outsideRepository: /is outside repository/i,\n    noPath: /no such path/i,\n    noCommits: /does not have any commits/i,\n    notFound: /Path '.*?' does not exist in/i,\n    foundButNotInRevision: /Path '.*?' exists on disk, but not in/i,\n    headNotABranch: /HEAD does not point to a branch/i,\n    noUpstream: /no upstream configured for branch '(.*?)'/i,\n    unknownRevision: /ambiguous argument '.*?': unknown revision or path not in the working tree|not stored as a remote-tracking branch/i,\n    mustRunInWorkTree: /this operation must be run in a work tree/i,\n    patchWithConflicts: /Applied patch to '.*?' with conflicts/i,\n    noRemoteRepositorySpecified: /No remote repository specified\\./i,\n    remoteConnectionError: /Could not read from remote repository/i,\n    notAGitCommand: /'.+' is not a git command/i\n};\n\nexport enum GitErrorHandling {\n    Ignore = 'ignore',\n    Throw = 'throw'\n}\n\nexport interface GitCommandOptions extends RunOptions {\n    configs?: string[];\n    readonly correlationKey?: string;\n    errors?: GitErrorHandling;\n    // Specifies that this command should always be executed locally if possible\n    local?: boolean;\n}\n\n// A map of running git commands -- avoids running duplicate overlaping commands\nconst pendingCommands: Map<string, Promise<string | Buffer>> = new Map();\n\nexport async function git<TOut extends string | Buffer>(options: GitCommandOptions, ...args: any[]): Promise<TOut> {\n    if (Container.vsls.isMaybeGuest) {\n        if (options.local !== true) {\n            const guest = await Container.vsls.guest();\n            if (guest !== undefined) {\n                return guest.git<TOut>(options, ...args);\n            }\n        }\n        else {\n            // Since we will have a live share path here, just blank it out\n            options.cwd = emptyStr;\n        }\n    }\n\n    const start = process.hrtime();\n\n    const { configs, correlationKey, errors: errorHandling, ...opts } = options;\n\n    const encoding = options.encoding || 'utf8';\n    const runOpts: RunOptions = {\n        ...opts,\n        encoding: encoding === 'utf8' ? 'utf8' : encoding === 'buffer' ? 'buffer' : 'binary',\n        // Adds GCM environment variables to avoid any possible credential issues -- from https://github.com/Microsoft/vscode/issues/26573#issuecomment-338686581\n        // Shouldn't *really* be needed but better safe than sorry\n        env: {\n            ...process.env,\n            ...(options.env || emptyObj),\n            GCM_INTERACTIVE: 'NEVER',\n            GCM_PRESERVE_CREDS: 'TRUE',\n            LC_ALL: 'C'\n        }\n    };\n\n    const gitCommand = `[${runOpts.cwd}] git ${args.join(' ')}`;\n\n    const command = `${correlationKey !== undefined ? `${correlationKey}:` : emptyStr}${gitCommand}`;\n\n    let waiting;\n    let promise = pendingCommands.get(command);\n    if (promise === undefined) {\n        waiting = false;\n\n        // Fixes https://github.com/eamodio/vscode-gitlens/issues/73 & https://github.com/eamodio/vscode-gitlens/issues/161\n        // See https://stackoverflow.com/questions/4144417/how-to-handle-asian-characters-in-file-names-in-git-on-os-x\n        args.splice(\n            0,\n            0,\n            '-c',\n            'core.quotepath=false',\n            '-c',\n            'color.ui=false',\n            ...(configs !== undefined ? configs : emptyArray)\n        );\n\n        promise = run<TOut>(gitInfo.path, args, encoding, runOpts);\n\n        pendingCommands.set(command, promise);\n    }\n    else {\n        waiting = true;\n    }\n\n    let exception: Error | undefined;\n    try {\n        return (await promise) as TOut;\n    }\n    catch (ex) {\n        exception = ex;\n\n        switch (errorHandling) {\n            case GitErrorHandling.Ignore:\n                exception = undefined;\n                return emptyStr as TOut;\n\n            case GitErrorHandling.Throw:\n                throw ex;\n\n            default: {\n                const result = defaultExceptionHandler(ex, options.cwd, start);\n                exception = undefined;\n                return result as TOut;\n            }\n        }\n    }\n    finally {\n        pendingCommands.delete(command);\n\n        const duration = `${Strings.getDurationMilliseconds(start)} ms ${waiting ? '(await) ' : emptyStr}`;\n        if (exception !== undefined) {\n            Logger.warn(\n                `[${runOpts.cwd}] Git ${(exception.message || exception.toString() || emptyStr)\n                    .trim()\n                    .replace(/fatal: /g, '')\n                    .replace(/\\r?\\n|\\r/g, ` ${GlyphChars.Dot} `)} ${GlyphChars.Dot} ${duration}`\n            );\n        }\n        else {\n            Logger.log(`${gitCommand} ${GlyphChars.Dot} ${duration}`);\n        }\n        Logger.logGitCommand(\n            `${gitCommand} ${GlyphChars.Dot} ${exception !== undefined ? 'FAILED ' : emptyStr}${duration}`,\n            exception\n        );\n    }\n}\n\nfunction defaultExceptionHandler(ex: Error, cwd: string | undefined, start?: [number, number]): string {\n    const msg = ex.message || ex.toString();\n    if (msg != null && msg.length !== 0) {\n        for (const warning of Objects.values(GitWarnings)) {\n            if (warning.test(msg)) {\n                const duration = start !== undefined ? `${Strings.getDurationMilliseconds(start)} ms` : emptyStr;\n                Logger.warn(\n                    `[${cwd}] Git ${msg\n                        .trim()\n                        .replace(/fatal: /g, '')\n                        .replace(/\\r?\\n|\\r/g, ` ${GlyphChars.Dot} `)} ${GlyphChars.Dot} ${duration}`\n                );\n                return emptyStr;\n            }\n        }\n\n        const match = GitErrors.badRevision.exec(msg);\n        if (match != null && match) {\n            const [, ref] = match;\n\n            // Since looking up a ref with ^3 (e.g. looking for untracked files in a stash) can error on some versions of git just ignore it\n            if (ref != null && ref.endsWith('^3')) return emptyStr;\n        }\n    }\n\n    throw ex;\n}\n\nlet gitInfo: GitLocation;\n\nexport class Git {\n    static deletedOrMissingSha = '0000000000000000000000000000000000000000-';\n    static shaLikeRegex = /(^[0-9a-f]{40}([\\^@~:]\\S*)?$)|(^[0]{40}(:|-)$)/;\n    static shaRegex = /(^[0-9a-f]{40}$)|(^[0]{40}(:|-)$)/;\n    static shaParentRegex = /^[0-9a-f]{40}\\^[0-3]?$/;\n    static shaShortenRegex = /^(.*?)([\\^@~:].*)?$/;\n    static uncommittedRegex = /^[0]{40}(?:[\\^@~:]\\S*)?:?$/;\n    static uncommittedSha = '0000000000000000000000000000000000000000';\n    static uncommittedStagedRegex = /^[0]{40}([\\^@~]\\S*)?:$/;\n    static uncommittedStagedSha = '0000000000000000000000000000000000000000:';\n\n    static getEncoding(encoding: string | undefined) {\n        return encoding !== undefined && iconv.encodingExists(encoding) ? encoding : 'utf8';\n    }\n\n    static getGitPath(): string {\n        return gitInfo.path;\n    }\n\n    static getGitVersion(): string {\n        return gitInfo.version;\n    }\n\n    static async setOrFindGitPath(gitPath?: string): Promise<void> {\n        const start = process.hrtime();\n\n        gitInfo = await findGitPath(gitPath);\n\n        Logger.log(\n            `Git found: ${gitInfo.version} @ ${gitInfo.path === 'git' ? 'PATH' : gitInfo.path} ${\n                GlyphChars.Dot\n            } ${Strings.getDurationMilliseconds(start)} ms`\n        );\n    }\n\n    static isSha(ref: string) {\n        return Git.isMatch(Git.shaRegex, ref);\n    }\n\n    static isShaLike(ref: string) {\n        return Git.isMatch(Git.shaLikeRegex, ref);\n    }\n\n    static isShaParent(ref: string) {\n        return Git.isMatch(Git.shaParentRegex, ref);\n    }\n\n    static isUncommitted(ref: string | undefined) {\n        return Git.isMatch(Git.uncommittedRegex, ref);\n    }\n\n    static isUncommittedStaged(ref: string | undefined): boolean {\n        return Git.isMatch(Git.uncommittedStagedRegex, ref);\n    }\n\n    static shortenSha(\n        ref: string | undefined,\n        {\n            uncommitted = 'Working Tree',\n            uncommittedStaged: uncommittedStaged = 'Index',\n            working = emptyStr\n        }: { uncommittedStaged?: string; uncommitted?: string; working?: string } = {}\n    ) {\n        if (ref == null || ref.length === 0) return working;\n        if (Git.isUncommitted(ref)) {\n            return Git.isUncommittedStaged(ref) ? uncommittedStaged : uncommitted;\n        }\n\n        if (!Git.isShaLike(ref)) return ref;\n\n        // Don't allow shas to be shortened to less than 5 characters\n        const len = Math.max(5, Container.config.advanced.abbreviatedShaLength);\n\n        // If we have a suffix, append it\n        const match = Git.shaShortenRegex.exec(ref);\n        if (match != null) {\n            const [, rev, suffix] = match;\n\n            if (suffix != null) {\n                return `${rev.substr(0, len)}${suffix}`;\n            }\n        }\n\n        return ref.substr(0, len);\n    }\n\n    static splitPath(fileName: string, repoPath: string | undefined, extract: boolean = true): [string, string] {\n        if (repoPath) {\n            fileName = Strings.normalizePath(fileName);\n            repoPath = Strings.normalizePath(repoPath);\n\n            const normalizedRepoPath = (repoPath.endsWith(slash) ? repoPath : `${repoPath}/`).toLowerCase();\n            if (fileName.toLowerCase().startsWith(normalizedRepoPath)) {\n                fileName = fileName.substring(normalizedRepoPath.length);\n            }\n        }\n        else {\n            repoPath = Strings.normalizePath(extract ? paths.dirname(fileName) : repoPath!);\n            fileName = Strings.normalizePath(extract ? paths.basename(fileName) : fileName);\n        }\n\n        return [fileName, repoPath];\n    }\n\n    static validateVersion(major: number, minor: number): boolean {\n        const [gitMajor, gitMinor] = gitInfo.version.split('.');\n        return parseInt(gitMajor, 10) >= major && parseInt(gitMinor, 10) >= minor;\n    }\n\n    private static isMatch(regex: RegExp, ref: string | undefined) {\n        return ref == null || ref.length === 0 ? false : regex.test(ref);\n    }\n\n    // Git commands\n\n    static add(repoPath: string | undefined, pathspec: string) {\n        return git<string>({ cwd: repoPath }, 'add', '-A', '--', pathspec);\n    }\n\n    static apply(repoPath: string | undefined, patch: string, options: { allowConflicts?: boolean } = {}) {\n        const params = ['apply', '--whitespace=warn'];\n        if (options.allowConflicts) {\n            params.push('-3');\n        }\n        return git<string>({ cwd: repoPath, stdin: patch }, ...params);\n    }\n\n    static async blame(\n        repoPath: string | undefined,\n        fileName: string,\n        ref?: string,\n        options: { args?: string[] | null; ignoreWhitespace?: boolean; startLine?: number; endLine?: number } = {}\n    ) {\n        const [file, root] = Git.splitPath(fileName, repoPath);\n\n        const params = ['blame', '--root', '--incremental'];\n\n        if (options.ignoreWhitespace) {\n            params.push('-w');\n        }\n        if (options.startLine != null && options.endLine != null) {\n            params.push(`-L ${options.startLine},${options.endLine}`);\n        }\n        if (options.args != null) {\n            params.push(...options.args);\n        }\n\n        let stdin;\n        if (ref) {\n            if (Git.isUncommittedStaged(ref)) {\n                // Pipe the blame contents to stdin\n                params.push('--contents', '-');\n\n                // Get the file contents for the staged version using `:`\n                stdin = await Git.show<string>(repoPath, fileName, ':');\n            }\n            else {\n                params.push(ref);\n            }\n        }\n\n        return git<string>({ cwd: root, stdin: stdin }, ...params, '--', file);\n    }\n\n    static blame__contents(\n        repoPath: string | undefined,\n        fileName: string,\n        contents: string,\n        options: {\n            args?: string[] | null;\n            correlationKey?: string;\n            ignoreWhitespace?: boolean;\n            startLine?: number;\n            endLine?: number;\n        } = {}\n    ) {\n        const [file, root] = Git.splitPath(fileName, repoPath);\n\n        const params = ['blame', '--root', '--incremental'];\n\n        if (options.ignoreWhitespace) {\n            params.push('-w');\n        }\n        if (options.startLine != null && options.endLine != null) {\n            params.push(`-L ${options.startLine},${options.endLine}`);\n        }\n        if (options.args != null) {\n            params.push(...options.args);\n        }\n\n        // Pipe the blame contents to stdin\n        params.push('--contents', '-');\n\n        return git<string>(\n            { cwd: root, stdin: contents, correlationKey: options.correlationKey },\n            ...params,\n            '--',\n            file\n        );\n    }\n\n    static branch__contains(repoPath: string, ref: string, options: { remote: boolean } = { remote: false }) {\n        const params = ['branch', '--contains'];\n        if (options.remote) {\n            params.push('-r');\n        }\n\n        return git<string>({ cwd: repoPath, configs: ['-c', 'color.branch=false'] }, ...params, ref);\n    }\n\n    static async cat_file__resolve(repoPath: string, fileName: string, ref: string) {\n        if (Git.isUncommitted(ref)) return ref;\n\n        try {\n            await git<string>(\n                { cwd: repoPath, errors: GitErrorHandling.Throw },\n                'cat-file',\n                '-e',\n                `${ref}:./${fileName}`\n            );\n            return ref;\n        }\n        catch (ex) {\n            const msg = ex && ex.toString();\n            if (GitErrors.notAValidObjectName.test(msg)) {\n                return Git.deletedOrMissingSha;\n            }\n\n            return undefined;\n        }\n    }\n\n    static async cat_file__validate(repoPath: string, ref: string) {\n        if (Git.isUncommitted(ref)) return true;\n\n        try {\n            await git<string>({ cwd: repoPath, errors: GitErrorHandling.Throw }, 'cat-file', '-t', ref);\n            return true;\n        }\n        catch (ex) {\n            return false;\n        }\n    }\n\n    static check_mailmap(repoPath: string, author: string) {\n        return git<string>({ cwd: repoPath, errors: GitErrorHandling.Ignore, local: true }, 'check-mailmap', author);\n    }\n\n    static checkout(repoPath: string, ref: string, fileName?: string) {\n        const params = ['checkout', ref, '--'];\n        if (fileName) {\n            [fileName, repoPath] = Git.splitPath(fileName, repoPath);\n\n            params.push(fileName);\n        }\n\n        return git<string>({ cwd: repoPath }, ...params);\n    }\n\n    static async config__get(key: string, repoPath?: string, options: { local?: boolean } = {}) {\n        const data = await git<string>(\n            { cwd: repoPath || emptyStr, errors: GitErrorHandling.Ignore, local: options.local },\n            'config',\n            '--get',\n            key\n        );\n        return data.length === 0 ? undefined : data.trim();\n    }\n\n    static async config__get_regex(pattern: string, repoPath?: string, options: { local?: boolean } = {}) {\n        const data = await git<string>(\n            { cwd: repoPath || emptyStr, errors: GitErrorHandling.Ignore, local: options.local },\n            'config',\n            '--get-regex',\n            pattern\n        );\n        return data.length === 0 ? undefined : data.trim();\n    }\n\n    static async diff(\n        repoPath: string,\n        fileName: string,\n        ref1?: string,\n        ref2?: string,\n        options: { encoding?: string; filter?: string; similarityThreshold?: number } = {}\n    ): Promise<string> {\n        const params = [\n            'diff',\n            `-M${options.similarityThreshold == null ? '' : `${options.similarityThreshold}%`}`,\n            '--no-ext-diff',\n            '-U0',\n            '--minimal'\n        ];\n        if (options.filter) {\n            params.push(`--diff-filter=${options.filter}`);\n        }\n\n        if (ref1) {\n            // <sha>^3 signals an untracked file in a stash and if we are trying to find its parent, use the root sha\n            if (ref1.endsWith('^3^')) {\n                ref1 = rootSha;\n            }\n            params.push(Git.isUncommittedStaged(ref1) ? '--staged' : ref1);\n        }\n        if (ref2) {\n            params.push(Git.isUncommittedStaged(ref2) ? '--staged' : ref2);\n        }\n\n        const encoding: BufferEncoding = options.encoding === 'utf8' ? 'utf8' : 'binary';\n\n        try {\n            return await git<string>(\n                { cwd: repoPath, configs: ['-c', 'color.diff=false'], encoding: encoding },\n                ...params,\n                '--',\n                fileName\n            );\n        }\n        catch (ex) {\n            const match = GitErrors.badRevision.exec(ex.message);\n            if (match !== null) {\n                const [, ref] = match;\n\n                // If the bad ref is trying to find a parent ref, assume we hit to the last commit, so try again using the root sha\n                if (ref === ref1 && ref != null && ref.endsWith('^')) {\n                    return Git.diff(repoPath, fileName, rootSha, ref2, options);\n                }\n            }\n\n            throw ex;\n        }\n    }\n\n    static diff__name_status(\n        repoPath: string,\n        ref1?: string,\n        ref2?: string,\n        { filter, similarityThreshold }: { filter?: string; similarityThreshold?: number } = {}\n    ) {\n        const params = [\n            'diff',\n            '--name-status',\n            `-M${similarityThreshold == null ? '' : `${similarityThreshold}%`}`,\n            '--no-ext-diff'\n        ];\n        if (filter) {\n            params.push(`--diff-filter=${filter}`);\n        }\n        if (ref1) {\n            params.push(ref1);\n        }\n        if (ref2) {\n            params.push(ref2);\n        }\n\n        return git<string>({ cwd: repoPath, configs: ['-c', 'color.diff=false'] }, ...params);\n    }\n\n    static diff__shortstat(repoPath: string, ref?: string) {\n        const params = ['diff', '--shortstat', '--no-ext-diff'];\n        if (ref) {\n            params.push(ref);\n        }\n\n        return git<string>({ cwd: repoPath, configs: ['-c', 'color.diff=false'] }, ...params);\n    }\n\n    static difftool(\n        repoPath: string,\n        fileName: string,\n        tool: string,\n        options: { ref1?: string; ref2?: string; staged?: boolean } = {}\n    ) {\n        const params = ['difftool', '--no-prompt', `--tool=${tool}`];\n        if (options.staged) {\n            params.push('--staged');\n        }\n        if (options.ref1) {\n            params.push(options.ref1);\n        }\n        if (options.ref2) {\n            params.push(options.ref2);\n        }\n\n        return git<string>({ cwd: repoPath }, ...params, '--', fileName);\n    }\n\n    static difftool__dir_diff(repoPath: string, tool: string, ref1: string, ref2?: string) {\n        const params = ['difftool', '--dir-diff', `--tool=${tool}`, ref1];\n        if (ref2) {\n            params.push(ref2);\n        }\n\n        return git<string>({ cwd: repoPath }, ...params);\n    }\n\n    static fetch(repoPath: string, options: { all?: boolean; remote?: string } = {}) {\n        const params = ['fetch'];\n        if (options.remote) {\n            params.push(options.remote);\n        }\n        else if (options.all) {\n            params.push('--all');\n        }\n\n        return git<string>({ cwd: repoPath }, ...params);\n    }\n\n    static for_each_ref__branch(repoPath: string, options: { all: boolean } = { all: false }) {\n        const params = ['for-each-ref', `--format=${GitBranchParser.defaultFormat}`, 'refs/heads'];\n        if (options.all) {\n            params.push('refs/remotes');\n        }\n\n        return git<string>({ cwd: repoPath }, ...params);\n    }\n\n    static log(\n        repoPath: string,\n        ref: string | undefined,\n        {\n            authors,\n            maxCount,\n            reverse,\n            similarityThreshold\n        }: { authors?: string[]; maxCount?: number; reverse?: boolean; similarityThreshold?: number }\n    ) {\n        const params = [\n            'log',\n            '--name-status',\n            `--format=${GitLogParser.defaultFormat}`,\n            '--full-history',\n            `-M${similarityThreshold == null ? '' : `${similarityThreshold}%`}`,\n            '-m'\n        ];\n        if (maxCount && !reverse) {\n            params.push(`-n${maxCount}`);\n        }\n\n        if (authors) {\n            params.push('--use-mailmap', ...authors.map(a => `--author=${a}`));\n        }\n\n        if (ref && !Git.isUncommittedStaged(ref)) {\n            // If we are reversing, we must add a range (with HEAD) because we are using --ancestry-path for better reverse walking\n            if (reverse) {\n                params.push('--reverse', '--ancestry-path', `${ref}..HEAD`);\n            }\n            else {\n                params.push(ref);\n            }\n        }\n\n        return git<string>(\n            { cwd: repoPath, configs: ['-c', 'diff.renameLimit=0', '-c', 'log.showSignature=false'] },\n            ...params,\n            '--'\n        );\n    }\n\n    static log__file(\n        repoPath: string,\n        fileName: string,\n        ref: string | undefined,\n        {\n            filters,\n            format = GitLogParser.defaultFormat,\n            maxCount,\n            renames = true,\n            reverse = false,\n            startLine,\n            endLine\n        }: {\n            filters?: GitLogDiffFilter[];\n            format?: string;\n            maxCount?: number;\n            renames?: boolean;\n            reverse?: boolean;\n            startLine?: number;\n            endLine?: number;\n        } = {}\n    ) {\n        const [file, root] = Git.splitPath(fileName, repoPath);\n\n        const params = ['log', '--name-status', `--format=${format}`];\n\n        if (maxCount && !reverse) {\n            params.push(`-n${maxCount}`);\n        }\n        params.push(renames ? '--follow' : '-m');\n\n        if (filters != null && filters.length !== 0) {\n            params.push(`--diff-filter=${filters.join(emptyStr)}`);\n        }\n\n        if (startLine == null) {\n            params.push('--name-status');\n        }\n        else {\n            // Don't include --name-status or -s because Git won't honor it\n            params.push(`-L ${startLine},${endLine == null ? startLine : endLine}:${file}`);\n        }\n\n        if (ref && !Git.isUncommittedStaged(ref)) {\n            // If we are reversing, we must add a range (with HEAD) because we are using --ancestry-path for better reverse walking\n            if (reverse) {\n                params.push('--reverse', '--ancestry-path', `${ref}..HEAD`);\n            }\n            else {\n                params.push(ref);\n            }\n        }\n\n        if (startLine == null || renames) {\n            // Don't specify a file spec when using a line number (so say the git docs), unless it is a follow\n            params.push('--', file);\n        }\n\n        return git<string>({ cwd: root, configs: ['-c', 'log.showSignature=false'] }, ...params);\n    }\n\n    static async log__file_recent(\n        repoPath: string,\n        fileName: string,\n        { similarityThreshold }: { similarityThreshold?: number } = {}\n    ) {\n        const data = await git<string>(\n            { cwd: repoPath, errors: GitErrorHandling.Ignore },\n            'log',\n            `-M${similarityThreshold == null ? '' : `${similarityThreshold}%`}`,\n            '-n1',\n            '--format=%H',\n            '--',\n            fileName\n        );\n        return data.length === 0 ? undefined : data.trim();\n    }\n\n    static async log__recent(repoPath: string) {\n        const data = await git<string>(\n            { cwd: repoPath, errors: GitErrorHandling.Ignore },\n            'log',\n            '-n1',\n            '--format=%H',\n            '--'\n        );\n        return data.length === 0 ? undefined : data.trim();\n    }\n\n    static log__search(repoPath: string, search: string[] = emptyArray, { maxCount }: { maxCount?: number } = {}) {\n        const params = ['log', '--name-status', `--format=${GitLogParser.defaultFormat}`];\n        if (maxCount) {\n            params.push(`-n${maxCount}`);\n        }\n\n        return git<string>({ cwd: repoPath }, ...params, ...search);\n    }\n\n    // static log__shortstat(repoPath: string, options: { ref?: string }) {\n    //     const params = ['log', '--shortstat', '--oneline'];\n    //     if (options.ref && !Git.isUncommittedStaged(options.ref)) {\n    //         params.push(options.ref);\n    //     }\n    //     return git<string>({ cwd: repoPath }, ...params, '--');\n    // }\n\n    static async ls_files(\n        repoPath: string,\n        fileName: string,\n        { ref, untracked }: { ref?: string; untracked?: boolean } = {}\n    ): Promise<string | undefined> {\n        const params = ['ls-files'];\n        if (ref && !Git.isUncommitted(ref)) {\n            params.push(`--with-tree=${ref}`);\n        }\n\n        if (!ref && untracked) {\n            params.push('-o');\n        }\n\n        const data = await git<string>({ cwd: repoPath, errors: GitErrorHandling.Ignore }, ...params, '--', fileName);\n        return data.length === 0 ? undefined : data.trim();\n    }\n\n    static async ls_tree(repoPath: string, ref: string, { fileName }: { fileName?: string } = {}) {\n        const params = ['ls-tree'];\n        if (fileName) {\n            params.push('-l', ref, '--', fileName);\n        }\n        else {\n            params.push('-lrt', ref, '--');\n        }\n        const data = await git<string>({ cwd: repoPath, errors: GitErrorHandling.Ignore }, ...params);\n        return data.length === 0 ? undefined : data.trim();\n    }\n\n    static merge_base(repoPath: string, ref1: string, ref2: string, { forkPoint }: { forkPoint?: boolean } = {}) {\n        const params = ['merge-base'];\n        if (forkPoint) {\n            params.push('--fork-point');\n        }\n\n        return git<string>({ cwd: repoPath }, ...params, ref1, ref2);\n    }\n\n    static reflog(\n        repoPath: string,\n        { all, branch, since }: { all?: boolean; branch?: string; since?: string } = {}\n    ): Promise<string> {\n        const params = ['log', '-g', `--format=${GitReflogParser.defaultFormat}`, '--date=unix'];\n        if (all) {\n            params.push('--all');\n        }\n        if (branch) {\n            params.push(branch);\n        }\n        if (since) {\n            params.push(`--since=${since}`);\n        }\n\n        return git<string>({ cwd: repoPath }, ...params, '--');\n    }\n\n    static remote(repoPath: string): Promise<string> {\n        return git<string>({ cwd: repoPath }, 'remote', '-v');\n    }\n\n    static remote__get_url(repoPath: string, remote: string): Promise<string> {\n        return git<string>({ cwd: repoPath }, 'remote', 'get-url', remote);\n    }\n\n    static reset(repoPath: string | undefined, fileName: string) {\n        return git<string>({ cwd: repoPath }, 'reset', '-q', '--', fileName);\n    }\n\n    static async rev_parse(repoPath: string, ref: string): Promise<string | undefined> {\n        const data = await git<string>({ cwd: repoPath, errors: GitErrorHandling.Ignore }, 'rev-parse', ref);\n        return data.length === 0 ? undefined : data.trim();\n    }\n\n    static async rev_parse__currentBranch(repoPath: string): Promise<[string, string | undefined] | undefined> {\n        try {\n            const data = await git<string>(\n                { cwd: repoPath, errors: GitErrorHandling.Throw },\n                'rev-parse',\n                '--abbrev-ref',\n                '--symbolic-full-name',\n                '@',\n                '@{u}',\n                '--'\n            );\n            return [data, undefined];\n        }\n        catch (ex) {\n            const msg = ex && ex.toString();\n            if (GitErrors.badRevision.test(msg) || GitWarnings.noUpstream.test(msg)) {\n                return [ex.stdout, undefined];\n            }\n\n            if (GitWarnings.headNotABranch.test(msg)) {\n                const sha = await this.log__recent(repoPath);\n                if (sha === undefined) return undefined;\n\n                return [`(HEAD detached at ${this.shortenSha(sha)})`, sha];\n            }\n\n            defaultExceptionHandler(ex, repoPath);\n            return undefined;\n        }\n    }\n\n    static async rev_parse__show_toplevel(cwd: string): Promise<string | undefined> {\n        const data = await git<string>({ cwd: cwd, errors: GitErrorHandling.Ignore }, 'rev-parse', '--show-toplevel');\n        return data.length === 0 ? undefined : data.trim();\n    }\n\n    static shortlog(repoPath: string) {\n        return git<string>({ cwd: repoPath }, 'shortlog', '-sne', '--all', '--no-merges');\n    }\n\n    static async show<TOut extends string | Buffer>(\n        repoPath: string | undefined,\n        fileName: string,\n        ref: string,\n        options: {\n            encoding?: 'binary' | 'ascii' | 'utf8' | 'utf16le' | 'ucs2' | 'base64' | 'latin1' | 'hex' | 'buffer';\n        } = {}\n    ): Promise<TOut | undefined> {\n        const [file, root] = Git.splitPath(fileName, repoPath);\n\n        if (Git.isUncommittedStaged(ref)) {\n            ref = ':';\n        }\n        if (Git.isUncommitted(ref)) throw new Error(`ref=${ref} is uncommitted`);\n\n        const opts: GitCommandOptions = {\n            configs: ['-c', 'log.showSignature=false'],\n            cwd: root,\n            encoding: options.encoding || 'utf8',\n            errors: GitErrorHandling.Throw\n        };\n        const args = ref.endsWith(':') ? `${ref}./${file}` : `${ref}:./${file}`;\n\n        try {\n            const data = await git<TOut>(opts, 'show', args, '--');\n            return data;\n        }\n        catch (ex) {\n            const msg = ex && ex.toString();\n            if (ref === ':' && GitErrors.badRevision.test(msg)) {\n                return Git.show<TOut>(repoPath, fileName, 'HEAD:', options);\n            }\n\n            if (\n                GitErrors.badRevision.test(msg) ||\n                GitWarnings.notFound.test(msg) ||\n                GitWarnings.foundButNotInRevision.test(msg)\n            ) {\n                return undefined;\n            }\n\n            return defaultExceptionHandler(ex, opts.cwd) as TOut;\n        }\n    }\n\n    static show__diff(\n        repoPath: string,\n        fileName: string,\n        ref: string,\n        originalFileName?: string,\n        { similarityThreshold }: { similarityThreshold?: number } = {}\n    ) {\n        const params = [\n            'show',\n            `-M${similarityThreshold == null ? '' : `${similarityThreshold}%`}`,\n            '--format=',\n            '--minimal',\n            '-U0',\n            ref,\n            '--',\n            fileName\n        ];\n        if (originalFileName != null && originalFileName.length !== 0) {\n            params.push(originalFileName);\n        }\n\n        return git<string>({ cwd: repoPath }, ...params);\n    }\n\n    static show__name_status(repoPath: string, fileName: string, ref: string) {\n        return git<string>({ cwd: repoPath }, 'show', '--name-status', '--format=', ref, '--', fileName);\n    }\n\n    static show_ref__tags(repoPath: string) {\n        return git<string>({ cwd: repoPath, errors: GitErrorHandling.Ignore }, 'show-ref', '--tags');\n    }\n\n    static stash__apply(repoPath: string, stashName: string, deleteAfter: boolean) {\n        if (!stashName) return undefined;\n        return git<string>({ cwd: repoPath }, 'stash', deleteAfter ? 'pop' : 'apply', stashName);\n    }\n\n    static stash__delete(repoPath: string, stashName: string) {\n        if (!stashName) return undefined;\n        return git<string>({ cwd: repoPath }, 'stash', 'drop', stashName);\n    }\n\n    static stash__list(\n        repoPath: string,\n        {\n            format = GitStashParser.defaultFormat,\n            similarityThreshold\n        }: { format?: string; similarityThreshold?: number } = {}\n    ) {\n        return git<string>(\n            { cwd: repoPath },\n            'stash',\n            'list',\n            '--name-status',\n            `-M${similarityThreshold == null ? '' : `${similarityThreshold}%`}`,\n            `--format=${format}`\n        );\n    }\n\n    static stash__push(repoPath: string, pathspecs: string[], message?: string) {\n        const params = ['stash', 'push', '-u'];\n        if (message) {\n            params.push('-m', message);\n        }\n        return git<string>({ cwd: repoPath }, ...params, '--', ...pathspecs);\n    }\n\n    static stash__save(repoPath: string, message?: string) {\n        const params = ['stash', 'save', '-u'];\n        if (message) {\n            params.push(message);\n        }\n        return git<string>({ cwd: repoPath }, ...params);\n    }\n\n    static status(\n        repoPath: string,\n        porcelainVersion: number = 1,\n        { similarityThreshold }: { similarityThreshold?: number } = {}\n    ): Promise<string> {\n        const params = [\n            'status',\n            porcelainVersion >= 2 ? `--porcelain=v${porcelainVersion}` : '--porcelain',\n            '--branch',\n            '-u'\n        ];\n        if (Git.validateVersion(2, 18)) {\n            params.push(`--find-renames=${similarityThreshold == null ? '' : `${similarityThreshold}%`}`);\n        }\n\n        return git<string>(\n            { cwd: repoPath, configs: ['-c', 'color.status=false'], env: { GIT_OPTIONAL_LOCKS: '0' } },\n            ...params,\n            '--'\n        );\n    }\n\n    static status__file(\n        repoPath: string,\n        fileName: string,\n        porcelainVersion: number = 1,\n        { similarityThreshold }: { similarityThreshold?: number } = {}\n    ): Promise<string> {\n        const [file, root] = Git.splitPath(fileName, repoPath);\n\n        const params = ['status', porcelainVersion >= 2 ? `--porcelain=v${porcelainVersion}` : '--porcelain'];\n        if (Git.validateVersion(2, 18)) {\n            params.push(`--find-renames=${similarityThreshold == null ? '' : `${similarityThreshold}%`}`);\n        }\n\n        return git<string>(\n            { cwd: root, configs: ['-c', 'color.status=false'], env: { GIT_OPTIONAL_LOCKS: '0' } },\n            ...params,\n            '--',\n            file\n        );\n    }\n\n    static tag(repoPath: string) {\n        return git<string>({ cwd: repoPath }, 'tag', '-l', '-n1');\n    }\n}\n","'use strict';\nimport { GitCommandOptions } from '../git/git';\n\nexport class RequestType<TRequest, TResponse> {\n    constructor(public readonly name: string) {}\n}\n\nexport interface GitCommandRequest {\n    options: GitCommandOptions;\n    args: any[];\n}\n\nexport interface GitCommandResponse {\n    data: string;\n    isBuffer?: boolean;\n}\n\nexport const GitCommandRequestType = new RequestType<GitCommandRequest, GitCommandResponse>('git');\n\nexport interface RepositoryProxy {\n    folderUri: string;\n    path: string;\n    root: boolean;\n    closed: boolean;\n}\n\nexport interface RepositoriesInFolderRequest {\n    folderUri: string;\n}\n\nexport interface RepositoriesInFolderResponse {\n    repositories: RepositoryProxy[];\n}\n\nexport const RepositoriesInFolderRequestType = new RequestType<\n    RepositoriesInFolderRequest,\n    RepositoriesInFolderResponse\n>('repositories/inFolder');\n","'use strict';\nimport { CancellationToken, Disposable, Uri, workspace, WorkspaceFoldersChangeEvent } from 'vscode';\nimport { LiveShare, SharedService } from 'vsls';\nimport { Container } from '../container';\nimport { git } from '../git/git';\nimport { GitUri } from '../git/gitUri';\nimport { Logger } from '../logger';\nimport { debug, Iterables, log, Strings } from '../system';\nimport {\n    GitCommandRequest,\n    GitCommandRequestType,\n    GitCommandResponse,\n    RepositoriesInFolderRequest,\n    RepositoriesInFolderRequestType,\n    RepositoriesInFolderResponse,\n    RequestType\n} from './protocol';\nimport { vslsUriRootRegex } from './vsls';\n\nconst defaultWhitelistFn = () => true;\nconst gitWhitelist = new Map<string, (args: any[]) => boolean>([\n    ['blame', defaultWhitelistFn],\n    ['branch', args => args[1] === '--contains'],\n    ['cat-file', defaultWhitelistFn],\n    ['check-mailmap', defaultWhitelistFn],\n    ['config', args => args[1] === '--get' || args[1] === '--get-regex'],\n    ['diff', defaultWhitelistFn],\n    ['difftool', defaultWhitelistFn],\n    ['for-each-ref', defaultWhitelistFn],\n    ['log', defaultWhitelistFn],\n    ['ls-files', defaultWhitelistFn],\n    ['ls-tree', defaultWhitelistFn],\n    ['merge-base', defaultWhitelistFn],\n    ['remote', args => args[1] === '-v' || args[1] === 'get-url'],\n    ['rev-parse', defaultWhitelistFn],\n    ['shortlog', defaultWhitelistFn],\n    ['show', defaultWhitelistFn],\n    ['show-ref', defaultWhitelistFn],\n    ['stash', args => args[1] === 'list'],\n    ['status', defaultWhitelistFn],\n    ['symbolic-ref', defaultWhitelistFn],\n    ['tag', args => args[1] === '-l']\n]);\n\nconst leadingSlashRegex = /^[/|\\\\]/;\n\nexport class VslsHostService implements Disposable {\n    static ServiceId = 'proxy';\n\n    @log()\n    static async share(api: LiveShare) {\n        const service = await api.shareService(this.ServiceId);\n        if (service == null) {\n            throw new Error('Failed to share host service');\n        }\n\n        return new VslsHostService(api, service);\n    }\n\n    private readonly _disposable: Disposable;\n    private _localPathsRegex: RegExp | undefined;\n    private _localToSharedPaths = new Map<string, string>();\n    private _sharedPathsRegex: RegExp | undefined;\n    private _sharedToLocalPaths = new Map<string, string>();\n\n    constructor(private readonly _api: LiveShare, private readonly _service: SharedService) {\n        _service.onDidChangeIsServiceAvailable(this.onAvailabilityChanged.bind(this));\n\n        this._disposable = Disposable.from(workspace.onDidChangeWorkspaceFolders(this.onWorkspaceFoldersChanged, this));\n\n        this.onRequest(GitCommandRequestType, this.onGitCommandRequest.bind(this));\n        this.onRequest(RepositoriesInFolderRequestType, this.onRepositoriesInFolderRequest.bind(this));\n\n        void this.onWorkspaceFoldersChanged();\n    }\n\n    dispose() {\n        this._disposable.dispose();\n        void this._api.unshareService(VslsHostService.ServiceId);\n    }\n\n    private onRequest<TRequest, TResponse>(\n        requestType: RequestType<TRequest, TResponse>,\n        handler: (request: TRequest, cancellation: CancellationToken) => Promise<TResponse>\n    ) {\n        this._service.onRequest(requestType.name, (args: any[], cancellation: CancellationToken) =>\n            handler(args[0], cancellation)\n        );\n    }\n\n    @log()\n    private onAvailabilityChanged(available: boolean) {\n        // TODO\n    }\n\n    @debug()\n    private onWorkspaceFoldersChanged(e?: WorkspaceFoldersChangeEvent) {\n        if (workspace.workspaceFolders === undefined || workspace.workspaceFolders.length === 0) return;\n\n        const cc = Logger.getCorrelationContext();\n\n        this._localToSharedPaths.clear();\n        this._sharedToLocalPaths.clear();\n\n        let localPath;\n        let sharedPath;\n        for (const f of workspace.workspaceFolders) {\n            localPath = Strings.normalizePath(f.uri.fsPath);\n            sharedPath = Strings.normalizePath(this.convertLocalUriToShared(f.uri).fsPath);\n\n            Logger.debug(cc, `shared='${sharedPath}' \\u2194 local='${localPath}'`);\n            this._localToSharedPaths.set(localPath, sharedPath);\n            this._sharedToLocalPaths.set(sharedPath, localPath);\n        }\n\n        let localPaths = Iterables.join(this._sharedToLocalPaths.values(), '|');\n        localPaths = localPaths.replace(/(\\/|\\\\)/g, '[\\\\\\\\/|\\\\\\\\]');\n        this._localPathsRegex = new RegExp(`(${localPaths})`, 'gi');\n\n        let sharedPaths = Iterables.join(this._localToSharedPaths.values(), '|');\n        sharedPaths = sharedPaths.replace(/(\\/|\\\\)/g, '[\\\\\\\\/|\\\\\\\\]');\n        this._sharedPathsRegex = new RegExp(`^(${sharedPaths})`, 'i');\n    }\n\n    @log()\n    private async onGitCommandRequest(\n        request: GitCommandRequest,\n        cancellation: CancellationToken\n    ): Promise<GitCommandResponse> {\n        const { options, args } = request;\n\n        const fn = gitWhitelist.get(request.args[0]);\n        if (fn === undefined || !fn(request.args)) throw new Error(`Git ${request.args[0]} command is not allowed`);\n\n        let isRootWorkspace = false;\n        if (options.cwd !== undefined && options.cwd.length > 0 && this._sharedToLocalPaths !== undefined) {\n            // This is all so ugly, but basically we are converting shared paths to local paths\n            if (this._sharedPathsRegex !== undefined && this._sharedPathsRegex.test(options.cwd)) {\n                options.cwd = Strings.normalizePath(options.cwd).replace(this._sharedPathsRegex, (match, shared) => {\n                    if (!isRootWorkspace) {\n                        isRootWorkspace = shared === '/~0';\n                    }\n\n                    const local = this._sharedToLocalPaths.get(shared);\n                    return local != null ? local : shared;\n                });\n            }\n            else if (leadingSlashRegex.test(options.cwd)) {\n                const localCwd = this._sharedToLocalPaths.get('/~0');\n                if (localCwd !== undefined) {\n                    isRootWorkspace = true;\n                    options.cwd = GitUri.resolve(options.cwd, localCwd);\n                }\n            }\n        }\n\n        let files = false;\n        let i = -1;\n        for (const arg of args) {\n            i++;\n            if (arg === '--') {\n                files = true;\n                continue;\n            }\n\n            if (!files) continue;\n\n            if (typeof arg === 'string') {\n                // If we are the \"root\" workspace, then we need to remove the leading slash off the path (otherwise it will not be treated as a relative path)\n                if (isRootWorkspace && leadingSlashRegex.test(arg[0])) {\n                    args.splice(i, 1, arg.substr(1));\n                }\n\n                if (this._sharedPathsRegex !== undefined && this._sharedPathsRegex.test(arg)) {\n                    args.splice(\n                        i,\n                        1,\n                        Strings.normalizePath(arg).replace(this._sharedPathsRegex, (match, shared) => {\n                            const local = this._sharedToLocalPaths.get(shared);\n                            return local != null ? local : shared;\n                        })\n                    );\n                }\n            }\n        }\n\n        let data = await git(options, ...args);\n        if (typeof data === 'string') {\n            // And then we convert local paths to shared paths\n            if (this._localPathsRegex !== undefined && data.length > 0) {\n                data = data.replace(this._localPathsRegex, (match, local) => {\n                    const shared = this._localToSharedPaths.get(local);\n                    return shared != null ? shared : local;\n                });\n            }\n\n            return { data: data };\n        }\n\n        return { data: data.toString('binary'), isBuffer: true };\n    }\n\n    @log()\n    private async onRepositoriesInFolderRequest(\n        request: RepositoriesInFolderRequest,\n        cancellation: CancellationToken\n    ): Promise<RepositoriesInFolderResponse> {\n        const uri = this.convertSharedUriToLocal(Uri.parse(request.folderUri));\n        const normalized = Strings.normalizePath(uri.fsPath, { stripTrailingSlash: true }).toLowerCase();\n\n        const repos = [\n            ...Iterables.filterMap(await Container.git.getRepositories(), r => {\n                if (!r.normalizedPath.startsWith(normalized)) return undefined;\n\n                const vslsUri = this.convertLocalUriToShared(r.folder.uri);\n                return {\n                    folderUri: vslsUri.toString(true),\n                    path: vslsUri.path,\n                    root: r.root,\n                    closed: r.closed\n                };\n            })\n        ];\n\n        return {\n            repositories: repos\n        };\n    }\n\n    @debug({\n        exit: result => `returned ${result.toString(true)}`\n    })\n    private convertLocalUriToShared(localUri: Uri) {\n        const cc = Logger.getCorrelationContext();\n\n        let sharedUri = this._api.convertLocalUriToShared(localUri);\n        Logger.debug(\n            cc,\n            `LiveShare.convertLocalUriToShared(${localUri.toString(true)}) returned ${sharedUri.toString(true)}`\n        );\n\n        const localPath = localUri.path;\n        let sharedPath = sharedUri.path;\n        if (sharedUri.authority.length > 0) {\n            sharedPath = `/${sharedUri.authority}${sharedPath}`;\n        }\n\n        if (new RegExp(`${localPath}$`, 'i').test(sharedPath)) {\n            if (sharedPath.length === localPath.length) {\n                const folder = workspace.getWorkspaceFolder(localUri)!;\n                sharedUri = sharedUri.with({ path: `/~${folder.index}` });\n            }\n            else {\n                sharedUri = sharedUri.with({ path: sharedPath.substr(0, sharedPath.length - localPath.length) });\n            }\n        }\n        else if (!sharedPath.startsWith('/~')) {\n            const folder = workspace.getWorkspaceFolder(localUri)!;\n            sharedUri = sharedUri.with({ path: `/~${folder.index}${sharedPath}` });\n        }\n\n        return sharedUri;\n    }\n\n    private convertSharedUriToLocal(sharedUri: Uri) {\n        if (vslsUriRootRegex.test(sharedUri.path)) {\n            sharedUri = sharedUri.with({ path: `${sharedUri.path}/` });\n        }\n\n        const localUri = this._api.convertSharedUriToLocal(sharedUri);\n\n        const localPath = localUri.path;\n        const sharedPath = sharedUri.path;\n        if (localPath.endsWith(sharedPath)) {\n            return localUri.with({ path: localPath.substr(0, localPath.length - sharedPath.length) });\n        }\n        return localUri;\n    }\n}\n","'use strict';\nimport { CancellationToken, Disposable, window, WorkspaceFolder } from 'vscode';\nimport { LiveShare, SharedServiceProxy } from 'vsls';\nimport { CommandContext, setCommandContext } from '../constants';\nimport { GitCommandOptions, Repository, RepositoryChange } from '../git/git';\nimport { Logger } from '../logger';\nimport { debug, log } from '../system';\nimport { VslsHostService } from './host';\nimport { GitCommandRequestType, RepositoriesInFolderRequestType, RepositoryProxy, RequestType } from './protocol';\n\nexport class VslsGuestService implements Disposable {\n    @log()\n    static async connect(api: LiveShare) {\n        const cc = Logger.getCorrelationContext();\n\n        try {\n            const service = await api.getSharedService(VslsHostService.ServiceId);\n            if (service == null) {\n                throw new Error('Failed to connect to host service');\n            }\n\n            return new VslsGuestService(api, service);\n        }\n        catch (ex) {\n            Logger.error(ex, cc);\n            return undefined;\n        }\n    }\n\n    constructor(private readonly _api: LiveShare, private readonly _service: SharedServiceProxy) {\n        _service.onDidChangeIsServiceAvailable(this.onAvailabilityChanged.bind(this));\n        this.onAvailabilityChanged(_service.isServiceAvailable);\n    }\n\n    dispose() {\n        // nothing to dispose\n    }\n\n    @log()\n    private onAvailabilityChanged(available: boolean) {\n        if (available) {\n            void setCommandContext(CommandContext.Enabled, true);\n            return;\n        }\n\n        void setCommandContext(CommandContext.Enabled, false);\n        void window.showWarningMessage(\n            'GitLens features will be unavailable. Unable to connect to the host GitLens service. The host may have disabled GitLens guest access or may not have GitLens installed.'\n        );\n    }\n\n    @log()\n    async git<TOut extends string | Buffer>(options: GitCommandOptions, ...args: any[]) {\n        const response = await this.sendRequest(GitCommandRequestType, { options: options, args: args });\n\n        if (response.isBuffer) {\n            return new Buffer(response.data, 'binary') as TOut;\n        }\n        return response.data as TOut;\n    }\n\n    @log()\n    async getRepositoriesInFolder(\n        folder: WorkspaceFolder,\n        onAnyRepositoryChanged: (repo: Repository, reason: RepositoryChange) => void\n    ): Promise<Repository[]> {\n        const response = await this.sendRequest(RepositoriesInFolderRequestType, {\n            folderUri: folder.uri.toString(true)\n        });\n\n        return response.repositories.map(\n            (r: RepositoryProxy) => new Repository(folder, r.path, r.root, onAnyRepositoryChanged, false, r.closed)\n        );\n    }\n\n    @debug()\n    private sendRequest<TRequest, TResponse>(\n        requestType: RequestType<TRequest, TResponse>,\n        request: TRequest,\n        cancellation?: CancellationToken\n    ): Promise<TResponse> {\n        return this._service.request(requestType.name, [request]);\n    }\n}\n","'use strict';\nimport { Disposable, workspace } from 'vscode';\nimport { getApi, LiveShare, Role, SessionChangeEvent } from 'vsls';\nimport { CommandContext, DocumentSchemes, setCommandContext } from '../constants';\nimport { Container } from '../container';\nimport { Logger } from '../logger';\nimport { VslsGuestService } from './guest';\nimport { VslsHostService } from './host';\n\nexport const vslsUriPrefixRegex = /^[/|\\\\]~(?:\\d+?|external)(?:[/|\\\\]|$)/;\nexport const vslsUriRootRegex = /^[/|\\\\]~(?:\\d+?|external)$/;\n\nexport interface ContactPresence {\n    status: ContactPresenceStatus;\n    statusText: string;\n}\nexport type ContactPresenceStatus = 'online' | 'away' | 'busy' | 'dnd' | 'offline';\n\nexport class VslsController implements Disposable {\n    private _disposable: Disposable | undefined;\n    private _guest: VslsGuestService | undefined;\n    private _host: VslsHostService | undefined;\n\n    private _onReady: (() => void) | undefined;\n    private _waitForReady: Promise<void> | undefined;\n\n    private _api: Promise<LiveShare | null> | undefined;\n\n    constructor() {\n        void this.initialize();\n    }\n\n    dispose() {\n        this._disposable && this._disposable.dispose();\n        if (this._host !== undefined) {\n            this._host.dispose();\n        }\n\n        if (this._guest !== undefined) {\n            this._guest.dispose();\n        }\n    }\n\n    private async initialize() {\n        try {\n            // If we have a vsls: workspace open, we might be a guest, so wait until live share transitions into a mode\n            if (\n                workspace.workspaceFolders !== undefined &&\n                workspace.workspaceFolders.some(f => f.uri.scheme === DocumentSchemes.Vsls)\n            ) {\n                setCommandContext(CommandContext.Readonly, true);\n                this._waitForReady = new Promise(resolve => (this._onReady = resolve));\n            }\n\n            this._api = getApi();\n            const api = await this._api;\n            if (api == null) {\n                setCommandContext(CommandContext.Vsls, false);\n                // Tear it down if we can't talk to live share\n                if (this._onReady !== undefined) {\n                    this._onReady();\n                    this._waitForReady = undefined;\n                }\n\n                return;\n            }\n\n            setCommandContext(CommandContext.Vsls, true);\n\n            this._disposable = Disposable.from(\n                api.onDidChangeSession(e => this.onLiveShareSessionChanged(api, e), this)\n            );\n        }\n        catch (ex) {\n            Logger.error(ex);\n        }\n    }\n\n    get isMaybeGuest() {\n        return this._guest !== undefined || this._waitForReady !== undefined;\n    }\n\n    async getContact(email: string | undefined) {\n        if (email === undefined) return undefined;\n\n        const api = await this._api;\n        if (api == null) return undefined;\n\n        const contacts = await api.getContacts([email]);\n        return contacts.contacts[email];\n    }\n\n    async getContactPresence(email: string | undefined): Promise<ContactPresence | undefined> {\n        const contact = await this.getContact(email);\n        if (contact == null) return undefined;\n\n        switch (contact.status) {\n            case 'available':\n                return { status: 'online', statusText: 'Available' };\n            case 'away':\n                return { status: 'away', statusText: 'Away' };\n            case 'busy':\n                return { status: 'busy', statusText: 'Busy' };\n            case 'doNotDisturb':\n                return { status: 'dnd', statusText: 'DND' };\n            default:\n                return { status: 'offline', statusText: 'Offline' };\n        }\n    }\n\n    async invite(email: string | undefined) {\n        if (email == null) return undefined;\n\n        const contact = await this.getContact(email);\n        if (contact == null) return undefined;\n\n        return contact.invite();\n    }\n\n    async startSession() {\n        const api = await this._api;\n        if (api == null) return undefined;\n\n        return api.share();\n    }\n\n    async guest() {\n        if (this._waitForReady !== undefined) {\n            await this._waitForReady;\n            this._waitForReady = undefined;\n        }\n\n        return this._guest;\n    }\n\n    host() {\n        return this._host;\n    }\n\n    private async onLiveShareSessionChanged(api: LiveShare, e: SessionChangeEvent) {\n        if (this._host !== undefined) {\n            this._host.dispose();\n        }\n\n        if (this._guest !== undefined) {\n            this._guest.dispose();\n        }\n\n        switch (e.session.role) {\n            case Role.Host:\n                setCommandContext(CommandContext.Readonly, undefined);\n                setCommandContext(CommandContext.Vsls, 'host');\n                if (Container.config.liveshare.allowGuestAccess) {\n                    this._host = await VslsHostService.share(api);\n                }\n                break;\n            case Role.Guest:\n                setCommandContext(CommandContext.Readonly, true);\n                setCommandContext(CommandContext.Vsls, 'guest');\n                this._guest = await VslsGuestService.connect(api);\n                break;\n\n            default:\n                setCommandContext(CommandContext.Readonly, undefined);\n                setCommandContext(CommandContext.Vsls, true);\n                break;\n        }\n\n        if (this._onReady !== undefined) {\n            this._onReady();\n            this._onReady = undefined;\n        }\n    }\n}\n","'use strict';\nimport * as fs from 'fs';\nimport * as paths from 'path';\nimport {\n    ConfigurationChangeEvent,\n    Disposable,\n    Event,\n    EventEmitter,\n    Extension,\n    extensions,\n    ProgressLocation,\n    Range,\n    TextEditor,\n    Uri,\n    window,\n    WindowState,\n    workspace,\n    WorkspaceFolder,\n    WorkspaceFoldersChangeEvent\n} from 'vscode';\n// eslint-disable-next-line import/no-unresolved\nimport { API as BuiltInGitApi, GitExtension } from '../@types/git';\nimport { configuration, RemotesConfig } from '../configuration';\nimport { CommandContext, DocumentSchemes, setCommandContext } from '../constants';\nimport { Container } from '../container';\nimport { LogCorrelationContext, Logger } from '../logger';\nimport { Messages } from '../messages';\nimport { gate, Iterables, log, Objects, Strings, TernarySearchTree, Versions } from '../system';\nimport { CachedBlame, CachedDiff, CachedLog, GitDocumentState, TrackedDocument } from '../trackers/gitDocumentTracker';\nimport { vslsUriPrefixRegex } from '../vsls/vsls';\nimport {\n    CommitFormatting,\n    Git,\n    GitAuthor,\n    GitBlame,\n    GitBlameCommit,\n    GitBlameLine,\n    GitBlameLines,\n    GitBlameParser,\n    GitBranch,\n    GitBranchParser,\n    GitCommitType,\n    GitContributor,\n    GitDiff,\n    GitDiffHunkLine,\n    GitDiffParser,\n    GitDiffShortStat,\n    GitErrors,\n    GitFile,\n    GitLog,\n    GitLogCommit,\n    GitLogDiffFilter,\n    GitLogParser,\n    GitReflog,\n    GitRemote,\n    GitRemoteParser,\n    GitStash,\n    GitStashParser,\n    GitStatus,\n    GitStatusFile,\n    GitStatusParser,\n    GitTag,\n    GitTagParser,\n    GitTree,\n    GitTreeParser,\n    Repository,\n    RepositoryChange\n} from './git';\nimport { GitUri } from './gitUri';\nimport { RemoteProviderFactory, RemoteProviders } from './remotes/factory';\nimport { GitReflogParser, GitShortLogParser } from './parsers/parsers';\n\nexport * from './gitUri';\nexport * from './models/models';\nexport * from './formatters/formatters';\nexport { getNameFromRemoteResource, RemoteProvider, RemoteResource, RemoteResourceType } from './remotes/provider';\nexport { RemoteProviderFactory } from './remotes/factory';\n\nconst emptyStr = '';\nconst slash = '/';\n\nconst RepoSearchWarnings = {\n    doesNotExist: /no such file or directory/i\n};\n\nconst userConfigRegex = /^user\\.(name|email) (.*)$/gm;\nconst mappedAuthorRegex = /(.+)\\s<(.+)>/;\n\nexport enum GitRepoSearchBy {\n    Author = 'author',\n    Changes = 'changes',\n    Files = 'files',\n    Message = 'message',\n    Sha = 'sha'\n}\n\nconst emptyPromise: Promise<GitBlame | GitDiff | GitLog | undefined> = Promise.resolve(undefined);\nconst reflogCommands = ['merge', 'pull'];\n\nexport class GitService implements Disposable {\n    private _onDidChangeRepositories = new EventEmitter<void>();\n    get onDidChangeRepositories(): Event<void> {\n        return this._onDidChangeRepositories.event;\n    }\n\n    private readonly _disposable: Disposable;\n    private readonly _repositoryTree: TernarySearchTree<Repository>;\n    private _repositoriesLoadingPromise: Promise<void> | undefined;\n    private _suspended: boolean = false;\n\n    private readonly _branchesCache = new Map<string, GitBranch[]>();\n    private readonly _tagsCache = new Map<string, GitTag[]>();\n    private readonly _tagsWithRefsCache = new Map<string, GitTag[]>();\n    private readonly _trackedCache = new Map<string, boolean | Promise<boolean>>();\n    private readonly _userMapCache = new Map<string, { name?: string; email?: string } | null>();\n\n    constructor() {\n        this._repositoryTree = TernarySearchTree.forPaths();\n\n        this._disposable = Disposable.from(\n            window.onDidChangeWindowState(this.onWindowStateChanged, this),\n            workspace.onDidChangeWorkspaceFolders(this.onWorkspaceFoldersChanged, this),\n            configuration.onDidChange(this.onConfigurationChanged, this)\n        );\n        this.onConfigurationChanged(configuration.initializingChangeEvent);\n\n        this._repositoriesLoadingPromise = this.onWorkspaceFoldersChanged();\n    }\n\n    dispose() {\n        this._repositoryTree.forEach(r => r.dispose());\n        this._branchesCache.clear();\n        this._tagsCache.clear();\n        this._tagsWithRefsCache.clear();\n        this._trackedCache.clear();\n        this._userMapCache.clear();\n\n        this._disposable && this._disposable.dispose();\n    }\n\n    @log()\n    static async initialize(): Promise<void> {\n        // Try to use the same git as the built-in vscode git extension\n        let gitPath;\n        const gitApi = await GitService.getBuiltInGitApi();\n        if (gitApi !== undefined) {\n            gitPath = gitApi.git.path;\n        }\n\n        await Git.setOrFindGitPath(gitPath || workspace.getConfiguration('git').get<string>('path'));\n    }\n\n    get useCaching() {\n        return Container.config.advanced.caching.enabled;\n    }\n\n    private onAnyRepositoryChanged(repo: Repository, reason: RepositoryChange) {\n        this._trackedCache.clear();\n\n        this._branchesCache.delete(repo.path);\n        this._tagsCache.delete(repo.path);\n        this._tagsWithRefsCache.clear();\n\n        if (reason === RepositoryChange.Config) {\n            this._userMapCache.delete(repo.path);\n        }\n\n        if (reason === RepositoryChange.Closed) {\n            // Send a notification that the repositories changed\n            setImmediate(async () => {\n                await this.updateContext(this._repositoryTree);\n\n                this.fireRepositoriesChanged();\n            });\n        }\n    }\n\n    private onConfigurationChanged(e: ConfigurationChangeEvent) {\n        if (\n            configuration.changed(e, configuration.name('defaultDateFormat').value) ||\n            configuration.changed(e, configuration.name('defaultDateSource').value) ||\n            configuration.changed(e, configuration.name('defaultDateStyle').value)\n        ) {\n            CommitFormatting.reset();\n        }\n    }\n\n    private onWindowStateChanged(e: WindowState) {\n        if (e.focused) {\n            this._repositoryTree.forEach(r => r.resume());\n        }\n        else {\n            this._repositoryTree.forEach(r => r.suspend());\n        }\n\n        this._suspended = !e.focused;\n    }\n\n    private async onWorkspaceFoldersChanged(e?: WorkspaceFoldersChangeEvent) {\n        let initializing = false;\n        if (e === undefined) {\n            initializing = true;\n            e = {\n                added: workspace.workspaceFolders || [],\n                removed: []\n            };\n\n            Logger.log(`Starting repository search in ${e.added.length} folders`);\n        }\n\n        for (const f of e.added) {\n            const { scheme } = f.uri;\n            if (scheme !== DocumentSchemes.File && scheme !== DocumentSchemes.Vsls) continue;\n\n            if (scheme === DocumentSchemes.Vsls) {\n                if (Container.vsls.isMaybeGuest) {\n                    const guest = await Container.vsls.guest();\n                    if (guest !== undefined) {\n                        const repositories = await guest.getRepositoriesInFolder(\n                            f,\n                            this.onAnyRepositoryChanged.bind(this)\n                        );\n                        for (const r of repositories) {\n                            this._repositoryTree.set(r.path, r);\n                        }\n                    }\n                }\n            }\n            else {\n                // Search for and add all repositories (nested and/or submodules)\n                const repositories = await this.repositorySearch(f);\n                for (const r of repositories) {\n                    this._repositoryTree.set(r.path, r);\n                }\n            }\n        }\n\n        for (const f of e.removed) {\n            const { fsPath, scheme } = f.uri;\n            if (scheme !== DocumentSchemes.File && scheme !== DocumentSchemes.Vsls) continue;\n\n            const repos = this._repositoryTree.findSuperstr(fsPath);\n            const reposToDelete =\n                repos !== undefined\n                    ? // Since the filtered tree will have keys that are relative to the fsPath, normalize to the full path\n                      [...Iterables.map<Repository, [Repository, string]>(repos, r => [r, r.path])]\n                    : [];\n\n            // const filteredTree = this._repositoryTree.findSuperstr(fsPath);\n            // const reposToDelete =\n            //     filteredTree !== undefined\n            //         ? // Since the filtered tree will have keys that are relative to the fsPath, normalize to the full path\n            //           [\n            //               ...Iterables.map<[Repository, string], [Repository, string]>(\n            //                   filteredTree.entries(),\n            //                   ([r, k]) => [r, path.join(fsPath, k)]\n            //               )\n            //           ]\n            //         : [];\n\n            const repo = this._repositoryTree.get(fsPath);\n            if (repo !== undefined) {\n                reposToDelete.push([repo, fsPath]);\n            }\n\n            for (const [r, k] of reposToDelete) {\n                this._repositoryTree.delete(k);\n                r.dispose();\n            }\n        }\n\n        await this.updateContext(this._repositoryTree);\n\n        if (!initializing) {\n            // Defer the event trigger enough to let everything unwind\n            setImmediate(() => this.fireRepositoriesChanged());\n        }\n    }\n\n    @log<GitService['repositorySearch']>({\n        args: false,\n        singleLine: true,\n        prefix: (context, folder) => `${context.prefix}(${folder.uri.fsPath})`,\n        exit: result =>\n            `returned ${result.length} repositories${\n                result.length !== 0 ? ` (${result.map(r => r.path).join(', ')})` : emptyStr\n            }`\n    })\n    private async repositorySearch(folder: WorkspaceFolder): Promise<Repository[]> {\n        const cc = Logger.getCorrelationContext();\n        const { uri } = folder;\n        const depth = configuration.get<number>(configuration.name('advanced')('repositorySearchDepth').value, uri);\n\n        Logger.log(cc, `searching (depth=${depth})...`);\n\n        const repositories: Repository[] = [];\n        const anyRepoChangedFn = this.onAnyRepositoryChanged.bind(this);\n\n        const rootPath = await this.getRepoPathCore(uri.fsPath, true);\n        if (rootPath !== undefined) {\n            Logger.log(cc, `found root repository in '${rootPath}'`);\n            repositories.push(new Repository(folder, rootPath, true, anyRepoChangedFn, this._suspended));\n        }\n\n        if (depth <= 0) return repositories;\n\n        // Get any specified excludes -- this is a total hack, but works for some simple cases and something is better than nothing :)\n        let excludes = {\n            ...workspace.getConfiguration('files', uri).get<{ [key: string]: boolean }>('exclude', {}),\n            ...workspace.getConfiguration('search', uri).get<{ [key: string]: boolean }>('exclude', {})\n        };\n\n        const excludedPaths = [\n            ...Iterables.filterMap(Objects.entries(excludes), ([key, value]) => {\n                if (!value) return undefined;\n                if (key.startsWith('**/')) return key.substring(3);\n                return key;\n            })\n        ];\n\n        excludes = excludedPaths.reduce((accumulator, current) => {\n            accumulator[current] = true;\n            return accumulator;\n        }, Object.create(null));\n\n        let repoPaths;\n        try {\n            repoPaths = await this.repositorySearchCore(uri.fsPath, depth, excludes);\n        }\n        catch (ex) {\n            if (RepoSearchWarnings.doesNotExist.test(ex.message || emptyStr)) {\n                Logger.log(cc, `FAILED${ex.message ? ` Error: ${ex.message}` : emptyStr}`);\n            }\n            else {\n                Logger.error(ex, cc, 'FAILED');\n            }\n\n            return repositories;\n        }\n\n        for (let p of repoPaths) {\n            p = paths.dirname(p);\n            // If we are the same as the root, skip it\n            if (Strings.normalizePath(p) === rootPath) continue;\n\n            Logger.log(cc, `searching in '${p}'...`);\n\n            const rp = await this.getRepoPathCore(p, true);\n            if (rp === undefined) continue;\n\n            Logger.log(cc, `found repository in '${rp}'`);\n            repositories.push(new Repository(folder, rp, false, anyRepoChangedFn, this._suspended));\n        }\n\n        return repositories;\n    }\n\n    private repositorySearchCore(\n        root: string,\n        depth: number,\n        excludes: { [key: string]: boolean },\n        repositories: string[] = []\n    ): Promise<string[]> {\n        return new Promise<string[]>((resolve, reject) => {\n            fs.readdir(root, async (err, files) => {\n                if (err != null) {\n                    reject(err);\n                    return;\n                }\n\n                if (files.length === 0) {\n                    resolve(repositories);\n                    return;\n                }\n\n                const folders: string[] = [];\n\n                const promises = files.map(file => {\n                    const path = paths.resolve(root, file);\n\n                    return new Promise<void>((resolve2, reject2) => {\n                        fs.stat(path, (err, stat) => {\n                            if (file === '.git') {\n                                repositories.push(path);\n                            }\n                            else if (err == null && excludes[file] !== true && stat != null && stat.isDirectory()) {\n                                folders.push(path);\n                            }\n\n                            resolve2();\n                        });\n                    });\n                });\n\n                await Promise.all(promises);\n\n                if (depth-- > 0) {\n                    for (const folder of folders) {\n                        await this.repositorySearchCore(folder, depth, excludes, repositories);\n                    }\n                }\n\n                resolve(repositories);\n            });\n        });\n    }\n\n    private async updateContext(repositoryTree: TernarySearchTree<Repository>) {\n        const hasRepository = repositoryTree.any();\n        await setCommandContext(CommandContext.Enabled, hasRepository);\n\n        let hasRemotes = false;\n        if (hasRepository) {\n            for (const repo of repositoryTree.values()) {\n                hasRemotes = await repo.hasRemotes();\n                if (hasRemotes) break;\n            }\n        }\n\n        await setCommandContext(CommandContext.HasRemotes, hasRemotes);\n\n        // If we have no repositories setup a watcher in case one is initialized\n        if (!hasRepository) {\n            const watcher = workspace.createFileSystemWatcher('**/.git', false, true, true);\n            const disposable = Disposable.from(\n                watcher,\n                watcher.onDidCreate(async uri => {\n                    const f = workspace.getWorkspaceFolder(uri);\n                    if (f === undefined) return;\n\n                    // Search for and add all repositories (nested and/or submodules)\n                    const repositories = await this.repositorySearch(f);\n                    if (repositories.length === 0) return;\n\n                    disposable.dispose();\n\n                    for (const r of repositories) {\n                        this._repositoryTree.set(r.path, r);\n                    }\n\n                    await this.updateContext(this._repositoryTree);\n\n                    // Defer the event trigger enough to let everything unwind\n                    setImmediate(() => this.fireRepositoriesChanged());\n                }, this)\n            );\n        }\n    }\n\n    private fireRepositoriesChanged() {\n        this._onDidChangeRepositories.fire();\n    }\n\n    @log()\n    async applyChangesToWorkingFile(uri: GitUri, ref1?: string, ref2?: string) {\n        const cc = Logger.getCorrelationContext();\n\n        ref1 = ref1 || uri.sha;\n        if (ref1 === undefined || uri.repoPath === undefined) return;\n\n        if (ref2 === undefined) {\n            ref2 = ref1;\n            ref1 = `${ref1}^`;\n        }\n\n        let patch;\n        try {\n            patch = await Git.diff(uri.repoPath, uri.fsPath, ref1, ref2, {\n                similarityThreshold: Container.config.advanced.similarityThreshold\n            });\n            void (await Git.apply(uri.repoPath!, patch));\n        }\n        catch (ex) {\n            if (patch && /patch does not apply/i.test(ex.message)) {\n                const result = await window.showWarningMessage(\n                    'Unable to apply changes cleanly. Retry and allow conflicts?',\n                    { title: 'Yes' },\n                    { title: 'No', isCloseAffordance: true }\n                );\n\n                if (result === undefined || result.title !== 'Yes') return;\n\n                if (result.title === 'Yes') {\n                    try {\n                        void (await Git.apply(uri.repoPath!, patch, { allowConflicts: true }));\n                        return;\n                    }\n                    catch (e) {\n                        // eslint-disable-next-line no-ex-assign\n                        ex = e;\n                    }\n                }\n            }\n\n            Logger.error(ex, cc);\n            void Messages.showGenericErrorMessage('Unable to apply changes');\n        }\n    }\n\n    @log()\n    checkout(repoPath: string, ref: string, fileName?: string) {\n        return Git.checkout(repoPath, ref, fileName);\n    }\n\n    @gate()\n    @log()\n    fetch(repoPath: string, remote?: string) {\n        return Git.fetch(repoPath, { remote: remote });\n    }\n\n    @gate()\n    @log()\n    async fetchAll() {\n        const repositories = await this.getOrderedRepositories();\n        if (repositories.length === 0) return;\n\n        await window.withProgress(\n            {\n                location: ProgressLocation.Notification,\n                title: 'Fetching repositories',\n                cancellable: true\n            },\n            async (progress, token) => {\n                const total = repositories.length;\n                for (const repo of repositories) {\n                    progress.report({\n                        message: `${repo.formattedName}...`,\n                        increment: 100 / total\n                    });\n\n                    if (token.isCancellationRequested) break;\n\n                    await repo.fetch({ progress: false });\n                }\n            }\n        );\n    }\n\n    @gate()\n    @log()\n    async pullAll() {\n        const repositories = await this.getOrderedRepositories();\n        if (repositories.length === 0) return;\n\n        await window.withProgress(\n            {\n                location: ProgressLocation.Notification,\n                title: 'Pulling repositories',\n                cancellable: true\n            },\n            async (progress, token) => {\n                const total = repositories.length;\n                for (const repo of repositories) {\n                    progress.report({\n                        message: `${repo.formattedName}...`,\n                        increment: 100 / total\n                    });\n\n                    if (token.isCancellationRequested) break;\n\n                    await repo.pull({ progress: false });\n                }\n            }\n        );\n    }\n\n    @gate()\n    @log()\n    async pushAll() {\n        const repositories = await this.getOrderedRepositories();\n        if (repositories.length === 0) return;\n\n        await window.withProgress(\n            {\n                location: ProgressLocation.Notification,\n                title: 'Pushing repositories',\n                cancellable: true\n            },\n            async (progress, token) => {\n                const total = repositories.length;\n                for (const repo of repositories) {\n                    progress.report({\n                        message: `${repo.formattedName}...`,\n                        increment: 100 / total\n                    });\n\n                    if (token.isCancellationRequested) break;\n\n                    await repo.push({ progress: false });\n                }\n            }\n        );\n    }\n\n    @log({\n        args: {\n            0: (editor: TextEditor) =>\n                editor !== undefined ? `TextEditor(${Logger.toLoggable(editor.document.uri)})` : 'undefined'\n        }\n    })\n    async getActiveRepoPath(editor?: TextEditor): Promise<string | undefined> {\n        editor = editor || window.activeTextEditor;\n\n        let repoPath;\n        if (editor != null) {\n            const doc = await Container.tracker.getOrAdd(editor.document.uri);\n            if (doc !== undefined) {\n                repoPath = doc.uri.repoPath;\n            }\n        }\n\n        if (repoPath != null) return repoPath;\n\n        return this.getHighlanderRepoPath();\n    }\n\n    @log()\n    getHighlanderRepoPath(): string | undefined {\n        const entry = this._repositoryTree.highlander();\n        if (entry === undefined) return undefined;\n\n        const [repo] = entry;\n        return repo.path;\n    }\n\n    @log()\n    async getBlameForFile(uri: GitUri): Promise<GitBlame | undefined> {\n        const cc = Logger.getCorrelationContext();\n\n        let key = 'blame';\n        if (uri.sha !== undefined) {\n            key += `:${uri.sha}`;\n        }\n\n        const doc = await Container.tracker.getOrAdd(uri);\n        if (this.useCaching) {\n            if (doc.state !== undefined) {\n                const cachedBlame = doc.state.get<CachedBlame>(key);\n                if (cachedBlame !== undefined) {\n                    Logger.debug(cc, `Cache hit: '${key}'`);\n                    return cachedBlame.item;\n                }\n            }\n\n            Logger.debug(cc, `Cache miss: '${key}'`);\n\n            if (doc.state === undefined) {\n                doc.state = new GitDocumentState(doc.key);\n            }\n        }\n\n        const promise = this.getBlameForFileCore(uri, doc, key, cc);\n\n        if (doc.state !== undefined) {\n            Logger.debug(cc, `Cache add: '${key}'`);\n\n            const value: CachedBlame = {\n                item: promise as Promise<GitBlame>\n            };\n            doc.state.set<CachedBlame>(key, value);\n        }\n\n        return promise;\n    }\n\n    private async getBlameForFileCore(\n        uri: GitUri,\n        document: TrackedDocument<GitDocumentState>,\n        key: string,\n        cc: LogCorrelationContext | undefined\n    ): Promise<GitBlame | undefined> {\n        if (!(await this.isTracked(uri))) {\n            Logger.log(cc, `Skipping blame; '${uri.fsPath}' is not tracked`);\n            return emptyPromise as Promise<GitBlame>;\n        }\n\n        const [file, root] = Git.splitPath(uri.fsPath, uri.repoPath, false);\n\n        try {\n            const data = await Git.blame(root, file, uri.sha, {\n                args: Container.config.advanced.blame.customArguments,\n                ignoreWhitespace: Container.config.blame.ignoreWhitespace\n            });\n            const blame = GitBlameParser.parse(data, root, file, await this.getCurrentUser(root));\n            return blame;\n        }\n        catch (ex) {\n            // Trap and cache expected blame errors\n            if (document.state !== undefined) {\n                const msg = ex && ex.toString();\n                Logger.debug(cc, `Cache replace (with empty promise): '${key}'`);\n\n                const value: CachedBlame = {\n                    item: emptyPromise as Promise<GitBlame>,\n                    errorMessage: msg\n                };\n                document.state.set<CachedBlame>(key, value);\n\n                document.setBlameFailure();\n\n                return emptyPromise as Promise<GitBlame>;\n            }\n\n            return undefined;\n        }\n    }\n\n    @log({\n        args: {\n            1: contents => '<contents>'\n        }\n    })\n    async getBlameForFileContents(uri: GitUri, contents: string): Promise<GitBlame | undefined> {\n        const cc = Logger.getCorrelationContext();\n\n        const key = `blame:${Strings.sha1(contents)}`;\n\n        const doc = await Container.tracker.getOrAdd(uri);\n        if (this.useCaching) {\n            if (doc.state !== undefined) {\n                const cachedBlame = doc.state.get<CachedBlame>(key);\n                if (cachedBlame !== undefined) {\n                    Logger.debug(cc, `Cache hit: ${key}`);\n                    return cachedBlame.item;\n                }\n            }\n\n            Logger.debug(cc, `Cache miss: ${key}`);\n\n            if (doc.state === undefined) {\n                doc.state = new GitDocumentState(doc.key);\n            }\n        }\n\n        const promise = this.getBlameForFileContentsCore(uri, contents, doc, key, cc);\n\n        if (doc.state !== undefined) {\n            Logger.debug(cc, `Cache add: '${key}'`);\n\n            const value: CachedBlame = {\n                item: promise as Promise<GitBlame>\n            };\n            doc.state.set<CachedBlame>(key, value);\n        }\n\n        return promise;\n    }\n\n    async getBlameForFileContentsCore(\n        uri: GitUri,\n        contents: string,\n        document: TrackedDocument<GitDocumentState>,\n        key: string,\n        cc: LogCorrelationContext | undefined\n    ): Promise<GitBlame | undefined> {\n        if (!(await this.isTracked(uri))) {\n            Logger.log(cc, `Skipping blame; '${uri.fsPath}' is not tracked`);\n            return emptyPromise as Promise<GitBlame>;\n        }\n\n        const [file, root] = Git.splitPath(uri.fsPath, uri.repoPath, false);\n\n        try {\n            const data = await Git.blame__contents(root, file, contents, {\n                args: Container.config.advanced.blame.customArguments,\n                correlationKey: `:${key}`,\n                ignoreWhitespace: Container.config.blame.ignoreWhitespace\n            });\n            const blame = GitBlameParser.parse(data, root, file, await this.getCurrentUser(root));\n            return blame;\n        }\n        catch (ex) {\n            // Trap and cache expected blame errors\n            if (document.state !== undefined) {\n                const msg = ex && ex.toString();\n                Logger.debug(cc, `Cache replace (with empty promise): '${key}'`);\n\n                const value: CachedBlame = {\n                    item: emptyPromise as Promise<GitBlame>,\n                    errorMessage: msg\n                };\n                document.state.set<CachedBlame>(key, value);\n\n                document.setBlameFailure();\n                return emptyPromise as Promise<GitBlame>;\n            }\n\n            return undefined;\n        }\n    }\n\n    @log()\n    async getBlameForLine(\n        uri: GitUri,\n        editorLine: number, // editor lines are 0-based\n        options: { skipCache?: boolean } = {}\n    ): Promise<GitBlameLine | undefined> {\n        if (!options.skipCache && this.useCaching) {\n            const blame = await this.getBlameForFile(uri);\n            if (blame === undefined) return undefined;\n\n            let blameLine = blame.lines[editorLine];\n            if (blameLine === undefined) {\n                if (blame.lines.length !== editorLine) return undefined;\n                blameLine = blame.lines[editorLine - 1];\n            }\n\n            const commit = blame.commits.get(blameLine.sha);\n            if (commit === undefined) return undefined;\n\n            const author = blame.authors.get(commit.author)!;\n            return {\n                author: { ...author, lineCount: commit.lines.length },\n                commit: commit,\n                line: blameLine\n            };\n        }\n\n        const lineToBlame = editorLine + 1;\n        const fileName = uri.fsPath;\n\n        try {\n            const data = await Git.blame(uri.repoPath, fileName, uri.sha, {\n                args: Container.config.advanced.blame.customArguments,\n                ignoreWhitespace: Container.config.blame.ignoreWhitespace,\n                startLine: lineToBlame,\n                endLine: lineToBlame\n            });\n            const blame = GitBlameParser.parse(data, uri.repoPath, fileName, await this.getCurrentUser(uri.repoPath!));\n            if (blame === undefined) return undefined;\n\n            return {\n                author: Iterables.first(blame.authors.values()),\n                commit: Iterables.first(blame.commits.values()),\n                line: blame.lines[editorLine]\n            };\n        }\n        catch {\n            return undefined;\n        }\n    }\n\n    @log({\n        args: {\n            2: contents => '<contents>'\n        }\n    })\n    async getBlameForLineContents(\n        uri: GitUri,\n        editorLine: number, // editor lines are 0-based\n        contents: string,\n        options: { skipCache?: boolean } = {}\n    ): Promise<GitBlameLine | undefined> {\n        if (!options.skipCache && this.useCaching) {\n            const blame = await this.getBlameForFileContents(uri, contents);\n            if (blame === undefined) return undefined;\n\n            let blameLine = blame.lines[editorLine];\n            if (blameLine === undefined) {\n                if (blame.lines.length !== editorLine) return undefined;\n                blameLine = blame.lines[editorLine - 1];\n            }\n\n            const commit = blame.commits.get(blameLine.sha);\n            if (commit === undefined) return undefined;\n\n            const author = blame.authors.get(commit.author)!;\n            return {\n                author: { ...author, lineCount: commit.lines.length },\n                commit: commit,\n                line: blameLine\n            };\n        }\n\n        const lineToBlame = editorLine + 1;\n        const fileName = uri.fsPath;\n\n        try {\n            const data = await Git.blame__contents(uri.repoPath, fileName, contents, {\n                args: Container.config.advanced.blame.customArguments,\n                ignoreWhitespace: Container.config.blame.ignoreWhitespace,\n                startLine: lineToBlame,\n                endLine: lineToBlame\n            });\n            const currentUser = await this.getCurrentUser(uri.repoPath!);\n            const blame = GitBlameParser.parse(data, uri.repoPath, fileName, currentUser);\n            if (blame === undefined) return undefined;\n\n            return {\n                author: Iterables.first(blame.authors.values()),\n                commit: Iterables.first(blame.commits.values()),\n                line: blame.lines[editorLine]\n            };\n        }\n        catch {\n            return undefined;\n        }\n    }\n\n    @log()\n    async getBlameForRange(uri: GitUri, range: Range): Promise<GitBlameLines | undefined> {\n        const blame = await this.getBlameForFile(uri);\n        if (blame === undefined) return undefined;\n\n        return this.getBlameForRangeSync(blame, uri, range);\n    }\n\n    @log()\n    async getBlameForRangeContents(uri: GitUri, range: Range, contents: string): Promise<GitBlameLines | undefined> {\n        const blame = await this.getBlameForFileContents(uri, contents);\n        if (blame === undefined) return undefined;\n\n        return this.getBlameForRangeSync(blame, uri, range);\n    }\n\n    @log({\n        args: { 0: blame => '<blame>' }\n    })\n    getBlameForRangeSync(blame: GitBlame, uri: GitUri, range: Range): GitBlameLines | undefined {\n        if (blame.lines.length === 0) return { allLines: blame.lines, ...blame };\n\n        if (range.start.line === 0 && range.end.line === blame.lines.length - 1) {\n            return { allLines: blame.lines, ...blame };\n        }\n\n        const lines = blame.lines.slice(range.start.line, range.end.line + 1);\n        const shas = new Set(lines.map(l => l.sha));\n\n        // ranges are 0-based\n        const startLine = range.start.line + 1;\n        const endLine = range.end.line + 1;\n\n        const authors: Map<string, GitAuthor> = new Map();\n        const commits: Map<string, GitBlameCommit> = new Map();\n        for (const c of blame.commits.values()) {\n            if (!shas.has(c.sha)) continue;\n\n            const commit = c.with({\n                lines: c.lines.filter(l => l.line >= startLine && l.line <= endLine)\n            });\n            commits.set(c.sha, commit);\n\n            let author = authors.get(commit.author);\n            if (author === undefined) {\n                author = {\n                    name: commit.author,\n                    lineCount: 0\n                };\n                authors.set(author.name, author);\n            }\n\n            author.lineCount += commit.lines.length;\n        }\n\n        const sortedAuthors = new Map([...authors.entries()].sort((a, b) => b[1].lineCount - a[1].lineCount));\n\n        return {\n            repoPath: uri.repoPath!,\n            authors: sortedAuthors,\n            commits: commits,\n            lines: lines,\n            allLines: blame.lines\n        };\n    }\n\n    @log()\n    async getBranch(repoPath: string | undefined): Promise<GitBranch | undefined> {\n        if (repoPath === undefined) return undefined;\n\n        const data = await Git.rev_parse__currentBranch(repoPath);\n        if (data === undefined) return undefined;\n\n        const branch = data[0].split('\\n');\n        return new GitBranch(repoPath, branch[0], false, true, data[1], branch[1]);\n    }\n\n    @log()\n    async getBranches(repoPath: string | undefined): Promise<GitBranch[]> {\n        if (repoPath === undefined) return [];\n\n        let branches;\n        if (this.useCaching) {\n            branches = this._branchesCache.get(repoPath);\n            if (branches !== undefined) return branches;\n        }\n\n        const data = await Git.for_each_ref__branch(repoPath, { all: true });\n        // If we don't get any data, assume the repo doesn't have any commits yet so check if we have a current branch\n        if (data == null || data.length === 0) {\n            const current = await this.getBranch(repoPath);\n            branches = current !== undefined ? [current] : [];\n        }\n        else {\n            branches = GitBranchParser.parse(data, repoPath);\n        }\n\n        if (this.useCaching) {\n            const repo = await this.getRepository(repoPath);\n            if (repo !== undefined && repo.supportsChangeEvents) {\n                this._branchesCache.set(repoPath, branches);\n            }\n        }\n        return branches;\n    }\n\n    @log()\n    async getChangedFilesCount(repoPath: string, ref?: string): Promise<GitDiffShortStat | undefined> {\n        const data = await Git.diff__shortstat(repoPath, ref);\n        return GitDiffParser.parseShortStat(data);\n    }\n\n    @log()\n    async getCommit(repoPath: string, ref: string): Promise<GitLogCommit | undefined> {\n        const log = await this.getLog(repoPath, { maxCount: 2, ref: ref });\n        if (log === undefined) return undefined;\n\n        return log.commits.get(ref);\n    }\n\n    @log()\n    async getCommitForFile(\n        repoPath: string | undefined,\n        fileName: string,\n        options: { ref?: string; firstIfNotFound?: boolean; reverse?: boolean } = {}\n    ): Promise<GitLogCommit | undefined> {\n        const log = await this.getLogForFile(repoPath, fileName, {\n            maxCount: 2,\n            ref: options.ref,\n            reverse: options.reverse\n        });\n        if (log === undefined) return undefined;\n\n        const commit = options.ref && log.commits.get(options.ref);\n        if (commit === undefined && !options.firstIfNotFound && options.ref) {\n            // If the ref isn't a valid sha we will never find it, so let it fall through so we return the first\n            if (!Git.isSha(options.ref) || Git.isUncommitted(options.ref)) return undefined;\n        }\n\n        return commit || Iterables.first(log.commits.values());\n    }\n\n    @log()\n    getConfig(key: string, repoPath?: string): Promise<string | undefined> {\n        return Git.config__get(key, repoPath);\n    }\n\n    @log()\n    async getContributors(repoPath: string): Promise<GitContributor[]> {\n        if (repoPath === undefined) return [];\n\n        const data = await Git.shortlog(repoPath);\n        const shortlog = GitShortLogParser.parse(data, repoPath);\n        return shortlog === undefined ? [] : shortlog.contributors;\n    }\n\n    @log()\n    async getCurrentUser(repoPath: string) {\n        let user = this._userMapCache.get(repoPath);\n        if (user != null) return user;\n        // If we found the repo, but no user data was found just return\n        if (user === null) return undefined;\n\n        const data = await Git.config__get_regex('user.(name|email)', repoPath, { local: true });\n        if (!data) {\n            // If we found no user data, mark it so we won't bother trying again\n            this._userMapCache.set(repoPath, null);\n            return undefined;\n        }\n\n        user = { name: undefined, email: undefined };\n\n        let key: string;\n        let value: string;\n\n        let match: RegExpExecArray | null;\n        do {\n            match = userConfigRegex.exec(data);\n            if (match == null) break;\n\n            [, key, value] = match;\n            // Stops excessive memory usage -- https://bugs.chromium.org/p/v8/issues/detail?id=2869\n            user[key as 'name' | 'email'] = ` ${value}`.substr(1);\n        } while (match != null);\n\n        const author = `${user.name} <${user.email}>`;\n        // Check if there is a mailmap for the current user\n        const mappedAuthor = await Git.check_mailmap(repoPath, author);\n        if (mappedAuthor != null && mappedAuthor.length !== 0 && author !== mappedAuthor) {\n            match = mappedAuthorRegex.exec(mappedAuthor);\n            if (match != null) {\n                [, user.name, user.email] = match;\n            }\n        }\n\n        this._userMapCache.set(repoPath, user);\n        return user;\n    }\n\n    @log()\n    async getDiffForFile(\n        uri: GitUri,\n        ref1: string | undefined,\n        ref2?: string,\n        originalFileName?: string\n    ): Promise<GitDiff | undefined> {\n        const cc = Logger.getCorrelationContext();\n\n        let key = 'diff';\n        if (ref1 !== undefined) {\n            key += `:${ref1}`;\n        }\n        if (ref2 !== undefined) {\n            key += `:${ref2}`;\n        }\n\n        const doc = await Container.tracker.getOrAdd(uri);\n        if (this.useCaching) {\n            if (doc.state !== undefined) {\n                const cachedDiff = doc.state.get<CachedDiff>(key);\n                if (cachedDiff !== undefined) {\n                    Logger.debug(cc, `Cache hit: '${key}'`);\n                    return cachedDiff.item;\n                }\n            }\n\n            Logger.debug(cc, `Cache miss: '${key}'`);\n\n            if (doc.state === undefined) {\n                doc.state = new GitDocumentState(doc.key);\n            }\n        }\n\n        const promise = this.getDiffForFileCore(\n            uri.repoPath,\n            uri.fsPath,\n            ref1,\n            ref2,\n            originalFileName,\n            { encoding: GitService.getEncoding(uri) },\n            doc,\n            key,\n            cc\n        );\n\n        if (doc.state !== undefined) {\n            Logger.debug(cc, `Cache add: '${key}'`);\n\n            const value: CachedDiff = {\n                item: promise as Promise<GitDiff>\n            };\n            doc.state.set<CachedDiff>(key, value);\n        }\n\n        return promise;\n    }\n\n    private async getDiffForFileCore(\n        repoPath: string | undefined,\n        fileName: string,\n        ref1: string | undefined,\n        ref2: string | undefined,\n        originalFileName: string | undefined,\n        options: { encoding?: string },\n        document: TrackedDocument<GitDocumentState>,\n        key: string,\n        cc: LogCorrelationContext | undefined\n    ): Promise<GitDiff | undefined> {\n        const [file, root] = Git.splitPath(fileName, repoPath, false);\n\n        try {\n            let data;\n            if (ref1 !== undefined && ref2 === undefined && !Git.isUncommittedStaged(ref1)) {\n                data = await Git.show__diff(root, file, ref1, originalFileName, {\n                    similarityThreshold: Container.config.advanced.similarityThreshold\n                });\n            }\n            else {\n                data = await Git.diff(root, file, ref1, ref2, {\n                    ...options,\n                    filter: 'M',\n                    similarityThreshold: Container.config.advanced.similarityThreshold\n                });\n            }\n\n            const diff = GitDiffParser.parse(data);\n            return diff;\n        }\n        catch (ex) {\n            // Trap and cache expected diff errors\n            if (document.state !== undefined) {\n                const msg = ex && ex.toString();\n                Logger.debug(cc, `Cache replace (with empty promise): '${key}'`);\n\n                const value: CachedDiff = {\n                    item: emptyPromise as Promise<GitDiff>,\n                    errorMessage: msg\n                };\n                document.state.set<CachedDiff>(key, value);\n\n                return emptyPromise as Promise<GitDiff>;\n            }\n\n            return undefined;\n        }\n    }\n\n    @log()\n    async getDiffForLine(\n        uri: GitUri,\n        editorLine: number, // editor lines are 0-based\n        ref1: string | undefined,\n        ref2?: string,\n        originalFileName?: string\n    ): Promise<GitDiffHunkLine | undefined> {\n        try {\n            const diff = await this.getDiffForFile(uri, ref1, ref2, originalFileName);\n            if (diff === undefined) return undefined;\n\n            const line = editorLine + 1;\n            const hunk = diff.hunks.find(c => c.currentPosition.start <= line && c.currentPosition.end >= line);\n            if (hunk === undefined) return undefined;\n\n            return hunk.lines[line - hunk.currentPosition.start];\n        }\n        catch (ex) {\n            return undefined;\n        }\n    }\n\n    @log()\n    async getDiffStatus(\n        repoPath: string,\n        ref1?: string,\n        ref2?: string,\n        options: { filter?: string; similarityThreshold?: number } = {}\n    ): Promise<GitFile[] | undefined> {\n        try {\n            const data = await Git.diff__name_status(repoPath, ref1, ref2, {\n                similarityThreshold: Container.config.advanced.similarityThreshold,\n                ...options\n            });\n            const files = GitDiffParser.parseNameStatus(data, repoPath);\n            return files === undefined || files.length === 0 ? undefined : files;\n        }\n        catch (ex) {\n            return undefined;\n        }\n    }\n\n    @log()\n    async getFileStatusForCommit(repoPath: string, fileName: string, ref: string): Promise<GitFile | undefined> {\n        if (ref === GitService.deletedOrMissingSha || Git.isUncommitted(ref)) return undefined;\n\n        const data = await Git.show__name_status(repoPath, fileName, ref);\n        if (!data) return undefined;\n\n        const files = GitDiffParser.parseNameStatus(data, repoPath);\n        if (files === undefined || files.length === 0) return undefined;\n\n        return files[0];\n    }\n\n    @log()\n    async getLog(\n        repoPath: string,\n        { ref, ...options }: { authors?: string[]; maxCount?: number; ref?: string; reverse?: boolean } = {}\n    ): Promise<GitLog | undefined> {\n        const maxCount = options.maxCount == null ? Container.config.advanced.maxListItems || 0 : options.maxCount;\n\n        try {\n            const data = await Git.log(repoPath, ref, {\n                authors: options.authors,\n                maxCount: maxCount,\n                reverse: options.reverse,\n                similarityThreshold: Container.config.advanced.similarityThreshold\n            });\n            const log = GitLogParser.parse(\n                data,\n                GitCommitType.Log,\n                repoPath,\n                undefined,\n                ref,\n                await this.getCurrentUser(repoPath),\n                maxCount,\n                options.reverse!,\n                undefined\n            );\n\n            if (log !== undefined) {\n                const opts = { ...options, ref: ref };\n                log.query = (maxCount: number | undefined) => this.getLog(repoPath, { ...opts, maxCount: maxCount });\n            }\n\n            return log;\n        }\n        catch (ex) {\n            return undefined;\n        }\n    }\n\n    @log()\n    async getLogForSearch(\n        repoPath: string,\n        search: string,\n        searchBy: GitRepoSearchBy,\n        options: { maxCount?: number } = {}\n    ): Promise<GitLog | undefined> {\n        let maxCount = options.maxCount == null ? Container.config.advanced.maxSearchItems || 0 : options.maxCount;\n        const similarityThreshold = Container.config.advanced.similarityThreshold;\n\n        let searchArgs: string[] | undefined = undefined;\n        switch (searchBy) {\n            case GitRepoSearchBy.Author:\n                searchArgs = [\n                    '-m',\n                    `-M${similarityThreshold == null ? '' : `${similarityThreshold}%`}`,\n                    '--all',\n                    '--full-history',\n                    '-E',\n                    '-i',\n                    `--author=${search}`\n                ];\n                break;\n            case GitRepoSearchBy.Changes:\n                searchArgs = [\n                    `-M${similarityThreshold == null ? '' : `${similarityThreshold}%`}`,\n                    '--all',\n                    '--full-history',\n                    '-E',\n                    '-i',\n                    `-G${search}`\n                ];\n                break;\n            case GitRepoSearchBy.Files:\n                searchArgs = [\n                    `-M${similarityThreshold == null ? '' : `${similarityThreshold}%`}`,\n                    '--all',\n                    '--full-history',\n                    '-E',\n                    '-i',\n                    '--',\n                    `${search}`\n                ];\n                break;\n            case GitRepoSearchBy.Message:\n                searchArgs = [\n                    '-m',\n                    `-M${similarityThreshold == null ? '' : `${similarityThreshold}%`}`,\n                    '--all',\n                    '--full-history',\n                    '-E',\n                    '-i'\n                ];\n                if (search) {\n                    searchArgs.push(`--grep=${search}`);\n                }\n                break;\n            case GitRepoSearchBy.Sha:\n                searchArgs = ['-m', `-M${similarityThreshold == null ? '' : `${similarityThreshold}%`}`, search];\n                maxCount = 1;\n                break;\n        }\n\n        try {\n            const data = await Git.log__search(repoPath, searchArgs, { maxCount: maxCount });\n            const log = GitLogParser.parse(\n                data,\n                GitCommitType.Log,\n                repoPath,\n                undefined,\n                undefined,\n                await this.getCurrentUser(repoPath),\n                maxCount,\n                false,\n                undefined\n            );\n\n            if (log !== undefined) {\n                const opts = { ...options };\n                log.query = (maxCount: number | undefined) =>\n                    this.getLogForSearch(repoPath, search, searchBy, { ...opts, maxCount: maxCount });\n            }\n\n            return log;\n        }\n        catch (ex) {\n            return undefined;\n        }\n    }\n\n    @log()\n    async getLogForFile(\n        repoPath: string | undefined,\n        fileName: string,\n        options: { maxCount?: number; range?: Range; ref?: string; renames?: boolean; reverse?: boolean } = {}\n    ): Promise<GitLog | undefined> {\n        if (repoPath !== undefined && repoPath === Strings.normalizePath(fileName)) {\n            throw new Error(`File name cannot match the repository path; fileName=${fileName}`);\n        }\n\n        const cc = Logger.getCorrelationContext();\n\n        options = { reverse: false, ...options };\n\n        if (options.renames === undefined) {\n            options.renames = Container.config.advanced.fileHistoryFollowsRenames;\n        }\n\n        let key = 'log';\n        if (options.ref !== undefined) {\n            key += `:${options.ref}`;\n        }\n        if (options.maxCount !== undefined) {\n            key += `:n${options.maxCount}`;\n        }\n        if (options.renames) {\n            key += ':follow';\n        }\n        if (options.reverse) {\n            key += ':reverse';\n        }\n\n        const doc = await Container.tracker.getOrAdd(GitUri.fromFile(fileName, repoPath!, options.ref));\n        if (this.useCaching && options.range === undefined) {\n            if (doc.state !== undefined) {\n                const cachedLog = doc.state.get<CachedLog>(key);\n                if (cachedLog !== undefined) {\n                    Logger.debug(cc, `Cache hit: '${key}'`);\n                    return cachedLog.item;\n                }\n\n                if (options.ref !== undefined || options.maxCount !== undefined) {\n                    // Since we are looking for partial log, see if we have the log of the whole file\n                    const cachedLog = doc.state.get<CachedLog>(\n                        `log${options.renames ? ':follow' : emptyStr}${options.reverse ? ':reverse' : emptyStr}`\n                    );\n                    if (cachedLog !== undefined) {\n                        if (options.ref === undefined) {\n                            Logger.debug(cc, `Cache hit: ~'${key}'`);\n                            return cachedLog.item;\n                        }\n\n                        Logger.debug(cc, `Cache ?: '${key}'`);\n                        let log = await cachedLog.item;\n                        if (log !== undefined && !log.truncated && log.commits.has(options.ref)) {\n                            Logger.debug(cc, `Cache hit: '${key}'`);\n\n                            // Create a copy of the log starting at the requested commit\n                            let skip = true;\n                            let i = 0;\n                            const authors = new Map<string, GitAuthor>();\n                            const commits = new Map(\n                                Iterables.filterMap<[string, GitLogCommit], [string, GitLogCommit]>(\n                                    log.commits.entries(),\n                                    ([ref, c]) => {\n                                        if (skip) {\n                                            if (ref !== options.ref) return undefined;\n                                            skip = false;\n                                        }\n\n                                        i++;\n                                        if (options.maxCount !== undefined && i > options.maxCount) {\n                                            return undefined;\n                                        }\n\n                                        authors.set(c.author, log.authors.get(c.author)!);\n                                        return [ref, c];\n                                    }\n                                )\n                            );\n\n                            const opts = { ...options };\n                            log = {\n                                ...log,\n                                maxCount: options.maxCount,\n                                count: commits.size,\n                                commits: commits,\n                                authors: authors,\n                                query: (maxCount: number | undefined) =>\n                                    this.getLogForFile(repoPath, fileName, { ...opts, maxCount: maxCount })\n                            };\n\n                            return log;\n                        }\n                    }\n                }\n            }\n\n            Logger.debug(cc, `Cache miss: '${key}'`);\n\n            if (doc.state === undefined) {\n                doc.state = new GitDocumentState(doc.key);\n            }\n        }\n\n        const promise = this.getLogForFileCore(repoPath, fileName, options, doc, key, cc);\n\n        if (doc.state !== undefined && options.range === undefined) {\n            Logger.debug(cc, `Cache add: '${key}'`);\n\n            const value: CachedLog = {\n                item: promise as Promise<GitLog>\n            };\n            doc.state.set<CachedLog>(key, value);\n        }\n\n        return promise;\n    }\n\n    private async getLogForFileCore(\n        repoPath: string | undefined,\n        fileName: string,\n        {\n            ref,\n            range,\n            ...options\n        }: { maxCount?: number; range?: Range; ref?: string; renames?: boolean; reverse?: boolean },\n        document: TrackedDocument<GitDocumentState>,\n        key: string,\n        cc: LogCorrelationContext | undefined\n    ): Promise<GitLog | undefined> {\n        if (!(await this.isTracked(fileName, repoPath, { ref: ref }))) {\n            Logger.log(cc, `Skipping log; '${fileName}' is not tracked`);\n            return emptyPromise as Promise<GitLog>;\n        }\n\n        const [file, root] = Git.splitPath(fileName, repoPath, false);\n\n        try {\n            if (range !== undefined && range.start.line > range.end.line) {\n                range = new Range(range.end, range.start);\n            }\n\n            const maxCount = options.maxCount == null ? Container.config.advanced.maxListItems || 0 : options.maxCount;\n\n            const data = await Git.log__file(root, file, ref, {\n                ...options,\n                maxCount: maxCount,\n                startLine: range === undefined ? undefined : range.start.line + 1,\n                endLine: range === undefined ? undefined : range.end.line + 1\n            });\n            const log = GitLogParser.parse(\n                data,\n                GitCommitType.LogFile,\n                root,\n                file,\n                ref,\n                await this.getCurrentUser(root),\n                maxCount,\n                options.reverse!,\n                range\n            );\n\n            if (log !== undefined) {\n                const opts = { ...options, ref: ref, range: range };\n                log.query = (maxCount: number | undefined) =>\n                    this.getLogForFile(repoPath, fileName, { ...opts, maxCount: maxCount });\n            }\n\n            return log;\n        }\n        catch (ex) {\n            // Trap and cache expected log errors\n            if (document.state !== undefined && range === undefined && !options.reverse) {\n                const msg = ex && ex.toString();\n                Logger.debug(cc, `Cache replace (with empty promise): '${key}'`);\n\n                const value: CachedLog = {\n                    item: emptyPromise as Promise<GitLog>,\n                    errorMessage: msg\n                };\n                document.state.set<CachedLog>(key, value);\n\n                return emptyPromise as Promise<GitLog>;\n            }\n\n            return undefined;\n        }\n    }\n\n    @log()\n    async hasRemotes(repoPath: string | undefined): Promise<boolean> {\n        if (repoPath === undefined) return false;\n\n        const repository = await this.getRepository(repoPath);\n        if (repository === undefined) return false;\n\n        return repository.hasRemotes();\n    }\n\n    @log()\n    async hasTrackingBranch(repoPath: string | undefined): Promise<boolean> {\n        if (repoPath === undefined) return false;\n\n        const repository = await this.getRepository(repoPath);\n        if (repository === undefined) return false;\n\n        return repository.hasTrackingBranch();\n    }\n\n    @log()\n    async getMergeBase(repoPath: string, ref1: string, ref2: string, options: { forkPoint?: boolean } = {}) {\n        const cc = Logger.getCorrelationContext();\n\n        try {\n            const data = await Git.merge_base(repoPath, ref1, ref2, options);\n            if (data === undefined) return undefined;\n\n            return data.split('\\n')[0];\n        }\n        catch (ex) {\n            Logger.error(ex, cc);\n            return undefined;\n        }\n    }\n\n    @log()\n    async getNextDiffUris(\n        repoPath: string,\n        uri: Uri,\n        ref: string | undefined\n    ): Promise<{ current: GitUri; next: GitUri | undefined; deleted?: boolean } | undefined> {\n        // If we have no ref (or staged ref) there is no next commit\n        if (ref === undefined || ref.length === 0) return undefined;\n\n        const fileName = GitUri.relativeTo(uri, repoPath);\n\n        if (Git.isUncommittedStaged(ref)) {\n            return {\n                current: GitUri.fromFile(fileName, repoPath, ref),\n                next: GitUri.fromFile(fileName, repoPath, undefined)\n            };\n        }\n\n        const next = await this.getNextUri(repoPath, uri, ref);\n        if (next === undefined) {\n            const status = await Container.git.getStatusForFile(repoPath, fileName);\n            if (status !== undefined) {\n                // If the file is staged, diff with the staged version\n                if (status.indexStatus !== undefined) {\n                    return {\n                        current: GitUri.fromFile(fileName, repoPath, ref),\n                        next: GitUri.fromFile(fileName, repoPath, GitService.uncommittedStagedSha)\n                    };\n                }\n            }\n\n            return {\n                current: GitUri.fromFile(fileName, repoPath, ref),\n                next: GitUri.fromFile(fileName, repoPath, undefined)\n            };\n        }\n\n        return {\n            current: GitUri.fromFile(fileName, repoPath, ref),\n            next: next\n        };\n    }\n\n    @log()\n    async getNextUri(\n        repoPath: string,\n        uri: Uri,\n        ref?: string,\n        skip: number = 0\n        // editorLine?: number\n    ): Promise<GitUri | undefined> {\n        // If we have no ref (or staged ref) there is no next commit\n        if (ref === undefined || ref.length === 0 || Git.isUncommittedStaged(ref)) return undefined;\n\n        let filters: GitLogDiffFilter[] | undefined;\n        if (ref === GitService.deletedOrMissingSha) {\n            // If we are trying to move next from a deleted or missing ref then get the first commit\n            ref = undefined;\n            filters = ['A'];\n        }\n\n        const fileName = GitUri.relativeTo(uri, repoPath);\n        let data = await Git.log__file(repoPath, fileName, ref, {\n            filters: filters,\n            format: GitLogParser.simpleFormat,\n            maxCount: skip + 1,\n            // startLine: editorLine !== undefined ? editorLine + 1 : undefined,\n            reverse: true\n        });\n        if (data == null || data.length === 0) return undefined;\n\n        const [nextRef, file, status] = GitLogParser.parseSimple(data, skip);\n        // If the file was deleted, check for a possible rename\n        if (status === 'D') {\n            data = await Git.log__file(repoPath, '.', nextRef, {\n                filters: ['R'],\n                format: GitLogParser.simpleFormat,\n                maxCount: 1\n                // startLine: editorLine !== undefined ? editorLine + 1 : undefined\n            });\n            if (data == null || data.length === 0) {\n                return GitUri.fromFile(file || fileName, repoPath, nextRef);\n            }\n\n            const [nextRenamedRef, renamedFile] = GitLogParser.parseSimpleRenamed(data, file || fileName);\n            return GitUri.fromFile(\n                renamedFile || file || fileName,\n                repoPath,\n                nextRenamedRef || nextRef || GitService.deletedOrMissingSha\n            );\n        }\n\n        return GitUri.fromFile(file || fileName, repoPath, nextRef);\n    }\n\n    @log()\n    async getPreviousDiffUris(\n        repoPath: string,\n        uri: Uri,\n        ref: string | undefined,\n        skip: number = 0\n    ): Promise<{ current: GitUri; previous: GitUri | undefined } | undefined> {\n        if (ref === GitService.deletedOrMissingSha) return undefined;\n\n        const fileName = GitUri.relativeTo(uri, repoPath);\n\n        // If we are at the working tree (i.e. no ref), we need to dig deeper to figure out where to go\n        if (ref === undefined || ref.length === 0) {\n            // First, check the file status to see if there is anything staged\n            const status = await Container.git.getStatusForFile(repoPath, fileName);\n            if (status !== undefined) {\n                // If the file is staged with working changes, diff working with staged (index)\n                // If the file is staged without working changes, diff staged with HEAD\n                if (status.indexStatus !== undefined) {\n                    // Backs up to get to HEAD\n                    if (status.workingTreeStatus === undefined) {\n                        skip++;\n                    }\n\n                    if (skip === 0) {\n                        // Diff working with staged\n                        return {\n                            current: GitUri.fromFile(fileName, repoPath, undefined),\n                            previous: GitUri.fromFile(fileName, repoPath, GitService.uncommittedStagedSha)\n                        };\n                    }\n\n                    return {\n                        // Diff staged with HEAD (or prior if more skips)\n                        current: GitUri.fromFile(fileName, repoPath, GitService.uncommittedStagedSha),\n                        previous: await this.getPreviousUri(repoPath, uri, ref, skip - 1)\n                    };\n                }\n                else if (status.workingTreeStatus !== undefined) {\n                    return {\n                        current: GitUri.fromFile(fileName, repoPath, undefined),\n                        previous: await this.getPreviousUri(repoPath, uri, undefined, skip)\n                    };\n                }\n            }\n            else if (skip === 0) {\n                skip++;\n            }\n        }\n        // If we are at the index (staged), diff staged with HEAD\n        else if (GitService.isUncommittedStaged(ref)) {\n            const current =\n                skip === 0\n                    ? GitUri.fromFile(fileName, repoPath, ref)\n                    : (await this.getPreviousUri(repoPath, uri, undefined, skip - 1))!;\n            if (current.sha === GitService.deletedOrMissingSha) return undefined;\n\n            return {\n                current: current,\n                previous: await this.getPreviousUri(repoPath, uri, undefined, skip)\n            };\n        }\n\n        // If we are at a commit, diff commit with previous\n        const current =\n            skip === 0\n                ? GitUri.fromFile(fileName, repoPath, ref)\n                : (await this.getPreviousUri(repoPath, uri, ref, skip - 1))!;\n        if (current.sha === GitService.deletedOrMissingSha) return undefined;\n\n        return {\n            current: current,\n            previous: await this.getPreviousUri(repoPath, uri, ref, skip)\n        };\n    }\n\n    @log()\n    async getPreviousLineDiffUris(\n        repoPath: string,\n        uri: Uri,\n        editorLine: number,\n        ref: string | undefined,\n        skip: number = 0\n    ): Promise<{ current: GitUri; previous: GitUri | undefined } | undefined> {\n        if (ref === GitService.deletedOrMissingSha) return undefined;\n\n        let fileName = GitUri.relativeTo(uri, repoPath);\n\n        // If we are at the working tree (i.e. no ref), we need to dig deeper to figure out where to go\n        if (ref === undefined || ref.length === 0) {\n            // First, check the blame on the current line to see if there are any working/staged changes\n            const gitUri = new GitUri(uri, repoPath);\n\n            const document = await workspace.openTextDocument(uri);\n            const blameLine = document.isDirty\n                ? await this.getBlameForLineContents(gitUri, editorLine, document.getText())\n                : await this.getBlameForLine(gitUri, editorLine);\n            if (blameLine === undefined) return undefined;\n\n            // If line is uncommitted, we need to dig deeper to figure out where to go (because blame can't be trusted)\n            if (blameLine.commit.isUncommitted) {\n                // If the document is dirty (unsaved), use the status to determine where to go\n                if (document.isDirty) {\n                    // Check the file status to see if there is anything staged\n                    const status = await Container.git.getStatusForFile(repoPath, fileName);\n                    if (status !== undefined) {\n                        // If the file is staged, diff working with staged (index)\n                        // If the file is not staged, diff working with HEAD\n                        if (status.indexStatus !== undefined) {\n                            // Diff working with staged\n                            return {\n                                current: GitUri.fromFile(fileName, repoPath, undefined),\n                                previous: GitUri.fromFile(fileName, repoPath, GitService.uncommittedStagedSha)\n                            };\n                        }\n                    }\n\n                    // Diff working with HEAD (or prior if more skips)\n                    return {\n                        current: GitUri.fromFile(fileName, repoPath, undefined),\n                        previous: await this.getPreviousUri(repoPath, uri, undefined, skip, editorLine)\n                    };\n                }\n\n                // First, check if we have a diff in the working tree\n                let hunkLine = await this.getDiffForLine(gitUri!, editorLine, undefined);\n                if (hunkLine === undefined) {\n                    // Next, check if we have a diff in the index (staged)\n                    hunkLine = await this.getDiffForLine(\n                        gitUri!,\n                        editorLine,\n                        undefined,\n                        GitService.uncommittedStagedSha\n                    );\n\n                    if (hunkLine !== undefined) {\n                        ref = GitService.uncommittedStagedSha;\n                    }\n                    else {\n                        skip++;\n                    }\n                }\n            }\n            // If line is committed, diff with line ref with previous\n            else {\n                ref = blameLine.commit.sha;\n                fileName = blameLine.commit.fileName || blameLine.commit.originalFileName || fileName;\n                uri = GitUri.resolveToUri(fileName, repoPath);\n                editorLine = blameLine.line.originalLine - 1;\n            }\n\n            const current =\n                skip === 0\n                    ? GitUri.fromFile(fileName, repoPath, ref)\n                    : (await this.getPreviousUri(repoPath, uri, ref, skip - 1, editorLine))!;\n            if (current.sha === GitService.deletedOrMissingSha) return undefined;\n\n            return {\n                current: current,\n                previous: await this.getPreviousUri(repoPath, uri, ref, skip, editorLine)\n            };\n        }\n        else if (GitService.isUncommittedStaged(ref)) {\n            const current =\n                skip === 0\n                    ? GitUri.fromFile(fileName, repoPath, ref)\n                    : (await this.getPreviousUri(repoPath, uri, undefined, skip - 1, editorLine))!;\n            if (current.sha === GitService.deletedOrMissingSha) return undefined;\n\n            return {\n                current: current,\n                previous: await this.getPreviousUri(repoPath, uri, undefined, skip, editorLine)\n            };\n        }\n\n        const current =\n            skip === 0\n                ? GitUri.fromFile(fileName, repoPath, ref)\n                : (await this.getPreviousUri(repoPath, uri, ref, skip - 1, editorLine))!;\n        if (current.sha === GitService.deletedOrMissingSha) return undefined;\n\n        return {\n            current: current,\n            previous: await this.getPreviousUri(repoPath, uri, ref, skip, editorLine)\n        };\n    }\n\n    @log()\n    async getPreviousUri(\n        repoPath: string,\n        uri: Uri,\n        ref?: string,\n        skip: number = 0,\n        editorLine?: number\n    ): Promise<GitUri | undefined> {\n        if (ref === GitService.deletedOrMissingSha) return undefined;\n\n        const cc = Logger.getCorrelationContext();\n\n        if (ref === GitService.uncommittedSha) {\n            ref = undefined;\n        }\n\n        if (ref !== undefined) {\n            skip++;\n        }\n\n        const fileName = GitUri.relativeTo(uri, repoPath);\n        // TODO: Add caching\n        let data;\n        try {\n            data = await Git.log__file(repoPath, fileName, ref, {\n                format: GitLogParser.simpleFormat,\n                maxCount: skip + 1,\n                startLine: editorLine !== undefined ? editorLine + 1 : undefined\n            });\n        }\n        catch (ex) {\n            // If the line count is invalid just fallback to the most recent commit\n            if (\n                (ref === undefined || GitService.isUncommittedStaged(ref)) &&\n                GitErrors.invalidLineCount.test(ex.message)\n            ) {\n                if (ref === undefined) {\n                    const status = await Container.git.getStatusForFile(repoPath, fileName);\n                    if (status !== undefined && status.indexStatus !== undefined) {\n                        return GitUri.fromFile(fileName, repoPath, GitService.uncommittedStagedSha);\n                    }\n                }\n\n                ref = await Git.log__file_recent(repoPath, fileName);\n                return GitUri.fromFile(fileName, repoPath, ref || GitService.deletedOrMissingSha);\n            }\n\n            Logger.error(ex, cc);\n            throw ex;\n        }\n        if (data == null || data.length === 0) return undefined;\n\n        const [previousRef, file] = GitLogParser.parseSimple(data, skip, editorLine !== undefined ? ref : undefined);\n        // If the previous ref matches the ref we asked for assume we are at the end of the history\n        if (ref !== undefined && ref === previousRef) return undefined;\n\n        return GitUri.fromFile(file || fileName, repoPath, previousRef || GitService.deletedOrMissingSha);\n    }\n\n    @log()\n    async getIncomingActivity(\n        repoPath: string,\n        { maxCount, ...options }: { all?: boolean; branch?: string; maxCount?: number; since?: string } = {}\n    ): Promise<GitReflog | undefined> {\n        const cc = Logger.getCorrelationContext();\n\n        try {\n            const data = await Git.reflog(repoPath, options);\n            if (data === undefined) return undefined;\n\n            const reflog = GitReflogParser.parse(\n                data,\n                repoPath,\n                reflogCommands,\n                maxCount == null ? Container.config.advanced.maxListItems || 0 : maxCount\n            );\n\n            return reflog;\n        }\n        catch (ex) {\n            Logger.error(ex, cc);\n            return undefined;\n        }\n    }\n\n    @log()\n    async getRemotes(repoPath: string | undefined, options: { includeAll?: boolean } = {}): Promise<GitRemote[]> {\n        if (repoPath === undefined) return [];\n\n        const repository = await this.getRepository(repoPath);\n        const remotes = repository !== undefined ? repository.getRemotes() : this.getRemotesCore(repoPath);\n\n        if (options.includeAll) return remotes;\n\n        return (await remotes).filter(r => r.provider !== undefined);\n    }\n\n    async getRemotesCore(repoPath: string | undefined, providers?: RemoteProviders): Promise<GitRemote[]> {\n        if (repoPath === undefined) return [];\n\n        providers =\n            providers ||\n            RemoteProviderFactory.loadProviders(\n                configuration.get<RemotesConfig[] | null | undefined>(configuration.name('remotes').value, null)\n            );\n\n        try {\n            const data = await Git.remote(repoPath);\n            return GitRemoteParser.parse(data, repoPath, RemoteProviderFactory.factory(providers)) || [];\n        }\n        catch (ex) {\n            Logger.error(ex);\n            return [];\n        }\n    }\n\n    async getRepoPath(filePath: string, options?: { ref?: string }): Promise<string | undefined>;\n    async getRepoPath(uri: Uri | undefined, options?: { ref?: string }): Promise<string | undefined>;\n    @log<GitService['getRepoPath']>({\n        exit: path => `returned ${path}`\n    })\n    async getRepoPath(\n        filePathOrUri: string | Uri | undefined,\n        options: { ref?: string } = {}\n    ): Promise<string | undefined> {\n        if (filePathOrUri == null) return this.getHighlanderRepoPath();\n        if (filePathOrUri instanceof GitUri) return filePathOrUri.repoPath;\n\n        const cc = Logger.getCorrelationContext();\n\n        // Don't save the tracking info to the cache, because we could be looking in the wrong place (e.g. looking in the root when the file is in a submodule)\n        let repo = await this.getRepository(filePathOrUri, { ...options, skipCacheUpdate: true });\n        if (repo !== undefined) return repo.path;\n\n        const rp = await this.getRepoPathCore(\n            typeof filePathOrUri === 'string' ? filePathOrUri : filePathOrUri.fsPath,\n            false\n        );\n        if (rp === undefined) return undefined;\n\n        // Recheck this._repositoryTree.get(rp) to make sure we haven't already tried adding this due to awaits\n        if (this._repositoryTree.get(rp) !== undefined) return rp;\n\n        const isVslsScheme =\n            typeof filePathOrUri === 'string' ? undefined : filePathOrUri.scheme === DocumentSchemes.Vsls;\n\n        // If this new repo is inside one of our known roots and we we don't already know about, add it\n        const root = this.findRepositoryForPath(this._repositoryTree, rp, isVslsScheme);\n\n        let folder;\n        if (root !== undefined) {\n            // Not sure why I added this for vsls (I can't see a reason for it anymore), but if it is added it will break submodules\n            // rp = root.path;\n            folder = root.folder;\n        }\n        else {\n            folder = workspace.getWorkspaceFolder(GitUri.file(rp, isVslsScheme));\n            if (folder === undefined) {\n                const parts = rp.split(slash);\n                folder = {\n                    uri: GitUri.file(rp, isVslsScheme),\n                    name: parts[parts.length - 1],\n                    index: this._repositoryTree.count()\n                };\n            }\n        }\n\n        Logger.log(cc, `Repository found in '${rp}'`);\n        repo = new Repository(folder, rp, false, this.onAnyRepositoryChanged.bind(this), this._suspended);\n        this._repositoryTree.set(rp, repo);\n\n        // Send a notification that the repositories changed\n        setImmediate(async () => {\n            await this.updateContext(this._repositoryTree);\n\n            this.fireRepositoriesChanged();\n        });\n\n        return rp;\n    }\n\n    private async getRepoPathCore(filePath: string, isDirectory: boolean): Promise<string | undefined> {\n        try {\n            return await Git.rev_parse__show_toplevel(isDirectory ? filePath : paths.dirname(filePath));\n        }\n        catch (ex) {\n            Logger.error(ex);\n            return undefined;\n        }\n    }\n\n    @log()\n    async getRepoPathOrActive(uri: Uri | undefined, editor: TextEditor | undefined) {\n        const repoPath = await this.getRepoPath(uri);\n        if (repoPath) return repoPath;\n\n        return this.getActiveRepoPath(editor);\n    }\n\n    @log()\n    async getRepositories(predicate?: (repo: Repository) => boolean): Promise<Iterable<Repository>> {\n        const repositoryTree = await this.getRepositoryTree();\n\n        const values = repositoryTree.values();\n        return predicate !== undefined ? Iterables.filter(values, predicate) : values;\n    }\n\n    @log()\n    async getOrderedRepositories(): Promise<Repository[]> {\n        const repositories = [...(await this.getRepositories())];\n        if (repositories.length === 0) return repositories;\n\n        return repositories\n            .filter(r => !r.closed)\n            .sort((a, b) => (a.starred ? -1 : 1) - (b.starred ? -1 : 1) || a.index - b.index);\n    }\n\n    private async getRepositoryTree(): Promise<TernarySearchTree<Repository>> {\n        if (this._repositoriesLoadingPromise !== undefined) {\n            await this._repositoriesLoadingPromise;\n            this._repositoriesLoadingPromise = undefined;\n        }\n\n        return this._repositoryTree;\n    }\n\n    async getRepository(\n        repoPath: string,\n        options?: { ref?: string; skipCacheUpdate?: boolean }\n    ): Promise<Repository | undefined>;\n    async getRepository(\n        uri: Uri,\n        options?: { ref?: string; skipCacheUpdate?: boolean }\n    ): Promise<Repository | undefined>;\n    async getRepository(\n        repoPathOrUri: string | Uri,\n        options?: { ref?: string; skipCacheUpdate?: boolean }\n    ): Promise<Repository | undefined>;\n    @log<GitService['getRepository']>({\n        exit: repo => `returned ${repo !== undefined ? `${repo.path}` : 'undefined'}`\n    })\n    async getRepository(\n        repoPathOrUri: string | Uri,\n        options: { ref?: string; skipCacheUpdate?: boolean } = {}\n    ): Promise<Repository | undefined> {\n        const repositoryTree = await this.getRepositoryTree();\n\n        let isVslsScheme;\n\n        let path: string;\n        if (typeof repoPathOrUri === 'string') {\n            const repo = repositoryTree.get(repoPathOrUri);\n            if (repo !== undefined) return repo;\n\n            path = repoPathOrUri;\n            isVslsScheme = undefined;\n        }\n        else {\n            if (repoPathOrUri instanceof GitUri) {\n                if (repoPathOrUri.repoPath) {\n                    const repo = repositoryTree.get(repoPathOrUri.repoPath);\n                    if (repo !== undefined) return repo;\n                }\n\n                path = repoPathOrUri.fsPath;\n            }\n            else {\n                path = repoPathOrUri.fsPath;\n            }\n\n            isVslsScheme = repoPathOrUri.scheme === DocumentSchemes.Vsls;\n        }\n\n        const repo = this.findRepositoryForPath(repositoryTree, path, isVslsScheme);\n        if (repo === undefined) return undefined;\n\n        // Make sure the file is tracked in this repo before returning -- it could be from a submodule\n        if (!(await this.isTracked(path, repo.path, options))) return undefined;\n        return repo;\n    }\n\n    private findRepositoryForPath(\n        repositoryTree: TernarySearchTree<Repository>,\n        path: string,\n        isVslsScheme: boolean | undefined\n    ): Repository | undefined {\n        let repo = repositoryTree.findSubstr(path);\n        // If we can't find the repo and we are a guest, check if we are a \"root\" workspace\n        if (repo === undefined && isVslsScheme !== false && Container.vsls.isMaybeGuest) {\n            if (!vslsUriPrefixRegex.test(path)) {\n                path = Strings.normalizePath(path);\n                const vslsPath = `/~0${path[0] === slash ? path : `/${path}`}`;\n                repo = repositoryTree.findSubstr(vslsPath);\n            }\n        }\n        return repo;\n    }\n\n    async getRepositoryCount(): Promise<number> {\n        const repositoryTree = await this.getRepositoryTree();\n        return repositoryTree.count();\n    }\n\n    @log()\n    async getStashList(repoPath: string | undefined): Promise<GitStash | undefined> {\n        if (repoPath === undefined) return undefined;\n\n        const data = await Git.stash__list(repoPath, {\n            similarityThreshold: Container.config.advanced.similarityThreshold\n        });\n        const stash = GitStashParser.parse(data, repoPath);\n        return stash;\n    }\n\n    @log()\n    async getStatusForFile(repoPath: string, fileName: string): Promise<GitStatusFile | undefined> {\n        const porcelainVersion = Git.validateVersion(2, 11) ? 2 : 1;\n\n        const data = await Git.status__file(repoPath, fileName, porcelainVersion, {\n            similarityThreshold: Container.config.advanced.similarityThreshold\n        });\n        const status = GitStatusParser.parse(data, repoPath, porcelainVersion);\n        if (status === undefined || !status.files.length) return undefined;\n\n        return status.files[0];\n    }\n\n    @log()\n    async getStatusForRepo(repoPath: string | undefined): Promise<GitStatus | undefined> {\n        if (repoPath === undefined) return undefined;\n\n        const porcelainVersion = Git.validateVersion(2, 11) ? 2 : 1;\n\n        const data = await Git.status(repoPath, porcelainVersion, {\n            similarityThreshold: Container.config.advanced.similarityThreshold\n        });\n        const status = GitStatusParser.parse(data, repoPath, porcelainVersion);\n        return status;\n    }\n\n    @log()\n    async getTags(repoPath: string | undefined, options: { includeRefs?: boolean } = {}): Promise<GitTag[]> {\n        if (repoPath === undefined) return [];\n\n        let tags;\n        if (options.includeRefs) {\n            tags = this._tagsWithRefsCache.get(repoPath);\n            if (tags !== undefined) return tags;\n\n            const data = await Git.show_ref__tags(repoPath);\n            tags = GitTagParser.parseWithRef(data, repoPath) || [];\n\n            const repo = await this.getRepository(repoPath);\n            if (repo !== undefined && repo.supportsChangeEvents) {\n                this._tagsWithRefsCache.set(repoPath, tags);\n            }\n\n            return tags;\n        }\n\n        tags = this._tagsCache.get(repoPath);\n        if (tags !== undefined) return tags;\n\n        const data = await Git.tag(repoPath);\n        tags = GitTagParser.parse(data, repoPath) || [];\n\n        const repo = await this.getRepository(repoPath);\n        if (repo !== undefined && repo.supportsChangeEvents) {\n            this._tagsCache.set(repoPath, tags);\n        }\n\n        return tags;\n    }\n\n    @log()\n    async getTreeFileForRevision(repoPath: string, fileName: string, ref: string): Promise<GitTree | undefined> {\n        if (repoPath === undefined || fileName == null || fileName.length === 0) return undefined;\n\n        const data = await Git.ls_tree(repoPath, ref, { fileName: fileName });\n        const trees = GitTreeParser.parse(data);\n        return trees === undefined || trees.length === 0 ? undefined : trees[0];\n    }\n\n    @log()\n    async getTreeForRevision(repoPath: string, ref: string): Promise<GitTree[]> {\n        if (repoPath === undefined) return [];\n\n        const data = await Git.ls_tree(repoPath, ref);\n        return GitTreeParser.parse(data) || [];\n    }\n\n    @log()\n    getVersionedFileBuffer(repoPath: string, fileName: string, ref: string) {\n        return Git.show<Buffer>(repoPath, fileName, ref, { encoding: 'buffer' });\n    }\n\n    @log()\n    async getVersionedUri(\n        repoPath: string | undefined,\n        fileName: string,\n        ref: string | undefined\n    ): Promise<Uri | undefined> {\n        if (ref === GitService.deletedOrMissingSha) return undefined;\n\n        if (ref == null || ref.length === 0 || (Git.isUncommitted(ref) && !Git.isUncommittedStaged(ref))) {\n            // Make sure the file exists in the repo\n            let data = await Git.ls_files(repoPath!, fileName);\n            if (data !== undefined) return GitUri.file(fileName);\n\n            // Check if the file exists untracked\n            data = await Git.ls_files(repoPath!, fileName, { untracked: true });\n            if (data !== undefined) return GitUri.file(fileName);\n\n            return undefined;\n        }\n\n        if (Git.isUncommittedStaged(ref)) {\n            return GitUri.git(fileName, repoPath);\n        }\n\n        return GitUri.toRevisionUri(ref, fileName, repoPath!);\n    }\n\n    @log()\n    async getWorkingUri(repoPath: string, uri: Uri) {\n        let fileName = GitUri.relativeTo(uri, repoPath);\n\n        let data;\n        let ref;\n        do {\n            data = await Git.ls_files(repoPath, fileName);\n            if (data !== undefined) {\n                return GitUri.resolveToUri(data, repoPath);\n            }\n\n            // TODO: Add caching\n            // Get the most recent commit for this file name\n            ref = await Git.log__file_recent(repoPath, fileName, {\n                similarityThreshold: Container.config.advanced.similarityThreshold\n            });\n            if (ref === undefined) return undefined;\n\n            // Now check if that commit had any renames\n            data = await Git.log__file(repoPath, '.', ref, {\n                filters: ['R'],\n                format: GitLogParser.simpleFormat,\n                maxCount: 1\n            });\n            if (data == null || data.length === 0) {\n                return GitUri.resolveToUri(fileName, repoPath);\n            }\n\n            const [renamedRef, renamedFile] = GitLogParser.parseSimpleRenamed(data, fileName);\n            if (renamedRef === undefined || renamedFile === undefined) {\n                return GitUri.resolveToUri(fileName, repoPath);\n            }\n\n            ref = renamedRef;\n            fileName = renamedFile;\n        } while (true);\n    }\n\n    isTrackable(scheme: string): boolean;\n    isTrackable(uri: Uri): boolean;\n    isTrackable(schemeOruri: string | Uri): boolean {\n        const scheme = typeof schemeOruri === 'string' ? schemeOruri : schemeOruri.scheme;\n        return (\n            scheme === DocumentSchemes.File ||\n            scheme === DocumentSchemes.Vsls ||\n            scheme === DocumentSchemes.Git ||\n            scheme === DocumentSchemes.GitLens\n        );\n    }\n\n    async isTracked(\n        fileName: string,\n        repoPath?: string,\n        options?: { ref?: string; skipCacheUpdate?: boolean }\n    ): Promise<boolean>;\n    async isTracked(uri: GitUri): Promise<boolean>;\n    @log<GitService['isTracked']>({\n        exit: tracked => `returned ${tracked}`,\n        singleLine: true\n    })\n    async isTracked(\n        fileNameOrUri: string | GitUri,\n        repoPath?: string,\n        options: { ref?: string; skipCacheUpdate?: boolean } = {}\n    ): Promise<boolean> {\n        if (options.ref === GitService.deletedOrMissingSha) return false;\n\n        let ref = options.ref;\n        let cacheKey: string;\n        let fileName: string;\n        if (typeof fileNameOrUri === 'string') {\n            [fileName, repoPath] = Git.splitPath(fileNameOrUri, repoPath);\n            cacheKey = GitUri.toKey(fileNameOrUri);\n        }\n        else {\n            if (!this.isTrackable(fileNameOrUri)) return false;\n\n            fileName = fileNameOrUri.fsPath;\n            repoPath = fileNameOrUri.repoPath;\n            ref = fileNameOrUri.sha;\n            cacheKey = GitUri.toKey(fileName);\n        }\n\n        if (ref !== undefined) {\n            cacheKey += `:${ref}`;\n        }\n\n        let tracked = this._trackedCache.get(cacheKey);\n        if (tracked !== undefined) {\n            tracked = await tracked;\n\n            return tracked;\n        }\n\n        tracked = this.isTrackedCore(fileName, repoPath === undefined ? emptyStr : repoPath, ref);\n        if (options.skipCacheUpdate) {\n            tracked = await tracked;\n\n            return tracked;\n        }\n\n        this._trackedCache.set(cacheKey, tracked);\n        tracked = await tracked;\n        this._trackedCache.set(cacheKey, tracked);\n\n        return tracked;\n    }\n\n    private async isTrackedCore(fileName: string, repoPath: string, ref?: string) {\n        if (ref === GitService.deletedOrMissingSha) return false;\n\n        try {\n            // Even if we have a ref, check first to see if the file exists (that way the cache will be better reused)\n            let tracked = Boolean(await Git.ls_files(repoPath === undefined ? emptyStr : repoPath, fileName));\n            if (!tracked && ref !== undefined) {\n                tracked = Boolean(\n                    await Git.ls_files(repoPath === undefined ? emptyStr : repoPath, fileName, { ref: ref })\n                );\n                // If we still haven't found this file, make sure it wasn't deleted in that ref (i.e. check the previous)\n                if (!tracked) {\n                    tracked = Boolean(\n                        await Git.ls_files(repoPath === undefined ? emptyStr : repoPath, fileName, {\n                            ref: `${ref}^`\n                        })\n                    );\n                }\n            }\n            return tracked;\n        }\n        catch (ex) {\n            Logger.error(ex);\n            return false;\n        }\n    }\n\n    @log()\n    async getDiffTool(repoPath?: string) {\n        return (\n            (await Git.config__get('diff.guitool', repoPath, { local: true })) ||\n            Git.config__get('diff.tool', repoPath, { local: true })\n        );\n    }\n\n    @log()\n    async openDiffTool(\n        repoPath: string,\n        uri: Uri,\n        options: { ref1?: string; ref2?: string; staged?: boolean; tool?: string } = {}\n    ) {\n        if (!options.tool) {\n            const cc = Logger.getCorrelationContext();\n\n            options.tool = await this.getDiffTool(repoPath);\n            if (options.tool === undefined) throw new Error('No diff tool found');\n\n            Logger.log(cc, `Using tool=${options.tool}`);\n        }\n\n        const { tool, ...opts } = options;\n        return Git.difftool(repoPath, uri.fsPath, tool, opts);\n    }\n\n    @log()\n    async openDirectoryDiff(repoPath: string, ref1: string, ref2?: string, tool?: string) {\n        if (!tool) {\n            const cc = Logger.getCorrelationContext();\n\n            tool = await this.getDiffTool(repoPath);\n            if (tool === undefined) throw new Error('No diff tool found');\n\n            Logger.log(cc, `Using tool=${tool}`);\n        }\n\n        return Git.difftool__dir_diff(repoPath, tool, ref1, ref2);\n    }\n\n    @log()\n    async resolveReference(repoPath: string, ref: string, uri?: Uri) {\n        if (ref == null || ref.length === 0 || ref === GitService.deletedOrMissingSha) return ref;\n\n        if (uri == null) {\n            if (Git.isSha(ref) || !Git.isShaLike(ref) || ref.endsWith('^3')) return ref;\n\n            return (await Git.rev_parse(repoPath, ref)) || ref;\n        }\n\n        const ensuredRef = await Git.cat_file__resolve(\n            repoPath,\n            Strings.normalizePath(paths.relative(repoPath, uri.fsPath)),\n            ref\n        );\n        if (ensuredRef === undefined) return ref;\n\n        return ensuredRef;\n    }\n\n    @log()\n    validateReference(repoPath: string, ref: string) {\n        return Git.cat_file__validate(repoPath, ref);\n    }\n\n    stageFile(repoPath: string, fileName: string): Promise<string>;\n    stageFile(repoPath: string, uri: Uri): Promise<string>;\n    @log()\n    stageFile(repoPath: string, fileNameOrUri: string | Uri): Promise<string> {\n        return Git.add(\n            repoPath,\n            typeof fileNameOrUri === 'string' ? fileNameOrUri : Git.splitPath(fileNameOrUri.fsPath, repoPath)[0]\n        );\n    }\n\n    stageDirectory(repoPath: string, directory: string): Promise<string>;\n    stageDirectory(repoPath: string, uri: Uri): Promise<string>;\n    @log()\n    stageDirectory(repoPath: string, directoryOrUri: string | Uri): Promise<string> {\n        return Git.add(\n            repoPath,\n            typeof directoryOrUri === 'string' ? directoryOrUri : Git.splitPath(directoryOrUri.fsPath, repoPath)[0]\n        );\n    }\n\n    unStageFile(repoPath: string, fileName: string): Promise<string>;\n    unStageFile(repoPath: string, uri: Uri): Promise<string>;\n    @log()\n    unStageFile(repoPath: string, fileNameOrUri: string | Uri): Promise<string> {\n        return Git.reset(\n            repoPath,\n            typeof fileNameOrUri === 'string' ? fileNameOrUri : Git.splitPath(fileNameOrUri.fsPath, repoPath)[0]\n        );\n    }\n\n    unStageDirectory(repoPath: string, directory: string): Promise<string>;\n    unStageDirectory(repoPath: string, uri: Uri): Promise<string>;\n    @log()\n    unStageDirectory(repoPath: string, directoryOrUri: string | Uri): Promise<string> {\n        return Git.reset(\n            repoPath,\n            typeof directoryOrUri === 'string' ? directoryOrUri : Git.splitPath(directoryOrUri.fsPath, repoPath)[0]\n        );\n    }\n\n    @log()\n    stashApply(repoPath: string, stashName: string, deleteAfter: boolean = false) {\n        return Git.stash__apply(repoPath, stashName, deleteAfter);\n    }\n\n    @log()\n    stashDelete(repoPath: string, stashName: string) {\n        return Git.stash__delete(repoPath, stashName);\n    }\n\n    @log()\n    stashSave(repoPath: string, message?: string, uris?: Uri[]) {\n        if (uris === undefined) return Git.stash__save(repoPath, message);\n\n        GitService.ensureGitVersion('2.13.2', 'Stashing individual files');\n\n        const pathspecs = uris.map(u => Git.splitPath(u.fsPath, repoPath)[0]);\n        return Git.stash__push(repoPath, pathspecs, message);\n    }\n\n    static compareGitVersion(version: string) {\n        return Versions.compare(Versions.fromString(this.getGitVersion()), Versions.fromString(version));\n    }\n\n    static ensureGitVersion(version: string, feature: string): void {\n        const gitVersion = this.getGitVersion();\n        if (Versions.compare(Versions.fromString(gitVersion), Versions.fromString(version)) === -1) {\n            throw new Error(\n                `${feature} requires a newer version of Git (>= ${version}) than is currently installed (${gitVersion}). Please install a more recent version of Git to use this GitLens feature.`\n            );\n        }\n    }\n\n    @log()\n    static async getBuiltInGitApi(): Promise<BuiltInGitApi | undefined> {\n        try {\n            const extension = extensions.getExtension('vscode.git') as Extension<GitExtension>;\n            if (extension !== undefined) {\n                const gitExtension = extension.isActive ? extension.exports : await extension.activate();\n\n                return gitExtension.getAPI(1);\n            }\n        }\n        catch {}\n\n        return undefined;\n    }\n\n    static getEncoding(repoPath: string, fileName: string): string;\n    static getEncoding(uri: Uri): string;\n    static getEncoding(repoPathOrUri: string | Uri, fileName?: string): string {\n        const uri = typeof repoPathOrUri === 'string' ? GitUri.resolveToUri(fileName!, repoPathOrUri) : repoPathOrUri;\n        return Git.getEncoding(workspace.getConfiguration('files', uri).get<string>('encoding'));\n    }\n\n    static deletedOrMissingSha = Git.deletedOrMissingSha;\n    static getGitPath = Git.getGitPath;\n    static getGitVersion = Git.getGitVersion;\n    static isSha = Git.isSha;\n    static isShaLike = Git.isShaLike;\n    static isShaParent = Git.isShaParent;\n    static isUncommitted = Git.isUncommitted;\n    static isUncommittedStaged = Git.isUncommittedStaged;\n    static uncommittedSha = Git.uncommittedSha;\n    static uncommittedStagedSha = Git.uncommittedStagedSha;\n\n    static shortenSha(\n        ref: string | undefined,\n        {\n            deletedOrMissing = '(deleted)',\n            ...strings\n        }: { deletedOrMissing?: string; uncommitted?: string; uncommittedStaged?: string; working?: string } = {}\n    ) {\n        if (ref === GitService.deletedOrMissingSha) return deletedOrMissing;\n\n        return Git.shortenSha(ref, strings);\n    }\n}\n","'use strict';\n\nconst cssColorRegex = /^(?:(#?)([0-9a-f]{3}|[0-9a-f]{6})|((?:rgb|hsl)a?)\\((-?\\d+%?)[,\\s]+(-?\\d+%?)[,\\s]+(-?\\d+%?)[,\\s]*(-?[\\d.]+%?)?\\))$/i;\n\nfunction adjustLight(color: number, amount: number) {\n    const cc = color + amount;\n    const c = amount < 0 ? (cc < 0 ? 0 : cc) : cc > 255 ? 255 : cc;\n\n    return Math.round(c);\n}\n\nexport function darken(color: string, percentage: number) {\n    return lighten(color, -percentage);\n}\n\nexport function lighten(color: string, percentage: number) {\n    const rgba = toRgba(color);\n    if (rgba == null) return color;\n\n    const [r, g, b, a] = rgba;\n    const amount = (255 * percentage) / 100;\n    return `rgba(${adjustLight(r, amount)}, ${adjustLight(g, amount)}, ${adjustLight(b, amount)}, ${a})`;\n}\n\nexport function opacity(color: string, percentage: number) {\n    const rgba = toRgba(color);\n    if (rgba == null) return color;\n\n    const [r, g, b, a] = rgba;\n    return `rgba(${r}, ${g}, ${b}, ${a * (percentage / 100)})`;\n}\n\nexport function toRgba(color: string) {\n    color = color.trim();\n\n    const result = cssColorRegex.exec(color);\n    if (result == null) return null;\n\n    if (result[1] === '#') {\n        const hex = result[2];\n        switch (hex.length) {\n            case 3:\n                return [parseInt(hex[0] + hex[0], 16), parseInt(hex[1] + hex[1], 16), parseInt(hex[2] + hex[2], 16), 1];\n            case 6:\n                return [\n                    parseInt(hex.substring(0, 2), 16),\n                    parseInt(hex.substring(2, 4), 16),\n                    parseInt(hex.substring(4, 6), 16),\n                    1\n                ];\n        }\n\n        return null;\n    }\n\n    switch (result[3]) {\n        case 'rgb':\n            return [parseInt(result[4], 10), parseInt(result[5], 10), parseInt(result[6], 10), 1];\n        case 'rgba':\n            return [parseInt(result[4], 10), parseInt(result[5], 10), parseInt(result[6], 10), parseFloat(result[7])];\n        default:\n            return null;\n    }\n}\n","import {\n    DecorationInstanceRenderOptions,\n    DecorationOptions,\n    MarkdownString,\n    ThemableDecorationAttachmentRenderOptions,\n    ThemableDecorationRenderOptions,\n    ThemeColor,\n    workspace\n} from 'vscode';\nimport { DiffWithCommand, ShowQuickCommitDetailsCommand } from '../commands';\nimport { FileAnnotationType } from '../configuration';\nimport { GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport {\n    CommitFormatOptions,\n    CommitFormatter,\n    GitBlameCommit,\n    GitCommit,\n    GitDiffHunkLine,\n    GitLogCommit,\n    GitService,\n    GitUri\n} from '../git/gitService';\nimport { Objects, Strings } from '../system';\nimport { toRgba } from '../webviews/apps/shared/colors';\n\nexport interface ComputedHeatmap {\n    cold: boolean;\n    colors: { hot: string; cold: string };\n    median: number;\n    newest: number;\n    oldest: number;\n    computeAge(date: Date): number;\n}\n\ninterface HeatmapConfig {\n    enabled: boolean;\n    location?: 'left' | 'right';\n}\n\ninterface RenderOptions\n    extends DecorationInstanceRenderOptions,\n        ThemableDecorationRenderOptions,\n        ThemableDecorationAttachmentRenderOptions {\n    height?: string;\n    uncommittedColor?: string | ThemeColor;\n}\n\nconst defaultHeatmapHotColor = '#f66a0a';\nconst defaultHeatmapColdColor = '#0a60f6';\n\nlet computedHeatmapColor: {\n    color: string;\n    rgb: string;\n};\n\nexport class Annotations {\n    static applyHeatmap(decoration: Partial<DecorationOptions>, date: Date, heatmap: ComputedHeatmap) {\n        const color = this.getHeatmapColor(date, heatmap);\n        decoration.renderOptions!.before!.borderColor = color;\n    }\n\n    static async changesHoverMessage(\n        commit: GitBlameCommit,\n        uri: GitUri,\n        editorLine: number\n    ): Promise<MarkdownString | undefined>;\n    static async changesHoverMessage(\n        commit: GitLogCommit,\n        uri: GitUri,\n        editorLine: number,\n        hunkLine: GitDiffHunkLine\n    ): Promise<MarkdownString | undefined>;\n    static async changesHoverMessage(\n        commit: GitBlameCommit | GitLogCommit,\n        uri: GitUri,\n        editorLine: number,\n        hunkLine?: GitDiffHunkLine\n    ): Promise<MarkdownString | undefined> {\n        const documentRef = uri.sha;\n        if (commit instanceof GitBlameCommit) {\n            // TODO: Figure out how to optimize this\n            let ref;\n            if (commit.isUncommitted) {\n                if (GitService.isUncommittedStaged(documentRef)) {\n                    ref = documentRef;\n                }\n            }\n            else {\n                ref = commit.sha;\n            }\n\n            const line = editorLine + 1;\n            const commitLine = commit.lines.find(l => l.line === line) || commit.lines[0];\n\n            let originalFileName = commit.originalFileName;\n            if (originalFileName === undefined) {\n                if (uri.fsPath !== commit.uri.fsPath) {\n                    originalFileName = commit.fileName;\n                }\n            }\n\n            editorLine = commitLine.originalLine - 1;\n            hunkLine = await Container.git.getDiffForLine(uri, editorLine, ref, undefined, originalFileName);\n\n            // If we didn't find a diff & ref is undefined (meaning uncommitted), check for a staged diff\n            if (hunkLine === undefined && ref === undefined) {\n                hunkLine = await Container.git.getDiffForLine(\n                    uri,\n                    editorLine,\n                    undefined,\n                    GitService.uncommittedStagedSha,\n                    originalFileName\n                );\n            }\n        }\n\n        if (hunkLine === undefined || commit.previousSha === undefined) return undefined;\n\n        const diff = this.getDiffFromHunkLine(hunkLine);\n\n        let message;\n        let previous;\n        let current;\n        if (commit.isUncommitted) {\n            const diffUris = await commit.getPreviousLineDiffUris(uri, editorLine, documentRef);\n            if (diffUris === undefined || diffUris.previous === undefined) {\n                return undefined;\n            }\n\n            message = `[\\`Changes\\`](${DiffWithCommand.getMarkdownCommandArgs({\n                lhs: {\n                    sha: diffUris.previous.sha || '',\n                    uri: diffUris.previous.documentUri()\n                },\n                rhs: {\n                    sha: diffUris.current.sha || '',\n                    uri: diffUris.current.documentUri()\n                },\n                repoPath: commit.repoPath,\n                line: editorLine\n            })} \"Open Changes\")`;\n\n            previous =\n                diffUris.previous.sha === undefined || diffUris.previous.isUncommitted\n                    ? `_${GitService.shortenSha(diffUris.previous.sha, {\n                          working: 'Working Tree'\n                      })}_`\n                    : `[\\`${GitService.shortenSha(\n                          diffUris.previous.sha || ''\n                      )}\\`](${ShowQuickCommitDetailsCommand.getMarkdownCommandArgs(\n                          diffUris.previous.sha || ''\n                      )} \"Show Commit Details\")`;\n\n            current =\n                diffUris.current.sha === undefined || diffUris.current.isUncommitted\n                    ? `_${GitService.shortenSha(diffUris.current.sha, {\n                          working: 'Working Tree'\n                      })}_`\n                    : `[\\`${GitService.shortenSha(\n                          diffUris.current.sha || ''\n                      )}\\`](${ShowQuickCommitDetailsCommand.getMarkdownCommandArgs(\n                          diffUris.current.sha || ''\n                      )} \"Show Commit Details\")`;\n        }\n        else {\n            message = `[\\`Changes\\`](${DiffWithCommand.getMarkdownCommandArgs(commit, editorLine)} \"Open Changes\")`;\n\n            previous = `[\\`${commit.previousShortSha}\\`](${ShowQuickCommitDetailsCommand.getMarkdownCommandArgs(\n                commit.previousSha!\n            )} \"Show Commit Details\")`;\n\n            current = `[\\`${commit.shortSha}\\`](${ShowQuickCommitDetailsCommand.getMarkdownCommandArgs(\n                commit.sha\n            )} \"Show Commit Details\")`;\n        }\n\n        message += ` &nbsp; ${GlyphChars.Dash} &nbsp; ${previous} &nbsp;${\n            GlyphChars.ArrowLeftRightLong\n        }&nbsp; ${current}\\n${diff}`;\n\n        const markdown = new MarkdownString(message);\n        markdown.isTrusted = true;\n        return markdown;\n    }\n\n    static async detailsHoverMessage(\n        commit: GitCommit,\n        uri: GitUri,\n        editorLine: number,\n        dateFormat: string | null,\n        annotationType: FileAnnotationType | undefined\n    ): Promise<MarkdownString> {\n        if (dateFormat === null) {\n            dateFormat = 'MMMM Do, YYYY h:mma';\n        }\n\n        const [presence, previousLineDiffUris, remotes] = await Promise.all([\n            Container.vsls.getContactPresence(commit.email),\n            commit.isUncommitted ? commit.getPreviousLineDiffUris(uri, editorLine, uri.sha) : undefined,\n            Container.git.getRemotes(commit.repoPath)\n        ]);\n\n        const markdown = new MarkdownString(\n            CommitFormatter.fromTemplate(Container.config.hovers.detailsMarkdownFormat, commit, {\n                annotationType: annotationType,\n                dateFormat: dateFormat,\n                line: editorLine,\n                markdown: true,\n                presence: presence,\n                previousLineDiffUris: previousLineDiffUris,\n                remotes: remotes\n            })\n        );\n        markdown.isTrusted = true;\n        return markdown;\n    }\n\n    static gutter(\n        commit: GitCommit,\n        format: string,\n        dateFormatOrFormatOptions: string | null | CommitFormatOptions,\n        renderOptions: RenderOptions\n    ): Partial<DecorationOptions> {\n        const decoration: Partial<DecorationOptions> = {\n            renderOptions: {\n                before: { ...renderOptions }\n            }\n        };\n\n        if (commit.isUncommitted) {\n            decoration.renderOptions!.before!.color = renderOptions.uncommittedColor;\n        }\n\n        const message = CommitFormatter.fromTemplate(format, commit, dateFormatOrFormatOptions);\n        decoration.renderOptions!.before!.contentText = Strings.pad(message.replace(/ /g, GlyphChars.Space), 1, 1);\n\n        return decoration;\n    }\n\n    static gutterRenderOptions(\n        separateLines: boolean,\n        heatmap: HeatmapConfig,\n        format: string,\n        options: CommitFormatOptions\n    ): RenderOptions {\n        // Get the character count of all the tokens, assuming there there is a cap (bail if not)\n        let chars = 0;\n        for (const token of Objects.values(options.tokenOptions!)) {\n            if (token === undefined) continue;\n\n            // If any token is uncapped, kick out and set no max\n            if (token.truncateTo == null) {\n                chars = -1;\n                break;\n            }\n\n            chars += token.truncateTo;\n        }\n\n        if (chars >= 0) {\n            // Add the chars of the template string (without tokens)\n            chars += Strings.getWidth(Strings.interpolate(format, undefined));\n            // If we have chars, add a bit of padding\n            if (chars > 0) {\n                chars += 3;\n            }\n        }\n\n        let borderStyle = undefined;\n        let borderWidth = undefined;\n        if (heatmap.enabled) {\n            borderStyle = 'solid';\n            borderWidth = heatmap.location === 'left' ? '0 0 0 2px' : '0 2px 0 0';\n        }\n\n        let width;\n        if (chars >= 0) {\n            const spacing = workspace.getConfiguration('editor').get<number>('letterSpacing');\n            if (spacing != null && spacing !== 0) {\n                width = `calc(${chars}ch + ${Math.round(chars * spacing)}px)`;\n            }\n            else {\n                width = `${chars}ch`;\n            }\n        }\n\n        return {\n            backgroundColor: new ThemeColor('gitlens.gutterBackgroundColor'),\n            borderStyle: borderStyle,\n            borderWidth: borderWidth,\n            color: new ThemeColor('gitlens.gutterForegroundColor'),\n            fontWeight: 'normal',\n            fontStyle: 'normal',\n            height: '100%',\n            margin: '0 26px -1px 0',\n            textDecoration: separateLines ? 'overline solid rgba(0, 0, 0, .2)' : 'none',\n            width: width,\n            uncommittedColor: new ThemeColor('gitlens.gutterUncommittedForegroundColor')\n        };\n    }\n\n    static heatmap(\n        commit: GitCommit,\n        heatmap: ComputedHeatmap,\n        renderOptions: RenderOptions\n    ): Partial<DecorationOptions> {\n        const decoration: Partial<DecorationOptions> = {\n            renderOptions: {\n                before: { ...renderOptions }\n            }\n        };\n\n        Annotations.applyHeatmap(decoration, commit.date, heatmap);\n\n        return decoration;\n    }\n\n    static heatmapRenderOptions(): RenderOptions {\n        return {\n            borderStyle: 'solid',\n            borderWidth: '0 0 0 2px'\n        };\n    }\n\n    static trailing(\n        commit: GitCommit,\n        // uri: GitUri,\n        // editorLine: number,\n        format: string,\n        dateFormat: string | null,\n        scrollable: boolean = true\n    ): Partial<DecorationOptions> {\n        // TODO: Enable this once there is better caching\n        // let diffUris;\n        // if (commit.isUncommitted) {\n        //     diffUris = await commit.getPreviousLineDiffUris(uri, editorLine, uri.sha);\n        // }\n\n        const message = CommitFormatter.fromTemplate(format, commit, {\n            dateFormat: dateFormat,\n            // previousLineDiffUris: diffUris,\n            truncateMessageAtNewLine: true\n        });\n\n        return {\n            renderOptions: {\n                after: {\n                    backgroundColor: new ThemeColor('gitlens.trailingLineBackgroundColor'),\n                    color: new ThemeColor('gitlens.trailingLineForegroundColor'),\n                    contentText: Strings.pad(message.replace(/ /g, GlyphChars.Space), 1, 1),\n                    fontWeight: 'normal',\n                    fontStyle: 'normal',\n                    // Pull the decoration out of the document flow if we want to be scrollable\n                    textDecoration: `none;${scrollable ? '' : ' position: absolute;'}`\n                }\n            }\n        };\n    }\n\n    private static getDiffFromHunkLine(hunkLine: GitDiffHunkLine): string {\n        if (Container.config.hovers.changesDiff === 'hunk') {\n            return `\\`\\`\\`diff\\n${hunkLine.hunk.diff}\\n\\`\\`\\``;\n        }\n\n        return `\\`\\`\\`diff${hunkLine.previous === undefined ? '' : `\\n-${hunkLine.previous.line}`}${\n            hunkLine.current === undefined ? '' : `\\n+${hunkLine.current.line}`\n        }\\n\\`\\`\\``;\n    }\n\n    private static getHeatmapColor(date: Date, heatmap: ComputedHeatmap) {\n        const baseColor = heatmap.cold ? heatmap.colors.cold : heatmap.colors.hot;\n\n        const age = heatmap.computeAge(date);\n        if (age === 0) return baseColor;\n\n        if (computedHeatmapColor === undefined || computedHeatmapColor.color !== baseColor) {\n            let rgba = toRgba(baseColor);\n            if (rgba == null) {\n                rgba = toRgba(heatmap.cold ? defaultHeatmapColdColor : defaultHeatmapHotColor)!;\n            }\n\n            const [r, g, b] = rgba;\n            computedHeatmapColor = {\n                color: baseColor,\n                rgb: `${r}, ${g}, ${b}`\n            };\n        }\n\n        return `rgba(${computedHeatmapColor.rgb}, ${(1 - age / 10).toFixed(2)})`;\n    }\n}\n","'use strict';\nimport * as paths from 'path';\nimport {\n    ConfigurationChangeEvent,\n    DecorationRangeBehavior,\n    Disposable,\n    Event,\n    EventEmitter,\n    OverviewRulerLane,\n    Progress,\n    ProgressLocation,\n    TextDocument,\n    TextEditor,\n    TextEditorDecorationType,\n    TextEditorViewColumnChangeEvent,\n    ThemeColor,\n    window,\n    workspace\n} from 'vscode';\nimport { AnnotationsToggleMode, configuration, FileAnnotationType, HighlightLocations } from '../configuration';\nimport { CommandContext, GlyphChars, isTextEditor, setCommandContext } from '../constants';\nimport { Container } from '../container';\nimport { KeyboardScope } from '../keyboard';\nimport { Logger } from '../logger';\nimport { Functions, Iterables } from '../system';\nimport {\n    DocumentBlameStateChangeEvent,\n    DocumentDirtyStateChangeEvent,\n    GitDocumentState\n} from '../trackers/gitDocumentTracker';\nimport { AnnotationProviderBase, AnnotationStatus, TextEditorCorrelationKey } from './annotationProvider';\nimport { GutterBlameAnnotationProvider } from './gutterBlameAnnotationProvider';\nimport { HeatmapBlameAnnotationProvider } from './heatmapBlameAnnotationProvider';\nimport { RecentChangesAnnotationProvider } from './recentChangesAnnotationProvider';\n\nexport enum AnnotationClearReason {\n    User = 'User',\n    BlameabilityChanged = 'BlameabilityChanged',\n    ColumnChanged = 'ColumnChanged',\n    Disposing = 'Disposing',\n    DocumentChanged = 'DocumentChanged',\n    DocumentClosed = 'DocumentClosed'\n}\n\nexport const Decorations = {\n    blameAnnotation: window.createTextEditorDecorationType({\n        rangeBehavior: DecorationRangeBehavior.ClosedOpen,\n        textDecoration: 'none'\n    }),\n    blameHighlight: undefined as TextEditorDecorationType | undefined,\n    heatmapAnnotation: window.createTextEditorDecorationType({\n        before: {\n            contentText: GlyphChars.ZeroWidthSpace,\n            height: '100%',\n            margin: '0 26px -1px 0'\n        }\n    }),\n    heatmapHighlight: undefined as TextEditorDecorationType | undefined,\n    recentChangesAnnotation: undefined as TextEditorDecorationType | undefined,\n    recentChangesHighlight: undefined as TextEditorDecorationType | undefined\n};\n\nexport class FileAnnotationController implements Disposable {\n    private _onDidToggleAnnotations = new EventEmitter<void>();\n    get onDidToggleAnnotations(): Event<void> {\n        return this._onDidToggleAnnotations.event;\n    }\n\n    private _annotationsDisposable: Disposable | undefined;\n    private _annotationProviders: Map<TextEditorCorrelationKey, AnnotationProviderBase> = new Map();\n    private _disposable: Disposable;\n    private _editor: TextEditor | undefined;\n    private _keyboardScope: KeyboardScope | undefined = undefined;\n    private readonly _toggleModes: Map<FileAnnotationType, AnnotationsToggleMode>;\n    private _annotationType: FileAnnotationType | undefined = undefined;\n\n    constructor() {\n        this._disposable = Disposable.from(configuration.onDidChange(this.onConfigurationChanged, this));\n\n        this._toggleModes = new Map();\n        this.onConfigurationChanged(configuration.initializingChangeEvent);\n    }\n\n    dispose() {\n        void this.clearAll();\n\n        Decorations.blameAnnotation && Decorations.blameAnnotation.dispose();\n        Decorations.blameHighlight && Decorations.blameHighlight.dispose();\n\n        this._annotationsDisposable && this._annotationsDisposable.dispose();\n        this._disposable && this._disposable.dispose();\n    }\n\n    private onConfigurationChanged(e: ConfigurationChangeEvent) {\n        const cfg = Container.config;\n\n        if (configuration.changed(e, configuration.name('blame')('highlight').value)) {\n            Decorations.blameHighlight && Decorations.blameHighlight.dispose();\n\n            const cfgHighlight = cfg.blame.highlight;\n\n            if (cfgHighlight.enabled) {\n                Decorations.blameHighlight = window.createTextEditorDecorationType({\n                    gutterIconSize: 'contain',\n                    isWholeLine: true,\n                    overviewRulerLane: OverviewRulerLane.Right,\n                    backgroundColor: cfgHighlight.locations.includes(HighlightLocations.Line)\n                        ? new ThemeColor('gitlens.lineHighlightBackgroundColor')\n                        : undefined,\n                    overviewRulerColor: cfgHighlight.locations.includes(HighlightLocations.Overview)\n                        ? new ThemeColor('gitlens.lineHighlightOverviewRulerColor')\n                        : undefined,\n                    dark: {\n                        gutterIconPath: cfgHighlight.locations.includes(HighlightLocations.Gutter)\n                            ? Container.context.asAbsolutePath('images/dark/highlight-gutter.svg')\n                            : undefined\n                    },\n                    light: {\n                        gutterIconPath: cfgHighlight.locations.includes(HighlightLocations.Gutter)\n                            ? Container.context.asAbsolutePath('images/light/highlight-gutter.svg')\n                            : undefined\n                    }\n                });\n            }\n            else {\n                Decorations.blameHighlight = undefined;\n            }\n        }\n\n        if (configuration.changed(e, configuration.name('recentChanges')('highlight').value)) {\n            Decorations.recentChangesAnnotation && Decorations.recentChangesAnnotation.dispose();\n\n            const cfgHighlight = cfg.recentChanges.highlight;\n\n            Decorations.recentChangesAnnotation = window.createTextEditorDecorationType({\n                gutterIconSize: 'contain',\n                isWholeLine: true,\n                overviewRulerLane: OverviewRulerLane.Right,\n                backgroundColor: cfgHighlight.locations.includes(HighlightLocations.Line)\n                    ? new ThemeColor('gitlens.lineHighlightBackgroundColor')\n                    : undefined,\n                overviewRulerColor: cfgHighlight.locations.includes(HighlightLocations.Overview)\n                    ? new ThemeColor('gitlens.lineHighlightOverviewRulerColor')\n                    : undefined,\n                dark: {\n                    gutterIconPath: cfgHighlight.locations.includes(HighlightLocations.Gutter)\n                        ? Container.context.asAbsolutePath('images/dark/highlight-gutter.svg')\n                        : undefined\n                },\n                light: {\n                    gutterIconPath: cfgHighlight.locations.includes(HighlightLocations.Gutter)\n                        ? Container.context.asAbsolutePath('images/light/highlight-gutter.svg')\n                        : undefined\n                }\n            });\n        }\n\n        const initializing = configuration.initializing(e);\n\n        if (configuration.changed(e, configuration.name('blame')('toggleMode').value)) {\n            this._toggleModes.set(FileAnnotationType.Blame, cfg.blame.toggleMode);\n            if (!initializing && cfg.blame.toggleMode === AnnotationsToggleMode.File) {\n                void this.clearAll();\n            }\n        }\n\n        if (configuration.changed(e, configuration.name('heatmap')('toggleMode').value)) {\n            this._toggleModes.set(FileAnnotationType.Heatmap, cfg.heatmap.toggleMode);\n            if (!initializing && cfg.heatmap.toggleMode === AnnotationsToggleMode.File) {\n                void this.clearAll();\n            }\n        }\n\n        if (configuration.changed(e, configuration.name('recentChanges')('toggleMode').value)) {\n            this._toggleModes.set(FileAnnotationType.RecentChanges, cfg.recentChanges.toggleMode);\n            if (!initializing && cfg.recentChanges.toggleMode === AnnotationsToggleMode.File) {\n                void this.clearAll();\n            }\n        }\n\n        if (initializing) return;\n\n        if (\n            configuration.changed(e, configuration.name('blame').value) ||\n            configuration.changed(e, configuration.name('recentChanges').value) ||\n            configuration.changed(e, configuration.name('heatmap').value) ||\n            configuration.changed(e, configuration.name('hovers').value)\n        ) {\n            // Since the configuration has changed -- reset any visible annotations\n            for (const provider of this._annotationProviders.values()) {\n                if (provider === undefined) continue;\n\n                if (provider.annotationType === FileAnnotationType.RecentChanges) {\n                    provider.reset({\n                        decoration: Decorations.recentChangesAnnotation!,\n                        highlightDecoration: Decorations.recentChangesHighlight\n                    });\n                }\n                else if (provider.annotationType === FileAnnotationType.Blame) {\n                    provider.reset({\n                        decoration: Decorations.blameAnnotation,\n                        highlightDecoration: Decorations.blameHighlight\n                    });\n                }\n                else {\n                    void this.show(provider.editor, FileAnnotationType.Heatmap);\n                }\n            }\n        }\n    }\n\n    private async onActiveTextEditorChanged(editor: TextEditor | undefined) {\n        if (editor !== undefined && !isTextEditor(editor)) return;\n\n        this._editor = editor;\n        // Logger.log('AnnotationController.onActiveTextEditorChanged', editor && editor.document.uri.fsPath);\n\n        if (this.isInWindowToggle()) {\n            await this.show(editor, this._annotationType!);\n\n            return;\n        }\n\n        const provider = this.getProvider(editor);\n        if (provider === undefined) {\n            setCommandContext(CommandContext.AnnotationStatus, undefined);\n            void this.detachKeyboardHook();\n        }\n        else {\n            setCommandContext(CommandContext.AnnotationStatus, provider.status);\n            void this.attachKeyboardHook();\n        }\n    }\n\n    private onBlameStateChanged(e: DocumentBlameStateChangeEvent<GitDocumentState>) {\n        // Only care if we are becoming un-blameable\n        if (e.blameable) return;\n\n        const editor = window.activeTextEditor;\n        if (editor === undefined) return;\n\n        void this.clear(editor, AnnotationClearReason.BlameabilityChanged);\n    }\n\n    private onDirtyStateChanged(e: DocumentDirtyStateChangeEvent<GitDocumentState>) {\n        for (const [key, p] of this._annotationProviders) {\n            if (!e.document.is(p.document)) continue;\n\n            void this.clearCore(key, AnnotationClearReason.DocumentChanged);\n        }\n    }\n\n    private onTextDocumentClosed(document: TextDocument) {\n        if (!Container.git.isTrackable(document.uri)) return;\n\n        for (const [key, p] of this._annotationProviders) {\n            if (p.document !== document) continue;\n\n            void this.clearCore(key, AnnotationClearReason.DocumentClosed);\n        }\n    }\n\n    private onTextEditorViewColumnChanged(e: TextEditorViewColumnChangeEvent) {\n        // FYI https://github.com/Microsoft/vscode/issues/35602\n        const provider = this.getProvider(e.textEditor);\n        if (provider === undefined) {\n            // If we don't find an exact match, do a fuzzy match (since we can't properly track editors)\n            const fuzzyProvider = Iterables.find(\n                this._annotationProviders.values(),\n                p => p.editor.document === e.textEditor.document\n            );\n            if (fuzzyProvider == null) return;\n\n            void this.clearCore(fuzzyProvider.correlationKey, AnnotationClearReason.ColumnChanged);\n\n            return;\n        }\n\n        void provider.restore(e.textEditor);\n    }\n\n    private onVisibleTextEditorsChanged(editors: TextEditor[]) {\n        let provider: AnnotationProviderBase | undefined;\n        for (const e of editors) {\n            provider = this.getProvider(e);\n            if (provider === undefined) continue;\n\n            void provider.restore(e);\n        }\n    }\n\n    isInWindowToggle(): boolean {\n        return this.getToggleMode(this._annotationType) === AnnotationsToggleMode.Window;\n    }\n\n    private getToggleMode(annotationType: FileAnnotationType | undefined): AnnotationsToggleMode {\n        if (annotationType === undefined) return AnnotationsToggleMode.File;\n\n        return this._toggleModes.get(annotationType) || AnnotationsToggleMode.File;\n    }\n\n    clear(editor: TextEditor, reason: AnnotationClearReason = AnnotationClearReason.User) {\n        if (this.isInWindowToggle()) {\n            return this.clearAll();\n        }\n\n        return this.clearCore(AnnotationProviderBase.getCorrelationKey(editor), reason);\n    }\n\n    async clearAll() {\n        this._annotationType = undefined;\n        for (const [key] of this._annotationProviders) {\n            await this.clearCore(key, AnnotationClearReason.Disposing);\n        }\n    }\n\n    async getAnnotationType(editor: TextEditor | undefined): Promise<FileAnnotationType | undefined> {\n        const provider = this.getProvider(editor);\n        if (provider === undefined) return undefined;\n\n        const trackedDocument = await Container.tracker.get(editor!.document);\n        if (trackedDocument === undefined || !trackedDocument.isBlameable) return undefined;\n\n        return provider.annotationType;\n    }\n\n    getProvider(editor: TextEditor | undefined): AnnotationProviderBase | undefined {\n        if (editor === undefined || editor.document === undefined) return undefined;\n        return this._annotationProviders.get(AnnotationProviderBase.getCorrelationKey(editor));\n    }\n\n    async show(\n        editor: TextEditor | undefined,\n        type: FileAnnotationType,\n        shaOrLine?: string | number\n    ): Promise<boolean> {\n        if (this.getToggleMode(type) === AnnotationsToggleMode.Window) {\n            let first = this._annotationType === undefined;\n            const reset = !first && this._annotationType !== type;\n\n            this._annotationType = type;\n\n            if (reset) {\n                await this.clearAll();\n                first = true;\n            }\n\n            if (first) {\n                for (const e of window.visibleTextEditors) {\n                    if (e === editor) continue;\n\n                    void this.show(e, type);\n                }\n            }\n        }\n\n        if (editor === undefined) return false; // || editor.viewColumn === undefined) return false;\n        this._editor = editor;\n\n        const trackedDocument = await Container.tracker.getOrAdd(editor.document);\n        if (!trackedDocument.isBlameable) return false;\n\n        const currentProvider = this.getProvider(editor);\n        if (currentProvider !== undefined && currentProvider.annotationType === type) {\n            await currentProvider.selection(shaOrLine);\n            return true;\n        }\n\n        const provider = await window.withProgress(\n            { location: ProgressLocation.Window },\n            async (progress: Progress<{ message: string }>) => {\n                await setCommandContext(CommandContext.AnnotationStatus, AnnotationStatus.Computing);\n\n                const computingAnnotations = this.showAnnotationsCore(\n                    currentProvider,\n                    editor,\n                    type,\n                    shaOrLine,\n                    progress\n                );\n                const provider = await computingAnnotations;\n\n                if (editor === this._editor) {\n                    await setCommandContext(CommandContext.AnnotationStatus, provider && provider.status);\n                }\n\n                return computingAnnotations;\n            }\n        );\n\n        return provider !== undefined;\n    }\n\n    async toggle(\n        editor: TextEditor | undefined,\n        type: FileAnnotationType,\n        shaOrLine?: string | number,\n        on?: boolean\n    ): Promise<boolean> {\n        if (editor !== undefined) {\n            const trackedDocument = await Container.tracker.getOrAdd(editor.document);\n            if (\n                (type === FileAnnotationType.RecentChanges && !trackedDocument.isTracked) ||\n                !trackedDocument.isBlameable\n            ) {\n                return false;\n            }\n        }\n\n        const provider = this.getProvider(editor);\n        if (provider === undefined) return this.show(editor!, type, shaOrLine);\n\n        const reopen = provider.annotationType !== type;\n        if (on === true && !reopen) return true;\n\n        if (this.isInWindowToggle()) {\n            await this.clearAll();\n        }\n        else {\n            await this.clearCore(provider.correlationKey, AnnotationClearReason.User);\n        }\n\n        if (!reopen) return false;\n\n        return this.show(editor, type, shaOrLine);\n    }\n\n    private async attachKeyboardHook() {\n        // Allows pressing escape to exit the annotations\n        if (this._keyboardScope === undefined) {\n            this._keyboardScope = await Container.keyboard.beginScope({\n                escape: {\n                    onDidPressKey: async () => {\n                        const e = this._editor;\n                        if (e === undefined) return undefined;\n\n                        await this.clear(e, AnnotationClearReason.User);\n                        return undefined;\n                    }\n                }\n            });\n        }\n    }\n\n    private async clearCore(key: TextEditorCorrelationKey, reason: AnnotationClearReason) {\n        const provider = this._annotationProviders.get(key);\n        if (provider === undefined) return;\n\n        Logger.log(`${reason}:`, `Clear annotations for ${key}`);\n\n        this._annotationProviders.delete(key);\n        provider.dispose();\n\n        if (this._annotationProviders.size === 0 || key === AnnotationProviderBase.getCorrelationKey(this._editor)) {\n            await setCommandContext(CommandContext.AnnotationStatus, undefined);\n            await this.detachKeyboardHook();\n        }\n\n        if (this._annotationProviders.size === 0) {\n            Logger.log('Remove all listener registrations for annotations');\n\n            this._annotationsDisposable && this._annotationsDisposable.dispose();\n            this._annotationsDisposable = undefined;\n        }\n\n        this._onDidToggleAnnotations.fire();\n    }\n\n    private async detachKeyboardHook() {\n        if (this._keyboardScope === undefined) return;\n\n        await this._keyboardScope.dispose();\n        this._keyboardScope = undefined;\n    }\n\n    private async showAnnotationsCore(\n        currentProvider: AnnotationProviderBase | undefined,\n        editor: TextEditor,\n        type: FileAnnotationType,\n        shaOrLine?: string | number,\n        progress?: Progress<{ message: string }>\n    ): Promise<AnnotationProviderBase | undefined> {\n        if (progress !== undefined) {\n            let annotationsLabel = 'annotations';\n            switch (type) {\n                case FileAnnotationType.Blame:\n                    annotationsLabel = 'blame annotations';\n                    break;\n\n                case FileAnnotationType.Heatmap:\n                    annotationsLabel = 'heatmap annotations';\n                    break;\n\n                case FileAnnotationType.RecentChanges:\n                    annotationsLabel = 'recent changes annotations';\n                    break;\n            }\n\n            progress!.report({\n                message: `Computing ${annotationsLabel} for ${paths.basename(editor.document.fileName)}`\n            });\n        }\n\n        // Allows pressing escape to exit the annotations\n        await this.attachKeyboardHook();\n\n        const trackedDocument = await Container.tracker.getOrAdd(editor.document);\n\n        let provider: AnnotationProviderBase | undefined = undefined;\n        switch (type) {\n            case FileAnnotationType.Blame:\n                provider = new GutterBlameAnnotationProvider(\n                    editor,\n                    trackedDocument,\n                    Decorations.blameAnnotation,\n                    Decorations.blameHighlight\n                );\n                break;\n\n            case FileAnnotationType.Heatmap:\n                provider = new HeatmapBlameAnnotationProvider(\n                    editor,\n                    trackedDocument,\n                    Decorations.heatmapAnnotation,\n                    Decorations.heatmapHighlight\n                );\n                break;\n\n            case FileAnnotationType.RecentChanges:\n                provider = new RecentChangesAnnotationProvider(\n                    editor,\n                    trackedDocument,\n                    Decorations.recentChangesAnnotation!,\n                    Decorations.recentChangesHighlight\n                );\n                break;\n        }\n        if (provider === undefined || !(await provider.validate())) return undefined;\n\n        if (currentProvider !== undefined) {\n            await this.clearCore(currentProvider.correlationKey, AnnotationClearReason.User);\n        }\n\n        if (!this._annotationsDisposable && this._annotationProviders.size === 0) {\n            Logger.log('Add listener registrations for annotations');\n\n            this._annotationsDisposable = Disposable.from(\n                window.onDidChangeActiveTextEditor(Functions.debounce(this.onActiveTextEditorChanged, 50), this),\n                window.onDidChangeTextEditorViewColumn(this.onTextEditorViewColumnChanged, this),\n                window.onDidChangeVisibleTextEditors(Functions.debounce(this.onVisibleTextEditorsChanged, 50), this),\n                workspace.onDidCloseTextDocument(this.onTextDocumentClosed, this),\n                Container.tracker.onDidChangeBlameState(this.onBlameStateChanged, this),\n                Container.tracker.onDidChangeDirtyState(this.onDirtyStateChanged, this)\n            );\n        }\n\n        this._annotationProviders.set(provider.correlationKey, provider);\n        if (await provider.provideAnnotation(shaOrLine)) {\n            this._onDidToggleAnnotations.fire();\n            return provider;\n        }\n\n        return undefined;\n    }\n}\n","'use strict';\nimport {\n    CancellationToken,\n    Disposable,\n    Hover,\n    languages,\n    Position,\n    Range,\n    TextDocument,\n    TextEditor,\n    TextEditorDecorationType\n} from 'vscode';\nimport { Container } from '../container';\nimport { GitBlame, GitBlameCommit, GitCommit, GitUri } from '../git/gitService';\nimport { Arrays, Iterables, log } from '../system';\nimport { GitDocumentState, TrackedDocument } from '../trackers/gitDocumentTracker';\nimport { AnnotationProviderBase } from './annotationProvider';\nimport { Annotations, ComputedHeatmap } from './annotations';\n\nexport abstract class BlameAnnotationProviderBase extends AnnotationProviderBase {\n    protected _blame: Promise<GitBlame | undefined>;\n    protected _hoverProviderDisposable: Disposable | undefined;\n    protected readonly _uri: GitUri;\n\n    constructor(\n        editor: TextEditor,\n        trackedDocument: TrackedDocument<GitDocumentState>,\n        decoration: TextEditorDecorationType,\n        highlightDecoration: TextEditorDecorationType | undefined\n    ) {\n        super(editor, trackedDocument, decoration, highlightDecoration);\n\n        this._uri = trackedDocument.uri;\n        this._blame = editor.document.isDirty\n            ? Container.git.getBlameForFileContents(this._uri, editor.document.getText())\n            : Container.git.getBlameForFile(this._uri);\n\n        if (editor.document.isDirty) {\n            trackedDocument.setForceDirtyStateChangeOnNextDocumentChange();\n        }\n    }\n\n    clear() {\n        if (this._hoverProviderDisposable !== undefined) {\n            this._hoverProviderDisposable.dispose();\n            this._hoverProviderDisposable = undefined;\n        }\n        super.clear();\n    }\n\n    onReset(changes?: {\n        decoration: TextEditorDecorationType;\n        highlightDecoration: TextEditorDecorationType | undefined;\n    }) {\n        if (this.editor !== undefined) {\n            this._blame = this.editor.document.isDirty\n                ? Container.git.getBlameForFileContents(this._uri, this.editor.document.getText())\n                : Container.git.getBlameForFile(this._uri);\n        }\n\n        return super.onReset(changes);\n    }\n\n    @log({ args: false })\n    async selection(shaOrLine?: string | number, blame?: GitBlame) {\n        if (!this.highlightDecoration) return;\n\n        if (blame === undefined) {\n            blame = await this._blame;\n            if (!blame || !blame.lines.length) return;\n        }\n\n        let sha: string | undefined = undefined;\n        if (typeof shaOrLine === 'string') {\n            sha = shaOrLine;\n        }\n        else if (typeof shaOrLine === 'number') {\n            if (shaOrLine >= 0) {\n                const commitLine = blame.lines[shaOrLine];\n                sha = commitLine && commitLine.sha;\n            }\n        }\n        else {\n            sha = Iterables.first(blame.commits.values()).sha;\n        }\n\n        if (!sha) {\n            this.editor.setDecorations(this.highlightDecoration, []);\n            return;\n        }\n\n        const highlightDecorationRanges = Arrays.filterMap(blame.lines, l =>\n            l.sha === sha\n                ? // editor lines are 0-based\n                  this.editor.document.validateRange(new Range(l.line - 1, 0, l.line - 1, Number.MAX_SAFE_INTEGER))\n                : undefined\n        );\n\n        this.editor.setDecorations(this.highlightDecoration, highlightDecorationRanges);\n    }\n\n    async validate(): Promise<boolean> {\n        const blame = await this._blame;\n        return blame !== undefined && blame.lines.length !== 0;\n    }\n\n    protected async getBlame(): Promise<GitBlame | undefined> {\n        const blame = await this._blame;\n        if (blame === undefined || blame.lines.length === 0) return undefined;\n\n        return blame;\n    }\n\n    @log({ args: false })\n    protected getComputedHeatmap(blame: GitBlame): ComputedHeatmap {\n        const dates = [];\n\n        let commit;\n        let previousSha;\n        for (const l of blame.lines) {\n            if (previousSha === l.sha) continue;\n            previousSha = l.sha;\n\n            commit = blame.commits.get(l.sha);\n            if (commit === undefined) continue;\n\n            dates.push(commit.date);\n        }\n\n        dates.sort((a, b) => a.getTime() - b.getTime());\n\n        const half = Math.floor(dates.length / 2);\n        const median =\n            dates.length % 2 ? dates[half].getTime() : (dates[half - 1].getTime() + dates[half].getTime()) / 2.0;\n\n        const lookup: number[] = [];\n\n        const newest = dates[dates.length - 1].getTime();\n        let step = (newest - median) / 5;\n        for (let i = 5; i > 0; i--) {\n            lookup.push(median + step * i);\n        }\n\n        lookup.push(median);\n\n        const oldest = dates[0].getTime();\n        step = (median - oldest) / 4;\n        for (let i = 1; i <= 4; i++) {\n            lookup.push(median - step * i);\n        }\n\n        const d = new Date();\n        d.setDate(d.getDate() - (Container.config.heatmap.ageThreshold || 90));\n\n        return {\n            cold: newest < d.getTime(),\n            colors: {\n                cold: Container.config.heatmap.coldColor,\n                hot: Container.config.heatmap.hotColor\n            },\n            median: median,\n            newest: newest,\n            oldest: oldest,\n            computeAge: (date: Date) => {\n                const time = date.getTime();\n                let index = 0;\n                for (let i = 0; i < lookup.length; i++) {\n                    index = i;\n                    if (time >= lookup[i]) break;\n                }\n\n                return index;\n            }\n        };\n    }\n\n    registerHoverProviders(providers: { details: boolean; changes: boolean }) {\n        if (\n            !Container.config.hovers.enabled ||\n            !Container.config.hovers.annotations.enabled ||\n            (!providers.details && !providers.changes)\n        ) {\n            return;\n        }\n\n        const subscriptions: Disposable[] = [];\n        if (providers.changes) {\n            subscriptions.push(\n                languages.registerHoverProvider(\n                    { pattern: this.document.uri.fsPath },\n                    {\n                        provideHover: this.provideChangesHover.bind(this)\n                    }\n                )\n            );\n        }\n        if (providers.details) {\n            subscriptions.push(\n                languages.registerHoverProvider(\n                    { pattern: this.document.uri.fsPath },\n                    {\n                        provideHover: this.provideDetailsHover.bind(this)\n                    }\n                )\n            );\n        }\n\n        this._hoverProviderDisposable = Disposable.from(...subscriptions);\n    }\n\n    async provideDetailsHover(\n        document: TextDocument,\n        position: Position,\n        token: CancellationToken\n    ): Promise<Hover | undefined> {\n        const commit = await this.getCommitForHover(position);\n        if (commit === undefined) return undefined;\n\n        // Get the full commit message -- since blame only returns the summary\n        let logCommit: GitCommit | undefined = undefined;\n        if (!commit.isUncommitted) {\n            logCommit = await Container.git.getCommitForFile(commit.repoPath, commit.uri.fsPath, {\n                ref: commit.sha\n            });\n            if (logCommit !== undefined) {\n                // Preserve the previous commit from the blame commit\n                logCommit.previousFileName = commit.previousFileName;\n                logCommit.previousSha = commit.previousSha;\n            }\n        }\n\n        let editorLine = this.editor.selection.active.line;\n        const line = editorLine + 1;\n        const commitLine = commit.lines.find(l => l.line === line) || commit.lines[0];\n        editorLine = commitLine.originalLine - 1;\n\n        const message = await Annotations.detailsHoverMessage(\n            logCommit || commit,\n            await GitUri.fromUri(document.uri),\n            editorLine,\n            Container.config.defaultDateFormat,\n            this.annotationType\n        );\n        return new Hover(\n            message,\n            document.validateRange(new Range(position.line, 0, position.line, Number.MAX_SAFE_INTEGER))\n        );\n    }\n\n    async provideChangesHover(\n        document: TextDocument,\n        position: Position,\n        token: CancellationToken\n    ): Promise<Hover | undefined> {\n        const commit = await this.getCommitForHover(position);\n        if (commit === undefined) return undefined;\n\n        const message = await Annotations.changesHoverMessage(\n            commit,\n            await GitUri.fromUri(document.uri),\n            position.line\n        );\n        if (message === undefined) return undefined;\n\n        return new Hover(\n            message,\n            document.validateRange(new Range(position.line, 0, position.line, Number.MAX_SAFE_INTEGER))\n        );\n    }\n\n    private async getCommitForHover(position: Position): Promise<GitBlameCommit | undefined> {\n        if (Container.config.hovers.annotations.over !== 'line' && position.character !== 0) return undefined;\n\n        const blame = await this.getBlame();\n        if (blame === undefined) return undefined;\n\n        const line = blame.lines[position.line];\n\n        return blame.commits.get(line.sha);\n    }\n}\n","'use strict';\nimport { DecorationOptions, Range, TextEditorDecorationType, window } from 'vscode';\nimport { FileAnnotationType, GravatarDefaultStyle } from '../configuration';\nimport { GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { CommitFormatOptions, GitBlameCommit } from '../git/gitService';\nimport { Logger } from '../logger';\nimport { log, Objects, Strings } from '../system';\nimport { Annotations } from './annotations';\nimport { BlameAnnotationProviderBase } from './blameAnnotationProvider';\n\nexport class GutterBlameAnnotationProvider extends BlameAnnotationProviderBase {\n    @log()\n    async onProvideAnnotation(shaOrLine?: string | number, type?: FileAnnotationType): Promise<boolean> {\n        const cc = Logger.getCorrelationContext();\n\n        this.annotationType = FileAnnotationType.Blame;\n\n        const blame = await this.getBlame();\n        if (blame === undefined) return false;\n\n        let start = process.hrtime();\n\n        const cfg = Container.config.blame;\n\n        // Precalculate the formatting options so we don't need to do it on each iteration\n        const tokenOptions = Strings.getTokensFromTemplate(cfg.format).reduce<{\n            [token: string]: Strings.TokenOptions | undefined;\n        }>((map, token) => {\n            map[token.key] = token.options;\n            return map;\n        }, Object.create(null));\n\n        const options: CommitFormatOptions = {\n            dateFormat: cfg.dateFormat === null ? Container.config.defaultDateFormat : cfg.dateFormat,\n            tokenOptions: tokenOptions\n        };\n\n        const avatars = cfg.avatars;\n        const gravatarDefault = Container.config.defaultGravatarsStyle;\n        const separateLines = cfg.separateLines;\n        const renderOptions = Annotations.gutterRenderOptions(separateLines, cfg.heatmap, cfg.format, options);\n\n        this.decorations = [];\n        const decorationsMap: { [sha: string]: DecorationOptions | undefined } = Object.create(null);\n        const avatarDecorationsMap:\n            | { [email: string]: { decoration: TextEditorDecorationType; ranges: Range[] } }\n            | undefined = avatars ? Object.create(null) : undefined;\n\n        let commit: GitBlameCommit | undefined;\n        let compacted = false;\n        let gutter: DecorationOptions | undefined;\n        let previousSha: string | undefined;\n\n        let computedHeatmap;\n        if (cfg.heatmap.enabled) {\n            computedHeatmap = this.getComputedHeatmap(blame);\n        }\n\n        for (const l of blame.lines) {\n            // editor lines are 0-based\n            const editorLine = l.line - 1;\n\n            if (previousSha === l.sha) {\n                if (gutter === undefined) continue;\n\n                // Use a shallow copy of the previous decoration options\n                gutter = { ...gutter };\n\n                if (cfg.compact && !compacted) {\n                    // Since we are wiping out the contextText make sure to copy the objects\n                    gutter.renderOptions = {\n                        before: {\n                            ...gutter.renderOptions!.before,\n                            contentText: GlyphChars.Space.repeat(\n                                Strings.getWidth(gutter.renderOptions!.before!.contentText!)\n                            )\n                        }\n                    };\n\n                    if (separateLines) {\n                        gutter.renderOptions!.before!.textDecoration = 'none';\n                    }\n\n                    compacted = true;\n                }\n\n                gutter.range = new Range(editorLine, 0, editorLine, 0);\n\n                this.decorations.push(gutter);\n\n                if (avatars && !cfg.compact && commit !== undefined && commit.email !== undefined) {\n                    this.addOrUpdateGravatarDecoration(commit, gutter.range, gravatarDefault, avatarDecorationsMap!);\n                }\n\n                continue;\n            }\n\n            compacted = false;\n            previousSha = l.sha;\n\n            commit = blame.commits.get(l.sha);\n            if (commit === undefined) continue;\n\n            gutter = decorationsMap[l.sha];\n            if (gutter !== undefined) {\n                gutter = {\n                    ...gutter,\n                    range: new Range(editorLine, 0, editorLine, 0)\n                };\n\n                this.decorations.push(gutter);\n\n                if (avatars && commit.email !== undefined) {\n                    this.addOrUpdateGravatarDecoration(commit, gutter.range, gravatarDefault, avatarDecorationsMap!);\n                }\n\n                continue;\n            }\n\n            gutter = Annotations.gutter(commit, cfg.format, options, renderOptions) as DecorationOptions;\n\n            if (computedHeatmap !== undefined) {\n                Annotations.applyHeatmap(gutter, commit.date, computedHeatmap);\n            }\n\n            gutter.range = new Range(editorLine, 0, editorLine, 0);\n\n            this.decorations.push(gutter);\n\n            if (avatars && commit.email !== undefined) {\n                this.addOrUpdateGravatarDecoration(commit, gutter.range, gravatarDefault, avatarDecorationsMap!);\n            }\n\n            decorationsMap[l.sha] = gutter;\n        }\n\n        Logger.log(cc, `${Strings.getDurationMilliseconds(start)} ms to compute gutter blame annotations`);\n\n        if (this.decorations.length) {\n            start = process.hrtime();\n\n            this.editor.setDecorations(this.decoration!, this.decorations);\n\n            if (avatars) {\n                this.additionalDecorations = [];\n                for (const d of Objects.values(avatarDecorationsMap!)) {\n                    this.additionalDecorations.push(d);\n                    this.editor.setDecorations(d.decoration, d.ranges);\n                }\n            }\n\n            Logger.log(cc, `${Strings.getDurationMilliseconds(start)} ms to apply all gutter blame annotations`);\n        }\n\n        this.registerHoverProviders(Container.config.hovers.annotations);\n        return true;\n    }\n\n    addOrUpdateGravatarDecoration(\n        commit: GitBlameCommit,\n        range: Range,\n        gravatarDefault: GravatarDefaultStyle,\n        map: { [email: string]: { decoration: TextEditorDecorationType; ranges: Range[] } }\n    ) {\n        const avatarDecoration = map[commit.email!];\n        if (avatarDecoration !== undefined) {\n            avatarDecoration.ranges.push(range);\n\n            return;\n        }\n\n        map[commit.email!] = {\n            decoration: window.createTextEditorDecorationType({\n                gutterIconPath: commit.getGravatarUri(gravatarDefault),\n                gutterIconSize: '16px 16px'\n            }),\n            ranges: [range]\n        };\n    }\n}\n","'use strict';\nimport { DecorationOptions, Range } from 'vscode';\nimport { FileAnnotationType } from '../configuration';\nimport { Container } from '../container';\nimport { GitBlameCommit } from '../git/gitService';\nimport { Logger } from '../logger';\nimport { log, Strings } from '../system';\nimport { Annotations } from './annotations';\nimport { BlameAnnotationProviderBase } from './blameAnnotationProvider';\n\nexport class HeatmapBlameAnnotationProvider extends BlameAnnotationProviderBase {\n    @log()\n    async onProvideAnnotation(shaOrLine?: string | number, type?: FileAnnotationType): Promise<boolean> {\n        const cc = Logger.getCorrelationContext();\n\n        this.annotationType = FileAnnotationType.Heatmap;\n\n        const blame = await this.getBlame();\n        if (blame === undefined) return false;\n\n        let start = process.hrtime();\n\n        const renderOptions = Annotations.heatmapRenderOptions();\n\n        this.decorations = [];\n        const decorationsMap: { [sha: string]: DecorationOptions | undefined } = Object.create(null);\n\n        let commit: GitBlameCommit | undefined;\n        let heatmap: DecorationOptions | undefined;\n\n        const computedHeatmap = this.getComputedHeatmap(blame);\n\n        for (const l of blame.lines) {\n            // editor lines are 0-based\n            const editorLine = l.line - 1;\n\n            heatmap = decorationsMap[l.sha];\n            if (heatmap !== undefined) {\n                heatmap = {\n                    ...heatmap,\n                    range: new Range(editorLine, 0, editorLine, 0)\n                };\n\n                this.decorations.push(heatmap);\n\n                continue;\n            }\n\n            commit = blame.commits.get(l.sha);\n            if (commit === undefined) continue;\n\n            heatmap = Annotations.heatmap(commit, computedHeatmap, renderOptions) as DecorationOptions;\n            heatmap.range = new Range(editorLine, 0, editorLine, 0);\n\n            this.decorations.push(heatmap);\n            decorationsMap[l.sha] = heatmap;\n        }\n\n        Logger.log(cc, `${Strings.getDurationMilliseconds(start)} ms to compute heatmap annotations`);\n\n        if (this.decorations.length) {\n            start = process.hrtime();\n\n            this.editor.setDecorations(this.decoration!, this.decorations);\n\n            Logger.log(cc, `${Strings.getDurationMilliseconds(start)} ms to apply recent changes annotations`);\n        }\n\n        this.registerHoverProviders(Container.config.hovers.annotations);\n        return true;\n    }\n}\n","'use strict';\nimport { MarkdownString, Position, Range, TextEditor, TextEditorDecorationType } from 'vscode';\nimport { FileAnnotationType } from '../configuration';\nimport { Container } from '../container';\nimport { GitUri } from '../git/gitService';\nimport { Logger } from '../logger';\nimport { log, Strings } from '../system';\nimport { GitDocumentState, TrackedDocument } from '../trackers/gitDocumentTracker';\nimport { AnnotationProviderBase } from './annotationProvider';\nimport { Annotations } from './annotations';\n\nexport class RecentChangesAnnotationProvider extends AnnotationProviderBase {\n    private readonly _uri: GitUri;\n\n    constructor(\n        editor: TextEditor,\n        trackedDocument: TrackedDocument<GitDocumentState>,\n        decoration: TextEditorDecorationType,\n        highlightDecoration: TextEditorDecorationType | undefined\n    ) {\n        super(editor, trackedDocument, decoration, highlightDecoration);\n\n        this._uri = trackedDocument.uri;\n    }\n\n    @log()\n    async onProvideAnnotation(shaOrLine?: string | number): Promise<boolean> {\n        const cc = Logger.getCorrelationContext();\n\n        this.annotationType = FileAnnotationType.RecentChanges;\n\n        const commit = await Container.git.getCommitForFile(this._uri.repoPath, this._uri.fsPath);\n        if (commit === undefined) return false;\n\n        const diff = await Container.git.getDiffForFile(this._uri, commit.sha);\n        if (diff === undefined) return false;\n\n        let start = process.hrtime();\n\n        const cfg = Container.config;\n        const dateFormat = cfg.defaultDateFormat;\n\n        this.decorations = [];\n\n        for (const hunk of diff.hunks) {\n            // Subtract 2 because editor lines are 0-based and we will be adding 1 in the first iteration of the loop\n            let count = hunk.currentPosition.start - 2;\n            for (const hunkLine of hunk.lines) {\n                if (hunkLine.current === undefined) continue;\n\n                count++;\n\n                if (hunkLine.current.state === 'unchanged') continue;\n\n                const range = this.editor.document.validateRange(\n                    new Range(new Position(count, 0), new Position(count, Number.MAX_SAFE_INTEGER))\n                );\n\n                let message: MarkdownString | undefined = undefined;\n\n                if (cfg.hovers.enabled && cfg.hovers.annotations.enabled) {\n                    if (cfg.hovers.annotations.details) {\n                        this.decorations.push({\n                            hoverMessage: await Annotations.detailsHoverMessage(\n                                commit,\n                                await GitUri.fromUri(this.editor.document.uri),\n                                count,\n                                dateFormat,\n                                this.annotationType\n                            ),\n                            range: range\n                        });\n                    }\n\n                    if (cfg.hovers.annotations.changes) {\n                        message = await Annotations.changesHoverMessage(commit, this._uri, count, hunkLine);\n                        if (message === undefined) continue;\n                    }\n                }\n\n                this.decorations.push({\n                    hoverMessage: message,\n                    range: range\n                });\n            }\n        }\n\n        Logger.log(cc, `${Strings.getDurationMilliseconds(start)} ms to compute recent changes annotations`);\n\n        if (this.decorations.length) {\n            start = process.hrtime();\n\n            this.editor.setDecorations(this.decoration, this.decorations);\n\n            Logger.log(cc, `${Strings.getDurationMilliseconds(start)} ms to apply recent changes annotations`);\n        }\n\n        return true;\n    }\n\n    selection(shaOrLine?: string | number): Promise<void> {\n        return Promise.resolve(undefined);\n    }\n\n    validate(): Promise<boolean> {\n        return Promise.resolve(true);\n    }\n}\n","'use strict';\nimport {\n    ConfigurationChangeEvent,\n    DecorationOptions,\n    DecorationRangeBehavior,\n    Disposable,\n    Range,\n    TextEditor,\n    TextEditorDecorationType,\n    window\n} from 'vscode';\nimport { configuration } from '../configuration';\nimport { GlyphChars, isTextEditor } from '../constants';\nimport { Container } from '../container';\nimport { LinesChangeEvent } from '../trackers/gitLineTracker';\nimport { Annotations } from './annotations';\nimport { debug, log } from '../system';\nimport { Logger } from '../logger';\n\nconst annotationDecoration: TextEditorDecorationType = window.createTextEditorDecorationType({\n    after: {\n        margin: '0 0 0 3em',\n        textDecoration: 'none'\n    },\n    rangeBehavior: DecorationRangeBehavior.ClosedOpen\n});\n\nexport class LineAnnotationController implements Disposable {\n    private _disposable: Disposable;\n    private _editor: TextEditor | undefined;\n    private _enabled: boolean = false;\n\n    constructor() {\n        this._disposable = Disposable.from(\n            configuration.onDidChange(this.onConfigurationChanged, this),\n            Container.fileAnnotations.onDidToggleAnnotations(this.onFileAnnotationsToggled, this)\n        );\n        this.onConfigurationChanged(configuration.initializingChangeEvent);\n    }\n\n    dispose() {\n        this.clearAnnotations(this._editor);\n\n        Container.lineTracker.stop(this);\n        this._disposable && this._disposable.dispose();\n    }\n\n    private onConfigurationChanged(e: ConfigurationChangeEvent) {\n        if (!configuration.changed(e, configuration.name('currentLine').value)) return;\n\n        if (configuration.changed(e, configuration.name('currentLine')('enabled').value)) {\n            if (Container.config.currentLine.enabled) {\n                this._enabled = true;\n                this.resume();\n            }\n            else {\n                this._enabled = false;\n                this.setLineTracker(false);\n            }\n        }\n\n        void this.refresh(window.activeTextEditor);\n    }\n\n    private _suspended: boolean = false;\n    get suspended() {\n        return !this._enabled || this._suspended;\n    }\n\n    @log()\n    resume() {\n        this.setLineTracker(true);\n\n        if (this._suspended) {\n            this._suspended = false;\n            return true;\n        }\n\n        return false;\n    }\n\n    @log()\n    suspend() {\n        this.setLineTracker(false);\n\n        if (!this._suspended) {\n            this._suspended = true;\n            return true;\n        }\n\n        return false;\n    }\n\n    private onActiveLinesChanged(e: LinesChangeEvent) {\n        if (!e.pending && e.lines !== undefined) {\n            void this.refresh(e.editor);\n\n            return;\n        }\n\n        this.clear(e.editor);\n    }\n\n    private onFileAnnotationsToggled() {\n        void this.refresh(window.activeTextEditor);\n    }\n\n    @debug({ args: false })\n    clear(editor: TextEditor | undefined) {\n        if (this._editor !== editor && this._editor !== undefined) {\n            this.clearAnnotations(this._editor);\n        }\n        this.clearAnnotations(editor);\n    }\n\n    @log({ args: false })\n    async toggle(editor: TextEditor | undefined) {\n        this._enabled = !(this._enabled && !this.suspended);\n\n        if (this._enabled) {\n            if (this.resume()) {\n                await this.refresh(editor);\n            }\n        }\n        else if (this.suspend()) {\n            await this.refresh(editor);\n        }\n    }\n\n    private clearAnnotations(editor: TextEditor | undefined) {\n        if (editor === undefined || (editor as any)._disposed === true) return;\n\n        editor.setDecorations(annotationDecoration, []);\n    }\n\n    @debug({ args: false })\n    private async refresh(editor: TextEditor | undefined) {\n        if (editor === undefined && this._editor === undefined) return;\n\n        const cc = Logger.getCorrelationContext();\n\n        const lines = Container.lineTracker.lines;\n        if (editor === undefined || lines === undefined || !isTextEditor(editor)) {\n            this.clear(this._editor);\n            return;\n        }\n\n        if (this._editor !== editor) {\n            // Clear any annotations on the previously active editor\n            this.clear(this._editor);\n\n            this._editor = editor;\n        }\n\n        const cfg = Container.config.currentLine;\n        if (this.suspended) {\n            this.clear(editor);\n            return;\n        }\n\n        const trackedDocument = await Container.tracker.getOrAdd(editor.document);\n        if (!trackedDocument.isBlameable && this.suspended) {\n            this.clear(editor);\n            return;\n        }\n\n        // Make sure the editor hasn't died since the await above and that we are still on the same line(s)\n        if (editor.document === undefined || !Container.lineTracker.includesAll(lines)) {\n            if (cc) {\n                cc.exitDetails = ` ${GlyphChars.Dot} Skipped because ${\n                    editor.document === undefined ? 'editor is gone' : `line(s)=${lines.join()} are no longer current`\n                }`;\n            }\n            return;\n        }\n\n        if (cc) {\n            cc.exitDetails = ` ${GlyphChars.Dot} line(s)=${lines.join()}`;\n        }\n\n        const decorations = [];\n        for (const l of lines) {\n            const state = Container.lineTracker.getState(l);\n            if (state === undefined || state.commit === undefined) continue;\n\n            const decoration = Annotations.trailing(\n                state.commit,\n                // await GitUri.fromUri(editor.document.uri),\n                // l,\n                cfg.format,\n                cfg.dateFormat === null ? Container.config.defaultDateFormat : cfg.dateFormat,\n                cfg.scrollable\n            ) as DecorationOptions;\n            decoration.range = editor.document.validateRange(\n                new Range(l, Number.MAX_SAFE_INTEGER, l, Number.MAX_SAFE_INTEGER)\n            );\n\n            decorations.push(decoration);\n        }\n\n        editor.setDecorations(annotationDecoration, decorations);\n    }\n\n    private setLineTracker(enabled: boolean) {\n        if (enabled) {\n            if (!Container.lineTracker.isSubscribed(this)) {\n                Container.lineTracker.start(\n                    this,\n                    Disposable.from(Container.lineTracker.onDidChangeActiveLines(this.onActiveLinesChanged, this))\n                );\n            }\n\n            return;\n        }\n\n        Container.lineTracker.stop(this);\n    }\n}\n","'use strict';\nimport {\n    CancellationToken,\n    CodeLens,\n    CodeLensProvider,\n    Command,\n    commands,\n    DocumentSelector,\n    DocumentSymbol,\n    Event,\n    EventEmitter,\n    ExtensionContext,\n    Location,\n    Position,\n    Range,\n    SymbolInformation,\n    SymbolKind,\n    TextDocument\n} from 'vscode';\nimport {\n    Commands,\n    DiffWithPreviousCommandArgs,\n    ShowQuickCommitDetailsCommandArgs,\n    ShowQuickCommitFileDetailsCommandArgs,\n    ShowQuickFileHistoryCommandArgs\n} from '../commands';\nimport {\n    CodeLensCommand,\n    CodeLensConfig,\n    CodeLensLanguageScope,\n    CodeLensScopes,\n    configuration\n} from '../configuration';\nimport { BuiltInCommands, DocumentSchemes } from '../constants';\nimport { Container } from '../container';\nimport { GitBlame, GitBlameCommit, GitBlameLines, GitService, GitUri } from '../git/gitService';\nimport { Logger } from '../logger';\nimport { Functions, Iterables } from '../system';\nimport { DocumentTracker, GitDocumentState } from '../trackers/gitDocumentTracker';\n\nexport class GitRecentChangeCodeLens extends CodeLens {\n    constructor(\n        public readonly languageId: string,\n        public readonly symbol: DocumentSymbol | SymbolInformation,\n        public readonly uri: GitUri | undefined,\n        private readonly blame: (() => GitBlameLines | undefined) | undefined,\n        public readonly blameRange: Range,\n        public readonly isFullRange: boolean,\n        range: Range,\n        public readonly desiredCommand: CodeLensCommand,\n        command?: Command | undefined\n    ) {\n        super(range, command);\n    }\n\n    getBlame(): GitBlameLines | undefined {\n        return this.blame && this.blame();\n    }\n}\n\nexport class GitAuthorsCodeLens extends CodeLens {\n    constructor(\n        public readonly languageId: string,\n        public readonly symbol: DocumentSymbol | SymbolInformation,\n        public readonly uri: GitUri | undefined,\n        private readonly blame: () => GitBlameLines | undefined,\n        public readonly blameRange: Range,\n        public readonly isFullRange: boolean,\n        range: Range,\n        public readonly desiredCommand: CodeLensCommand\n    ) {\n        super(range);\n    }\n\n    getBlame(): GitBlameLines | undefined {\n        return this.blame();\n    }\n}\n\nexport class GitCodeLensProvider implements CodeLensProvider {\n    private _onDidChangeCodeLenses = new EventEmitter<void>();\n    get onDidChangeCodeLenses(): Event<void> {\n        return this._onDidChangeCodeLenses.event;\n    }\n\n    static selector: DocumentSelector = [\n        { scheme: DocumentSchemes.File },\n        { scheme: DocumentSchemes.Vsls },\n        { scheme: DocumentSchemes.Git },\n        { scheme: DocumentSchemes.GitLens }\n    ];\n\n    constructor(\n        context: ExtensionContext,\n        private readonly _git: GitService,\n        private readonly _tracker: DocumentTracker<GitDocumentState>\n    ) {}\n\n    reset(reason?: 'idle' | 'saved') {\n        this._onDidChangeCodeLenses.fire();\n    }\n\n    async provideCodeLenses(document: TextDocument, token: CancellationToken): Promise<CodeLens[]> {\n        const trackedDocument = await this._tracker.getOrAdd(document);\n        if (!trackedDocument.isBlameable) return [];\n\n        let dirty = false;\n        if (document.isDirty) {\n            // Only allow dirty blames if we are idle\n            if (trackedDocument.isDirtyIdle) {\n                const maxLines = Container.config.advanced.blame.sizeThresholdAfterEdit;\n                if (maxLines > 0 && document.lineCount > maxLines) {\n                    dirty = true;\n                }\n            }\n            else {\n                dirty = true;\n            }\n        }\n\n        const cfg = configuration.get<CodeLensConfig>(configuration.name('codeLens').value, document.uri);\n\n        let languageScope =\n            cfg.scopesByLanguage &&\n            cfg.scopesByLanguage.find(\n                ll => ll.language !== undefined && ll.language.toLowerCase() === document.languageId\n            );\n        if (languageScope == null) {\n            languageScope = {\n                language: undefined\n            };\n        }\n        if (languageScope.scopes == null) {\n            languageScope.scopes = cfg.scopes;\n        }\n        if (languageScope.symbolScopes == null) {\n            languageScope.symbolScopes = cfg.symbolScopes;\n        }\n\n        languageScope.symbolScopes =\n            languageScope.symbolScopes != null\n                ? (languageScope.symbolScopes = languageScope.symbolScopes.map(s => s.toLowerCase()))\n                : [];\n\n        const lenses: CodeLens[] = [];\n\n        const gitUri = trackedDocument.uri;\n        let blame: GitBlame | undefined;\n        let symbols;\n\n        if (!dirty) {\n            if (token.isCancellationRequested) return lenses;\n\n            if (languageScope.scopes.length === 1 && languageScope.scopes.includes(CodeLensScopes.Document)) {\n                blame = document.isDirty\n                    ? await this._git.getBlameForFileContents(gitUri, document.getText())\n                    : await this._git.getBlameForFile(gitUri);\n            }\n            else {\n                [blame, symbols] = await Promise.all([\n                    document.isDirty\n                        ? this._git.getBlameForFileContents(gitUri, document.getText())\n                        : this._git.getBlameForFile(gitUri),\n                    commands.executeCommand(BuiltInCommands.ExecuteDocumentSymbolProvider, document.uri) as Promise<\n                        SymbolInformation[]\n                    >\n                ]);\n            }\n\n            if (blame === undefined || blame.lines.length === 0) return lenses;\n        }\n        else if (languageScope.scopes.length !== 1 || !languageScope.scopes.includes(CodeLensScopes.Document)) {\n            symbols = (await commands.executeCommand(\n                BuiltInCommands.ExecuteDocumentSymbolProvider,\n                document.uri\n            )) as SymbolInformation[];\n        }\n\n        if (token.isCancellationRequested) return lenses;\n\n        const documentRangeFn = Functions.once(() => document.validateRange(new Range(0, 1000000, 1000000, 1000000)));\n\n        // Since blame information isn't valid when there are unsaved changes -- update the lenses appropriately\n        const dirtyCommand: Command | undefined = dirty\n            ? { command: undefined!, title: this.getDirtyTitle(cfg) }\n            : undefined;\n\n        if (symbols !== undefined) {\n            Logger.log('GitCodeLensProvider.provideCodeLenses:', `${symbols.length} symbol(s) found`);\n            for (const sym of symbols) {\n                this.provideCodeLens(\n                    lenses,\n                    document,\n                    sym,\n                    languageScope as Required<CodeLensLanguageScope>,\n                    documentRangeFn,\n                    blame,\n                    gitUri,\n                    cfg,\n                    dirty,\n                    dirtyCommand\n                );\n            }\n        }\n\n        if (\n            (languageScope.scopes.includes(CodeLensScopes.Document) || languageScope.symbolScopes.includes('file')) &&\n            !languageScope.symbolScopes.includes('!file')\n        ) {\n            // Check if we have a lens for the whole document -- if not add one\n            if (!lenses.find(l => l.range.start.line === 0 && l.range.end.line === 0)) {\n                const blameRange = documentRangeFn();\n\n                let blameForRangeFn: (() => GitBlameLines | undefined) | undefined = undefined;\n                if (dirty || cfg.recentChange.enabled) {\n                    if (!dirty) {\n                        blameForRangeFn = Functions.once(() =>\n                            this._git.getBlameForRangeSync(blame!, gitUri, blameRange)\n                        );\n                    }\n\n                    const fileSymbol = new SymbolInformation(\n                        gitUri.fileName,\n                        SymbolKind.File,\n                        '',\n                        new Location(gitUri.documentUri(), new Range(0, 0, 0, blameRange.start.character))\n                    );\n                    lenses.push(\n                        new GitRecentChangeCodeLens(\n                            document.languageId,\n                            fileSymbol,\n                            gitUri,\n                            blameForRangeFn,\n                            blameRange,\n                            true,\n                            getRangeFromSymbol(fileSymbol),\n                            cfg.recentChange.command,\n                            dirtyCommand\n                        )\n                    );\n                }\n                if (!dirty && cfg.authors.enabled) {\n                    if (blameForRangeFn === undefined) {\n                        blameForRangeFn = Functions.once(() =>\n                            this._git.getBlameForRangeSync(blame!, gitUri, blameRange)\n                        );\n                    }\n\n                    const fileSymbol = new SymbolInformation(\n                        gitUri.fileName,\n                        SymbolKind.File,\n                        '',\n                        new Location(gitUri.documentUri(), new Range(0, 1, 0, blameRange.start.character))\n                    );\n                    lenses.push(\n                        new GitAuthorsCodeLens(\n                            document.languageId,\n                            fileSymbol,\n                            gitUri,\n                            blameForRangeFn,\n                            blameRange,\n                            true,\n                            getRangeFromSymbol(fileSymbol),\n                            cfg.authors.command\n                        )\n                    );\n                }\n            }\n        }\n\n        return lenses;\n    }\n\n    private getValidateSymbolRange(\n        symbol: SymbolInformation | DocumentSymbol,\n        languageScope: Required<CodeLensLanguageScope>,\n        documentRangeFn: () => Range,\n        includeSingleLineSymbols: boolean\n    ): Range | undefined {\n        let valid = false;\n        let range: Range | undefined;\n\n        const symbolName = SymbolKind[symbol.kind].toLowerCase();\n        switch (symbol.kind) {\n            case SymbolKind.File:\n                if (\n                    languageScope.scopes.includes(CodeLensScopes.Containers) ||\n                    languageScope.symbolScopes.includes(symbolName)\n                ) {\n                    valid = !languageScope.symbolScopes.includes(`!${symbolName}`);\n                }\n\n                if (valid) {\n                    // Adjust the range to be for the whole file\n                    range = documentRangeFn();\n                }\n                break;\n\n            case SymbolKind.Package:\n                if (\n                    languageScope.scopes.includes(CodeLensScopes.Containers) ||\n                    languageScope.symbolScopes.includes(symbolName)\n                ) {\n                    valid = !languageScope.symbolScopes.includes(`!${symbolName}`);\n                }\n\n                if (valid) {\n                    // Adjust the range to be for the whole file\n                    range = getRangeFromSymbol(symbol);\n                    if (range.start.line === 0 && range.end.line === 0) {\n                        range = documentRangeFn();\n                    }\n                }\n                break;\n\n            case SymbolKind.Class:\n            case SymbolKind.Interface:\n            case SymbolKind.Module:\n            case SymbolKind.Namespace:\n            case SymbolKind.Struct:\n                if (\n                    languageScope.scopes.includes(CodeLensScopes.Containers) ||\n                    languageScope.symbolScopes.includes(symbolName)\n                ) {\n                    range = getRangeFromSymbol(symbol);\n                    valid =\n                        !languageScope.symbolScopes.includes(`!${symbolName}`) &&\n                        (includeSingleLineSymbols || !range.isSingleLine);\n                }\n                break;\n\n            case SymbolKind.Constructor:\n            case SymbolKind.Enum:\n            case SymbolKind.Function:\n            case SymbolKind.Method:\n            case SymbolKind.Property:\n                if (\n                    languageScope.scopes.includes(CodeLensScopes.Blocks) ||\n                    languageScope.symbolScopes.includes(symbolName)\n                ) {\n                    range = getRangeFromSymbol(symbol);\n                    valid =\n                        !languageScope.symbolScopes.includes(`!${symbolName}`) &&\n                        (includeSingleLineSymbols || !range.isSingleLine);\n                }\n                break;\n\n            default:\n                if (languageScope.symbolScopes.includes(symbolName)) {\n                    range = getRangeFromSymbol(symbol);\n                    valid =\n                        !languageScope.symbolScopes.includes(`!${symbolName}`) &&\n                        (includeSingleLineSymbols || !range.isSingleLine);\n                }\n                break;\n        }\n\n        return valid ? range || getRangeFromSymbol(symbol) : undefined;\n    }\n\n    private provideCodeLens(\n        lenses: CodeLens[],\n        document: TextDocument,\n        symbol: SymbolInformation | DocumentSymbol,\n        languageScope: Required<CodeLensLanguageScope>,\n        documentRangeFn: () => Range,\n        blame: GitBlame | undefined,\n        gitUri: GitUri | undefined,\n        cfg: CodeLensConfig,\n        dirty: boolean,\n        dirtyCommand: Command | undefined\n    ): void {\n        try {\n            const blameRange = this.getValidateSymbolRange(\n                symbol,\n                languageScope,\n                documentRangeFn,\n                cfg.includeSingleLineSymbols\n            );\n            if (blameRange === undefined) return;\n\n            const line = document.lineAt(getRangeFromSymbol(symbol).start);\n            // Make sure there is only 1 lens per line\n            if (lenses.length && lenses[lenses.length - 1].range.start.line === line.lineNumber) return;\n\n            // Anchor the code lens to the start of the line -- so that the range won't change with edits (otherwise the code lens will be removed and re-added)\n            let startChar = 0;\n\n            let blameForRangeFn: (() => GitBlameLines | undefined) | undefined;\n            if (dirty || cfg.recentChange.enabled) {\n                if (!dirty) {\n                    blameForRangeFn = Functions.once(() => this._git.getBlameForRangeSync(blame!, gitUri!, blameRange));\n                }\n                lenses.push(\n                    new GitRecentChangeCodeLens(\n                        document.languageId,\n                        symbol,\n                        gitUri,\n                        blameForRangeFn,\n                        blameRange,\n                        false,\n                        line.range.with(new Position(line.range.start.line, startChar)),\n                        cfg.recentChange.command,\n                        dirtyCommand\n                    )\n                );\n                startChar++;\n            }\n\n            if (cfg.authors.enabled) {\n                let multiline = !blameRange.isSingleLine;\n                // HACK for Omnisharp, since it doesn't return full ranges\n                if (!multiline && document.languageId === 'csharp') {\n                    switch (symbol.kind) {\n                        case SymbolKind.File:\n                            break;\n                        case SymbolKind.Package:\n                        case SymbolKind.Module:\n                        case SymbolKind.Namespace:\n                        case SymbolKind.Class:\n                        case SymbolKind.Interface:\n                        case SymbolKind.Constructor:\n                        case SymbolKind.Method:\n                        case SymbolKind.Function:\n                        case SymbolKind.Enum:\n                            multiline = true;\n                            break;\n                    }\n                }\n\n                if (multiline && !dirty) {\n                    if (blameForRangeFn === undefined) {\n                        blameForRangeFn = Functions.once(() =>\n                            this._git.getBlameForRangeSync(blame!, gitUri!, blameRange)\n                        );\n                    }\n                    lenses.push(\n                        new GitAuthorsCodeLens(\n                            document.languageId,\n                            symbol,\n                            gitUri,\n                            blameForRangeFn,\n                            blameRange,\n                            false,\n                            line.range.with(new Position(line.range.start.line, startChar)),\n                            cfg.authors.command\n                        )\n                    );\n                }\n            }\n        }\n        finally {\n            if (isDocumentSymbol(symbol)) {\n                for (const child of symbol.children) {\n                    this.provideCodeLens(\n                        lenses,\n                        document,\n                        child,\n                        languageScope,\n                        documentRangeFn,\n                        blame,\n                        gitUri,\n                        cfg,\n                        dirty,\n                        dirtyCommand\n                    );\n                }\n            }\n        }\n    }\n\n    resolveCodeLens(lens: CodeLens, token: CancellationToken): CodeLens | Thenable<CodeLens> {\n        if (lens instanceof GitRecentChangeCodeLens) return this.resolveGitRecentChangeCodeLens(lens, token);\n        if (lens instanceof GitAuthorsCodeLens) return this.resolveGitAuthorsCodeLens(lens, token);\n        return Promise.reject<CodeLens>(undefined);\n    }\n\n    private resolveGitRecentChangeCodeLens(lens: GitRecentChangeCodeLens, token: CancellationToken): CodeLens {\n        const blame = lens.getBlame();\n        if (blame === undefined) return lens;\n\n        const recentCommit = Iterables.first(blame.commits.values());\n        let title = `${recentCommit.author}, ${recentCommit.formattedDate}`;\n        if (Container.config.debug) {\n            title += ` [${lens.languageId}: ${SymbolKind[lens.symbol.kind]}(${lens.range.start.character}-${\n                lens.range.end.character\n            }${\n                (lens.symbol as SymbolInformation).containerName\n                    ? `|${(lens.symbol as SymbolInformation).containerName}`\n                    : ''\n            }), Lines (${lens.blameRange.start.line + 1}-${lens.blameRange.end.line + 1}), Commit (${\n                recentCommit.shortSha\n            })]`;\n        }\n\n        switch (lens.desiredCommand) {\n            case CodeLensCommand.DiffWithPrevious:\n                return this.applyDiffWithPreviousCommand<GitRecentChangeCodeLens>(title, lens, blame, recentCommit);\n            case CodeLensCommand.ShowQuickCommitDetails:\n                return this.applyShowQuickCommitDetailsCommand<GitRecentChangeCodeLens>(\n                    title,\n                    lens,\n                    blame,\n                    recentCommit\n                );\n            case CodeLensCommand.ShowQuickCommitFileDetails:\n                return this.applyShowQuickCommitFileDetailsCommand<GitRecentChangeCodeLens>(\n                    title,\n                    lens,\n                    blame,\n                    recentCommit\n                );\n            case CodeLensCommand.ShowQuickCurrentBranchHistory:\n                return this.applyShowQuickCurrentBranchHistoryCommand<GitRecentChangeCodeLens>(\n                    title,\n                    lens,\n                    blame,\n                    recentCommit\n                );\n            case CodeLensCommand.ShowQuickFileHistory:\n                return this.applyShowQuickFileHistoryCommand<GitRecentChangeCodeLens>(title, lens, blame, recentCommit);\n            case CodeLensCommand.ToggleFileBlame:\n                return this.applyToggleFileBlameCommand<GitRecentChangeCodeLens>(title, lens, blame);\n            default:\n                return lens;\n        }\n    }\n\n    private resolveGitAuthorsCodeLens(lens: GitAuthorsCodeLens, token: CancellationToken): CodeLens {\n        const blame = lens.getBlame();\n        if (blame === undefined) return lens;\n\n        const count = blame.authors.size;\n        let title = `${count} ${count > 1 ? 'authors' : 'author'} (${Iterables.first(blame.authors.values()).name}${\n            count > 1 ? ' and others' : ''\n        })`;\n        if (Container.config.debug) {\n            title += ` [${lens.languageId}: ${SymbolKind[lens.symbol.kind]}(${lens.range.start.character}-${\n                lens.range.end.character\n            }${\n                (lens.symbol as SymbolInformation).containerName\n                    ? `|${(lens.symbol as SymbolInformation).containerName}`\n                    : ''\n            }), Lines (${lens.blameRange.start.line + 1}-${lens.blameRange.end.line + 1}), Authors (${Iterables.join(\n                Iterables.map(blame.authors.values(), a => a.name),\n                ', '\n            )})]`;\n        }\n\n        switch (lens.desiredCommand) {\n            case CodeLensCommand.DiffWithPrevious:\n                return this.applyDiffWithPreviousCommand<GitAuthorsCodeLens>(title, lens, blame);\n            case CodeLensCommand.ShowQuickCommitDetails:\n                return this.applyShowQuickCommitDetailsCommand<GitAuthorsCodeLens>(title, lens, blame);\n            case CodeLensCommand.ShowQuickCommitFileDetails:\n                return this.applyShowQuickCommitFileDetailsCommand<GitAuthorsCodeLens>(title, lens, blame);\n            case CodeLensCommand.ShowQuickCurrentBranchHistory:\n                return this.applyShowQuickCurrentBranchHistoryCommand<GitAuthorsCodeLens>(title, lens, blame);\n            case CodeLensCommand.ShowQuickFileHistory:\n                return this.applyShowQuickFileHistoryCommand<GitAuthorsCodeLens>(title, lens, blame);\n            case CodeLensCommand.ToggleFileBlame:\n                return this.applyToggleFileBlameCommand<GitAuthorsCodeLens>(title, lens, blame);\n            default:\n                return lens;\n        }\n    }\n\n    private applyDiffWithPreviousCommand<T extends GitRecentChangeCodeLens | GitAuthorsCodeLens>(\n        title: string,\n        lens: T,\n        blame: GitBlameLines,\n        commit?: GitBlameCommit\n    ): T {\n        if (commit === undefined) {\n            const blameLine = blame.allLines[lens.range.start.line];\n            commit = blame.commits.get(blameLine.sha);\n        }\n\n        const commandArgs: DiffWithPreviousCommandArgs = {\n            commit: commit\n        };\n        lens.command = {\n            title: title,\n            command: Commands.DiffWithPrevious,\n            arguments: [lens.uri!.toFileUri(), commandArgs]\n        };\n        return lens;\n    }\n\n    private applyShowQuickCommitDetailsCommand<T extends GitRecentChangeCodeLens | GitAuthorsCodeLens>(\n        title: string,\n        lens: T,\n        blame: GitBlameLines,\n        commit?: GitBlameCommit\n    ): T {\n        const commandArgs: ShowQuickCommitDetailsCommandArgs = {\n            commit: commit,\n            sha: commit === undefined ? undefined : commit.sha\n        };\n        lens.command = {\n            title: title,\n            command: commit !== undefined && commit.isUncommitted ? '' : CodeLensCommand.ShowQuickCommitDetails,\n            arguments: [lens.uri!.toFileUri(), commandArgs]\n        };\n        return lens;\n    }\n\n    private applyShowQuickCommitFileDetailsCommand<T extends GitRecentChangeCodeLens | GitAuthorsCodeLens>(\n        title: string,\n        lens: T,\n        blame: GitBlameLines,\n        commit?: GitBlameCommit\n    ): T {\n        const commandArgs: ShowQuickCommitFileDetailsCommandArgs = {\n            commit: commit,\n            sha: commit === undefined ? undefined : commit.sha\n        };\n        lens.command = {\n            title: title,\n            command: commit !== undefined && commit.isUncommitted ? '' : CodeLensCommand.ShowQuickCommitFileDetails,\n            arguments: [lens.uri!.toFileUri(), commandArgs]\n        };\n        return lens;\n    }\n\n    private applyShowQuickCurrentBranchHistoryCommand<T extends GitRecentChangeCodeLens | GitAuthorsCodeLens>(\n        title: string,\n        lens: T,\n        blame: GitBlameLines,\n        commit?: GitBlameCommit\n    ): T {\n        lens.command = {\n            title: title,\n            command: CodeLensCommand.ShowQuickCurrentBranchHistory,\n            arguments: [lens.uri!.toFileUri()]\n        };\n        return lens;\n    }\n\n    private applyShowQuickFileHistoryCommand<T extends GitRecentChangeCodeLens | GitAuthorsCodeLens>(\n        title: string,\n        lens: T,\n        blame: GitBlameLines,\n        commit?: GitBlameCommit\n    ): T {\n        const commandArgs: ShowQuickFileHistoryCommandArgs = {\n            range: lens.isFullRange ? undefined : lens.blameRange\n        };\n        lens.command = {\n            title: title,\n            command: CodeLensCommand.ShowQuickFileHistory,\n            arguments: [lens.uri!.toFileUri(), commandArgs]\n        };\n        return lens;\n    }\n\n    private applyToggleFileBlameCommand<T extends GitRecentChangeCodeLens | GitAuthorsCodeLens>(\n        title: string,\n        lens: T,\n        blame: GitBlameLines\n    ): T {\n        lens.command = {\n            title: title,\n            command: Commands.ToggleFileBlame,\n            arguments: [lens.uri!.toFileUri()]\n        };\n        return lens;\n    }\n\n    private getDirtyTitle(cfg: CodeLensConfig) {\n        if (cfg.recentChange.enabled && cfg.authors.enabled) {\n            return Container.config.strings.codeLens.unsavedChanges.recentChangeAndAuthors;\n        }\n        if (cfg.recentChange.enabled) return Container.config.strings.codeLens.unsavedChanges.recentChangeOnly;\n        return Container.config.strings.codeLens.unsavedChanges.authorsOnly;\n    }\n}\n\nfunction getRangeFromSymbol(symbol: DocumentSymbol | SymbolInformation) {\n    return isDocumentSymbol(symbol) ? symbol.range : symbol.location.range;\n}\n\nfunction isDocumentSymbol(symbol: DocumentSymbol | SymbolInformation): symbol is DocumentSymbol {\n    return Functions.is<DocumentSymbol>(symbol, 'children');\n}\n","'use strict';\nimport { ConfigurationChangeEvent, Disposable, languages } from 'vscode';\nimport { configuration } from '../configuration';\nimport { CommandContext, setCommandContext } from '../constants';\nimport { Container } from '../container';\nimport { Logger } from '../logger';\nimport {\n    DocumentBlameStateChangeEvent,\n    DocumentDirtyIdleTriggerEvent,\n    GitDocumentState\n} from '../trackers/gitDocumentTracker';\nimport { GitCodeLensProvider } from './codeLensProvider';\n\nexport class GitCodeLensController implements Disposable {\n    private _canToggle: boolean = false;\n    private _disposable: Disposable | undefined;\n    private _provider: GitCodeLensProvider | undefined;\n    private _providerDisposable: Disposable | undefined;\n\n    constructor() {\n        this._disposable = Disposable.from(configuration.onDidChange(this.onConfigurationChanged, this));\n        this.onConfigurationChanged(configuration.initializingChangeEvent);\n    }\n\n    dispose() {\n        this._providerDisposable && this._providerDisposable.dispose();\n        this._disposable && this._disposable.dispose();\n    }\n\n    private onConfigurationChanged(e: ConfigurationChangeEvent) {\n        const section = configuration.name('codeLens').value;\n        if (\n            configuration.changed(e, section, null) ||\n            configuration.changed(e, configuration.name('defaultDateFormat').value) ||\n            configuration.changed(e, configuration.name('defaultDateSource').value) ||\n            configuration.changed(e, configuration.name('defaultDateStyle').value)\n        ) {\n            if (!configuration.initializing(e)) {\n                Logger.log('CodeLens config changed; resetting CodeLens provider');\n            }\n\n            const cfg = Container.config.codeLens;\n            if (cfg.enabled && (cfg.recentChange.enabled || cfg.authors.enabled)) {\n                if (this._provider !== undefined) {\n                    this._provider.reset();\n                }\n                else {\n                    this.createProvider();\n                }\n            }\n            else {\n                if (this._providerDisposable !== undefined) {\n                    this._providerDisposable.dispose();\n                    this._providerDisposable = undefined;\n                }\n                this._provider = undefined;\n            }\n\n            this._canToggle = cfg.recentChange.enabled || cfg.authors.enabled;\n            setCommandContext(CommandContext.CanToggleCodeLens, this._canToggle);\n        }\n    }\n\n    private onBlameStateChanged(e: DocumentBlameStateChangeEvent<GitDocumentState>) {\n        // Only reset if we have saved, since the code lens won't naturally be re-rendered\n        if (this._provider === undefined || !e.blameable) return;\n\n        Logger.log('Blame state changed; resetting CodeLens provider');\n        this._provider.reset('saved');\n    }\n\n    private onDirtyIdleTriggered(e: DocumentDirtyIdleTriggerEvent<GitDocumentState>) {\n        if (this._provider === undefined || !e.document.isBlameable) return;\n\n        const maxLines = Container.config.advanced.blame.sizeThresholdAfterEdit;\n        if (maxLines > 0 && e.document.lineCount > maxLines) return;\n\n        Logger.log('Dirty idle triggered; resetting CodeLens provider');\n        this._provider.reset('idle');\n    }\n\n    toggleCodeLens() {\n        if (!this._canToggle) return;\n\n        Logger.log('toggleCodeLens()');\n        if (this._provider !== undefined) {\n            if (this._providerDisposable !== undefined) {\n                this._providerDisposable.dispose();\n                this._providerDisposable = undefined;\n            }\n\n            this._provider = undefined;\n\n            return;\n        }\n\n        this.createProvider();\n    }\n\n    private createProvider() {\n        this._provider = new GitCodeLensProvider(Container.context, Container.git, Container.tracker);\n        this._providerDisposable = Disposable.from(\n            languages.registerCodeLensProvider(GitCodeLensProvider.selector, this._provider),\n            Container.tracker.onDidChangeBlameState(this.onBlameStateChanged, this),\n            Container.tracker.onDidTriggerDirtyIdle(this.onDirtyIdleTriggered, this)\n        );\n    }\n}\n","'use strict';\nimport * as paths from 'path';\nimport {\n    Disposable,\n    Event,\n    EventEmitter,\n    FileChangeEvent,\n    FileStat,\n    FileSystemError,\n    FileSystemProvider,\n    FileType,\n    Uri,\n    workspace\n} from 'vscode';\nimport { DocumentSchemes } from '../constants';\nimport { Container } from '../container';\nimport { GitService, GitTree, GitUri } from '../git/gitService';\nimport { Iterables, Strings, TernarySearchTree } from '../system';\n\nconst emptyArray = new Uint8Array(0);\n\nexport function fromGitLensFSUri(uri: Uri): { path: string; ref: string; repoPath: string } {\n    const gitUri = uri instanceof GitUri ? uri : GitUri.fromRevisionUri(uri);\n    return { path: gitUri.relativePath, ref: gitUri.sha!, repoPath: gitUri.repoPath! };\n}\n\nexport function toGitLensFSUri(ref: string, repoPath: string): Uri {\n    return GitUri.toRevisionUri(ref, repoPath, repoPath);\n}\n\nexport class GitFileSystemProvider implements FileSystemProvider, Disposable {\n    private readonly _disposable: Disposable;\n    private readonly _searchTreeMap = new Map<string, Promise<TernarySearchTree<GitTree>>>();\n\n    constructor() {\n        this._disposable = Disposable.from(\n            workspace.registerFileSystemProvider(DocumentSchemes.GitLens, this, {\n                isCaseSensitive: true,\n                isReadonly: true\n            })\n        );\n    }\n\n    dispose() {\n        this._disposable && this._disposable.dispose();\n    }\n\n    private _onDidChangeFile = new EventEmitter<FileChangeEvent[]>();\n    get onDidChangeFile(): Event<FileChangeEvent[]> {\n        return this._onDidChangeFile.event;\n    }\n\n    copy?(): void | Thenable<void> {\n        throw FileSystemError.NoPermissions;\n    }\n    createDirectory(): void | Thenable<void> {\n        throw FileSystemError.NoPermissions;\n    }\n    delete(): void | Thenable<void> {\n        throw FileSystemError.NoPermissions;\n    }\n\n    async readDirectory(uri: Uri): Promise<[string, FileType][]> {\n        const { path, ref, repoPath } = fromGitLensFSUri(uri);\n\n        const tree = await this.getTree(path, ref, repoPath);\n        if (tree === undefined) throw FileSystemError.FileNotFound(uri);\n\n        const items = [\n            ...Iterables.map<GitTree, [string, FileType]>(tree, t => [\n                path != null && path.length !== 0 ? Strings.normalizePath(paths.relative(path, t.path)) : t.path,\n                typeToFileType(t.type)\n            ])\n        ];\n        return items;\n    }\n\n    async readFile(uri: Uri): Promise<Uint8Array> {\n        const { path, ref, repoPath } = fromGitLensFSUri(uri);\n\n        if (ref === GitService.deletedOrMissingSha) return emptyArray;\n\n        const buffer = await Container.git.getVersionedFileBuffer(repoPath, path, ref);\n        if (buffer === undefined) return emptyArray;\n\n        return buffer;\n    }\n\n    rename(): void | Thenable<void> {\n        throw FileSystemError.NoPermissions;\n    }\n\n    async stat(uri: Uri): Promise<FileStat> {\n        const { path, ref, repoPath } = fromGitLensFSUri(uri);\n\n        if (ref === GitService.deletedOrMissingSha) {\n            return {\n                type: FileType.File,\n                size: 0,\n                ctime: 0,\n                mtime: 0\n            };\n        }\n\n        let treeItem;\n\n        const searchTree = this._searchTreeMap.get(ref);\n        if (searchTree !== undefined) {\n            // Add the fake root folder to the path\n            treeItem = (await searchTree).get(`/~/${path}`);\n        }\n        else {\n            if (path == null || path.length === 0) {\n                const tree = await this.getTree(path, ref, repoPath);\n                if (tree === undefined) throw FileSystemError.FileNotFound(uri);\n\n                return {\n                    type: FileType.Directory,\n                    size: 0,\n                    ctime: 0,\n                    mtime: 0\n                };\n            }\n\n            treeItem = await Container.git.getTreeFileForRevision(repoPath, path, ref);\n        }\n\n        if (treeItem === undefined) {\n            throw FileSystemError.FileNotFound(uri);\n        }\n\n        return {\n            type: typeToFileType(treeItem.type),\n            size: treeItem.size,\n            ctime: 0,\n            mtime: 0\n        };\n    }\n\n    watch(): Disposable {\n        return {\n            dispose: () => {\n                // nothing to dispose\n            }\n        };\n    }\n\n    writeFile(): void | Thenable<void> {\n        throw FileSystemError.NoPermissions;\n    }\n\n    private async createSearchTree(ref: string, repoPath: string) {\n        const searchTree = TernarySearchTree.forPaths() as TernarySearchTree<GitTree>;\n        const trees = await Container.git.getTreeForRevision(repoPath, ref);\n\n        // Add a fake root folder so that searches will work\n        searchTree.set('~', { commitSha: '', path: '~', size: 0, type: 'tree' });\n        for (const item of trees) {\n            searchTree.set(`~/${item.path}`, item);\n        }\n\n        return searchTree;\n    }\n\n    private getOrCreateSearchTree(ref: string, repoPath: string) {\n        let searchTree = this._searchTreeMap.get(ref);\n        if (searchTree === undefined) {\n            searchTree = this.createSearchTree(ref, repoPath);\n            this._searchTreeMap.set(ref, searchTree);\n        }\n\n        return searchTree;\n    }\n\n    private async getTree(path: string, ref: string, repoPath: string) {\n        const searchTree = await this.getOrCreateSearchTree(ref, repoPath);\n        // Add the fake root folder to the path\n        return searchTree!.findSuperstr(`/~/${path}`, true);\n    }\n}\n\nfunction typeToFileType(type: 'blob' | 'tree' | undefined | null) {\n    switch (type) {\n        case 'blob':\n            return FileType.File;\n        case 'tree':\n            return FileType.Directory;\n        default:\n            return FileType.Unknown;\n    }\n}\n","'use strict';\nimport {\n    CancellationToken,\n    ConfigurationChangeEvent,\n    Disposable,\n    Hover,\n    languages,\n    Position,\n    Range,\n    TextDocument,\n    TextEditor,\n    window\n} from 'vscode';\nimport { Annotations } from '../annotations/annotations';\nimport { configuration } from '../configuration';\nimport { Container } from '../container';\nimport { LinesChangeEvent } from '../trackers/gitLineTracker';\n\nexport class LineHoverController implements Disposable {\n    private _disposable: Disposable;\n    private _hoverProviderDisposable: Disposable | undefined;\n\n    constructor() {\n        this._disposable = Disposable.from(configuration.onDidChange(this.onConfigurationChanged, this));\n        this.onConfigurationChanged(configuration.initializingChangeEvent);\n    }\n\n    dispose() {\n        this.unregister();\n\n        Container.lineTracker.stop(this);\n        this._disposable && this._disposable.dispose();\n    }\n\n    private onConfigurationChanged(e: ConfigurationChangeEvent) {\n        if (\n            !configuration.changed(e, configuration.name('hovers')('enabled').value) &&\n            !configuration.changed(e, configuration.name('hovers')('currentLine')('enabled').value)\n        ) {\n            return;\n        }\n\n        if (Container.config.hovers.enabled && Container.config.hovers.currentLine.enabled) {\n            Container.lineTracker.start(\n                this,\n                Disposable.from(Container.lineTracker.onDidChangeActiveLines(this.onActiveLinesChanged, this))\n            );\n\n            this.register(window.activeTextEditor);\n        }\n        else {\n            Container.lineTracker.stop(this);\n            this.unregister();\n        }\n    }\n\n    private onActiveLinesChanged(e: LinesChangeEvent) {\n        if (e.pending) return;\n\n        if (e.editor === undefined || e.lines === undefined) {\n            this.unregister();\n\n            return;\n        }\n\n        if (e.reason !== 'editor' && this.registered) return;\n\n        this.register(e.editor);\n    }\n\n    get registered() {\n        return this._hoverProviderDisposable !== undefined;\n    }\n\n    async provideDetailsHover(\n        document: TextDocument,\n        position: Position,\n        token: CancellationToken\n    ): Promise<Hover | undefined> {\n        if (!Container.lineTracker.includes(position.line)) return undefined;\n\n        const lineState = Container.lineTracker.getState(position.line);\n        const commit = lineState !== undefined ? lineState.commit : undefined;\n        if (commit === undefined) return undefined;\n\n        // Avoid double annotations if we are showing the whole-file hover blame annotations\n        const fileAnnotations = await Container.fileAnnotations.getAnnotationType(window.activeTextEditor);\n        if (fileAnnotations !== undefined && Container.config.hovers.annotations.details) return undefined;\n\n        const wholeLine = Container.config.hovers.currentLine.over === 'line';\n        // If we aren't showing the hover over the whole line, make sure the annotation is on\n        if (!wholeLine && Container.lineAnnotations.suspended) return undefined;\n\n        const range = document.validateRange(\n            new Range(position.line, wholeLine ? 0 : Number.MAX_SAFE_INTEGER, position.line, Number.MAX_SAFE_INTEGER)\n        );\n        if (!wholeLine && range.start.character !== position.character) return undefined;\n\n        // Get the full commit message -- since blame only returns the summary\n        let logCommit = lineState !== undefined ? lineState.logCommit : undefined;\n        if (logCommit === undefined && !commit.isUncommitted) {\n            logCommit = await Container.git.getCommitForFile(commit.repoPath, commit.uri.fsPath, {\n                ref: commit.sha\n            });\n            if (logCommit !== undefined) {\n                // Preserve the previous commit from the blame commit\n                logCommit.previousSha = commit.previousSha;\n                logCommit.previousFileName = commit.previousFileName;\n\n                if (lineState !== undefined) {\n                    lineState.logCommit = logCommit;\n                }\n            }\n        }\n\n        let editorLine = position.line;\n        const line = editorLine + 1;\n        const commitLine = commit.lines.find(l => l.line === line) || commit.lines[0];\n        editorLine = commitLine.originalLine - 1;\n\n        const trackedDocument = await Container.tracker.get(document);\n        if (trackedDocument === undefined) return undefined;\n\n        const message = await Annotations.detailsHoverMessage(\n            logCommit || commit,\n            trackedDocument.uri,\n            editorLine,\n            Container.config.defaultDateFormat,\n            fileAnnotations\n        );\n        return new Hover(message, range);\n    }\n\n    async provideChangesHover(\n        document: TextDocument,\n        position: Position,\n        token: CancellationToken\n    ): Promise<Hover | undefined> {\n        if (!Container.lineTracker.includes(position.line)) return undefined;\n\n        const lineState = Container.lineTracker.getState(position.line);\n        const commit = lineState !== undefined ? lineState.commit : undefined;\n        if (commit === undefined) return undefined;\n\n        // Avoid double annotations if we are showing the whole-file hover blame annotations\n        if (Container.config.hovers.annotations.changes) {\n            const fileAnnotations = await Container.fileAnnotations.getAnnotationType(window.activeTextEditor);\n            if (fileAnnotations !== undefined) return undefined;\n        }\n\n        const wholeLine = Container.config.hovers.currentLine.over === 'line';\n        // If we aren't showing the hover over the whole line, make sure the annotation is on\n        if (!wholeLine && Container.lineAnnotations.suspended) return undefined;\n\n        const range = document.validateRange(\n            new Range(position.line, wholeLine ? 0 : Number.MAX_SAFE_INTEGER, position.line, Number.MAX_SAFE_INTEGER)\n        );\n        if (!wholeLine && range.start.character !== position.character) return undefined;\n\n        const trackedDocument = await Container.tracker.get(document);\n        if (trackedDocument === undefined) return undefined;\n\n        const message = await Annotations.changesHoverMessage(commit, trackedDocument.uri, position.line);\n        if (message === undefined) return undefined;\n\n        return new Hover(message, range);\n    }\n\n    private register(editor: TextEditor | undefined) {\n        this.unregister();\n\n        if (editor === undefined) return;\n\n        const cfg = Container.config.hovers;\n        if (!cfg.enabled || !cfg.currentLine.enabled || (!cfg.currentLine.details && !cfg.currentLine.changes)) return;\n\n        const subscriptions = [];\n        if (cfg.currentLine.changes) {\n            subscriptions.push(\n                languages.registerHoverProvider(\n                    { pattern: editor.document.uri.fsPath },\n                    {\n                        provideHover: this.provideChangesHover.bind(this)\n                    }\n                )\n            );\n        }\n        if (cfg.currentLine.details) {\n            subscriptions.push(\n                languages.registerHoverProvider(\n                    { pattern: editor.document.uri.fsPath },\n                    {\n                        provideHover: this.provideDetailsHover.bind(this)\n                    }\n                )\n            );\n        }\n\n        this._hoverProviderDisposable = Disposable.from(...subscriptions);\n    }\n\n    private unregister() {\n        if (this._hoverProviderDisposable !== undefined) {\n            this._hoverProviderDisposable.dispose();\n            this._hoverProviderDisposable = undefined;\n        }\n    }\n}\n","'use strict';\nimport { commands, Disposable } from 'vscode';\nimport { CommandContext, extensionId, setCommandContext } from './constants';\nimport { Logger } from './logger';\n\nexport declare interface KeyCommand {\n    onDidPressKey?(key: Keys): Thenable<{} | undefined>;\n}\n\nconst keyNoopCommand = Object.create(null) as KeyCommand;\nexport { keyNoopCommand as KeyNoopCommand };\n\nexport declare type Keys = 'left' | 'right' | ',' | '.' | 'escape';\nexport const keys: Keys[] = ['left', 'right', ',', '.', 'escape'];\n\nexport declare interface KeyMapping {\n    [id: string]: KeyCommand | (() => Thenable<KeyCommand>) | undefined;\n}\n\nconst mappings: KeyMapping[] = [];\n\nexport class KeyboardScope implements Disposable {\n    constructor(private readonly mapping: KeyMapping) {\n        for (const key in mapping) {\n            mapping[key] = mapping[key] || keyNoopCommand;\n        }\n    }\n\n    async dispose() {\n        const index = mappings.indexOf(this.mapping);\n        Logger.log('KeyboardScope.dispose', mappings.length, index);\n        if (index === mappings.length - 1) {\n            mappings.pop();\n            await this.updateKeyCommandsContext(mappings[mappings.length - 1]);\n        }\n        else {\n            mappings.splice(index, 1);\n        }\n    }\n\n    async begin() {\n        mappings.push(this.mapping);\n        await this.updateKeyCommandsContext(this.mapping);\n        return this;\n    }\n\n    async clearKeyCommand(key: Keys) {\n        const mapping = mappings[mappings.length - 1];\n        if (mapping !== this.mapping || !mapping[key]) return;\n\n        Logger.log('KeyboardScope.clearKeyCommand', mappings.length, key);\n        mapping[key] = undefined;\n        await setCommandContext(`${CommandContext.Key}:${key}`, false);\n    }\n\n    async setKeyCommand(key: Keys, command: KeyCommand | (() => Promise<KeyCommand>)) {\n        const mapping = mappings[mappings.length - 1];\n        if (mapping !== this.mapping) return;\n\n        Logger.log('KeyboardScope.setKeyCommand', mappings.length, key, Boolean(mapping[key]));\n\n        if (!mapping[key]) {\n            mapping[key] = command;\n            await setCommandContext(`${CommandContext.Key}:${key}`, true);\n        }\n        else {\n            mapping[key] = command;\n        }\n    }\n\n    private async updateKeyCommandsContext(mapping: KeyMapping) {\n        const promises = [];\n        for (const key of keys) {\n            promises.push(setCommandContext(`${CommandContext.Key}:${key}`, Boolean(mapping && mapping[key])));\n        }\n        await Promise.all(promises);\n    }\n}\n\nexport class Keyboard implements Disposable {\n    private _disposable: Disposable;\n\n    constructor() {\n        const subscriptions = keys.map(key =>\n            commands.registerCommand(`${extensionId}.key.${key}`, () => this.execute(key), this)\n        );\n        this._disposable = Disposable.from(...subscriptions);\n    }\n\n    dispose() {\n        this._disposable && this._disposable.dispose();\n    }\n\n    beginScope(mapping?: KeyMapping): Promise<KeyboardScope> {\n        Logger.log('Keyboard.beginScope', mappings.length);\n        return new KeyboardScope(mapping ? Object.assign(Object.create(null), mapping) : Object.create(null)).begin();\n    }\n\n    async execute(key: Keys): Promise<{} | undefined> {\n        if (!mappings.length) return undefined;\n\n        try {\n            const mapping = mappings[mappings.length - 1];\n\n            let command = mapping[key] as KeyCommand | (() => Promise<KeyCommand>);\n            if (typeof command === 'function') {\n                command = await command();\n            }\n            if (!command || typeof command.onDidPressKey !== 'function') return undefined;\n\n            Logger.log('Keyboard.execute', key);\n\n            return await command.onDidPressKey(key);\n        }\n        catch (ex) {\n            Logger.error(ex, 'Keyboard.execute');\n            return undefined;\n        }\n    }\n}\n","'use strict';\nimport { ConfigurationChangeEvent, Disposable, StatusBarAlignment, StatusBarItem, TextEditor, window } from 'vscode';\nimport { Commands } from '../commands';\nimport { configuration, StatusBarCommand } from '../configuration';\nimport { isTextEditor } from '../constants';\nimport { Container } from '../container';\nimport { CommitFormatter, GitCommit } from '../git/gitService';\nimport { LinesChangeEvent } from '../trackers/gitLineTracker';\n\nexport class StatusBarController implements Disposable {\n    private _blameStatusBarItem: StatusBarItem | undefined;\n    private _disposable: Disposable;\n    private _modeStatusBarItem: StatusBarItem | undefined;\n\n    constructor() {\n        this._disposable = Disposable.from(configuration.onDidChange(this.onConfigurationChanged, this));\n        this.onConfigurationChanged(configuration.initializingChangeEvent);\n    }\n\n    dispose() {\n        this.clearBlame();\n\n        this._blameStatusBarItem && this._blameStatusBarItem.dispose();\n        this._modeStatusBarItem && this._modeStatusBarItem.dispose();\n\n        Container.lineTracker.stop(this);\n        this._disposable && this._disposable.dispose();\n    }\n\n    private onConfigurationChanged(e: ConfigurationChangeEvent) {\n        if (configuration.changed(e, configuration.name('mode').value)) {\n            const mode =\n                Container.config.mode.active && Container.config.mode.statusBar.enabled\n                    ? Container.config.modes[Container.config.mode.active]\n                    : undefined;\n            if (mode && mode.statusBarItemName) {\n                const alignment =\n                    Container.config.mode.statusBar.alignment !== 'left'\n                        ? StatusBarAlignment.Right\n                        : StatusBarAlignment.Left;\n\n                if (configuration.changed(e, configuration.name('mode')('statusBar')('alignment').value)) {\n                    if (this._modeStatusBarItem !== undefined && this._modeStatusBarItem.alignment !== alignment) {\n                        this._modeStatusBarItem.dispose();\n                        this._modeStatusBarItem = undefined;\n                    }\n                }\n\n                this._modeStatusBarItem =\n                    this._modeStatusBarItem ||\n                    window.createStatusBarItem(alignment, alignment === StatusBarAlignment.Right ? 999 : 1);\n                this._modeStatusBarItem.command = Commands.SwitchMode;\n                this._modeStatusBarItem.text = mode.statusBarItemName;\n                this._modeStatusBarItem.tooltip = 'Switch GitLens Mode';\n                this._modeStatusBarItem.show();\n            }\n            else if (this._modeStatusBarItem !== undefined) {\n                this._modeStatusBarItem.dispose();\n                this._modeStatusBarItem = undefined;\n            }\n        }\n\n        if (!configuration.changed(e, configuration.name('statusBar').value)) return;\n\n        if (Container.config.statusBar.enabled) {\n            const alignment =\n                Container.config.statusBar.alignment !== 'left' ? StatusBarAlignment.Right : StatusBarAlignment.Left;\n\n            if (configuration.changed(e, configuration.name('statusBar')('alignment').value)) {\n                if (this._blameStatusBarItem !== undefined && this._blameStatusBarItem.alignment !== alignment) {\n                    this._blameStatusBarItem.dispose();\n                    this._blameStatusBarItem = undefined;\n                }\n            }\n\n            this._blameStatusBarItem =\n                this._blameStatusBarItem ||\n                window.createStatusBarItem(alignment, alignment === StatusBarAlignment.Right ? 1000 : 0);\n            this._blameStatusBarItem.command = Container.config.statusBar.command;\n\n            if (configuration.changed(e, configuration.name('statusBar')('enabled').value)) {\n                Container.lineTracker.start(\n                    this,\n                    Disposable.from(Container.lineTracker.onDidChangeActiveLines(this.onActiveLinesChanged, this))\n                );\n            }\n        }\n        else if (configuration.changed(e, configuration.name('statusBar')('enabled').value)) {\n            Container.lineTracker.stop(this);\n\n            if (this._blameStatusBarItem !== undefined) {\n                this._blameStatusBarItem.dispose();\n                this._blameStatusBarItem = undefined;\n            }\n        }\n    }\n\n    private onActiveLinesChanged(e: LinesChangeEvent) {\n        // If we need to reduceFlicker, don't clear if only the selected lines changed\n        let clear = !(\n            Container.config.statusBar.reduceFlicker &&\n            e.reason === 'selection' &&\n            (e.pending || e.lines !== undefined)\n        );\n        if (!e.pending && e.lines !== undefined) {\n            const state = Container.lineTracker.getState(e.lines[0]);\n            if (state !== undefined && state.commit !== undefined) {\n                this.updateBlame(state.commit, e.editor!);\n\n                return;\n            }\n\n            clear = true;\n        }\n\n        if (clear) {\n            this.clearBlame();\n        }\n    }\n\n    clearBlame() {\n        if (this._blameStatusBarItem !== undefined) {\n            this._blameStatusBarItem.hide();\n        }\n    }\n\n    private updateBlame(commit: GitCommit, editor: TextEditor) {\n        const cfg = Container.config.statusBar;\n        if (!cfg.enabled || this._blameStatusBarItem === undefined || !isTextEditor(editor)) return;\n\n        this._blameStatusBarItem.text = `$(git-commit) ${CommitFormatter.fromTemplate(cfg.format, commit, {\n            truncateMessageAtNewLine: true,\n            dateFormat: cfg.dateFormat === null ? Container.config.defaultDateFormat : cfg.dateFormat\n        })}`;\n\n        switch (cfg.command) {\n            case StatusBarCommand.ToggleFileBlame:\n                this._blameStatusBarItem.tooltip = 'Toggle Blame Annotations';\n                break;\n            case StatusBarCommand.DiffWithPrevious:\n                this._blameStatusBarItem.command = Commands.DiffLineWithPrevious;\n                this._blameStatusBarItem.tooltip = 'Compare Line Revision with Previous';\n                break;\n            case StatusBarCommand.DiffWithWorking:\n                this._blameStatusBarItem.command = Commands.DiffLineWithWorking;\n                this._blameStatusBarItem.tooltip = 'Compare Line Revision with Working';\n                break;\n            case StatusBarCommand.ToggleCodeLens:\n                this._blameStatusBarItem.tooltip = 'Toggle Git CodeLens';\n                break;\n            case StatusBarCommand.ShowQuickCommitDetails:\n                this._blameStatusBarItem.tooltip = 'Show Commit Details';\n                break;\n            case StatusBarCommand.ShowQuickCommitFileDetails:\n                this._blameStatusBarItem.tooltip = 'Show Line Commit Details';\n                break;\n            case StatusBarCommand.ShowQuickFileHistory:\n                this._blameStatusBarItem.tooltip = 'Show File History';\n                break;\n            case StatusBarCommand.ShowQuickCurrentBranchHistory:\n                this._blameStatusBarItem.tooltip = 'Show Branch History';\n                break;\n        }\n\n        this._blameStatusBarItem.show();\n    }\n}\n","'use strict';\nimport { Disposable, Event, EventEmitter, TextEditor, TextEditorSelectionChangeEvent, window } from 'vscode';\nimport { isTextEditor } from '../constants';\nimport { Deferrable, Functions } from '../system';\n\nexport interface LinesChangeEvent {\n    readonly editor: TextEditor | undefined;\n    readonly lines: number[] | undefined;\n\n    readonly reason: 'editor' | 'selection';\n    readonly pending?: boolean;\n}\n\nexport class LineTracker<T> implements Disposable {\n    private _onDidChangeActiveLines = new EventEmitter<LinesChangeEvent>();\n    get onDidChangeActiveLines(): Event<LinesChangeEvent> {\n        return this._onDidChangeActiveLines.event;\n    }\n\n    protected _disposable: Disposable | undefined;\n    private _editor: TextEditor | undefined;\n\n    private readonly _state: Map<number, T | undefined> = new Map();\n\n    dispose() {\n        this.stop();\n    }\n\n    private onActiveTextEditorChanged(editor: TextEditor | undefined) {\n        if (this._editor === editor) return;\n        if (editor !== undefined && !isTextEditor(editor)) return;\n\n        this.reset();\n        this._editor = editor;\n        this._lines = editor !== undefined ? editor.selections.map(s => s.active.line) : undefined;\n\n        this.trigger('editor');\n    }\n\n    private onTextEditorSelectionChanged(e: TextEditorSelectionChangeEvent) {\n        // If this isn't for our cached editor and its not a real editor -- kick out\n        if (this._editor !== e.textEditor && !isTextEditor(e.textEditor)) return;\n\n        const reason = this._editor === e.textEditor ? 'selection' : 'editor';\n\n        const lines = e.selections.map(s => s.active.line);\n        if (this._editor === e.textEditor && this.includesAll(lines)) return;\n\n        this.reset();\n        this._editor = e.textEditor;\n        this._lines = lines;\n        this.trigger(reason);\n    }\n\n    getState(line: number): T | undefined {\n        return this._state.get(line);\n    }\n\n    setState(line: number, state: T | undefined) {\n        this._state.set(line, state);\n    }\n\n    private _lines: number[] | undefined;\n    get lines(): number[] | undefined {\n        return this._lines;\n    }\n\n    includes(line: number): boolean {\n        return this._lines !== undefined && this._lines.includes(line);\n    }\n\n    includesAll(lines: number[] | undefined): boolean {\n        return LineTracker.includesAll(lines, this._lines);\n    }\n\n    refresh() {\n        this.trigger('editor');\n    }\n\n    reset() {\n        this._state.clear();\n    }\n\n    start(subscriber?: any, subscription?: Disposable): void {\n        if (this._disposable !== undefined) return;\n\n        this._disposable = Disposable.from(\n            window.onDidChangeActiveTextEditor(Functions.debounce(this.onActiveTextEditorChanged, 0), this),\n            window.onDidChangeTextEditorSelection(this.onTextEditorSelectionChanged, this)\n        );\n\n        setImmediate(() => this.onActiveTextEditorChanged(window.activeTextEditor));\n    }\n\n    stop(subscriber?: any) {\n        if (this._disposable === undefined) return;\n\n        if (this._linesChangedDebounced !== undefined) {\n            this._linesChangedDebounced.cancel();\n        }\n\n        this._disposable.dispose();\n        this._disposable = undefined;\n    }\n\n    protected fireLinesChanged(e: LinesChangeEvent) {\n        this._onDidChangeActiveLines.fire(e);\n    }\n\n    protected trigger(reason: 'editor' | 'selection') {\n        this.onLinesChanged({ editor: this._editor, lines: this._lines, reason: reason });\n    }\n\n    private _linesChangedDebounced: (((e: LinesChangeEvent) => void) & Deferrable) | undefined;\n\n    private onLinesChanged(e: LinesChangeEvent) {\n        if (e.lines === undefined) {\n            setImmediate(() => {\n                if (window.activeTextEditor !== e.editor) return;\n\n                if (this._linesChangedDebounced !== undefined) {\n                    this._linesChangedDebounced.cancel();\n                }\n\n                void this.fireLinesChanged(e);\n            });\n\n            return;\n        }\n\n        if (this._linesChangedDebounced === undefined) {\n            this._linesChangedDebounced = Functions.debounce(\n                (e: LinesChangeEvent) => {\n                    if (window.activeTextEditor !== e.editor) return;\n                    // Make sure we are still on the same lines\n                    if (!LineTracker.includesAll(e.lines, e.editor && e.editor.selections.map(s => s.active.line))) {\n                        return;\n                    }\n\n                    void this.fireLinesChanged(e);\n                },\n                250,\n                { track: true }\n            );\n        }\n\n        // If we have no pending moves, then fire an immediate pending event, and defer the real event\n        if (!this._linesChangedDebounced.pending!()) {\n            void this.fireLinesChanged({ ...e, pending: true });\n        }\n\n        this._linesChangedDebounced(e);\n    }\n\n    static includesAll(lines1: number[] | undefined, lines2: number[] | undefined): boolean {\n        if (lines1 === undefined && lines2 === undefined) return true;\n        if (lines1 === undefined || lines2 === undefined) return false;\n\n        return lines2.length === lines1.length && lines2.every((v, i) => v === lines1[i]);\n    }\n}\n","'use strict';\nimport { Disposable, TextEditor } from 'vscode';\nimport { Container } from '../container';\nimport { GitBlameCommit, GitLogCommit } from '../git/gitService';\nimport {\n    DocumentBlameStateChangeEvent,\n    DocumentDirtyIdleTriggerEvent,\n    DocumentDirtyStateChangeEvent,\n    GitDocumentState\n} from './gitDocumentTracker';\nimport { LinesChangeEvent, LineTracker } from './lineTracker';\n\nexport * from './lineTracker';\n\nexport class GitLineState {\n    constructor(public readonly commit: GitBlameCommit | undefined, public logCommit?: GitLogCommit) {}\n}\n\nexport class GitLineTracker extends LineTracker<GitLineState> {\n    private _count = 0;\n    private _subscriptions: Map<any, Disposable> = new Map();\n\n    protected async fireLinesChanged(e: LinesChangeEvent) {\n        this.reset();\n\n        let updated = false;\n        if (!this._suspended && !e.pending && e.lines !== undefined && e.editor !== undefined) {\n            updated = await this.updateState(e.lines, e.editor);\n        }\n\n        return super.fireLinesChanged(updated ? e : { ...e, lines: undefined });\n    }\n\n    private onBlameStateChanged(e: DocumentBlameStateChangeEvent<GitDocumentState>) {\n        this.trigger('editor');\n    }\n\n    private onDirtyIdleTriggered(e: DocumentDirtyIdleTriggerEvent<GitDocumentState>) {\n        const maxLines = Container.config.advanced.blame.sizeThresholdAfterEdit;\n        if (maxLines > 0 && e.document.lineCount > maxLines) return;\n\n        this.resume();\n    }\n\n    private onDirtyStateChanged(e: DocumentDirtyStateChangeEvent<GitDocumentState>) {\n        if (e.dirty) {\n            this.suspend();\n        }\n        else {\n            this.resume({ force: true });\n        }\n    }\n\n    private _suspended = false;\n\n    private resume(options: { force?: boolean } = {}) {\n        if (!options.force && !this._suspended) return;\n\n        this._suspended = false;\n        this.trigger('editor');\n    }\n\n    private suspend(options: { force?: boolean } = {}) {\n        if (!options.force && this._suspended) return;\n\n        this._suspended = true;\n        this.trigger('editor');\n    }\n\n    isSubscribed(subscriber: any) {\n        return this._subscriptions.has(subscriber);\n    }\n\n    start(subscriber: any, subscription: Disposable): Disposable {\n        const disposable = {\n            dispose: () => this.stop(subscriber)\n        };\n\n        if (this.isSubscribed(subscriber)) return disposable;\n\n        this._subscriptions.set(subscriber, subscription);\n\n        this._count++;\n        if (this._count === 1) {\n            super.start();\n\n            this._disposable = Disposable.from(\n                this._disposable!,\n                Container.tracker.onDidChangeBlameState(this.onBlameStateChanged, this),\n                Container.tracker.onDidChangeDirtyState(this.onDirtyStateChanged, this),\n                Container.tracker.onDidTriggerDirtyIdle(this.onDirtyIdleTriggered, this)\n            );\n        }\n\n        return disposable;\n    }\n\n    stop(subscriber: any) {\n        const subscription = this._subscriptions.get(subscriber);\n        if (subscription === undefined) return;\n\n        this._subscriptions.delete(subscriber);\n        subscription.dispose();\n\n        if (this._disposable === undefined) {\n            this._count = 0;\n            return;\n        }\n\n        this._count--;\n        if (this._count === 0) {\n            super.stop();\n        }\n    }\n\n    private async updateState(lines: number[], editor: TextEditor): Promise<boolean> {\n        const trackedDocument = await Container.tracker.getOrAdd(editor.document);\n        if (!trackedDocument.isBlameable || !this.includesAll(lines)) return false;\n\n        if (lines.length === 1) {\n            const blameLine = editor.document.isDirty\n                ? await Container.git.getBlameForLineContents(trackedDocument.uri, lines[0], editor.document.getText())\n                : await Container.git.getBlameForLine(trackedDocument.uri, lines[0]);\n            if (blameLine === undefined) return false;\n\n            this.setState(blameLine.line.line - 1, new GitLineState(blameLine.commit));\n        }\n        else {\n            const blame = editor.document.isDirty\n                ? await Container.git.getBlameForFileContents(trackedDocument.uri, editor.document.getText())\n                : await Container.git.getBlameForFile(trackedDocument.uri);\n            if (blame === undefined) return false;\n\n            for (const line of lines) {\n                const commitLine = blame.lines[line];\n                this.setState(line, new GitLineState(blame.commits.get(commitLine.sha)!));\n            }\n        }\n\n        if (!trackedDocument.isBlameable || !this.includesAll(lines)) return false;\n\n        if (editor.document.isDirty) {\n            trackedDocument.setForceDirtyStateChangeOnNextDocumentChange();\n        }\n\n        return true;\n    }\n}\n","'use strict';\nimport { Command, Disposable, Event, TreeItem, TreeItemCollapsibleState, TreeViewVisibilityChangeEvent } from 'vscode';\nimport { GitUri } from '../../git/gitService';\nimport { Logger } from '../../logger';\nimport { debug, Functions, gate, logName } from '../../system';\nimport { TreeViewNodeStateChangeEvent, View } from '../viewBase';\n\nexport enum ResourceType {\n    ActiveFileHistory = 'gitlens:history:active:file',\n    ActiveLineHistory = 'gitlens:history:active:line',\n    Branch = 'gitlens:branch',\n    Branches = 'gitlens:branches',\n    BranchStatusAheadOfUpstream = 'gitlens:branch-status:upstream:ahead',\n    BranchStatusBehindUpstream = 'gitlens:branch-status:upstream:behind',\n    Commit = 'gitlens:commit',\n    CommitFile = 'gitlens:file:commit',\n    Commits = 'gitlens:commits',\n    Compare = 'gitlens:compare',\n    ComparePicker = 'gitlens:compare:picker',\n    ComparePickerWithRef = 'gitlens:compare:picker:ref',\n    CompareResults = 'gitlens:compare:results',\n    Contributor = 'gitlens:contributor',\n    Contributors = 'gitlens:contributors',\n    File = 'gitlens:file',\n    FileHistory = 'gitlens:history:file',\n    Folder = 'gitlens:folder',\n    LineHistory = 'gitlens:history:line',\n    Message = 'gitlens:message',\n    Pager = 'gitlens:pager',\n    Reflog = 'gitlens:reflog',\n    ReflogRecord = 'gitlens:reflog-record',\n    Remote = 'gitlens:remote',\n    Remotes = 'gitlens:remotes',\n    Repositories = 'gitlens:repositories',\n    Repository = 'gitlens:repository',\n    ResultsCommits = 'gitlens:results:commits',\n    ResultsFile = 'gitlens:file:results',\n    ResultsFiles = 'gitlens:results:files',\n    Search = 'gitlens:search',\n    SearchResults = 'gitlens:search:results',\n    Stash = 'gitlens:stash',\n    StashFile = 'gitlens:file:stash',\n    Stashes = 'gitlens:stashes',\n    StatusFileCommits = 'gitlens:status:file:commits',\n    StatusFiles = 'gitlens:status:files',\n    StatusAheadOfUpstream = 'gitlens:status:upstream:ahead',\n    StatusBehindUpstream = 'gitlens:status:upstream:behind',\n    Tag = 'gitlens:tag',\n    Tags = 'gitlens:tags'\n}\n\nexport const unknownGitUri = new GitUri();\n\nexport interface ViewNode {\n    readonly id?: string;\n}\n\nconst counters: { [key: string]: number } = {\n    instanceId: 0\n};\nexport function getNextId(key?: string) {\n    if (key === undefined) {\n        key = 'instanceId';\n    }\n\n    let counter = counters[key] || 0;\n    if (counter === Number.MAX_SAFE_INTEGER) {\n        counter = 0;\n    }\n    counter++;\n\n    counters[key] = counter;\n    return counter;\n}\n\n@logName<ViewNode>((c, name) => `${name}(${c.id || c._instanceId})`)\nexport abstract class ViewNode<TView extends View = View> {\n    protected readonly _instanceId: number;\n\n    constructor(uri: GitUri, public readonly view: TView, protected readonly parent?: ViewNode) {\n        this._instanceId = 0; //getNextId();\n        this._uri = uri;\n\n        if (Logger.isDebugging) {\n            const fn = this.getTreeItem;\n            this.getTreeItem = async function(this: ViewNode<TView>) {\n                const item = await fn.apply(this);\n\n                item.tooltip = `${item.tooltip || item.label}\\n\\nDBG: ${this.toString()}`;\n                return item;\n            };\n        }\n    }\n\n    toString() {\n        return `${Logger.toLoggableName(this)}${this.id != null ? `(${this.id})` : ''}`;\n    }\n\n    protected _uri: GitUri;\n    get uri() {\n        return this._uri;\n    }\n\n    abstract getChildren(): ViewNode[] | Promise<ViewNode[]>;\n\n    getParent(): ViewNode | undefined {\n        return this.parent;\n    }\n\n    abstract getTreeItem(): TreeItem | Promise<TreeItem>;\n\n    getCommand(): Command | undefined {\n        return undefined;\n    }\n\n    @gate()\n    @debug()\n    refresh(reset: boolean = false): void | boolean | Promise<void> | Promise<boolean> {\n        // virtual\n    }\n\n    @gate()\n    @debug()\n    triggerChange(reset: boolean = false): Promise<void> {\n        return this.view.refreshNode(this, reset);\n    }\n}\n\nexport abstract class ViewRefNode<TView extends View = View> extends ViewNode<TView> {\n    abstract get ref(): string;\n\n    get repoPath(): string {\n        return this.uri.repoPath!;\n    }\n\n    toString() {\n        return `${super.toString()}: ${this.ref}`;\n    }\n}\n\nexport abstract class ViewRefFileNode<TView extends View = View> extends ViewRefNode<TView> {\n    abstract get fileName(): string;\n\n    toString() {\n        return `${super.toString()}:${this.fileName}`;\n    }\n}\n\nexport interface PageableViewNode {\n    readonly supportsPaging: boolean;\n    maxCount: number | undefined;\n}\n\nexport function isPageable(node: ViewNode): node is ViewNode & PageableViewNode {\n    return Functions.is<ViewNode & PageableViewNode>(node, 'supportsPaging', true);\n}\n\ninterface AutoRefreshableView {\n    autoRefresh: boolean;\n    onDidChangeAutoRefresh: Event<void>;\n}\nexport function supportsAutoRefresh(view: View): view is View & AutoRefreshableView {\n    return Functions.is<View & AutoRefreshableView>(view, 'onDidChangeAutoRefresh');\n}\n\nexport abstract class SubscribeableViewNode<TView extends View = View> extends ViewNode<TView> {\n    protected _disposable: Disposable;\n    protected _subscription: Promise<Disposable | undefined> | undefined;\n\n    constructor(uri: GitUri, view: TView, parent?: ViewNode) {\n        super(uri, view, parent);\n\n        const disposables = [\n            this.view.onDidChangeVisibility(this.onVisibilityChanged, this),\n            this.view.onDidChangeNodeState(this.onNodeStateChanged, this)\n        ];\n\n        if (supportsAutoRefresh(this.view)) {\n            disposables.push(this.view.onDidChangeAutoRefresh(this.onAutoRefreshChanged, this));\n        }\n\n        this._disposable = Disposable.from(...disposables);\n    }\n\n    @debug()\n    dispose() {\n        void this.unsubscribe();\n\n        if (this._disposable !== undefined) {\n            this._disposable.dispose();\n        }\n    }\n\n    private _canSubscribe: boolean = true;\n    protected get canSubscribe(): boolean {\n        return this._canSubscribe;\n    }\n    protected set canSubscribe(value: boolean) {\n        if (this._canSubscribe === value) return;\n\n        this._canSubscribe = value;\n\n        void this.ensureSubscription();\n        if (value) {\n            void this.triggerChange();\n        }\n    }\n\n    protected abstract subscribe(): Disposable | undefined | Promise<Disposable | undefined>;\n\n    @debug()\n    protected async unsubscribe(): Promise<void> {\n        if (this._subscription !== undefined) {\n            const subscriptionPromise = this._subscription;\n            this._subscription = undefined;\n\n            const subscription = await subscriptionPromise;\n            if (subscription !== undefined) {\n                subscription.dispose();\n            }\n        }\n    }\n\n    @debug()\n    protected onAutoRefreshChanged() {\n        this.onVisibilityChanged({ visible: this.view.visible });\n    }\n\n    protected onParentStateChanged(state: TreeItemCollapsibleState) {\n        // virtual\n    }\n    protected onStateChanged(state: TreeItemCollapsibleState) {\n        // virtual\n    }\n\n    protected _state: TreeItemCollapsibleState | undefined;\n    protected onNodeStateChanged(e: TreeViewNodeStateChangeEvent<ViewNode>) {\n        if (e.element === this) {\n            this._state = e.state;\n            this.onStateChanged(e.state);\n        }\n        else if (e.element === this.parent) {\n            this.onParentStateChanged(e.state);\n        }\n    }\n\n    @debug()\n    protected onVisibilityChanged(e: TreeViewVisibilityChangeEvent) {\n        void this.ensureSubscription();\n\n        if (e.visible) {\n            void this.triggerChange();\n        }\n    }\n\n    @debug()\n    async ensureSubscription() {\n        // We only need to subscribe if we are visible and if auto-refresh enabled (when supported)\n        if (!this.canSubscribe || !this.view.visible || (supportsAutoRefresh(this.view) && !this.view.autoRefresh)) {\n            await this.unsubscribe();\n\n            return;\n        }\n\n        // If we already have a subscription, just kick out\n        if (this._subscription !== undefined) return;\n\n        this._subscription = Promise.resolve(this.subscribe());\n        await this._subscription;\n    }\n}\n\nexport function nodeSupportsConditionalDismissal(node: ViewNode): node is ViewNode & { canDismiss(): boolean } {\n    return typeof (node as ViewNode & { canDismiss(): boolean }).canDismiss === 'function';\n}\n\nexport function viewSupportsNodeDismissal(view: View): view is View & { dismissNode(node: ViewNode): void } {\n    return typeof (view as View & { dismissNode(node: ViewNode): void }).dismissNode === 'function';\n}\n","'use strict';\nimport * as paths from 'path';\nimport { Command, Selection, TreeItem, TreeItemCollapsibleState } from 'vscode';\nimport { Commands, DiffWithPreviousCommandArgs } from '../../commands';\nimport { GlyphChars } from '../../constants';\nimport { Container } from '../../container';\nimport { CommitFormatter, GitFile, GitLogCommit, GitUri, StatusFileFormatter } from '../../git/gitService';\nimport { View } from '../viewBase';\nimport { ResourceType, ViewNode, ViewRefFileNode } from './viewNode';\n\nexport enum CommitFileNodeDisplayAs {\n    CommitLabel = 1 << 0,\n    FileLabel = 1 << 1,\n\n    CommitIcon = 1 << 2,\n    StatusIcon = 1 << 3,\n    Gravatar = 1 << 4,\n\n    File = FileLabel | StatusIcon\n}\n\nexport class CommitFileNode extends ViewRefFileNode {\n    constructor(\n        view: View,\n        parent: ViewNode,\n        public readonly file: GitFile,\n        public commit: GitLogCommit,\n        private readonly _displayAs: CommitFileNodeDisplayAs,\n        private readonly _selection?: Selection\n    ) {\n        super(GitUri.fromFile(file, commit.repoPath, commit.sha), view, parent);\n    }\n\n    get fileName(): string {\n        return this.file.fileName;\n    }\n\n    get priority(): number {\n        return 0;\n    }\n\n    get ref(): string {\n        return this.commit.sha;\n    }\n\n    getChildren(): ViewNode[] {\n        return [];\n    }\n\n    async getTreeItem(): Promise<TreeItem> {\n        if (!this.commit.isFile) {\n            // See if we can get the commit directly from the multi-file commit\n            const commit = this.commit.toFileCommit(this.file);\n            if (commit === undefined) {\n                const log = await Container.git.getLogForFile(this.repoPath, this.file.fileName, {\n                    maxCount: 2,\n                    ref: this.commit.sha\n                });\n                if (log !== undefined) {\n                    this.commit = log.commits.get(this.commit.sha) || this.commit;\n                }\n            }\n            else {\n                this.commit = commit;\n            }\n        }\n\n        const item = new TreeItem(this.label, TreeItemCollapsibleState.None);\n        item.contextValue = this.resourceType;\n        item.description = this.description;\n        item.tooltip = this.tooltip;\n\n        if ((this._displayAs & CommitFileNodeDisplayAs.CommitIcon) === CommitFileNodeDisplayAs.CommitIcon) {\n            item.iconPath = {\n                dark: Container.context.asAbsolutePath(paths.join('images', 'dark', 'icon-commit.svg')),\n                light: Container.context.asAbsolutePath(paths.join('images', 'light', 'icon-commit.svg'))\n            };\n        }\n        else if ((this._displayAs & CommitFileNodeDisplayAs.StatusIcon) === CommitFileNodeDisplayAs.StatusIcon) {\n            const icon = GitFile.getStatusIcon(this.file.status);\n            item.iconPath = {\n                dark: Container.context.asAbsolutePath(paths.join('images', 'dark', icon)),\n                light: Container.context.asAbsolutePath(paths.join('images', 'light', icon))\n            };\n        }\n        else if ((this._displayAs & CommitFileNodeDisplayAs.Gravatar) === CommitFileNodeDisplayAs.Gravatar) {\n            item.iconPath = this.commit.getGravatarUri(Container.config.defaultGravatarsStyle);\n        }\n\n        item.command = this.getCommand();\n\n        // Only cache the label/description/tooltip for a single refresh\n        this._label = undefined;\n        this._description = undefined;\n        this._tooltip = undefined;\n\n        return item;\n    }\n\n    private _description: string | undefined;\n    get description() {\n        if (this._description === undefined) {\n            this._description =\n                this._displayAs & CommitFileNodeDisplayAs.CommitLabel\n                    ? CommitFormatter.fromTemplate(this.getCommitDescriptionTemplate(), this.commit, {\n                          truncateMessageAtNewLine: true,\n                          dateFormat: Container.config.defaultDateFormat\n                      })\n                    : StatusFileFormatter.fromTemplate(this.getCommitFileDescriptionTemplate(), this.file, {\n                          relativePath: this.relativePath\n                      });\n        }\n        return this._description;\n    }\n\n    private _folderName: string | undefined;\n    get folderName() {\n        if (this._folderName === undefined) {\n            this._folderName = paths.dirname(this.uri.relativePath);\n        }\n        return this._folderName;\n    }\n\n    private _label: string | undefined;\n    get label() {\n        if (this._label === undefined) {\n            this._label =\n                this._displayAs & CommitFileNodeDisplayAs.CommitLabel\n                    ? CommitFormatter.fromTemplate(this.getCommitTemplate(), this.commit, {\n                          truncateMessageAtNewLine: true,\n                          dateFormat: Container.config.defaultDateFormat\n                      })\n                    : StatusFileFormatter.fromTemplate(this.getCommitFileTemplate(), this.file, {\n                          relativePath: this.relativePath\n                      });\n        }\n        return this._label;\n    }\n\n    private _relativePath: string | undefined;\n    get relativePath(): string | undefined {\n        return this._relativePath;\n    }\n    set relativePath(value: string | undefined) {\n        this._relativePath = value;\n        this._label = undefined;\n        this._tooltip = undefined;\n    }\n\n    protected get resourceType(): string {\n        if (!this.commit.isUncommitted) return ResourceType.CommitFile;\n\n        return this.commit.isUncommittedStaged ? `${ResourceType.File}+staged` : `${ResourceType.File}+unstaged`;\n    }\n\n    private _tooltip: string | undefined;\n    get tooltip() {\n        if (this._tooltip === undefined) {\n            if (this._displayAs & CommitFileNodeDisplayAs.CommitLabel) {\n                // eslint-disable-next-line no-template-curly-in-string\n                const status = StatusFileFormatter.fromTemplate('${status}${ (originalPath)}', this.file);\n                this._tooltip = CommitFormatter.fromTemplate(\n                    this.commit.isUncommitted\n                        ? `\\${author} ${GlyphChars.Dash} \\${id}\\n${status}\\n\\${ago} (\\${date})`\n                        : `\\${author} ${GlyphChars.Dash} \\${id}\\n${status}\\n\\${ago} (\\${date})\\n\\n\\${message}`,\n                    this.commit,\n                    {\n                        dateFormat: Container.config.defaultDateFormat\n                    }\n                );\n            }\n            else {\n                this._tooltip = StatusFileFormatter.fromTemplate(\n                    // eslint-disable-next-line no-template-curly-in-string\n                    '${file}\\n${directory}/\\n\\n${status}${ (originalPath)}',\n                    this.file\n                );\n            }\n        }\n        return this._tooltip;\n    }\n\n    protected getCommitTemplate() {\n        return this.view.config.commitFormat;\n    }\n\n    protected getCommitDescriptionTemplate() {\n        return this.view.config.commitDescriptionFormat;\n    }\n\n    protected getCommitFileTemplate() {\n        return this.view.config.commitFileFormat;\n    }\n\n    protected getCommitFileDescriptionTemplate() {\n        return this.view.config.commitFileDescriptionFormat;\n    }\n\n    getCommand(): Command | undefined {\n        let line;\n        if (this.commit.line !== undefined) {\n            line = this.commit.line.to.line - 1;\n        }\n        else {\n            line = this._selection !== undefined ? this._selection.active.line : 0;\n        }\n\n        const commandArgs: DiffWithPreviousCommandArgs = {\n            commit: this.commit,\n            line: line,\n            showOptions: {\n                preserveFocus: true,\n                preview: true\n            }\n        };\n        return {\n            title: 'Compare File with Previous Revision',\n            command: Commands.DiffWithPrevious,\n            arguments: [GitUri.fromFile(this.file, this.commit.repoPath), commandArgs]\n        };\n    }\n}\n","'use strict';\nimport { ThemeIcon, TreeItem, TreeItemCollapsibleState } from 'vscode';\nimport { ViewFilesLayout, ViewsFilesConfig } from '../../configuration';\nimport { GitUri } from '../../git/gitService';\nimport { Arrays } from '../../system';\nimport { ViewWithFiles } from '../viewBase';\nimport { ResourceType, ViewNode } from './viewNode';\n\nexport interface FileNode extends ViewNode {\n    folderName: string;\n    label?: string;\n    priority: number;\n    relativePath?: string;\n    root?: Arrays.HierarchicalItem<FileNode>;\n}\n\nexport class FolderNode extends ViewNode<ViewWithFiles> {\n    readonly priority: number = 1;\n\n    constructor(\n        view: ViewWithFiles,\n        parent: ViewNode,\n        public readonly repoPath: string,\n        public readonly folderName: string,\n        public readonly root: Arrays.HierarchicalItem<FileNode>,\n        private readonly containsWorkingFiles?: boolean,\n        public readonly relativePath?: string\n    ) {\n        super(GitUri.fromRepoPath(repoPath), view, parent);\n    }\n\n    getChildren(): (FolderNode | FileNode)[] {\n        if (this.root.descendants === undefined || this.root.children === undefined) return [];\n\n        let children: (FolderNode | FileNode)[];\n\n        const nesting = FolderNode.getFileNesting(\n            this.view.config.files,\n            this.root.descendants,\n            this.relativePath === undefined\n        );\n        if (nesting !== ViewFilesLayout.List) {\n            children = [];\n            for (const folder of this.root.children.values()) {\n                if (folder.value === undefined) {\n                    children.push(\n                        new FolderNode(\n                            this.view,\n                            this,\n                            this.repoPath,\n                            folder.name,\n                            folder,\n                            this.containsWorkingFiles,\n                            folder.relativePath\n                        )\n                    );\n                    continue;\n                }\n\n                folder.value.relativePath = this.root.relativePath;\n                children.push(folder.value);\n            }\n        }\n        else {\n            this.root.descendants.forEach(n => (n.relativePath = this.root.relativePath));\n            children = this.root.descendants;\n        }\n\n        children.sort((a, b) => {\n            return (\n                (a instanceof FolderNode ? -1 : 1) - (b instanceof FolderNode ? -1 : 1) ||\n                a.priority - b.priority ||\n                a.label!.localeCompare(b.label!, undefined, { numeric: true, sensitivity: 'base' })\n            );\n        });\n\n        return children;\n    }\n\n    getTreeItem(): TreeItem {\n        // TODO: Change this to expanded once https://github.com/Microsoft/vscode/issues/30918 is fixed\n        const item = new TreeItem(this.label, TreeItemCollapsibleState.Collapsed);\n        item.contextValue = ResourceType.Folder;\n        if (this.containsWorkingFiles) {\n            item.contextValue += '+working';\n        }\n        item.iconPath = ThemeIcon.Folder;\n        item.tooltip = this.label;\n        return item;\n    }\n\n    get label(): string {\n        return this.folderName;\n    }\n\n    static getFileNesting<T extends FileNode>(\n        config: ViewsFilesConfig,\n        children: T[],\n        isRoot: boolean\n    ): ViewFilesLayout {\n        const nesting = config.layout || ViewFilesLayout.Auto;\n        if (nesting === ViewFilesLayout.Auto) {\n            if (isRoot || config.compact) {\n                const nestingThreshold = config.threshold || 5;\n                if (children.length <= nestingThreshold) return ViewFilesLayout.List;\n            }\n            return ViewFilesLayout.Tree;\n        }\n        return nesting;\n    }\n}\n","'use strict';\nimport * as paths from 'path';\nimport { Command, TreeItem, TreeItemCollapsibleState } from 'vscode';\nimport { Commands, DiffWithPreviousCommandArgs } from '../../commands';\nimport { ViewFilesLayout } from '../../configuration';\nimport { GlyphChars } from '../../constants';\nimport { Container } from '../../container';\nimport { CommitFormatter, GitBranch, GitLogCommit } from '../../git/gitService';\nimport { Arrays, Iterables, Strings } from '../../system';\nimport { ViewWithFiles } from '../viewBase';\nimport { CommitFileNode, CommitFileNodeDisplayAs } from './commitFileNode';\nimport { FileNode, FolderNode } from './folderNode';\nimport { ResourceType, ViewNode, ViewRefNode } from './viewNode';\n\nexport class CommitNode extends ViewRefNode<ViewWithFiles> {\n    constructor(\n        view: ViewWithFiles,\n        parent: ViewNode,\n        public readonly commit: GitLogCommit,\n        public readonly branch?: GitBranch,\n        private readonly getBranchAndTagTips?: (sha: string) => string | undefined\n    ) {\n        super(commit.toGitUri(), view, parent);\n    }\n\n    get ref(): string {\n        return this.commit.sha;\n    }\n\n    async getChildren(): Promise<ViewNode[]> {\n        const commit = this.commit;\n        let children: FileNode[] = [\n            ...Iterables.map(\n                commit.files,\n                s => new CommitFileNode(this.view, this, s, commit.toFileCommit(s), CommitFileNodeDisplayAs.File)\n            )\n        ];\n\n        if (this.view.config.files.layout !== ViewFilesLayout.List) {\n            const hierarchy = Arrays.makeHierarchical(\n                children,\n                n => n.uri.relativePath.split('/'),\n                (...parts: string[]) => Strings.normalizePath(paths.join(...parts)),\n                this.view.config.files.compact\n            );\n\n            const root = new FolderNode(this.view, this, this.repoPath, '', hierarchy);\n            children = (await root.getChildren()) as FileNode[];\n        }\n        else {\n            children.sort((a, b) =>\n                a.label!.localeCompare(b.label!, undefined, { numeric: true, sensitivity: 'base' })\n            );\n        }\n        return children;\n    }\n\n    getTreeItem(): TreeItem {\n        let label = CommitFormatter.fromTemplate(this.view.config.commitFormat, this.commit, {\n            truncateMessageAtNewLine: true,\n            dateFormat: Container.config.defaultDateFormat\n        });\n\n        const branchAndTagTips = this.getBranchAndTagTips && this.getBranchAndTagTips(this.commit.sha);\n        if (branchAndTagTips !== undefined) {\n            label = `${GlyphChars.AngleBracketLeftHeavy}${GlyphChars.SpaceThin}${branchAndTagTips}${\n                GlyphChars.SpaceThin\n            }${GlyphChars.AngleBracketRightHeavy}${GlyphChars.ArrowHeadRight}${GlyphChars.Space} ${label}`;\n        }\n\n        const item = new TreeItem(label, TreeItemCollapsibleState.Collapsed);\n        item.contextValue = ResourceType.Commit;\n        if (this.branch === undefined || this.branch.current) {\n            item.contextValue += '+current';\n        }\n        item.description = CommitFormatter.fromTemplate(this.view.config.commitDescriptionFormat, this.commit, {\n            truncateMessageAtNewLine: true,\n            dateFormat: Container.config.defaultDateFormat\n        });\n\n        if (this.view.config.avatars) {\n            item.iconPath = this.commit.getGravatarUri(Container.config.defaultGravatarsStyle);\n        }\n        else {\n            item.iconPath = {\n                dark: Container.context.asAbsolutePath('images/dark/icon-commit.svg'),\n                light: Container.context.asAbsolutePath('images/light/icon-commit.svg')\n            };\n        }\n\n        item.tooltip = CommitFormatter.fromTemplate(\n            this.commit.isUncommitted\n                ? `\\${author} ${GlyphChars.Dash} \\${id}\\n\\${ago} (\\${date})`\n                : `\\${author} \\${(email) }${GlyphChars.Dash} \\${id}${\n                      branchAndTagTips !== undefined ? ` (${branchAndTagTips})` : ''\n                  }\\n\\${ago} (\\${date})\\n\\n\\${message}`,\n            this.commit,\n            {\n                dateFormat: Container.config.defaultDateFormat\n            }\n        );\n\n        if (!this.commit.isUncommitted) {\n            item.tooltip += this.commit.getFormattedDiffStatus({\n                expand: true,\n                prefix: '\\n\\n',\n                separator: '\\n'\n            });\n        }\n\n        return item;\n    }\n\n    getCommand(): Command | undefined {\n        const commandArgs: DiffWithPreviousCommandArgs = {\n            commit: this.commit,\n            line: 0,\n            showOptions: {\n                preserveFocus: true,\n                preview: true\n            }\n        };\n        return {\n            title: 'Compare File with Previous Revision',\n            command: Commands.DiffWithPrevious,\n            arguments: [this.uri, commandArgs]\n        };\n    }\n}\n","import { Command, ThemeIcon, TreeItem, TreeItemCollapsibleState, Uri } from 'vscode';\nimport { GlyphChars } from '../../constants';\nimport { Container } from '../../container';\nimport { View } from '../viewBase';\nimport { RefreshNodeCommandArgs } from '../viewCommands';\nimport { ResourceType, unknownGitUri, ViewNode } from './viewNode';\n\nexport class MessageNode extends ViewNode {\n    constructor(\n        view: View,\n        parent: ViewNode,\n        private readonly _message: string,\n        private readonly _description?: string,\n        private readonly _tooltip?: string,\n        private readonly _iconPath?:\n            | string\n            | Uri\n            | {\n                  light: string | Uri;\n                  dark: string | Uri;\n              }\n            | ThemeIcon\n    ) {\n        super(unknownGitUri, view, parent);\n    }\n\n    getChildren(): ViewNode[] | Promise<ViewNode[]> {\n        return [];\n    }\n\n    getTreeItem(): TreeItem | Promise<TreeItem> {\n        const item = new TreeItem(this._message, TreeItemCollapsibleState.None);\n        item.contextValue = ResourceType.Message;\n        item.description = this._description;\n        item.tooltip = this._tooltip;\n        item.iconPath = this._iconPath;\n        return item;\n    }\n}\n\nexport class CommandMessageNode extends MessageNode {\n    constructor(\n        view: View,\n        parent: ViewNode,\n        private readonly _command: Command,\n        message: string,\n        description?: string,\n        tooltip?: string,\n        iconPath?:\n            | string\n            | Uri\n            | {\n                  light: string | Uri;\n                  dark: string | Uri;\n              }\n            | ThemeIcon\n    ) {\n        super(view, parent, message, description, tooltip, iconPath);\n    }\n\n    getTreeItem(): TreeItem | Promise<TreeItem> {\n        const item = super.getTreeItem();\n        if (item instanceof TreeItem) {\n            item.command = this._command;\n            return item;\n        }\n\n        return item.then(i => {\n            i.command = this._command;\n            return i;\n        });\n    }\n}\n\nexport class UpdateableMessageNode extends ViewNode {\n    constructor(\n        view: View,\n        parent: ViewNode,\n        public readonly id: string,\n        private _message: string,\n        private _tooltip?: string,\n        private _iconPath?:\n            | string\n            | Uri\n            | {\n                  light: string | Uri;\n                  dark: string | Uri;\n              }\n            | ThemeIcon\n    ) {\n        super(unknownGitUri, view, parent);\n    }\n\n    getChildren(): ViewNode[] | Promise<ViewNode[]> {\n        return [];\n    }\n\n    getTreeItem(): TreeItem | Promise<TreeItem> {\n        const item = new TreeItem(this._message, TreeItemCollapsibleState.None);\n        item.id = this.id;\n        item.contextValue = ResourceType.Message;\n        item.tooltip = this._tooltip;\n        item.iconPath = this._iconPath;\n        return item;\n    }\n\n    update(\n        changes: {\n            message?: string;\n            tooltip?: string | null;\n            iconPath?:\n                | string\n                | null\n                | Uri\n                | {\n                      light: string | Uri;\n                      dark: string | Uri;\n                  }\n                | ThemeIcon;\n        },\n        view: View\n    ) {\n        if (changes.message !== undefined) {\n            this._message = changes.message;\n        }\n\n        if (changes.tooltip !== undefined) {\n            this._tooltip = changes.tooltip === null ? undefined : changes.tooltip;\n        }\n\n        if (changes.iconPath !== undefined) {\n            this._iconPath = changes.iconPath === null ? undefined : changes.iconPath;\n        }\n\n        view.triggerNodeChange(this);\n    }\n}\n\nexport abstract class PagerNode extends ViewNode {\n    protected _args: RefreshNodeCommandArgs = {};\n\n    constructor(\n        view: View,\n        parent: ViewNode,\n        protected readonly message: string,\n        previousNode?: ViewNode,\n        maxCount: number = Container.config.views.pageItemLimit\n    ) {\n        super(unknownGitUri, view, parent);\n\n        this._args.maxCount = maxCount;\n        this._args.previousNode = previousNode;\n    }\n\n    showAll() {\n        this.view.refreshNode(this.parent!, true, { ...this._args, maxCount: 0 });\n    }\n\n    getChildren(): ViewNode[] | Promise<ViewNode[]> {\n        return [];\n    }\n\n    getTreeItem(): TreeItem | Promise<TreeItem> {\n        const item = new TreeItem(this.message, TreeItemCollapsibleState.None);\n        item.contextValue = ResourceType.Pager;\n        item.command = this.getCommand();\n        item.iconPath = {\n            dark: Container.context.asAbsolutePath('images/dark/icon-ellipsis.svg'),\n            light: Container.context.asAbsolutePath('images/light/icon-ellipsis.svg')\n        };\n        return item;\n    }\n\n    getCommand(): Command | undefined {\n        return {\n            title: 'Refresh',\n            command: 'gitlens.views.refreshNode',\n            arguments: [this.parent, true, this._args]\n        };\n    }\n}\n\nexport class ShowMoreNode extends PagerNode {\n    constructor(view: View, parent: ViewNode, itemType: string, previousNode: ViewNode, maxCount?: number) {\n        super(\n            view,\n            parent,\n            maxCount === 0\n                ? `Show All ${itemType} ${GlyphChars.Space}${GlyphChars.Dash}${GlyphChars.Space} this may take a while`\n                : `Show More ${itemType}`,\n            previousNode,\n            maxCount\n        );\n    }\n}\n","'use strict';\nimport { Container } from '../../container';\nimport { GitLogCommit } from '../../git/gitService';\nimport { Arrays } from '../../system';\nimport { MessageNode } from './common';\nimport { ViewNode } from './viewNode';\n\nexport async function getBranchesAndTagTipsFn(repoPath: string | undefined, currentName?: string) {\n    const [branches, tags] = await Promise.all([\n        Container.git.getBranches(repoPath),\n        Container.git.getTags(repoPath, { includeRefs: true })\n    ]);\n\n    const branchesAndTagsBySha = Arrays.groupByFilterMap(\n        (branches as { name: string; sha: string }[]).concat(tags as { name: string; sha: string }[]),\n        bt => bt.sha!,\n        bt => (bt.name === currentName ? undefined : bt.name)\n    );\n\n    return (sha: string) => {\n        const branchesAndTags = branchesAndTagsBySha.get(sha);\n        if (branchesAndTags === undefined || branchesAndTags.length === 0) return undefined;\n        return branchesAndTags.join(', ');\n    };\n}\n\nconst markers: [number, string][] = [\n    [0, 'Less than a week ago'],\n    [7, 'Over a week ago'],\n    [30, 'Over a month ago'],\n    [90, 'Over 3 months ago']\n];\n\n// eslint-disable-next-line consistent-return\nexport function* insertDateMarkers<T extends ViewNode & { commit: GitLogCommit }>(\n    iterable: Iterable<T>,\n    parent: ViewNode,\n    skip?: number\n): Iterable<ViewNode> {\n    if (!parent.view.config.showRelativeDateMarkers) {\n        return yield* iterable;\n    }\n\n    let index = skip || 0;\n    let time = undefined;\n    const now = Date.now();\n\n    let first = true;\n\n    for (const node of iterable) {\n        if (index < markers.length) {\n            let [daysAgo, marker] = markers[index];\n            if (time === undefined) {\n                const date = new Date(now);\n                time = date.setDate(date.getDate() - daysAgo);\n            }\n\n            const date = new Date(node.commit.committerDate.setUTCHours(0, 0, 0, 0)).getTime();\n            if (date <= time) {\n                while (index < markers.length - 1) {\n                    [daysAgo] = markers[index + 1];\n                    const nextDate = new Date(now);\n                    const nextTime = nextDate.setDate(nextDate.getDate() - daysAgo);\n\n                    if (date > nextTime) break;\n\n                    index++;\n                    time = undefined;\n                    [, marker] = markers[index];\n                }\n\n                // Don't show the last marker as the first entry -- since it could be wildly far off\n                if (!first || index < markers.length - 1) {\n                    yield new MessageNode(parent.view, parent, marker);\n                }\n\n                index++;\n                time = undefined;\n            }\n        }\n\n        first = false;\n        yield node;\n    }\n}\n","'use strict';\nimport { TreeItem, TreeItemCollapsibleState } from 'vscode';\nimport { Container } from '../../container';\nimport { GitTrackingState, GitUri } from '../../git/gitService';\nimport { Iterables, Strings } from '../../system';\nimport { ViewWithFiles } from '../viewBase';\nimport { CommitNode } from './commitNode';\nimport { ShowMoreNode } from './common';\nimport { insertDateMarkers } from './helpers';\nimport { PageableViewNode, ResourceType, ViewNode } from './viewNode';\n\nexport interface BranchTrackingStatus {\n    ref: string;\n    repoPath: string;\n    state: GitTrackingState;\n    upstream?: string;\n}\n\nexport class BranchTrackingStatusNode extends ViewNode<ViewWithFiles> implements PageableViewNode {\n    readonly supportsPaging: boolean = true;\n    maxCount: number | undefined;\n\n    constructor(\n        view: ViewWithFiles,\n        parent: ViewNode,\n        public readonly status: BranchTrackingStatus,\n        public readonly direction: 'ahead' | 'behind',\n        // Specifies that the node is shown as a root under the repository node\n        private readonly _root: boolean = false\n    ) {\n        super(GitUri.fromRepoPath(status.repoPath), view, parent);\n    }\n\n    get id(): string {\n        return `${this._instanceId}:gitlens:repository(${this.status.repoPath}):${this._root ? 'root:' : ''}branch(${\n            this.status.ref\n        }):status:upstream:(${this.status.upstream}):${this.direction}`;\n    }\n\n    async getChildren(): Promise<ViewNode[]> {\n        const ahead = this.direction === 'ahead';\n        const range = ahead\n            ? `${this.status.upstream}..${this.status.ref}`\n            : `${this.status.ref}..${this.status.upstream}`;\n\n        const log = await Container.git.getLog(this.uri.repoPath!, {\n            maxCount: this.maxCount !== undefined ? this.maxCount : this.view.config.defaultItemLimit,\n            ref: range\n        });\n        if (log === undefined) return [];\n\n        let children;\n        if (ahead) {\n            // Since the last commit when we are looking 'ahead' can have no previous (because of the range given) -- look it up\n            const commits = [...log.commits.values()];\n            const commit = commits[commits.length - 1];\n            if (commit.previousSha === undefined) {\n                const previousLog = await Container.git.getLog(this.uri.repoPath!, { maxCount: 2, ref: commit.sha });\n                if (previousLog !== undefined) {\n                    commits[commits.length - 1] = Iterables.first(previousLog.commits.values());\n                }\n            }\n\n            children = [...insertDateMarkers(Iterables.map(commits, c => new CommitNode(this.view, this, c)), this, 1)];\n        }\n        else {\n            children = [\n                ...insertDateMarkers(\n                    Iterables.map(log.commits.values(), c => new CommitNode(this.view, this, c)),\n                    this,\n                    1\n                )\n            ];\n        }\n\n        if (log.truncated) {\n            children.push(new ShowMoreNode(this.view, this, 'Commits', children[children.length - 1]));\n        }\n        return children;\n    }\n\n    getTreeItem(): TreeItem {\n        const ahead = this.direction === 'ahead';\n        const label = ahead\n            ? `${Strings.pluralize('commit', this.status.state.ahead)} ahead`\n            : `${Strings.pluralize('commit', this.status.state.behind)} behind`;\n\n        const item = new TreeItem(label, TreeItemCollapsibleState.Collapsed);\n        item.id = this.id;\n        if (this._root) {\n            item.contextValue = ahead ? ResourceType.StatusAheadOfUpstream : ResourceType.StatusBehindUpstream;\n        }\n        else {\n            item.contextValue = ahead\n                ? ResourceType.BranchStatusAheadOfUpstream\n                : ResourceType.BranchStatusBehindUpstream;\n        }\n        item.tooltip = `${label}${ahead ? ' of ' : ''}${this.status.upstream}`;\n\n        const iconSuffix = ahead ? 'upload' : 'download';\n        item.iconPath = {\n            dark: Container.context.asAbsolutePath(`images/dark/icon-${iconSuffix}.svg`),\n            light: Container.context.asAbsolutePath(`images/light/icon-${iconSuffix}.svg`)\n        };\n\n        return item;\n    }\n}\n","'use strict';\nimport { TreeItem, TreeItemCollapsibleState } from 'vscode';\nimport { ViewBranchesLayout } from '../../configuration';\nimport { GlyphChars } from '../../constants';\nimport { Container } from '../../container';\nimport { GitBranch, GitUri } from '../../git/gitService';\nimport { debug, gate, Iterables, log } from '../../system';\nimport { RepositoriesView } from '../repositoriesView';\nimport { BranchTrackingStatusNode } from './branchTrackingStatusNode';\nimport { CommitNode } from './commitNode';\nimport { MessageNode, ShowMoreNode } from './common';\nimport { getBranchesAndTagTipsFn, insertDateMarkers } from './helpers';\nimport { PageableViewNode, ResourceType, ViewNode, ViewRefNode } from './viewNode';\n\nexport class BranchNode extends ViewRefNode<RepositoriesView> implements PageableViewNode {\n    readonly supportsPaging: boolean = true;\n    maxCount: number | undefined;\n\n    private _children: ViewNode[] | undefined;\n\n    constructor(\n        uri: GitUri,\n        view: RepositoriesView,\n        parent: ViewNode,\n        public readonly branch: GitBranch,\n        // Specifies that the node is shown as a root under the repository node\n        private readonly _root: boolean = false\n    ) {\n        super(uri, view, parent);\n    }\n\n    get id(): string {\n        return `${this._instanceId}:gitlens:repository(${this.branch.repoPath})${this._root ? ':root:' : ''}:branch(${\n            this.branch.name\n        })${this.branch.current ? '+current:' : ''}${this.branch.remote ? '+remote' : ''}${\n            this.branch.starred ? '+starred:' : ''\n        }`;\n    }\n\n    get current(): boolean {\n        return this.branch.current;\n    }\n\n    get label(): string {\n        const branchName = this.branch.getName();\n        if (this.view.config.branches.layout === ViewBranchesLayout.List) return branchName;\n\n        return (this._root && this.current) || this.branch.detached || this.branch.starred\n            ? branchName\n            : this.branch.getBasename();\n    }\n\n    get ref(): string {\n        return this.branch.ref;\n    }\n\n    get treeHierarchy(): string[] {\n        return this.branch.detached || this.branch.starred ? [this.branch.name] : this.branch.getName().split('/');\n    }\n\n    async getChildren(): Promise<ViewNode[]> {\n        if (this._children === undefined) {\n            const children = [];\n            if (!this._root && this.branch.tracking) {\n                const status = {\n                    ref: this.branch.ref,\n                    repoPath: this.branch.repoPath,\n                    state: this.branch.state,\n                    upstream: this.branch.tracking\n                };\n\n                if (this.branch.state.behind) {\n                    children.push(new BranchTrackingStatusNode(this.view, this, status, 'behind'));\n                }\n\n                if (this.branch.state.ahead) {\n                    children.push(new BranchTrackingStatusNode(this.view, this, status, 'ahead'));\n                }\n            }\n\n            const log = await Container.git.getLog(this.uri.repoPath!, {\n                maxCount: this.maxCount !== undefined ? this.maxCount : this.view.config.defaultItemLimit,\n                ref: this.ref\n            });\n            if (log === undefined) return [new MessageNode(this.view, this, 'No commits could be found.')];\n\n            const getBranchAndTagTips = await getBranchesAndTagTipsFn(this.uri.repoPath, this.branch.name);\n            children.push(\n                ...insertDateMarkers(\n                    Iterables.map(\n                        log.commits.values(),\n                        c => new CommitNode(this.view, this, c, this.branch, getBranchAndTagTips)\n                    ),\n                    this\n                )\n            );\n\n            if (log.truncated) {\n                children.push(new ShowMoreNode(this.view, this, 'Commits', children[children.length - 1]));\n            }\n\n            this._children = children;\n        }\n        return this._children;\n    }\n\n    getTreeItem(): TreeItem {\n        const name = this.label;\n        let tooltip = `${this.branch.getName()}${this.current ? ' (current)' : ''}`;\n        let iconSuffix = '';\n\n        let description;\n        if (!this.branch.remote && this.branch.tracking !== undefined) {\n            if (this.view.config.showTrackingBranch) {\n                description = `${this.branch.getTrackingStatus({ suffix: `${GlyphChars.Space} ` })}${\n                    GlyphChars.ArrowLeftRightLong\n                }${GlyphChars.Space} ${this.branch.tracking}`;\n            }\n            tooltip += ` is tracking ${this.branch.tracking}\\n${this.branch.getTrackingStatus({\n                empty: 'up-to-date',\n                expand: true,\n                separator: '\\n'\n            })}`;\n\n            if (this.branch.state.ahead || this.branch.state.behind) {\n                if (this.branch.state.behind) {\n                    iconSuffix = '-red';\n                }\n                if (this.branch.state.ahead) {\n                    iconSuffix = this.branch.state.behind ? '-yellow' : '-green';\n                }\n            }\n        }\n\n        const item = new TreeItem(\n            // Hide the current branch checkmark when the node is displayed as a root under the repository node\n            `${!this._root && this.current ? `${GlyphChars.Check} ${GlyphChars.Space}` : ''}${name}`,\n            TreeItemCollapsibleState.Collapsed\n        );\n        item.contextValue = ResourceType.Branch;\n        if (this.current) {\n            item.contextValue += '+current';\n        }\n        if (this.branch.remote) {\n            item.contextValue += '+remote';\n        }\n        if (this.branch.starred) {\n            item.contextValue += '+starred';\n        }\n        if (this.branch.tracking) {\n            item.contextValue += '+tracking';\n        }\n\n        item.description = description;\n        item.iconPath = {\n            dark: Container.context.asAbsolutePath(`images/dark/icon-branch${iconSuffix}.svg`),\n            light: Container.context.asAbsolutePath(`images/light/icon-branch${iconSuffix}.svg`)\n        };\n        item.id = this.id;\n        item.tooltip = tooltip;\n\n        return item;\n    }\n\n    @log()\n    async star() {\n        await this.branch.star();\n        void this.parent!.triggerChange();\n    }\n\n    @log()\n    async unstar() {\n        await this.branch.unstar();\n        void this.parent!.triggerChange();\n    }\n\n    @gate()\n    @debug()\n    refresh() {\n        this._children = undefined;\n    }\n}\n","'use strict';\nimport { ThemeIcon, TreeItem, TreeItemCollapsibleState } from 'vscode';\nimport { GitUri } from '../../git/gitService';\nimport { Arrays } from '../../system';\nimport { View } from '../viewBase';\nimport { BranchNode } from './branchNode';\nimport { TagNode } from './tagNode';\nimport { ResourceType, ViewNode } from './viewNode';\n\nexport class BranchOrTagFolderNode extends ViewNode {\n    constructor(\n        view: View,\n        parent: ViewNode,\n        public readonly type: 'branch' | 'remote-branch' | 'tag',\n        public readonly repoPath: string,\n        public readonly folderName: string,\n        public readonly relativePath: string | undefined,\n        public readonly root: Arrays.HierarchicalItem<BranchNode | TagNode>,\n        private readonly _key?: string,\n        private readonly _expanded: boolean = false\n    ) {\n        super(GitUri.fromRepoPath(repoPath), view, parent);\n    }\n\n    get id(): string {\n        return `${this._instanceId}:gitlens:repository(${this.repoPath})${\n            this._key === undefined ? '' : `:${this._key}`\n        }:${this.type}-folder(${this.relativePath})`;\n    }\n\n    getChildren(): ViewNode[] {\n        if (this.root.descendants === undefined || this.root.children === undefined) return [];\n\n        const children: (BranchOrTagFolderNode | BranchNode | TagNode)[] = [];\n\n        for (const folder of this.root.children.values()) {\n            if (folder.value === undefined) {\n                // If the folder contains the current branch, expand it by default\n                const expanded =\n                    folder.descendants !== undefined &&\n                    folder.descendants.some(n => n instanceof BranchNode && n.current);\n                children.push(\n                    new BranchOrTagFolderNode(\n                        this.view,\n                        this,\n                        this.type,\n                        this.repoPath,\n                        folder.name,\n                        folder.relativePath,\n                        folder,\n                        this._key,\n                        expanded\n                    )\n                );\n                continue;\n            }\n\n            children.push(folder.value);\n        }\n\n        return children;\n    }\n\n    getTreeItem(): TreeItem {\n        const item = new TreeItem(\n            this.label,\n            this._expanded ? TreeItemCollapsibleState.Expanded : TreeItemCollapsibleState.Collapsed\n        );\n        item.id = this.id;\n        item.contextValue = ResourceType.Folder;\n        item.iconPath = ThemeIcon.Folder;\n        item.tooltip = this.label;\n        return item;\n    }\n\n    get label(): string {\n        return this.folderName;\n    }\n}\n","'use strict';\nimport { TreeItem, TreeItemCollapsibleState } from 'vscode';\nimport { ViewBranchesLayout } from '../../configuration';\nimport { Container } from '../../container';\nimport { GitUri, Repository } from '../../git/gitService';\nimport { Arrays, debug, gate, Iterables } from '../../system';\nimport { RepositoriesView } from '../repositoriesView';\nimport { BranchNode } from './branchNode';\nimport { BranchOrTagFolderNode } from './branchOrTagFolderNode';\nimport { ResourceType, ViewNode } from './viewNode';\n\nexport class BranchesNode extends ViewNode<RepositoriesView> {\n    private _children: ViewNode[] | undefined;\n\n    constructor(uri: GitUri, view: RepositoriesView, parent: ViewNode, public readonly repo: Repository) {\n        super(uri, view, parent);\n    }\n\n    get id(): string {\n        return `${this._instanceId}:gitlens:repository(${this.repo.path}):branches`;\n    }\n\n    async getChildren(): Promise<ViewNode[]> {\n        if (this._children === undefined) {\n            const branches = await this.repo.getBranches();\n            if (branches === undefined) return [];\n\n            branches.sort(\n                (a, b) =>\n                    (a.starred ? -1 : 1) - (b.starred ? -1 : 1) ||\n                    a.name.localeCompare(b.name, undefined, { numeric: true, sensitivity: 'base' })\n            );\n\n            // filter local branches\n            const branchNodes = [\n                ...Iterables.filterMap(branches, b =>\n                    b.remote ? undefined : new BranchNode(this.uri, this.view, this, b)\n                )\n            ];\n            if (this.view.config.branches.layout === ViewBranchesLayout.List) return branchNodes;\n\n            const hierarchy = Arrays.makeHierarchical(\n                branchNodes,\n                n => n.treeHierarchy,\n                (...paths: string[]) => paths.join('/'),\n                this.view.config.files.compact\n            );\n\n            const root = new BranchOrTagFolderNode(\n                this.view,\n                this,\n                'branch',\n                this.repo.path,\n                '',\n                undefined,\n                hierarchy,\n                'branches'\n            );\n            this._children = await root.getChildren();\n        }\n        return this._children;\n    }\n\n    async getTreeItem(): Promise<TreeItem> {\n        const remotes = await this.repo.getRemotes();\n\n        const item = new TreeItem('Branches', TreeItemCollapsibleState.Collapsed);\n        item.contextValue = ResourceType.Branches;\n        if (remotes !== undefined && remotes.length > 0) {\n            item.contextValue += '+remotes';\n        }\n        item.iconPath = {\n            dark: Container.context.asAbsolutePath('images/dark/icon-branch.svg'),\n            light: Container.context.asAbsolutePath('images/light/icon-branch.svg')\n        };\n        item.id = this.id;\n\n        return item;\n    }\n\n    @gate()\n    @debug()\n    refresh() {\n        this._children = undefined;\n    }\n}\n","'use strict';\nimport { CancellationToken, CancellationTokenSource, QuickPickItem, window } from 'vscode';\nimport { GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { GitBranch, GitReference, GitService, GitTag } from '../git/gitService';\nimport { Functions } from '../system';\nimport { CommandQuickPickItem, getQuickPickIgnoreFocusOut } from './commonQuickPicks';\n\nexport class RefQuickPickItem implements QuickPickItem {\n    label: string;\n    description: string;\n    detail: string | undefined;\n\n    constructor(public readonly ref: string, checked?: boolean) {\n        this.label = `${checked ? `$(check)${GlyphChars.Space}` : GlyphChars.Space.repeat(4)} ${GitService.shortenSha(\n            ref\n        )}`;\n        this.description = '';\n    }\n\n    get current() {\n        return false;\n    }\n\n    get item() {\n        const ref: GitReference = { name: this.ref, ref: this.ref };\n        return ref;\n    }\n\n    get remote() {\n        return false;\n    }\n}\n\nexport class BranchQuickPickItem implements QuickPickItem {\n    label: string;\n    description: string;\n    detail: string | undefined;\n\n    constructor(public readonly branch: GitBranch, checked?: boolean) {\n        checked = checked || (checked === undefined && branch.current);\n        this.label = `${checked ? `$(check)${GlyphChars.Space}` : GlyphChars.Space.repeat(4)} ${branch.name}`;\n        this.description = branch.remote\n            ? `${GlyphChars.Space.repeat(2)} remote branch`\n            : branch.current\n            ? 'current branch'\n            : '';\n    }\n\n    get current() {\n        return this.branch.current;\n    }\n\n    get item() {\n        return this.branch;\n    }\n\n    get ref() {\n        return this.branch.name;\n    }\n\n    get remote() {\n        return this.branch.remote;\n    }\n}\n\nexport class TagQuickPickItem implements QuickPickItem {\n    label: string;\n    description: string;\n    detail: string | undefined;\n\n    constructor(public readonly tag: GitTag, checked?: boolean) {\n        this.label = `${checked ? `$(check)${GlyphChars.Space}` : GlyphChars.Space.repeat(4)} ${tag.name}`;\n        this.description = `${GlyphChars.Space.repeat(2)} tag`;\n    }\n\n    get current() {\n        return false;\n    }\n\n    get item() {\n        return this.tag;\n    }\n\n    get ref() {\n        return this.tag.name;\n    }\n\n    get remote() {\n        return false;\n    }\n}\n\nexport type ReferencesQuickPickItem = BranchQuickPickItem | TagQuickPickItem | RefQuickPickItem;\n\nexport interface ReferencesQuickPickOptions {\n    allowEnteringRefs?: boolean;\n    autoPick?: boolean;\n    checked?: string;\n    filters?: {\n        branches?(branch: GitBranch): boolean;\n        tags?(tag: GitTag): boolean;\n    };\n    goBack?: CommandQuickPickItem;\n    include?: 'branches' | 'tags' | 'all';\n}\n\nexport class ReferencesQuickPick {\n    constructor(public readonly repoPath: string | undefined) {}\n\n    async show(\n        placeHolder: string,\n        options: ReferencesQuickPickOptions = {}\n    ): Promise<ReferencesQuickPickItem | CommandQuickPickItem | undefined> {\n        const cancellation = new CancellationTokenSource();\n\n        let scope;\n        if (options.goBack) {\n            scope = await Container.keyboard.beginScope({ left: options.goBack });\n        }\n\n        let autoPick;\n        try {\n            let items = this.getItems(options, cancellation.token);\n            if (options.autoPick) {\n                items = items.then(itms => {\n                    if (itms.length <= 1) {\n                        autoPick = itms[0];\n                        cancellation.cancel();\n                    }\n                    return itms;\n                });\n            }\n\n            let pick;\n            if (options.allowEnteringRefs) {\n                placeHolder += `${GlyphChars.Space.repeat(3)}(select or enter a reference)`;\n\n                const quickpick = window.createQuickPick<ReferencesQuickPickItem | CommandQuickPickItem>();\n                quickpick.busy = true;\n                quickpick.enabled = false;\n                quickpick.placeholder = placeHolder;\n                quickpick.ignoreFocusOut = getQuickPickIgnoreFocusOut();\n                quickpick.show();\n\n                quickpick.items = await items;\n                quickpick.busy = false;\n                quickpick.enabled = true;\n\n                pick = await new Promise<ReferencesQuickPickItem | CommandQuickPickItem | undefined>(resolve => {\n                    cancellation.token.onCancellationRequested(() => quickpick.hide());\n\n                    quickpick.onDidHide(() => resolve(undefined));\n                    quickpick.onDidAccept(async () => {\n                        if (quickpick.selectedItems.length === 0) {\n                            quickpick.busy = true;\n                            quickpick.enabled = false;\n\n                            const ref = quickpick.value;\n                            if (\n                                this.repoPath === undefined ||\n                                (await Container.git.validateReference(this.repoPath, ref))\n                            ) {\n                                resolve(new RefQuickPickItem(ref));\n                            }\n                            else {\n                                quickpick.title = 'You must enter a valid reference';\n                                quickpick.busy = false;\n                                quickpick.enabled = true;\n                                return;\n                            }\n                        }\n                        else {\n                            resolve(quickpick.selectedItems[0]);\n                        }\n\n                        quickpick.hide();\n                    });\n                });\n\n                quickpick.dispose();\n            }\n            else {\n                pick = await window.showQuickPick(\n                    items,\n                    {\n                        placeHolder: placeHolder,\n                        ignoreFocusOut: getQuickPickIgnoreFocusOut()\n                    },\n                    cancellation.token\n                );\n            }\n\n            if (pick === undefined && autoPick !== undefined) {\n                pick = autoPick;\n            }\n\n            if (pick === undefined) {\n                cancellation.cancel();\n            }\n\n            return pick;\n        }\n        finally {\n            if (scope !== undefined) {\n                await scope.dispose();\n            }\n\n            cancellation.dispose();\n        }\n    }\n\n    private async getItems(options: ReferencesQuickPickOptions, token: CancellationToken) {\n        const { checked, filters, goBack, include } = { include: 'all', ...options };\n\n        let branches;\n        let tags;\n        switch (include) {\n            case 'branches': {\n                const result = await Functions.cancellable(Container.git.getBranches(this.repoPath), token);\n                if (result === undefined || token.isCancellationRequested) return [];\n\n                branches = result;\n                break;\n            }\n            case 'tags': {\n                const result = await Functions.cancellable(Container.git.getTags(this.repoPath), token);\n                if (result === undefined || token.isCancellationRequested) return [];\n\n                tags = result;\n                break;\n            }\n            default: {\n                const result = await Functions.cancellable(\n                    Promise.all([Container.git.getBranches(this.repoPath), Container.git.getTags(this.repoPath)]),\n                    token\n                );\n                if (result === undefined || token.isCancellationRequested) return [];\n\n                [branches, tags] = result;\n                break;\n            }\n        }\n\n        const items: (BranchQuickPickItem | TagQuickPickItem | CommandQuickPickItem)[] = [];\n\n        if (branches !== undefined) {\n            const filter =\n                filters !== undefined && typeof filters.branches === 'function' ? filters.branches : undefined;\n\n            branches.sort(\n                (a, b) =>\n                    (a.starred ? -1 : 1) - (b.starred ? -1 : 1) ||\n                    (b.remote ? -1 : 1) - (a.remote ? -1 : 1) ||\n                    a.name.localeCompare(b.name, undefined, { numeric: true, sensitivity: 'base' })\n            );\n            for (const b of branches) {\n                if (filter !== undefined && !filter(b)) continue;\n\n                items.push(new BranchQuickPickItem(b, checked !== undefined ? b.name === checked : undefined));\n            }\n        }\n\n        if (tags !== undefined) {\n            const filter = filters !== undefined && typeof filters.tags === 'function' ? filters.tags : undefined;\n\n            tags.sort((a, b) => a.name.localeCompare(b.name, undefined, { numeric: true, sensitivity: 'base' }));\n            for (const t of tags) {\n                if (filter !== undefined && !filter(t)) continue;\n\n                items.push(new TagQuickPickItem(t, checked !== undefined ? t.name === checked : undefined));\n            }\n        }\n\n        if (goBack !== undefined) {\n            items.splice(0, 0, goBack);\n        }\n\n        return items;\n    }\n}\n","'use strict';\nimport { CancellationTokenSource, commands, QuickPickItem, window } from 'vscode';\nimport { Commands } from '../commands';\nimport { configuration } from '../configuration';\nimport { GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { GitLog, GitLogCommit, GitRepoSearchBy, GitStashCommit, GitUri } from '../git/gitService';\nimport { KeyMapping, Keys } from '../keyboard';\nimport { Strings } from '../system';\nimport { ReferencesQuickPick, ReferencesQuickPickItem } from './referencesQuickPick';\n\nexport function getQuickPickIgnoreFocusOut() {\n    return !configuration.get<boolean>(configuration.name('advanced')('quickPick')('closeOnFocusOut').value);\n}\n\nexport function showQuickPickProgress(message: string, mapping?: KeyMapping): CancellationTokenSource {\n    const cancellation = new CancellationTokenSource();\n    void _showQuickPickProgress(message, cancellation, mapping);\n    return cancellation;\n}\n\nasync function _showQuickPickProgress(message: string, cancellation: CancellationTokenSource, mapping?: KeyMapping) {\n    const scope = mapping && (await Container.keyboard.beginScope(mapping));\n\n    try {\n        await window.showQuickPick(\n            _getInfiniteCancellablePromise(cancellation),\n            {\n                placeHolder: message,\n                ignoreFocusOut: getQuickPickIgnoreFocusOut()\n            },\n            cancellation.token\n        );\n    }\n    catch (ex) {\n        // Not sure why this throws\n    }\n    finally {\n        cancellation.cancel();\n        scope && scope.dispose();\n    }\n}\n\nfunction _getInfiniteCancellablePromise(cancellation: CancellationTokenSource) {\n    return new Promise<QuickPickItem[]>((resolve, reject) => {\n        const disposable = cancellation.token.onCancellationRequested(() => {\n            disposable.dispose();\n            resolve([]);\n        });\n    });\n}\n\nexport interface QuickPickItem extends QuickPickItem {\n    onDidSelect?(): void;\n    onDidPressKey?(key: Keys): Promise<{} | undefined>;\n}\n\nexport class CommandQuickPickItem implements QuickPickItem {\n    label!: string;\n    description!: string;\n    detail?: string | undefined;\n    protected command: Commands | undefined;\n    protected args: any[] | undefined;\n\n    constructor(item: QuickPickItem, args?: [Commands, any[]]);\n    constructor(item: QuickPickItem, command?: Commands, args?: any[]);\n    constructor(item: QuickPickItem, commandOrArgs?: Commands | [Commands, any[]], args?: any[]) {\n        if (commandOrArgs === undefined) {\n            this.command = undefined;\n            this.args = args;\n        }\n        else if (typeof commandOrArgs === 'string') {\n            this.command = commandOrArgs;\n            this.args = args;\n        }\n        else {\n            this.command = commandOrArgs[0];\n            this.args = commandOrArgs.slice(1);\n        }\n        Object.assign(this, item);\n    }\n\n    execute(): Thenable<{} | undefined> {\n        if (this.command === undefined) return Promise.resolve(undefined);\n\n        return commands.executeCommand(this.command, ...(this.args || []));\n    }\n\n    onDidPressKey(key: Keys): Thenable<{} | undefined> {\n        return this.execute();\n    }\n}\n\nexport class CommitQuickPickItem<T extends GitLogCommit = GitLogCommit> implements QuickPickItem {\n    label: string;\n    description: string;\n    detail: string;\n\n    constructor(public readonly commit: T) {\n        const message = commit.getShortMessage();\n        if (GitStashCommit.is(commit)) {\n            this.label = message;\n            this.description = '';\n            this.detail = `${GlyphChars.Space} ${commit.stashName || commit.shortSha} ${Strings.pad(\n                GlyphChars.Dot,\n                1,\n                1\n            )} ${commit.formattedDate} ${Strings.pad(GlyphChars.Dot, 1, 1)} ${commit.getFormattedDiffStatus({\n                compact: true\n            })}`;\n        }\n        else {\n            this.label = message;\n            this.description = `${Strings.pad('$(git-commit)', 1, 1)} ${commit.shortSha}`;\n            this.detail = `${GlyphChars.Space} ${commit.author}, ${commit.formattedDate}${\n                commit.isFile\n                    ? ''\n                    : ` ${Strings.pad(GlyphChars.Dot, 1, 1)} ${commit.getFormattedDiffStatus({ compact: true })}`\n            }`;\n        }\n    }\n}\n\nexport class KeyCommandQuickPickItem extends CommandQuickPickItem {\n    constructor(command: Commands, args?: any[]) {\n        super({ label: '', description: '' }, command, args);\n    }\n}\n\nexport class MessageQuickPickItem extends CommandQuickPickItem {\n    constructor(message: string) {\n        super({ label: message, description: '' });\n    }\n}\n\nexport class ShowCommitInViewQuickPickItem extends CommandQuickPickItem {\n    constructor(\n        public readonly commit: GitLogCommit,\n        item: QuickPickItem = {\n            label: 'Show in View',\n            description: `${Strings.pad(GlyphChars.Dash, 2, 2)} displays the commit in the GitLens Search Commits view`\n        }\n    ) {\n        super(item, undefined, undefined);\n    }\n\n    async execute(): Promise<{} | undefined> {\n        return void (await Container.searchView.search(this.commit.repoPath, this.commit.sha, GitRepoSearchBy.Sha, {\n            label: { label: `commits with an id matching '${this.commit.shortSha}'` }\n        }));\n    }\n}\n\nexport class ShowCommitSearchResultsInViewQuickPickItem extends CommandQuickPickItem {\n    constructor(\n        public readonly search: string,\n        public readonly searchBy: GitRepoSearchBy,\n        public readonly results: GitLog,\n        public readonly resultsLabel: string | { label: string; resultsType?: { singular: string; plural: string } },\n        item: QuickPickItem = {\n            label: 'Show in View',\n            description: `${Strings.pad(\n                GlyphChars.Dash,\n                2,\n                2\n            )} displays the search results in the GitLens Search Commits view`\n        }\n    ) {\n        super(item, undefined, undefined);\n    }\n\n    async execute(): Promise<{} | undefined> {\n        return void (await Container.searchView.showSearchResults(\n            this.results.repoPath,\n            this.search,\n            this.searchBy,\n            this.results,\n            {\n                label: this.resultsLabel\n            }\n        ));\n    }\n}\n\nexport class ShowFileHistoryFromQuickPickItem extends CommandQuickPickItem {\n    constructor(\n        private readonly repoPath: string,\n        private readonly placeHolder: string,\n        private readonly _goBack?: CommandQuickPickItem,\n        item: QuickPickItem = {\n            label: 'Show File History from...',\n            description: `${Strings.pad(GlyphChars.Dash, 2, 2)} shows an alternate file history`\n        }\n    ) {\n        super(item, undefined, undefined);\n    }\n\n    execute(): Promise<CommandQuickPickItem | ReferencesQuickPickItem | undefined> {\n        return new ReferencesQuickPick(this.repoPath).show(this.placeHolder, {\n            allowEnteringRefs: true,\n            goBack: this._goBack\n        });\n    }\n}\n\nexport class ShowFileHistoryInViewQuickPickItem extends CommandQuickPickItem {\n    constructor(\n        public readonly uri: GitUri,\n        public readonly baseRef: string | undefined,\n        item: QuickPickItem = {\n            label: 'Show in View',\n            description: `${Strings.pad(\n                GlyphChars.Dash,\n                2,\n                2\n            )} displays the file history in the GitLens File History view`\n        }\n    ) {\n        super(item, undefined, undefined);\n    }\n\n    async execute(): Promise<{} | undefined> {\n        return void (await Container.fileHistoryView.showHistoryForUri(this.uri, this.baseRef));\n    }\n}\n","'use strict';\nimport * as paths from 'path';\nimport { window } from 'vscode';\nimport { Commands, OpenInRemoteCommandArgs } from '../commands';\nimport { GlyphChars } from '../constants';\nimport {\n    getNameFromRemoteResource,\n    GitLogCommit,\n    GitRemote,\n    GitService,\n    RemoteResource,\n    RemoteResourceType\n} from '../git/gitService';\nimport { Strings } from '../system';\nimport { CommandQuickPickItem, getQuickPickIgnoreFocusOut } from './commonQuickPicks';\n\nexport class OpenRemoteCommandQuickPickItem extends CommandQuickPickItem {\n    private remote: GitRemote;\n    private resource: RemoteResource;\n\n    constructor(remote: GitRemote, resource: RemoteResource, public readonly clipboard?: boolean) {\n        super(\n            {\n                label: clipboard\n                    ? `$(link-external) Copy ${getNameFromRemoteResource(resource)} Url to Clipboard from ${\n                          remote.provider!.name\n                      }`\n                    : `$(link-external) Open ${getNameFromRemoteResource(resource)} on ${remote.provider!.name}`,\n                description: `${Strings.pad(GlyphChars.Dash, 2, 3)} $(repo) ${remote.provider!.path}`\n            },\n            undefined,\n            undefined\n        );\n\n        this.remote = remote;\n        this.resource = resource;\n    }\n\n    execute(): Thenable<{} | undefined> {\n        if (this.clipboard) return this.remote.provider!.copy(this.resource);\n\n        return this.remote.provider!.open(this.resource);\n    }\n}\n\nexport class OpenRemotesCommandQuickPickItem extends CommandQuickPickItem {\n    constructor(remotes: GitRemote[], resource: RemoteResource, goBackCommand?: CommandQuickPickItem) {\n        const name = getNameFromRemoteResource(resource);\n\n        let description;\n        switch (resource.type) {\n            case RemoteResourceType.Branch:\n                description = `$(git-branch) ${resource.branch}`;\n                break;\n\n            case RemoteResourceType.Branches:\n                description = '$(git-branch) Branches';\n                break;\n\n            case RemoteResourceType.Commit:\n                description = `$(git-commit) ${GitService.shortenSha(resource.sha)}`;\n                break;\n\n            case RemoteResourceType.File:\n                description = `$(file-text) ${paths.basename(resource.fileName)}`;\n                break;\n\n            case RemoteResourceType.Repo:\n                description = '$(repo) Repository';\n                break;\n\n            case RemoteResourceType.Revision:\n                if (resource.commit !== undefined && resource.commit instanceof GitLogCommit) {\n                    if (resource.commit.status === 'D') {\n                        resource.sha = resource.commit.previousSha;\n                        description = `$(file-text) ${paths.basename(resource.fileName)} in ${\n                            GlyphChars.Space\n                        }$(git-commit) ${resource.commit.previousShortSha} (deleted in ${\n                            GlyphChars.Space\n                        }$(git-commit) ${resource.commit.shortSha})`;\n                    }\n                    else {\n                        resource.sha = resource.commit.sha;\n                        description = `$(file-text) ${paths.basename(resource.fileName)} in ${\n                            GlyphChars.Space\n                        }$(git-commit) ${resource.commit.shortSha}`;\n                    }\n                }\n                else {\n                    const shortFileSha = resource.sha === undefined ? '=' : GitService.shortenSha(resource.sha);\n                    description = `$(file-text) ${paths.basename(resource.fileName)}${\n                        shortFileSha ? ` in ${GlyphChars.Space}$(git-commit) ${shortFileSha}` : ''\n                    }`;\n                }\n                break;\n\n            default:\n                description = '';\n                break;\n        }\n\n        let remote: GitRemote | undefined;\n        if (remotes.length > 1) {\n            remote = remotes.find(r => r.default);\n        }\n        else if (remotes.length === 1) {\n            remote = remotes[0];\n        }\n\n        if (remote != null) {\n            const commandArgs: OpenInRemoteCommandArgs = {\n                remotes: remotes,\n                resource: resource,\n                goBackCommand: goBackCommand\n            };\n            super(\n                {\n                    label: `$(link-external) Open ${name} on ${remote.provider!.name}`,\n                    description: `${Strings.pad(GlyphChars.Dash, 2, 3)} $(repo) ${remote.provider!.path} ${Strings.pad(\n                        GlyphChars.Dot,\n                        1,\n                        1\n                    )} ${description}`\n                },\n                Commands.OpenInRemote,\n                [undefined, commandArgs]\n            );\n\n            return;\n        }\n\n        remote = remotes[0];\n        // Use the real provider name if there is only 1 provider\n        const provider = remotes.every(r => r.provider !== undefined && r.provider.name === remote!.provider!.name)\n            ? remote.provider!.name\n            : 'Remote';\n\n        const commandArgs: OpenInRemoteCommandArgs = {\n            remotes: remotes,\n            resource: resource,\n            goBackCommand: goBackCommand\n        };\n        super(\n            {\n                label: `$(link-external) Open ${name} on ${provider}${GlyphChars.Ellipsis}`,\n                description: `${Strings.pad(GlyphChars.Dash, 2, 3)} ${description}`\n            },\n            Commands.OpenInRemote,\n            [undefined, commandArgs]\n        );\n    }\n}\n\nexport class RemotesQuickPick {\n    static async show(\n        remotes: GitRemote[],\n        placeHolder: string,\n        resource: RemoteResource,\n        clipboard?: boolean,\n        goBackCommand?: CommandQuickPickItem\n    ): Promise<OpenRemoteCommandQuickPickItem | CommandQuickPickItem | undefined> {\n        const items = remotes.map(r => new OpenRemoteCommandQuickPickItem(r, resource, clipboard)) as (\n            | OpenRemoteCommandQuickPickItem\n            | CommandQuickPickItem)[];\n\n        if (goBackCommand) {\n            items.splice(0, 0, goBackCommand);\n        }\n\n        // const scope = await Container.keyboard.beginScope({ left: goBackCommand });\n\n        const pick = await window.showQuickPick(items, {\n            placeHolder: placeHolder,\n            ignoreFocusOut: getQuickPickIgnoreFocusOut()\n        });\n        if (pick === undefined) return undefined;\n\n        // await scope.dispose();\n\n        return pick;\n    }\n}\n","'use strict';\nimport { CancellationTokenSource, window } from 'vscode';\nimport { Commands, ShowQuickBranchHistoryCommandArgs } from '../commands';\nimport { GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { GitLog, GitUri, RemoteResourceType } from '../git/gitService';\nimport { KeyNoopCommand } from '../keyboard';\nimport { Iterables, Strings } from '../system';\nimport {\n    CommandQuickPickItem,\n    CommitQuickPickItem,\n    getQuickPickIgnoreFocusOut,\n    showQuickPickProgress\n} from './commonQuickPicks';\nimport { OpenRemotesCommandQuickPickItem } from './remotesQuickPick';\n\nexport class BranchHistoryQuickPick {\n    static showProgress(branch: string) {\n        return showQuickPickProgress(\n            `${branch} history ${GlyphChars.Dash} search by commit message, filename, or commit id`,\n            {\n                left: KeyNoopCommand,\n                ',': KeyNoopCommand,\n                '.': KeyNoopCommand\n            }\n        );\n    }\n\n    static async show(\n        log: GitLog,\n        uri: GitUri | undefined,\n        branch: string,\n        progressCancellation: CancellationTokenSource,\n        goBackCommand?: CommandQuickPickItem,\n        nextPageCommand?: CommandQuickPickItem\n    ): Promise<CommitQuickPickItem | CommandQuickPickItem | undefined> {\n        const items = Array.from(Iterables.map(log.commits.values(), c => new CommitQuickPickItem(c))) as (\n            | CommitQuickPickItem\n            | CommandQuickPickItem)[];\n\n        const currentCommandArgs: ShowQuickBranchHistoryCommandArgs = {\n            branch: branch,\n            log: log,\n            maxCount: log.maxCount,\n            goBackCommand: goBackCommand\n        };\n        const currentCommand = new CommandQuickPickItem(\n            {\n                label: `go back ${GlyphChars.ArrowBack}`,\n                description: `${Strings.pad(GlyphChars.Dash, 2, 3)} to ${\n                    GlyphChars.Space\n                }$(git-branch) ${branch} history`\n            },\n            Commands.ShowQuickBranchHistory,\n            [uri, currentCommandArgs]\n        );\n\n        const remotes = await Container.git.getRemotes((uri && uri.repoPath) || log.repoPath);\n        if (remotes.length) {\n            items.splice(\n                0,\n                0,\n                new OpenRemotesCommandQuickPickItem(\n                    remotes,\n                    {\n                        type: RemoteResourceType.Branch,\n                        branch: branch\n                    },\n                    currentCommand\n                )\n            );\n        }\n\n        let previousPageCommand: CommandQuickPickItem | undefined = undefined;\n\n        if (log.truncated || log.sha) {\n            if (log.truncated) {\n                const commandArgs: ShowQuickBranchHistoryCommandArgs = {\n                    branch: branch,\n                    maxCount: 0,\n                    goBackCommand: goBackCommand\n                };\n                items.splice(\n                    0,\n                    0,\n                    new CommandQuickPickItem(\n                        {\n                            label: '$(sync) Show All Commits',\n                            description: `${Strings.pad(GlyphChars.Dash, 2, 3)} this may take a while`\n                        },\n                        Commands.ShowQuickBranchHistory,\n                        [GitUri.fromRepoPath(log.repoPath), commandArgs]\n                    )\n                );\n            }\n\n            if (nextPageCommand) {\n                items.splice(0, 0, nextPageCommand);\n            }\n\n            if (log.truncated) {\n                const commandArgs: ShowQuickBranchHistoryCommandArgs = {\n                    branch: branch,\n                    maxCount: log.maxCount,\n                    nextPageCommand: nextPageCommand\n                };\n                const npc = new CommandQuickPickItem(\n                    {\n                        label: '$(arrow-right) Show Next Commits',\n                        description: `${Strings.pad(GlyphChars.Dash, 2, 3)} shows ${log.maxCount} newer commits`\n                    },\n                    Commands.ShowQuickBranchHistory,\n                    [uri, commandArgs]\n                );\n\n                const last = Iterables.last(log.commits.values());\n                if (last != null) {\n                    const commandArgs: ShowQuickBranchHistoryCommandArgs = {\n                        branch: branch,\n                        maxCount: log.maxCount,\n                        goBackCommand: goBackCommand,\n                        nextPageCommand: npc\n                    };\n                    previousPageCommand = new CommandQuickPickItem(\n                        {\n                            label: '$(arrow-left) Show Previous Commits',\n                            description: `${Strings.pad(GlyphChars.Dash, 2, 3)} shows ${log.maxCount} older commits`\n                        },\n                        Commands.ShowQuickBranchHistory,\n                        [new GitUri(uri ? uri : last.uri, last), commandArgs]\n                    );\n\n                    items.splice(0, 0, previousPageCommand);\n                }\n            }\n        }\n\n        if (goBackCommand) {\n            items.splice(0, 0, goBackCommand);\n        }\n\n        if (progressCancellation.token.isCancellationRequested) return undefined;\n\n        const scope = await Container.keyboard.beginScope({\n            left: goBackCommand,\n            ',': previousPageCommand,\n            '.': nextPageCommand\n        });\n\n        progressCancellation.cancel();\n\n        const pick = await window.showQuickPick(items, {\n            matchOnDescription: true,\n            matchOnDetail: true,\n            placeHolder: `${branch} history ${GlyphChars.Dash} search by commit message, filename, or commit id`,\n            ignoreFocusOut: getQuickPickIgnoreFocusOut()\n            // onDidSelectItem: (item: QuickPickItem) => {\n            //     scope.setKeyCommand('right', item);\n            // }\n        });\n\n        await scope.dispose();\n\n        return pick;\n    }\n}\n","'use strict';\nimport * as paths from 'path';\nimport { commands, QuickPickItem, TextDocumentShowOptions, TextEditor, Uri, window } from 'vscode';\nimport {\n    Commands,\n    CopyMessageToClipboardCommandArgs,\n    CopyShaToClipboardCommandArgs,\n    DiffWithPreviousCommandArgs,\n    DiffWithWorkingCommandArgs,\n    openEditor,\n    OpenWorkingFileCommandArgs,\n    ShowQuickCommitDetailsCommandArgs,\n    ShowQuickCommitFileDetailsCommandArgs,\n    ShowQuickFileHistoryCommandArgs\n} from '../commands';\nimport { GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { GitLog, GitLogCommit, GitService, GitUri, RemoteResourceType } from '../git/gitService';\nimport { KeyCommand, KeyNoopCommand, Keys } from '../keyboard';\nimport { Strings } from '../system';\nimport { CommandQuickPickItem, getQuickPickIgnoreFocusOut, KeyCommandQuickPickItem } from './commonQuickPicks';\nimport { OpenRemotesCommandQuickPickItem } from './remotesQuickPick';\n\nexport class ApplyCommitFileChangesCommandQuickPickItem extends CommandQuickPickItem {\n    constructor(private readonly commit: GitLogCommit, item?: QuickPickItem) {\n        super(\n            item || {\n                label: '$(git-pull-request) Apply Changes',\n                description: `${Strings.pad(GlyphChars.Dash, 2, 3)} $(file-text) ${paths.basename(\n                    commit.fileName\n                )} in ${GlyphChars.Space}$(git-commit) ${commit.shortSha}`\n            },\n            undefined,\n            undefined\n        );\n    }\n\n    async execute(): Promise<{} | undefined> {\n        const uri = this.commit.toGitUri();\n\n        // Open the working file to ensure undo will work\n        const args: OpenWorkingFileCommandArgs = {\n            uri: uri,\n            showOptions: { preserveFocus: true, preview: false }\n        };\n        void (await commands.executeCommand(Commands.OpenWorkingFile, undefined, args));\n\n        void (await Container.git.applyChangesToWorkingFile(uri));\n\n        return undefined;\n    }\n}\n\nexport class OpenCommitFileCommandQuickPickItem extends CommandQuickPickItem {\n    constructor(private readonly _commit: GitLogCommit, item?: QuickPickItem) {\n        super(\n            item || {\n                label: '$(file-symlink-file) Open File',\n                description: `${Strings.pad(GlyphChars.Dash, 2, 3)} ${paths.basename(_commit.fileName)}`\n            }\n        );\n    }\n\n    execute(options?: TextDocumentShowOptions): Thenable<TextEditor | undefined> {\n        const uri = this._commit.toGitUri();\n        const args: OpenWorkingFileCommandArgs = {\n            uri: uri,\n            showOptions: options\n        };\n        return commands.executeCommand(Commands.OpenWorkingFile, undefined, args);\n    }\n\n    onDidPressKey(key: Keys): Thenable<{} | undefined> {\n        return this.execute({\n            preserveFocus: true,\n            preview: false\n        });\n    }\n}\n\nexport class OpenCommitFileRevisionCommandQuickPickItem extends CommandQuickPickItem {\n    private readonly _uri: Uri;\n\n    constructor(commit: GitLogCommit, item?: QuickPickItem) {\n        let description: string;\n        let uri: Uri;\n        if (commit.status === 'D') {\n            uri = GitUri.toRevisionUri(commit.previousFileSha, commit.previousUri.fsPath, commit.repoPath);\n            description = `${Strings.pad(GlyphChars.Dash, 2, 3)} ${paths.basename(commit.fileName)} in ${\n                GlyphChars.Space\n            }$(git-commit) ${commit.previousShortSha} (deleted in ${GlyphChars.Space}$(git-commit) ${commit.shortSha})`;\n        }\n        else {\n            uri = GitUri.toRevisionUri(commit.sha, commit.uri.fsPath, commit.repoPath);\n            description = `${Strings.pad(GlyphChars.Dash, 2, 3)} ${paths.basename(commit.fileName)} in ${\n                GlyphChars.Space\n            }$(git-commit) ${commit.shortSha}`;\n        }\n\n        super(\n            item || {\n                label: '$(file-symlink-file) Open Revision',\n                description: description\n            }\n        );\n\n        this._uri = uri;\n    }\n\n    execute(options?: TextDocumentShowOptions): Thenable<TextEditor | undefined> {\n        return openEditor(this._uri, options);\n    }\n\n    onDidPressKey(key: Keys): Thenable<{} | undefined> {\n        return this.execute({\n            preserveFocus: true,\n            preview: false\n        });\n    }\n}\n\nexport class CommitFileQuickPick {\n    static async show(\n        commit: GitLogCommit,\n        uri: Uri,\n        goBackCommand?: CommandQuickPickItem,\n        currentCommand?: CommandQuickPickItem,\n        fileLog?: GitLog\n    ): Promise<CommandQuickPickItem | undefined> {\n        const items: CommandQuickPickItem[] = [];\n\n        const stash = commit.isStash;\n\n        const isUncommitted = commit.isUncommitted;\n        if (isUncommitted) {\n            // Since we can't trust the previous sha on an uncommitted commit, find the last commit for this file\n            const c = await Container.git.getCommitForFile(undefined, commit.uri.fsPath);\n            if (c === undefined) return undefined;\n\n            commit = c;\n        }\n\n        const workingUri = await commit.getWorkingUri();\n\n        if (stash) {\n            items.push(new ApplyCommitFileChangesCommandQuickPickItem(commit));\n        }\n\n        if (commit.previousFileSha) {\n            const commandArgs: DiffWithPreviousCommandArgs = {\n                commit: commit\n            };\n            items.push(\n                new CommandQuickPickItem(\n                    {\n                        label: '$(git-compare) Open Changes',\n                        description: `${Strings.pad(GlyphChars.Dash, 2, 3)} $(git-commit) ${GitService.shortenSha(\n                            commit.previousFileSha\n                        )} ${GlyphChars.Space} $(git-compare) ${GlyphChars.Space} $(git-commit) ${commit.shortSha}`\n                    },\n                    Commands.DiffWithPrevious,\n                    [commit.uri, commandArgs]\n                )\n            );\n        }\n\n        if (workingUri) {\n            const commandArgs: DiffWithWorkingCommandArgs = {\n                commit: commit\n            };\n            items.push(\n                new CommandQuickPickItem(\n                    {\n                        label: '$(git-compare) Open Changes with Working File',\n                        description: `${Strings.pad(GlyphChars.Dash, 2, 3)} $(git-commit) ${commit.shortSha} ${\n                            GlyphChars.Space\n                        } $(git-compare) ${GlyphChars.Space} $(file-text) ${GitUri.relativeTo(\n                            workingUri,\n                            commit.repoPath\n                        )}`\n                    },\n                    Commands.DiffWithWorking,\n                    [workingUri, commandArgs]\n                )\n            );\n        }\n\n        if (workingUri && commit.status !== 'D') {\n            items.push(new OpenCommitFileCommandQuickPickItem(commit));\n        }\n        items.push(new OpenCommitFileRevisionCommandQuickPickItem(commit));\n\n        const remotes = await Container.git.getRemotes(commit.repoPath);\n        if (remotes.length) {\n            if (workingUri && commit.status !== 'D') {\n                const branch = await Container.git.getBranch(commit.repoPath);\n                if (branch !== undefined) {\n                    items.push(\n                        new OpenRemotesCommandQuickPickItem(\n                            remotes,\n                            {\n                                type: RemoteResourceType.File,\n                                fileName: paths.basename(workingUri.fsPath),\n                                branch: branch.name\n                            },\n                            currentCommand\n                        )\n                    );\n                }\n            }\n\n            if (!stash) {\n                items.push(\n                    new OpenRemotesCommandQuickPickItem(\n                        remotes,\n                        {\n                            type: RemoteResourceType.Revision,\n                            fileName: commit.fileName,\n                            commit: commit\n                        },\n                        currentCommand\n                    )\n                );\n            }\n        }\n\n        if (!stash) {\n            items.push(new ApplyCommitFileChangesCommandQuickPickItem(commit));\n\n            const copyShaCommandArgs: CopyShaToClipboardCommandArgs = {\n                sha: commit.sha\n            };\n            items.push(\n                new CommandQuickPickItem(\n                    {\n                        label: '$(clippy) Copy Commit ID to Clipboard',\n                        description: `${Strings.pad(GlyphChars.Dash, 2, 3)} ${commit.shortSha}`\n                    },\n                    Commands.CopyShaToClipboard,\n                    [uri, copyShaCommandArgs]\n                )\n            );\n\n            const copyMessageCommandArgs: CopyMessageToClipboardCommandArgs = {\n                message: commit.message,\n                sha: commit.sha\n            };\n            items.push(\n                new CommandQuickPickItem(\n                    {\n                        label: '$(clippy) Copy Commit Message to Clipboard',\n                        description: `${Strings.pad(GlyphChars.Dash, 2, 3)} ${commit.getShortMessage()}`\n                    },\n                    Commands.CopyMessageToClipboard,\n                    [uri, copyMessageCommandArgs]\n                )\n            );\n        }\n\n        if (workingUri) {\n            const commandArgs: ShowQuickFileHistoryCommandArgs = {\n                log: fileLog,\n                goBackCommand: currentCommand\n            };\n            items.push(\n                new CommandQuickPickItem(\n                    {\n                        label: '$(history) Show File History',\n                        description: `${Strings.pad(GlyphChars.Dash, 2, 3)} of ${paths.basename(commit.fileName)}`\n                    },\n                    Commands.ShowQuickFileHistory,\n                    [workingUri, commandArgs]\n                )\n            );\n        }\n\n        if (!stash) {\n            const fileHistoryCommandArgs: ShowQuickFileHistoryCommandArgs = {\n                goBackCommand: currentCommand\n            };\n            items.push(\n                new CommandQuickPickItem(\n                    {\n                        label: `$(history) Show ${\n                            GitUri.relativeTo(workingUri || commit.uri, commit.repoPath) ? 'Previous ' : ''\n                        }File History`,\n                        description: `${Strings.pad(GlyphChars.Dash, 2, 3)} of ${paths.basename(\n                            commit.fileName\n                        )} ${Strings.pad(GlyphChars.Dot, 1, 1)} from ${GlyphChars.Space}$(git-commit) ${\n                            commit.shortSha\n                        }`\n                    },\n                    Commands.ShowQuickFileHistory,\n                    [commit.toGitUri(), fileHistoryCommandArgs]\n                )\n            );\n\n            const commitDetailsCommandArgs: ShowQuickCommitDetailsCommandArgs = {\n                commit: commit,\n                sha: commit.sha,\n                goBackCommand: currentCommand\n            };\n            items.push(\n                new CommandQuickPickItem(\n                    {\n                        label: '$(git-commit) Show Commit Details',\n                        description: `${Strings.pad(GlyphChars.Dash, 2, 3)} $(git-commit) ${commit.shortSha}`\n                    },\n                    Commands.ShowQuickCommitDetails,\n                    [commit.toGitUri(), commitDetailsCommandArgs]\n                )\n            );\n        }\n\n        if (goBackCommand) {\n            items.splice(0, 0, goBackCommand);\n        }\n\n        let previousCommand: KeyCommand | (() => Promise<KeyCommand>) | undefined = undefined;\n        let nextCommand: KeyCommand | (() => Promise<KeyCommand>) | undefined = undefined;\n        if (!stash) {\n            previousCommand = async () => {\n                const previousUri = await Container.git.getPreviousUri(commit.repoPath, uri, commit.sha);\n                if (previousUri === undefined || previousUri.sha === undefined) return KeyNoopCommand;\n\n                const previousCommandArgs: ShowQuickCommitFileDetailsCommandArgs = {\n                    // If we have the full file history, reuse it\n                    fileLog:\n                        fileLog !== undefined && !fileLog.truncated && fileLog.sha === undefined ? fileLog : undefined,\n                    sha: previousUri.sha,\n                    goBackCommand: goBackCommand\n                };\n                return new KeyCommandQuickPickItem(Commands.ShowQuickCommitFileDetails, [\n                    previousUri,\n                    previousCommandArgs\n                ]);\n            };\n\n            nextCommand = async () => {\n                const nextUri = await Container.git.getNextUri(commit.repoPath, uri, commit.sha);\n                if (nextUri === undefined || nextUri.sha === undefined) return KeyNoopCommand;\n\n                const nextCommandArgs: ShowQuickCommitFileDetailsCommandArgs = {\n                    // If we have the full file history, reuse it\n                    fileLog:\n                        fileLog !== undefined && !fileLog.truncated && fileLog.sha === undefined ? fileLog : undefined,\n                    sha: nextUri.sha,\n                    goBackCommand: goBackCommand\n                };\n                return new KeyCommandQuickPickItem(Commands.ShowQuickCommitFileDetails, [nextUri, nextCommandArgs]);\n            };\n        }\n\n        const scope = await Container.keyboard.beginScope({\n            left: goBackCommand,\n            ',': previousCommand,\n            '.': nextCommand\n        });\n\n        const pick = await window.showQuickPick(items, {\n            matchOnDescription: true,\n            placeHolder: `${commit.getFormattedPath()} ${Strings.pad(GlyphChars.Dot, 1, 1)} ${\n                isUncommitted ? `Uncommitted ${GlyphChars.ArrowRightHollow} ` : ''\n            }${commit.shortSha} ${Strings.pad(GlyphChars.Dot, 1, 1)} ${commit.author}, ${\n                commit.formattedDate\n            } ${Strings.pad(GlyphChars.Dot, 1, 1)} ${commit.getShortMessage()}`,\n            ignoreFocusOut: getQuickPickIgnoreFocusOut(),\n            onDidSelectItem: (item: QuickPickItem) => {\n                void scope.setKeyCommand('right', item as KeyCommand);\n            }\n        });\n\n        await scope.dispose();\n\n        return pick;\n    }\n}\n","'use strict';\nimport * as paths from 'path';\nimport { commands, TextDocumentShowOptions, TextEditor, Uri, window } from 'vscode';\nimport {\n    Commands,\n    CopyMessageToClipboardCommandArgs,\n    CopyShaToClipboardCommandArgs,\n    DiffDirectoryCommandArgs,\n    DiffWithPreviousCommandArgs,\n    openEditor,\n    OpenWorkingFileCommandArgs,\n    ShowQuickCommitDetailsCommandArgs,\n    StashApplyCommandArgs,\n    StashDeleteCommandArgs\n} from '../commands';\nimport { GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport {\n    GitFile,\n    GitLog,\n    GitLogCommit,\n    GitService,\n    GitStashCommit,\n    GitUri,\n    RemoteResourceType\n} from '../git/gitService';\nimport { KeyNoopCommand, Keys } from '../keyboard';\nimport { Arrays, Iterables, Strings } from '../system';\nimport {\n    CommandQuickPickItem,\n    getQuickPickIgnoreFocusOut,\n    KeyCommandQuickPickItem,\n    QuickPickItem,\n    ShowCommitInViewQuickPickItem\n} from './commonQuickPicks';\nimport { OpenRemotesCommandQuickPickItem } from './remotesQuickPick';\n\nexport class CommitWithFileStatusQuickPickItem extends CommandQuickPickItem {\n    constructor(public readonly commit: GitLogCommit, private readonly _file: GitFile) {\n        super({\n            label: `${Strings.pad(GitFile.getStatusOcticon(_file.status), 4, 2)} ${paths.basename(_file.fileName)}`,\n            description: GitFile.getFormattedDirectory(_file, true)\n        });\n\n        this.commit = commit.toFileCommit(_file);\n    }\n\n    get sha(): string {\n        return this.commit.sha;\n    }\n\n    execute(options?: TextDocumentShowOptions): Thenable<TextEditor | undefined> {\n        return openEditor(GitUri.toRevisionUri(this.commit.sha, this._file, this.commit.repoPath), options);\n    }\n\n    onDidPressKey(key: Keys): Thenable<{} | undefined> {\n        if (this.commit.previousSha === undefined) return super.onDidPressKey(key);\n\n        const commandArgs: DiffWithPreviousCommandArgs = {\n            commit: this.commit,\n            showOptions: {\n                preserveFocus: true,\n                preview: false\n            }\n        };\n        return commands.executeCommand(Commands.DiffWithPrevious, this.commit.toGitUri(), commandArgs);\n    }\n}\n\nexport class OpenCommitFilesCommandQuickPickItem extends CommandQuickPickItem {\n    constructor(private readonly _commit: GitLogCommit, item?: QuickPickItem) {\n        super(\n            item || {\n                label: '$(file-symlink-file) Open Files',\n                description: ''\n                // detail: `Opens all of the changed file in the working tree`\n            }\n        );\n    }\n\n    async execute(\n        options: TextDocumentShowOptions = { preserveFocus: false, preview: false }\n    ): Promise<{} | undefined> {\n        const uris = Arrays.filterMap(this._commit.files, f =>\n            GitUri.fromFile(f, this._commit.repoPath, this._commit.sha)\n        );\n        for (const uri of uris) {\n            const args: OpenWorkingFileCommandArgs = {\n                uri: uri,\n                showOptions: options\n            };\n            await commands.executeCommand(Commands.OpenWorkingFile, undefined, args);\n        }\n\n        return undefined;\n    }\n\n    onDidPressKey(key: Keys): Thenable<{} | undefined> {\n        return this.execute({\n            preserveFocus: true,\n            preview: false\n        });\n    }\n}\n\nexport class OpenCommitFileRevisionsCommandQuickPickItem extends CommandQuickPickItem {\n    constructor(private readonly _commit: GitLogCommit, item?: QuickPickItem) {\n        super(\n            item || {\n                label: '$(file-symlink-file) Open Revisions',\n                description: `${Strings.pad(GlyphChars.Dash, 2, 3)} in ${GlyphChars.Space}$(git-commit) ${\n                    _commit.shortSha\n                }`\n                // detail: `Opens all of the changed files in $(git-commit) ${commit.shortSha}`\n            }\n        );\n    }\n\n    async execute(\n        options: TextDocumentShowOptions = { preserveFocus: false, preview: false }\n    ): Promise<{} | undefined> {\n        const uris = Arrays.filterMap(this._commit.files, f =>\n            GitUri.toRevisionUri(\n                f.status === 'D' ? this._commit.previousFileSha : this._commit.sha,\n                f,\n                this._commit.repoPath\n            )\n        );\n\n        for (const uri of uris) {\n            await openEditor(uri, options);\n        }\n        return undefined;\n    }\n\n    onDidPressKey(key: Keys): Thenable<{} | undefined> {\n        return this.execute({\n            preserveFocus: true,\n            preview: false\n        });\n    }\n}\n\nexport interface CommitQuickPickOptions {\n    currentCommand?: CommandQuickPickItem;\n    goBackCommand?: CommandQuickPickItem;\n    repoLog?: GitLog;\n}\n\nexport class CommitQuickPick {\n    constructor(public readonly repoPath: string | undefined) {}\n\n    async show(\n        commit: GitLogCommit,\n        uri: Uri,\n        options: CommitQuickPickOptions = {}\n    ): Promise<CommitWithFileStatusQuickPickItem | CommandQuickPickItem | undefined> {\n        let previousCommand: (() => Promise<KeyCommandQuickPickItem | typeof KeyNoopCommand>) | undefined = undefined;\n        let nextCommand: (() => Promise<KeyCommandQuickPickItem | typeof KeyNoopCommand>) | undefined = undefined;\n        if (!commit.isStash) {\n            previousCommand = async () => {\n                const previousRef =\n                    commit.previousSha === undefined || GitService.isShaParent(commit.previousSha)\n                        ? await Container.git.resolveReference(commit.repoPath, commit.previousSha || commit.sha)\n                        : commit.previousSha;\n                if (previousRef === undefined) return KeyNoopCommand;\n\n                const previousCommandArgs: ShowQuickCommitDetailsCommandArgs = {\n                    repoLog: options.repoLog,\n                    sha: previousRef,\n                    goBackCommand: options.goBackCommand\n                };\n                return new KeyCommandQuickPickItem(Commands.ShowQuickCommitDetails, [\n                    Uri.file(commit.repoPath),\n                    previousCommandArgs\n                ]);\n            };\n\n            nextCommand = async () => {\n                let log = options.repoLog;\n                let c = log && log.commits.get(commit.sha);\n\n                // If we can't find the commit or the next commit isn't available (since it isn't trustworthy)\n                if (c === undefined || c.nextSha === undefined) {\n                    log = undefined;\n                    c = undefined;\n\n                    // Try to find the next commit\n                    const nextLog = await Container.git.getLog(commit.repoPath, {\n                        maxCount: 1,\n                        reverse: true,\n                        ref: commit.sha\n                    });\n\n                    const next = nextLog && Iterables.first(nextLog.commits.values());\n                    if (next !== undefined && next.sha !== commit.sha) {\n                        c = commit;\n                        c.nextSha = next.sha;\n                    }\n                }\n\n                if (c === undefined || c.nextSha === undefined) return KeyNoopCommand;\n\n                const nextCommandArgs: ShowQuickCommitDetailsCommandArgs = {\n                    repoLog: log,\n                    sha: c.nextSha,\n                    goBackCommand: options.goBackCommand\n                };\n                return new KeyCommandQuickPickItem(Commands.ShowQuickCommitDetails, [\n                    Uri.file(commit.repoPath),\n                    nextCommandArgs\n                ]);\n            };\n        }\n\n        const scope = await Container.keyboard.beginScope({\n            left: options.goBackCommand,\n            ',': previousCommand,\n            '.': nextCommand\n        });\n\n        const pick = await window.showQuickPick(this.getItems(commit, uri, options), {\n            matchOnDescription: true,\n            matchOnDetail: true,\n            placeHolder: `${commit.shortSha} ${Strings.pad(GlyphChars.Dot, 1, 1)} ${\n                commit.author ? `${commit.author}, ` : ''\n            }${commit.formattedDate} ${Strings.pad(GlyphChars.Dot, 1, 1)} ${commit.getShortMessage()}`,\n            ignoreFocusOut: getQuickPickIgnoreFocusOut(),\n            onDidSelectItem: (item: QuickPickItem) => {\n                void scope.setKeyCommand('right', item);\n                if (typeof item.onDidSelect === 'function') {\n                    item.onDidSelect();\n                }\n            }\n        });\n\n        await scope.dispose();\n\n        return pick;\n    }\n\n    private async getItems(commit: GitLogCommit, uri: Uri, options: CommitQuickPickOptions = {}) {\n        const items: (CommitWithFileStatusQuickPickItem | CommandQuickPickItem)[] = commit.files.map(\n            fs => new CommitWithFileStatusQuickPickItem(commit, fs)\n        );\n\n        const stash = commit.isStash;\n\n        let index = 0;\n\n        if (stash) {\n            const stashApplyCommmandArgs: StashApplyCommandArgs = {\n                confirm: true,\n                deleteAfter: false,\n                stashItem: commit as GitStashCommit,\n                goBackCommand: options.currentCommand\n            };\n            items.splice(\n                index++,\n                0,\n                new CommandQuickPickItem(\n                    {\n                        label: '$(git-pull-request) Apply Stashed Changes',\n                        description: `${Strings.pad(GlyphChars.Dash, 2, 3)} ${commit.getShortMessage()}`\n                    },\n                    Commands.StashApply,\n                    [stashApplyCommmandArgs]\n                )\n            );\n\n            const stashDeleteCommmandArgs: StashDeleteCommandArgs = {\n                confirm: true,\n                stashItem: commit as GitStashCommit,\n                goBackCommand: options.currentCommand\n            };\n            items.splice(\n                index++,\n                0,\n                new CommandQuickPickItem(\n                    {\n                        label: '$(x) Delete Stashed Changes',\n                        description: `${Strings.pad(GlyphChars.Dash, 2, 3)} ${commit.getShortMessage()}`\n                    },\n                    Commands.StashDelete,\n                    [stashDeleteCommmandArgs]\n                )\n            );\n\n            items.splice(index++, 0, new ShowCommitInViewQuickPickItem(commit));\n        }\n        else {\n            items.splice(index++, 0, new ShowCommitInViewQuickPickItem(commit));\n\n            const remotes = await Container.git.getRemotes(commit.repoPath);\n            if (remotes.length) {\n                items.splice(\n                    index++,\n                    0,\n                    new OpenRemotesCommandQuickPickItem(\n                        remotes,\n                        {\n                            type: RemoteResourceType.Commit,\n                            sha: commit.sha\n                        },\n                        options.currentCommand\n                    )\n                );\n            }\n        }\n\n        items.splice(index++, 0, new OpenCommitFilesCommandQuickPickItem(commit));\n        items.splice(index++, 0, new OpenCommitFileRevisionsCommandQuickPickItem(commit));\n\n        let diffDirectoryCommmandArgs: DiffDirectoryCommandArgs = {\n            ref1: commit.previousFileSha,\n            ref2: commit.sha\n        };\n        items.splice(\n            index++,\n            0,\n            new CommandQuickPickItem(\n                {\n                    label: '$(git-compare) Open Directory Compare with Previous Revision',\n                    description: `${Strings.pad(GlyphChars.Dash, 2, 3)} $(git-commit) ${GitService.shortenSha(\n                        commit.previousFileSha\n                    )} ${GlyphChars.Space} $(git-compare) ${GlyphChars.Space} $(git-commit) ${commit.shortSha}`\n                },\n                Commands.DiffDirectory,\n                [commit.uri, diffDirectoryCommmandArgs]\n            )\n        );\n\n        diffDirectoryCommmandArgs = {\n            ref1: commit.sha\n        };\n        items.splice(\n            index++,\n            0,\n            new CommandQuickPickItem(\n                {\n                    label: '$(git-compare) Open Directory Compare with Working Tree',\n                    description: `${Strings.pad(GlyphChars.Dash, 2, 3)} $(git-commit) ${commit.shortSha} ${\n                        GlyphChars.Space\n                    } $(git-compare) ${GlyphChars.Space} $(file-directory) Working Tree`\n                },\n                Commands.DiffDirectory,\n                [uri, diffDirectoryCommmandArgs]\n            )\n        );\n\n        if (!stash) {\n            const copyShaCommandArgs: CopyShaToClipboardCommandArgs = {\n                sha: commit.sha\n            };\n            items.splice(\n                index++,\n                0,\n                new CommandQuickPickItem(\n                    {\n                        label: '$(clippy) Copy Commit ID to Clipboard',\n                        description: `${Strings.pad(GlyphChars.Dash, 2, 3)} ${commit.shortSha}`\n                    },\n                    Commands.CopyShaToClipboard,\n                    [uri, copyShaCommandArgs]\n                )\n            );\n        }\n\n        const copyMessageCommandArgs: CopyMessageToClipboardCommandArgs = {\n            message: commit.message,\n            sha: commit.sha\n        };\n        items.splice(\n            index++,\n            0,\n            new CommandQuickPickItem(\n                {\n                    label: '$(clippy) Copy Commit Message to Clipboard',\n                    description: `${Strings.pad(GlyphChars.Dash, 2, 3)} ${commit.getShortMessage()}`\n                },\n                Commands.CopyMessageToClipboard,\n                [uri, copyMessageCommandArgs]\n            )\n        );\n\n        const commitDetailsCommandArgs: ShowQuickCommitDetailsCommandArgs = {\n            commit: commit,\n            repoLog: options.repoLog,\n            sha: commit.sha,\n            goBackCommand: options.goBackCommand\n        };\n        items.splice(\n            index++,\n            0,\n            new CommandQuickPickItem(\n                {\n                    label: 'Changed Files',\n                    description: commit.getFormattedDiffStatus()\n                },\n                Commands.ShowQuickCommitDetails,\n                [uri, commitDetailsCommandArgs]\n            )\n        );\n\n        if (options.goBackCommand) {\n            items.splice(0, 0, options.goBackCommand);\n        }\n\n        return items;\n    }\n}\n","'use strict';\nimport { CancellationTokenSource, window } from 'vscode';\nimport { Container } from '../container';\nimport { GitLog } from '../git/gitService';\nimport { KeyNoopCommand } from '../keyboard';\nimport { Iterables } from '../system';\nimport {\n    CommandQuickPickItem,\n    CommitQuickPickItem,\n    getQuickPickIgnoreFocusOut,\n    MessageQuickPickItem,\n    showQuickPickProgress\n} from './commonQuickPicks';\n\nexport class CommitsQuickPick {\n    static showProgress(message: string) {\n        return showQuickPickProgress(message, {\n            left: KeyNoopCommand,\n            ',': KeyNoopCommand,\n            '.': KeyNoopCommand\n        });\n    }\n\n    static async show(\n        log: GitLog | undefined,\n        placeHolder: string,\n        progressCancellation: CancellationTokenSource,\n        options: {\n            goBackCommand?: CommandQuickPickItem;\n            showAllCommand?: CommandQuickPickItem;\n            showInViewCommand?: CommandQuickPickItem;\n        }\n    ): Promise<CommitQuickPickItem | CommandQuickPickItem | undefined> {\n        const items = ((log && [...Iterables.map(log.commits.values(), c => new CommitQuickPickItem(c))]) || [\n            new MessageQuickPickItem('No results found')\n        ]) as (CommitQuickPickItem | CommandQuickPickItem)[];\n\n        if (options.showInViewCommand !== undefined) {\n            items.splice(0, 0, options.showInViewCommand);\n        }\n\n        if (options.showAllCommand !== undefined) {\n            items.splice(0, 0, options.showAllCommand);\n        }\n\n        if (options.goBackCommand !== undefined) {\n            items.splice(0, 0, options.goBackCommand);\n        }\n\n        if (progressCancellation.token.isCancellationRequested) return undefined;\n\n        const scope = await Container.keyboard.beginScope({ left: options.goBackCommand });\n\n        progressCancellation.cancel();\n\n        const pick = await window.showQuickPick(items, {\n            matchOnDescription: true,\n            placeHolder: placeHolder,\n            ignoreFocusOut: getQuickPickIgnoreFocusOut()\n            // onDidSelectItem: (item: QuickPickItem) => {\n            //     scope.setKeyCommand('right', item);\n            // }\n        });\n\n        await scope.dispose();\n\n        return pick;\n    }\n}\n","'use strict';\nimport * as paths from 'path';\nimport { CancellationTokenSource, window } from 'vscode';\nimport { Commands, ShowQuickCurrentBranchHistoryCommandArgs, ShowQuickFileHistoryCommandArgs } from '../commands';\nimport { GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { GitLog, GitUri, RemoteResource, RemoteResourceType } from '../git/gitService';\nimport { KeyNoopCommand } from '../keyboard';\nimport { Iterables, Strings } from '../system';\nimport {\n    CommandQuickPickItem,\n    CommitQuickPickItem,\n    getQuickPickIgnoreFocusOut,\n    ShowFileHistoryFromQuickPickItem,\n    showQuickPickProgress\n} from './commonQuickPicks';\nimport { OpenRemotesCommandQuickPickItem } from './remotesQuickPick';\n\nexport class FileHistoryQuickPick {\n    static showProgress(placeHolder: string) {\n        return showQuickPickProgress(placeHolder, {\n            left: KeyNoopCommand,\n            ',': KeyNoopCommand,\n            '.': KeyNoopCommand\n        });\n    }\n\n    static async show(\n        log: GitLog,\n        uri: GitUri,\n        placeHolder: string,\n        options: {\n            currentCommand?: CommandQuickPickItem;\n            goBackCommand?: CommandQuickPickItem;\n            nextPageCommand?: CommandQuickPickItem;\n            previousPageCommand?: CommandQuickPickItem;\n            pickerOnly?: boolean;\n            progressCancellation?: CancellationTokenSource;\n            showAllCommand?: CommandQuickPickItem;\n            showInViewCommand?: CommandQuickPickItem;\n        } = {}\n    ): Promise<CommitQuickPickItem | CommandQuickPickItem | undefined> {\n        options = { pickerOnly: false, ...options };\n\n        const items = Array.from(Iterables.map(log.commits.values(), c => new CommitQuickPickItem(c))) as (\n            | CommitQuickPickItem\n            | CommandQuickPickItem)[];\n\n        let index = 0;\n\n        index++;\n        items.splice(0, 0, new ShowFileHistoryFromQuickPickItem(log.repoPath, placeHolder, options.currentCommand));\n\n        if (options.showInViewCommand !== undefined) {\n            index++;\n            items.splice(0, 0, options.showInViewCommand);\n        }\n\n        if (log.truncated || log.sha) {\n            if (options.showAllCommand !== undefined) {\n                index++;\n                items.splice(0, 0, options.showAllCommand);\n            }\n            else if (!options.pickerOnly) {\n                const workingUri = await Container.git.getWorkingUri(log.repoPath, uri);\n                if (workingUri) {\n                    const goBackCommandArgs: ShowQuickFileHistoryCommandArgs = {\n                        log: log,\n                        maxCount: log.maxCount,\n                        range: log.range,\n                        goBackCommand: options.goBackCommand\n                    };\n\n                    const commandArgs: ShowQuickFileHistoryCommandArgs = {\n                        goBackCommand: new CommandQuickPickItem(\n                            {\n                                label: `go back ${GlyphChars.ArrowBack}`,\n                                description: `${Strings.pad(GlyphChars.Dash, 2, 3)} to history of ${\n                                    GlyphChars.Space\n                                }$(file-text) ${paths.basename(uri.fsPath)}${\n                                    uri.sha ? ` from ${GlyphChars.Space}$(git-commit) ${uri.shortSha}` : ''\n                                }`\n                            },\n                            Commands.ShowQuickFileHistory,\n                            [uri, goBackCommandArgs]\n                        )\n                    };\n\n                    index++;\n                    items.splice(\n                        0,\n                        0,\n                        new CommandQuickPickItem(\n                            {\n                                label: '$(history) Show File History',\n                                description: `${Strings.pad(GlyphChars.Dash, 2, 3)} of ${paths.basename(\n                                    workingUri.fsPath\n                                )}`\n                            },\n                            Commands.ShowQuickFileHistory,\n                            [workingUri, commandArgs]\n                        )\n                    );\n                }\n            }\n\n            if (options.nextPageCommand !== undefined) {\n                index++;\n                items.splice(0, 0, options.nextPageCommand);\n            }\n\n            if (options.previousPageCommand !== undefined) {\n                index++;\n                items.splice(0, 0, options.previousPageCommand);\n            }\n        }\n\n        if (!options.pickerOnly) {\n            const branch = await Container.git.getBranch(uri.repoPath!);\n\n            if (branch !== undefined) {\n                const commandArgs: ShowQuickFileHistoryCommandArgs = {\n                    log: log,\n                    maxCount: log.maxCount,\n                    range: log.range\n                };\n\n                const currentCommand = new CommandQuickPickItem(\n                    {\n                        label: `go back ${GlyphChars.ArrowBack}`,\n                        description: `${Strings.pad(GlyphChars.Dash, 2, 3)} to history of ${\n                            GlyphChars.Space\n                        }$(file-text) ${paths.basename(uri.fsPath)}${\n                            uri.sha ? ` from ${GlyphChars.Space}$(git-commit) ${uri.shortSha}` : ''\n                        }`\n                    },\n                    Commands.ShowQuickFileHistory,\n                    [uri, commandArgs]\n                );\n\n                // Only show the full repo option if we are the root\n                if (options.goBackCommand === undefined) {\n                    const commandArgs: ShowQuickCurrentBranchHistoryCommandArgs = {\n                        goBackCommand: currentCommand\n                    };\n                    items.splice(\n                        index++,\n                        0,\n                        new CommandQuickPickItem(\n                            {\n                                label: '$(history) Show Branch History',\n                                description: `${Strings.pad(GlyphChars.Dash, 2, 3)} shows  ${\n                                    GlyphChars.Space\n                                }$(git-branch) ${branch.name} history`\n                            },\n                            Commands.ShowQuickCurrentBranchHistory,\n                            [undefined, commandArgs]\n                        )\n                    );\n                }\n\n                const remotes = await Container.git.getRemotes(uri.repoPath!);\n                if (remotes.length) {\n                    const resource: RemoteResource =\n                        uri.sha !== undefined\n                            ? {\n                                  type: RemoteResourceType.Revision,\n                                  branch: branch.name,\n                                  fileName: uri.relativePath,\n                                  sha: uri.sha\n                              }\n                            : {\n                                  type: RemoteResourceType.File,\n                                  branch: branch.name,\n                                  fileName: uri.relativePath\n                              };\n                    items.splice(index++, 0, new OpenRemotesCommandQuickPickItem(remotes, resource, currentCommand));\n                }\n            }\n\n            if (options.goBackCommand) {\n                items.splice(0, 0, options.goBackCommand);\n            }\n        }\n\n        if (options.progressCancellation !== undefined && options.progressCancellation.token.isCancellationRequested) {\n            return undefined;\n        }\n\n        const scope = await Container.keyboard.beginScope({\n            left: options.goBackCommand,\n            ',': options.previousPageCommand,\n            '.': options.nextPageCommand\n        });\n\n        options.progressCancellation && options.progressCancellation.cancel();\n\n        const pick = await window.showQuickPick(items, {\n            matchOnDescription: true,\n            matchOnDetail: true,\n            placeHolder: placeHolder,\n            ignoreFocusOut: getQuickPickIgnoreFocusOut()\n            // onDidSelectItem: (item: QuickPickItem) => {\n            //     scope.setKeyCommand('right', item);\n            // }\n        });\n\n        await scope.dispose();\n\n        return pick;\n    }\n}\n","'use strict';\nimport { QuickPickItem, window } from 'vscode';\nimport { Container } from '../container';\nimport { Repository } from '../git/gitService';\nimport { Iterables } from '../system';\nimport { CommandQuickPickItem, getQuickPickIgnoreFocusOut } from './commonQuickPicks';\n\nexport class RepositoryQuickPickItem implements QuickPickItem {\n    label: string;\n    description: string;\n    detail: string | undefined;\n\n    constructor(public readonly repository: Repository) {\n        this.label = repository.name;\n        this.description = repository.path;\n    }\n\n    get repoPath(): string {\n        return this.repository.path;\n    }\n}\n\nexport class RepositoriesQuickPick {\n    static async show(\n        placeHolder: string,\n        goBackCommand?: CommandQuickPickItem\n    ): Promise<RepositoryQuickPickItem | CommandQuickPickItem | undefined> {\n        const items = [\n            ...Iterables.map(await Container.git.getOrderedRepositories(), r => new RepositoryQuickPickItem(r))\n        ] as (RepositoryQuickPickItem | CommandQuickPickItem)[];\n\n        if (goBackCommand !== undefined) {\n            items.splice(0, 0, goBackCommand);\n        }\n\n        // const scope = await Container.keyboard.beginScope({ left: goBackCommand });\n\n        const pick = await window.showQuickPick(items, {\n            placeHolder: placeHolder,\n            ignoreFocusOut: getQuickPickIgnoreFocusOut()\n        });\n\n        // await scope.dispose();\n\n        return pick;\n    }\n}\n","'use strict';\nimport * as paths from 'path';\nimport { commands, TextDocumentShowOptions, TextEditor, window } from 'vscode';\nimport {\n    Commands,\n    DiffWithPreviousCommandArgs,\n    OpenChangedFilesCommandArgs,\n    openEditor,\n    ShowQuickBranchHistoryCommandArgs,\n    ShowQuickRepoStatusCommandArgs,\n    ShowQuickStashListCommandArgs\n} from '../commands';\nimport { GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport {\n    GitCommitType,\n    GitFileStatus,\n    GitLogCommit,\n    GitService,\n    GitStatus,\n    GitStatusFile,\n    GitUri\n} from '../git/gitService';\nimport { Keys } from '../keyboard';\nimport { Iterables, Strings } from '../system';\nimport { CommandQuickPickItem, getQuickPickIgnoreFocusOut, QuickPickItem } from './commonQuickPicks';\n\nexport class OpenStatusFileCommandQuickPickItem extends CommandQuickPickItem {\n    readonly status: GitStatusFile;\n    private readonly commit: GitLogCommit;\n\n    constructor(private readonly _status: GitStatusFile, realIndexStatus?: GitFileStatus, item?: QuickPickItem) {\n        super(\n            item || {\n                label: `${_status.staged ? '$(check)' : GlyphChars.Space.repeat(3)}${Strings.pad(\n                    _status.getOcticon(),\n                    2,\n                    2\n                )} ${paths.basename(_status.fileName)}`,\n                description: _status.getFormattedDirectory(true)\n            }\n        );\n\n        this.status = _status;\n        if (_status.indexStatus !== undefined) {\n            this.commit = new GitLogCommit(\n                GitCommitType.LogFile,\n                _status.repoPath,\n                GitService.uncommittedStagedSha,\n                'You',\n                undefined,\n                new Date(),\n                new Date(),\n                '',\n                _status.fileName,\n                [_status],\n                _status.status,\n                _status.originalFileName,\n                'HEAD',\n                _status.fileName\n            );\n        }\n        else {\n            this.commit = new GitLogCommit(\n                GitCommitType.LogFile,\n                _status.repoPath,\n                GitService.uncommittedSha,\n                'You',\n                undefined,\n                new Date(),\n                new Date(),\n                '',\n                _status.fileName,\n                [_status],\n                _status.status,\n                _status.originalFileName,\n                realIndexStatus !== undefined ? GitService.uncommittedStagedSha : 'HEAD',\n                _status.fileName\n            );\n        }\n    }\n\n    execute(options?: TextDocumentShowOptions): Thenable<TextEditor | undefined> {\n        return openEditor(this._status.uri, options);\n    }\n\n    onDidPressKey(key: Keys): Promise<{} | undefined> {\n        const commandArgs: DiffWithPreviousCommandArgs = {\n            commit: this.commit,\n            line: 0,\n            showOptions: {\n                preserveFocus: true,\n                preview: false\n            }\n        };\n        return commands.executeCommand(\n            Commands.DiffWithPrevious,\n            GitUri.fromFile(this.status, this.status.repoPath),\n            commandArgs\n        ) as Promise<{} | undefined>;\n    }\n}\n\nexport class OpenStatusFilesCommandQuickPickItem extends CommandQuickPickItem {\n    constructor(files: GitStatusFile[], item?: QuickPickItem) {\n        const uris = files.map(f => f.uri);\n        const commandArgs: OpenChangedFilesCommandArgs = {\n            uris: uris\n        };\n\n        super(\n            item || {\n                label: '$(file-symlink-file) Open Changed Files',\n                description: ''\n                // detail: `Opens all of the changed files in the repository`\n            },\n            Commands.OpenChangedFiles,\n            [undefined, commandArgs]\n        );\n    }\n}\n\ninterface ComputedStatus {\n    staged: number;\n    stagedAddsAndChanges: GitStatusFile[];\n    stagedStatus: string;\n\n    unstaged: number;\n    unstagedAddsAndChanges: GitStatusFile[];\n    unstagedStatus: string;\n}\n\nexport class RepoStatusQuickPick {\n    private static computeStatus(files: GitStatusFile[]): ComputedStatus {\n        let stagedAdds = 0;\n        let unstagedAdds = 0;\n        let stagedChanges = 0;\n        let unstagedChanges = 0;\n        let stagedDeletes = 0;\n        let unstagedDeletes = 0;\n\n        const stagedAddsAndChanges: GitStatusFile[] = [];\n        const unstagedAddsAndChanges: GitStatusFile[] = [];\n\n        for (const f of files) {\n            switch (f.indexStatus) {\n                case 'A':\n                case '?':\n                    stagedAdds++;\n                    stagedAddsAndChanges.push(f);\n                    break;\n\n                case 'D':\n                    stagedDeletes++;\n                    break;\n\n                case undefined:\n                    break;\n\n                default:\n                    stagedChanges++;\n                    stagedAddsAndChanges.push(f);\n                    break;\n            }\n\n            switch (f.workingTreeStatus) {\n                case 'A':\n                case '?':\n                    unstagedAdds++;\n                    unstagedAddsAndChanges.push(f);\n                    break;\n\n                case 'D':\n                    unstagedDeletes++;\n                    break;\n\n                case undefined:\n                    break;\n\n                default:\n                    unstagedChanges++;\n                    unstagedAddsAndChanges.push(f);\n                    break;\n            }\n        }\n\n        const staged = stagedAdds + stagedChanges + stagedDeletes;\n        const unstaged = unstagedAdds + unstagedChanges + unstagedDeletes;\n\n        return {\n            staged: staged,\n            stagedStatus: staged > 0 ? `+${stagedAdds} ~${stagedChanges} -${stagedDeletes}` : '',\n            stagedAddsAndChanges: stagedAddsAndChanges,\n            unstaged: unstaged,\n            unstagedStatus: unstaged > 0 ? `+${unstagedAdds} ~${unstagedChanges} -${unstagedDeletes}` : '',\n            unstagedAddsAndChanges: unstagedAddsAndChanges\n        };\n    }\n\n    static async show(\n        status: GitStatus,\n        goBackCommand?: CommandQuickPickItem\n    ): Promise<\n        OpenStatusFileCommandQuickPickItem | OpenStatusFilesCommandQuickPickItem | CommandQuickPickItem | undefined\n    > {\n        const items = [\n            ...Iterables.flatMap(status.files, s => {\n                if (s.workingTreeStatus !== undefined && s.indexStatus !== undefined) {\n                    return [\n                        new OpenStatusFileCommandQuickPickItem(s.with({ indexStatus: null }), s.indexStatus),\n                        new OpenStatusFileCommandQuickPickItem(s.with({ workTreeStatus: null }))\n                    ];\n                }\n\n                return [new OpenStatusFileCommandQuickPickItem(s)];\n            })\n        ] as (OpenStatusFileCommandQuickPickItem | OpenStatusFilesCommandQuickPickItem | CommandQuickPickItem)[];\n\n        // Sort the status by staged and then filename\n        items.sort(\n            (a, b) =>\n                ((a as OpenStatusFileCommandQuickPickItem).status.staged ? -1 : 1) -\n                    ((b as OpenStatusFileCommandQuickPickItem).status.staged ? -1 : 1) ||\n                (a as OpenStatusFileCommandQuickPickItem).status.fileName.localeCompare(\n                    (b as OpenStatusFileCommandQuickPickItem).status.fileName,\n                    undefined,\n                    { numeric: true, sensitivity: 'base' }\n                )\n        );\n\n        const repoStatusCommandArgs: ShowQuickRepoStatusCommandArgs = {\n            goBackCommand: goBackCommand\n        };\n        const currentCommand = new CommandQuickPickItem(\n            {\n                label: `go back ${GlyphChars.ArrowBack}`,\n                description: `${Strings.pad(GlyphChars.Dash, 2, 3)} to ${GlyphChars.Space}$(git-branch) ${\n                    status.branch\n                } status`\n            },\n            Commands.ShowQuickRepoStatus,\n            [undefined, repoStatusCommandArgs]\n        );\n\n        const computed = this.computeStatus(status.files);\n        if (computed.staged > 0) {\n            let index = 0;\n            const unstagedIndex = computed.unstaged > 0 ? status.files.findIndex(f => !f.staged) : -1;\n            if (unstagedIndex > -1) {\n                items.splice(\n                    unstagedIndex,\n                    0,\n                    new CommandQuickPickItem(\n                        {\n                            label: 'Unstaged Files',\n                            description: computed.unstagedStatus\n                        },\n                        Commands.ShowQuickRepoStatus,\n                        [undefined, repoStatusCommandArgs]\n                    )\n                );\n\n                items.splice(\n                    unstagedIndex,\n                    0,\n                    new OpenStatusFilesCommandQuickPickItem(computed.stagedAddsAndChanges, {\n                        label: `${GlyphChars.Space.repeat(4)} $(file-symlink-file) Open Staged Files`,\n                        description: ''\n                    })\n                );\n\n                items.push(\n                    new OpenStatusFilesCommandQuickPickItem(computed.unstagedAddsAndChanges, {\n                        label: `${GlyphChars.Space.repeat(4)} $(file-symlink-file) Open Unstaged Files`,\n                        description: ''\n                    })\n                );\n            }\n\n            items.splice(\n                index++,\n                0,\n                new CommandQuickPickItem(\n                    {\n                        label: 'Staged Files',\n                        description: computed.stagedStatus\n                    },\n                    Commands.ShowQuickRepoStatus,\n                    [undefined, repoStatusCommandArgs]\n                )\n            );\n        }\n        else if (status.files.some(f => !f.staged)) {\n            items.splice(\n                0,\n                0,\n                new CommandQuickPickItem(\n                    {\n                        label: 'Unstaged Files',\n                        description: computed.unstagedStatus\n                    },\n                    Commands.ShowQuickRepoStatus,\n                    [undefined, repoStatusCommandArgs]\n                )\n            );\n        }\n\n        if (status.files.length) {\n            items.push(\n                new OpenStatusFilesCommandQuickPickItem(\n                    computed.stagedAddsAndChanges.concat(computed.unstagedAddsAndChanges)\n                )\n            );\n            items.push(\n                new CommandQuickPickItem(\n                    {\n                        label: '$(x) Close Unchanged Files',\n                        description: ''\n                    },\n                    Commands.CloseUnchangedFiles\n                )\n            );\n        }\n        else {\n            items.push(\n                new CommandQuickPickItem(\n                    {\n                        label: 'No changes in the working tree',\n                        description: ''\n                    },\n                    Commands.ShowQuickRepoStatus,\n                    [undefined, repoStatusCommandArgs]\n                )\n            );\n        }\n\n        const stashListCommandArgs: ShowQuickStashListCommandArgs = {\n            goBackCommand: currentCommand\n        };\n        items.splice(\n            0,\n            0,\n            new CommandQuickPickItem(\n                {\n                    label: '$(inbox) Show Stashed Changes',\n                    description: `${Strings.pad(GlyphChars.Dash, 2, 3)} shows stashed changes in the repository`\n                },\n                Commands.ShowQuickStashList,\n                [GitUri.fromRepoPath(status.repoPath), stashListCommandArgs]\n            )\n        );\n\n        if (status.upstream && status.state.ahead) {\n            const branchHistoryCommandArgs: ShowQuickBranchHistoryCommandArgs = {\n                branch: status.ref,\n                maxCount: 0,\n                goBackCommand: currentCommand\n            };\n            items.splice(\n                0,\n                0,\n                new CommandQuickPickItem(\n                    {\n                        label: `$(cloud-upload)${GlyphChars.Space} ${status.state.ahead} Commit${\n                            status.state.ahead > 1 ? 's' : ''\n                        } ahead of ${GlyphChars.Space}$(git-branch) ${status.upstream}`,\n                        description: `${Strings.pad(GlyphChars.Dash, 2, 3)} shows commits in ${\n                            GlyphChars.Space\n                        }$(git-branch) ${status.branch} but not ${GlyphChars.Space}$(git-branch) ${status.upstream}`\n                    },\n                    Commands.ShowQuickBranchHistory,\n                    [\n                        GitUri.fromRepoPath(status.repoPath, `${status.upstream}..${status.ref}`),\n                        branchHistoryCommandArgs\n                    ]\n                )\n            );\n        }\n\n        if (status.upstream && status.state.behind) {\n            const branchHistoryCommandArgs: ShowQuickBranchHistoryCommandArgs = {\n                branch: status.ref,\n                maxCount: 0,\n                goBackCommand: currentCommand\n            };\n            items.splice(\n                0,\n                0,\n                new CommandQuickPickItem(\n                    {\n                        label: `$(cloud-download)${GlyphChars.Space} ${status.state.behind} Commit${\n                            status.state.behind > 1 ? 's' : ''\n                        } behind ${GlyphChars.Space}$(git-branch) ${status.upstream}`,\n                        description: `${Strings.pad(GlyphChars.Dash, 2, 3)} shows commits in ${\n                            GlyphChars.Space\n                        }$(git-branch) ${status.upstream} but not ${GlyphChars.Space}$(git-branch) ${status.branch}${\n                            status.sha\n                                ? ` (since ${GlyphChars.Space}$(git-commit) ${GitService.shortenSha(status.sha)})`\n                                : ''\n                        }`\n                    },\n                    Commands.ShowQuickBranchHistory,\n                    [\n                        GitUri.fromRepoPath(status.repoPath, `${status.ref}..${status.upstream}`),\n                        branchHistoryCommandArgs\n                    ]\n                )\n            );\n        }\n\n        if (status.upstream && !status.state.ahead && !status.state.behind) {\n            items.splice(\n                0,\n                0,\n                new CommandQuickPickItem(\n                    {\n                        label: `$(git-branch) ${status.branch} is up-to-date with ${GlyphChars.Space}$(git-branch) ${\n                            status.upstream\n                        }`,\n                        description: ''\n                    },\n                    Commands.ShowQuickRepoStatus,\n                    [undefined, repoStatusCommandArgs]\n                )\n            );\n        }\n\n        if (goBackCommand) {\n            items.splice(0, 0, goBackCommand);\n        }\n\n        const scope = await Container.keyboard.beginScope({ left: goBackCommand });\n\n        const pick = await window.showQuickPick(items, {\n            matchOnDescription: true,\n            placeHolder: `status of ${status.branch}${\n                status.upstream ? ` ${Strings.pad(GlyphChars.ArrowLeftRightLong, 1, 1)} ${status.upstream}` : ''\n            }`,\n            ignoreFocusOut: getQuickPickIgnoreFocusOut(),\n            onDidSelectItem: (item: QuickPickItem) => {\n                void scope.setKeyCommand('right', item);\n            }\n        });\n\n        await scope.dispose();\n\n        return pick;\n    }\n}\n","'use strict';\nimport { CancellationTokenSource, window } from 'vscode';\nimport { Commands, StashSaveCommandArgs } from '../commands';\nimport { GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { GitStash, GitStashCommit } from '../git/gitService';\nimport { KeyNoopCommand } from '../keyboard';\nimport { Iterables, Strings } from '../system';\nimport {\n    CommandQuickPickItem,\n    CommitQuickPickItem,\n    getQuickPickIgnoreFocusOut,\n    showQuickPickProgress\n} from './commonQuickPicks';\n\nexport class StashListQuickPick {\n    static showProgress(mode: 'list' | 'apply') {\n        const message =\n            mode === 'apply'\n                ? `Apply stashed changes to your working tree${GlyphChars.Ellipsis}`\n                : `stashed changes ${GlyphChars.Dash} search by message, filename, or commit id`;\n        return showQuickPickProgress(message, {\n            left: KeyNoopCommand,\n            ',': KeyNoopCommand,\n            '.': KeyNoopCommand\n        });\n    }\n\n    static async show(\n        stash: GitStash,\n        mode: 'list' | 'apply',\n        progressCancellation: CancellationTokenSource,\n        goBackCommand?: CommandQuickPickItem,\n        currentCommand?: CommandQuickPickItem\n    ): Promise<CommitQuickPickItem<GitStashCommit> | CommandQuickPickItem | undefined> {\n        const items = ((stash &&\n            Array.from(Iterables.map(stash.commits.values(), c => new CommitQuickPickItem<GitStashCommit>(c)))) ||\n            []) as (CommitQuickPickItem<GitStashCommit> | CommandQuickPickItem)[];\n\n        if (mode === 'list') {\n            const commandArgs: StashSaveCommandArgs = {\n                goBackCommand: currentCommand\n            };\n            items.splice(\n                0,\n                0,\n                new CommandQuickPickItem(\n                    {\n                        label: '$(plus) Stash Changes',\n                        description: `${Strings.pad(GlyphChars.Dash, 2, 3)} stashes all changes`\n                    },\n                    Commands.StashSave,\n                    [commandArgs]\n                )\n            );\n        }\n\n        if (goBackCommand) {\n            items.splice(0, 0, goBackCommand);\n        }\n\n        if (progressCancellation.token.isCancellationRequested) return undefined;\n\n        const scope = await Container.keyboard.beginScope({ left: goBackCommand });\n\n        progressCancellation.cancel();\n\n        const pick = await window.showQuickPick(items, {\n            matchOnDescription: true,\n            placeHolder:\n                mode === 'apply'\n                    ? `Apply stashed changes to your working tree${GlyphChars.Ellipsis}`\n                    : `stashed changes ${GlyphChars.Dash} search by message, filename, or commit id`,\n            ignoreFocusOut: getQuickPickIgnoreFocusOut()\n            // onDidSelectItem: (item: QuickPickItem) => {\n            //     scope.setKeyCommand('right', item);\n            // }\n        });\n\n        await scope.dispose();\n\n        return pick;\n    }\n}\n","'use strict';\nimport { TreeItem, TreeItemCollapsibleState } from 'vscode';\nimport { GlyphChars } from '../../constants';\nimport { Container } from '../../container';\nimport { CompareView } from '../compareView';\nimport { CompareNode } from './compareNode';\nimport { ResourceType, unknownGitUri, ViewNode } from './viewNode';\n\nexport class ComparePickerNode extends ViewNode<CompareView> {\n    constructor(view: CompareView, protected readonly parent: CompareNode) {\n        super(unknownGitUri, view, parent);\n    }\n\n    getChildren(): ViewNode[] {\n        return [];\n    }\n\n    async getTreeItem(): Promise<TreeItem> {\n        const selectedRef = this.parent.selectedRef;\n        const repoPath = selectedRef !== undefined ? selectedRef.repoPath : undefined;\n\n        let description;\n        if (repoPath !== undefined) {\n            if ((await Container.git.getRepositoryCount()) > 1) {\n                const repo = await Container.git.getRepository(repoPath);\n                description = (repo && repo.formattedName) || repoPath;\n            }\n        }\n\n        let item;\n        if (selectedRef === undefined) {\n            item = new TreeItem(\n                'Compare <branch, tag, or ref> with <branch, tag, or ref>',\n                TreeItemCollapsibleState.None\n            );\n            item.contextValue = ResourceType.ComparePicker;\n            item.description = description;\n            item.tooltip = `Click to select or enter a reference for compare${GlyphChars.Ellipsis}`;\n            item.command = {\n                title: `Compare${GlyphChars.Ellipsis}`,\n                command: this.view.getQualifiedCommand('selectForCompare')\n            };\n        }\n        else {\n            item = new TreeItem(\n                `Compare ${selectedRef.label} with <branch, tag, or ref>`,\n                TreeItemCollapsibleState.None\n            );\n            item.contextValue = ResourceType.ComparePickerWithRef;\n            item.description = description;\n            item.tooltip = `Click to compare ${selectedRef.label} with${GlyphChars.Ellipsis}`;\n            item.command = {\n                title: `Compare ${selectedRef.label} with${GlyphChars.Ellipsis}`,\n                command: this.view.getQualifiedCommand('compareWithSelected')\n            };\n        }\n\n        return item;\n    }\n}\n","'use strict';\nimport { TreeItem, TreeItemCollapsibleState } from 'vscode';\nimport { getRepoPathOrPrompt } from '../../commands';\nimport { CommandContext, GlyphChars, NamedRef, setCommandContext } from '../../constants';\nimport { GitService } from '../../git/gitService';\nimport { CommandQuickPickItem, ReferencesQuickPick } from '../../quickpicks';\nimport { debug, Functions, gate, Iterables, log } from '../../system';\nimport { CompareView } from '../compareView';\nimport { MessageNode } from './common';\nimport { ComparePickerNode } from './comparePickerNode';\nimport { ResourceType, unknownGitUri, ViewNode } from './viewNode';\n\ninterface RepoRef {\n    label: string;\n    repoPath: string;\n    ref: string | NamedRef;\n}\n\nexport class CompareNode extends ViewNode<CompareView> {\n    private _children: (ViewNode | MessageNode)[] = [];\n    private _comparePickerNode: ComparePickerNode | undefined;\n\n    constructor(view: CompareView) {\n        super(unknownGitUri, view);\n    }\n\n    private _selectedRef: RepoRef | undefined;\n    get selectedRef(): RepoRef | undefined {\n        return this._selectedRef;\n    }\n\n    getChildren(): ViewNode[] {\n        if (this._children.length === 0) {\n            // Not really sure why I can't reuse this node -- but if I do the Tree errors out with an id already exists error\n            this._comparePickerNode = new ComparePickerNode(this.view, this);\n            this._children = [this._comparePickerNode];\n\n            const pinned = this.view.getPinnedComparisons();\n            if (pinned.length !== 0) {\n                this._children.push(...pinned);\n            }\n        }\n        else if (this._comparePickerNode === undefined || !this._children.includes(this._comparePickerNode)) {\n            // Not really sure why I can't reuse this node -- but if I do the Tree errors out with an id already exists error\n            this._comparePickerNode = new ComparePickerNode(this.view, this);\n            this._children.splice(0, 0, this._comparePickerNode);\n\n            if (this._selectedRef !== undefined) {\n                const node = this._comparePickerNode;\n                setImmediate(() => this.view.reveal(node, { focus: false, select: true }));\n            }\n        }\n\n        return this._children;\n    }\n\n    getTreeItem(): TreeItem {\n        const item = new TreeItem('Compare', TreeItemCollapsibleState.Expanded);\n        item.contextValue = ResourceType.Compare;\n        return item;\n    }\n\n    addOrReplace(results: ViewNode, replace: boolean) {\n        if (this._children.includes(results)) return;\n\n        if (this._children.length !== 0 && replace) {\n            this._children.length = 0;\n            this._children.push(results);\n\n            // Re-add the pinned comparisons\n            const pinned = this.view.getPinnedComparisons();\n            if (pinned.length !== 0) {\n                this._children.push(...pinned);\n            }\n        }\n        else {\n            if (this._comparePickerNode !== undefined) {\n                const index = this._children.indexOf(this._comparePickerNode);\n                if (index !== -1) {\n                    this._children.splice(index, 1);\n                }\n            }\n\n            this._children.splice(0, 0, results);\n        }\n\n        this.view.triggerNodeChange();\n    }\n\n    @log()\n    clear() {\n        this._selectedRef = undefined;\n        setCommandContext(CommandContext.ViewsCanCompare, false);\n\n        this._children.length = 0;\n        this.view.triggerNodeChange();\n    }\n\n    @log({\n        args: { 0: (n: ViewNode) => n.toString() }\n    })\n    dismiss(node: ViewNode) {\n        this._selectedRef = undefined;\n        setCommandContext(CommandContext.ViewsCanCompare, false);\n\n        if (this._children.length !== 0) {\n            const index = this._children.indexOf(node);\n            if (index === -1) return;\n\n            this._children.splice(index, 1);\n        }\n        this.view.triggerNodeChange();\n    }\n\n    @gate()\n    @debug()\n    async refresh() {\n        if (this._children.length === 0) return;\n\n        const promises: Promise<any>[] = [\n            ...Iterables.filterMap(this._children, c => {\n                const result = c.refresh();\n                return Functions.isPromise<boolean | void>(result) ? result : undefined;\n            })\n        ];\n        await Promise.all(promises);\n    }\n\n    async compareWithSelected(repoPath?: string, ref?: string | NamedRef) {\n        if (this._selectedRef === undefined) return;\n\n        if (repoPath === undefined) {\n            repoPath = this._selectedRef.repoPath;\n        }\n        else if (repoPath !== this._selectedRef.repoPath) {\n            // If we don't have a matching repoPath, then start over\n            void this.selectForCompare(repoPath, ref);\n            return;\n        }\n\n        if (ref === undefined) {\n            const pick = await new ReferencesQuickPick(repoPath).show(\n                `Compare ${this.getRefName(this._selectedRef.ref)} with${GlyphChars.Ellipsis}`,\n                { allowEnteringRefs: true }\n            );\n            if (pick === undefined || pick instanceof CommandQuickPickItem) return;\n\n            ref = pick.ref;\n        }\n\n        const ref1 = this._selectedRef;\n\n        this._selectedRef = undefined;\n        setCommandContext(CommandContext.ViewsCanCompare, false);\n\n        void (await this.view.compare(repoPath, ref1.ref, ref));\n    }\n\n    async selectForCompare(repoPath?: string, ref?: string | NamedRef) {\n        if (repoPath === undefined) {\n            repoPath = await getRepoPathOrPrompt(undefined, `Compare in which repository${GlyphChars.Ellipsis}`);\n        }\n        if (repoPath === undefined) return;\n\n        let autoCompare = false;\n        if (ref === undefined) {\n            const pick = await new ReferencesQuickPick(repoPath).show(`Compare${GlyphChars.Ellipsis}`, {\n                allowEnteringRefs: true\n            });\n            if (pick === undefined || pick instanceof CommandQuickPickItem) return;\n\n            ref = pick.ref;\n\n            autoCompare = true;\n        }\n\n        this._selectedRef = { label: this.getRefName(ref), repoPath: repoPath, ref: ref };\n        setCommandContext(CommandContext.ViewsCanCompare, true);\n\n        await this.view.show();\n\n        void (await this.triggerChange());\n\n        if (autoCompare) {\n            void (await this.compareWithSelected());\n        }\n    }\n\n    private getRefName(ref: string | NamedRef) {\n        return typeof ref === 'string' ? GitService.shortenSha(ref)! : ref.label || GitService.shortenSha(ref.ref)!;\n    }\n}\n","'use strict';\nimport { TreeItem, TreeItemCollapsibleState } from 'vscode';\nimport { Container } from '../../container';\nimport { GitLog, GitUri } from '../../git/gitService';\nimport { debug, gate, Iterables } from '../../system';\nimport { ViewWithFiles } from '../viewBase';\nimport { CommitNode } from './commitNode';\nimport { ShowMoreNode } from './common';\nimport { getBranchesAndTagTipsFn, insertDateMarkers } from './helpers';\nimport { getNextId, PageableViewNode, ResourceType, ViewNode } from './viewNode';\n\nexport interface CommitsQueryResults {\n    label: string;\n    log: GitLog | undefined;\n}\n\nexport class ResultsCommitsNode extends ViewNode<ViewWithFiles> implements PageableViewNode {\n    readonly supportsPaging: boolean = true;\n    maxCount: number | undefined;\n\n    // Generate a unique id so the node order is preserved, since we update the label when the query completes\n    private readonly _uniqueId: number = getNextId('ResultsCommitsNode');\n\n    constructor(\n        view: ViewWithFiles,\n        parent: ViewNode,\n        public readonly repoPath: string,\n        private _label: string,\n        private readonly _commitsQuery: (maxCount: number | undefined) => Promise<CommitsQueryResults>,\n        private _querying = true,\n        private readonly _expand = true\n    ) {\n        super(GitUri.fromRepoPath(repoPath), view, parent);\n    }\n\n    get id(): string {\n        return `${this._uniqueId}|${this._instanceId}:${this.type}(${this.repoPath})`;\n    }\n\n    get type(): ResourceType {\n        return ResourceType.ResultsCommits;\n    }\n\n    async getChildren(): Promise<ViewNode[]> {\n        const { log } = await this.getCommitsQueryResults();\n        if (log === undefined) return [];\n\n        const getBranchAndTagTips = await getBranchesAndTagTipsFn(this.uri.repoPath);\n        const children = [\n            ...insertDateMarkers(\n                Iterables.map(\n                    log.commits.values(),\n                    c => new CommitNode(this.view, this, c, undefined, getBranchAndTagTips)\n                ),\n                this\n            )\n        ];\n\n        if (log.truncated) {\n            children.push(new ShowMoreNode(this.view, this, 'Results', children[children.length - 1], this.maxCount));\n        }\n\n        return children;\n    }\n\n    async getTreeItem(): Promise<TreeItem> {\n        let state;\n        let label;\n        let log;\n        if (this._querying) {\n            // Need to use Collapsed before we have results or the item won't show up in the view until the children are awaited\n            state = TreeItemCollapsibleState.Collapsed;\n            label = this._label;\n\n            this.getCommitsQueryResults().then(({ log }) => {\n                this._querying = false;\n                if (log != null) {\n                    this.maxCount = log.maxCount;\n                }\n\n                this.triggerChange(false);\n            });\n        }\n        else {\n            ({ label, log } = await this.getCommitsQueryResults());\n            if (log != null) {\n                this.maxCount = log.maxCount;\n            }\n\n            state = this._expand ? TreeItemCollapsibleState.Expanded : TreeItemCollapsibleState.Collapsed;\n            if (log == null || log.count === 0) {\n                state = TreeItemCollapsibleState.None;\n            }\n        }\n\n        let description;\n        if ((await Container.git.getRepositoryCount()) > 1) {\n            const repo = await Container.git.getRepository(this.repoPath);\n            description = (repo && repo.formattedName) || this.repoPath;\n        }\n\n        const item = new TreeItem(label, state);\n        item.contextValue = this.type;\n        item.description = description;\n        item.id = this.id;\n\n        return item;\n    }\n\n    @gate()\n    @debug()\n    refresh(reset: boolean = false) {\n        if (!reset) return;\n\n        this._commitsQueryResults = this._commitsQuery(this.maxCount);\n    }\n\n    private _commitsQueryResults: Promise<CommitsQueryResults> | undefined;\n\n    protected getCommitsQueryResults() {\n        if (this._commitsQueryResults === undefined) {\n            this._commitsQueryResults = this._commitsQuery(this.maxCount);\n        }\n\n        return this._commitsQueryResults;\n    }\n}\n","'use strict';\nimport * as paths from 'path';\nimport { Command, TreeItem, TreeItemCollapsibleState } from 'vscode';\nimport { Commands, DiffWithCommandArgs } from '../../commands';\nimport { Container } from '../../container';\nimport { GitFile, GitUri, StatusFileFormatter } from '../../git/gitService';\nimport { View } from '../viewBase';\nimport { ResourceType, ViewNode, ViewRefFileNode } from './viewNode';\n\nexport class ResultsFileNode extends ViewRefFileNode {\n    constructor(\n        view: View,\n        parent: ViewNode,\n        repoPath: string,\n        public readonly file: GitFile,\n        public readonly ref1: string,\n        public readonly ref2: string\n    ) {\n        super(GitUri.fromFile(file, repoPath, ref1 || ref2), view, parent);\n    }\n\n    get fileName(): string {\n        return this.file.fileName;\n    }\n\n    get ref() {\n        return this.ref1 || this.ref2;\n    }\n\n    getChildren(): ViewNode[] {\n        return [];\n    }\n\n    getTreeItem(): TreeItem {\n        const item = new TreeItem(this.label, TreeItemCollapsibleState.None);\n        item.contextValue = ResourceType.ResultsFile;\n        item.description = this.description;\n        item.tooltip = StatusFileFormatter.fromTemplate(\n            // eslint-disable-next-line no-template-curly-in-string\n            '${file}\\n${directory}/\\n\\n${status}${ (originalPath)}',\n            this.file\n        );\n\n        const statusIcon = GitFile.getStatusIcon(this.file.status);\n        item.iconPath = {\n            dark: Container.context.asAbsolutePath(paths.join('images', 'dark', statusIcon)),\n            light: Container.context.asAbsolutePath(paths.join('images', 'light', statusIcon))\n        };\n\n        item.command = this.getCommand();\n        return item;\n    }\n\n    private _description: string | undefined;\n    get description() {\n        if (this._description === undefined) {\n            this._description = StatusFileFormatter.fromTemplate(\n                this.view.config.commitFileDescriptionFormat,\n                this.file,\n                {\n                    relativePath: this.relativePath\n                }\n            );\n        }\n        return this._description;\n    }\n\n    private _folderName: string | undefined;\n    get folderName() {\n        if (this._folderName === undefined) {\n            this._folderName = paths.dirname(this.uri.relativePath);\n        }\n        return this._folderName;\n    }\n\n    private _label: string | undefined;\n    get label() {\n        if (this._label === undefined) {\n            // eslint-disable-next-line no-template-curly-in-string\n            this._label = StatusFileFormatter.fromTemplate('${file}', this.file, {\n                relativePath: this.relativePath\n            });\n        }\n        return this._label;\n    }\n\n    private _relativePath: string | undefined;\n    get relativePath(): string | undefined {\n        return this._relativePath;\n    }\n    set relativePath(value: string | undefined) {\n        this._relativePath = value;\n        this._label = undefined;\n        this._description = undefined;\n    }\n\n    get priority(): number {\n        return 0;\n    }\n\n    getCommand(): Command | undefined {\n        const commandArgs: DiffWithCommandArgs = {\n            lhs: {\n                sha: this.ref1,\n                uri: this.uri\n            },\n            rhs: {\n                sha: this.ref2,\n                uri:\n                    this.file.status === 'R'\n                        ? GitUri.fromFile(this.file, this.uri.repoPath!, this.ref2, true)\n                        : this.uri\n            },\n            repoPath: this.uri.repoPath!,\n\n            line: 0,\n            showOptions: {\n                preserveFocus: true,\n                preview: true\n            }\n        };\n        return {\n            title: 'Open Changes',\n            command: Commands.DiffWith,\n            arguments: [this.uri, commandArgs]\n        };\n    }\n}\n","'use strict';\nimport * as paths from 'path';\nimport { TreeItem, TreeItemCollapsibleState } from 'vscode';\nimport { ViewFilesLayout } from '../../configuration';\nimport { Container } from '../../container';\nimport { GitFile, GitUri } from '../../git/gitService';\nimport { Arrays, debug, gate, Iterables, Strings } from '../../system';\nimport { ViewWithFiles } from '../viewBase';\nimport { FileNode, FolderNode } from './folderNode';\nimport { ResultsFileNode } from './resultsFileNode';\nimport { getNextId, ResourceType, ViewNode } from './viewNode';\n\nexport interface FilesQueryResults {\n    label: string;\n    diff: GitFile[] | undefined;\n}\n\nexport class ResultsFilesNode extends ViewNode<ViewWithFiles> {\n    // Generate a unique id so the node order is preserved, since we update the label when the query completes\n    private readonly _uniqueId: number = getNextId('ResultsFilesNode');\n\n    constructor(\n        view: ViewWithFiles,\n        parent: ViewNode,\n        public readonly repoPath: string,\n        private readonly _ref1: string,\n        private readonly _ref2: string\n    ) {\n        super(GitUri.fromRepoPath(repoPath), view, parent);\n    }\n\n    get id(): string {\n        return `${this._uniqueId}|${this._instanceId}:gitlens:results:files(${this.repoPath})`;\n    }\n\n    async getChildren(): Promise<ViewNode[]> {\n        const { diff } = await this.getFilesQueryResults();\n        if (diff === undefined) return [];\n\n        let children: FileNode[] = [\n            ...Iterables.map(diff, s => new ResultsFileNode(this.view, this, this.repoPath, s, this._ref1, this._ref2))\n        ];\n\n        if (this.view.config.files.layout !== ViewFilesLayout.List) {\n            const hierarchy = Arrays.makeHierarchical(\n                children,\n                n => n.uri.relativePath.split('/'),\n                (...parts: string[]) => Strings.normalizePath(paths.join(...parts)),\n                this.view.config.files.compact\n            );\n\n            const root = new FolderNode(this.view, this, this.repoPath, '', hierarchy);\n            children = (await root.getChildren()) as FileNode[];\n        }\n        else {\n            children.sort(\n                (a, b) =>\n                    a.priority - b.priority ||\n                    a.label!.localeCompare(b.label!, undefined, { numeric: true, sensitivity: 'base' })\n            );\n        }\n\n        return children;\n    }\n\n    async getTreeItem(): Promise<TreeItem> {\n        let state;\n        let label;\n        let diff;\n        if (this._querying) {\n            // Need to use Collapsed before we have results or the item won't show up in the view until the children are awaited\n            state = TreeItemCollapsibleState.Collapsed;\n            label = 'files changed';\n\n            this.getFilesQueryResults().then(_ => {\n                this._querying = false;\n                this.triggerChange(false);\n            });\n        }\n        else {\n            ({ label, diff } = await this.getFilesQueryResults());\n\n            state = TreeItemCollapsibleState.Expanded;\n            if (diff == null || diff.length === 0) {\n                state = TreeItemCollapsibleState.None;\n            }\n        }\n\n        const item = new TreeItem(label, state);\n        item.contextValue = ResourceType.ResultsFiles;\n        item.id = this.id;\n\n        return item;\n    }\n\n    @gate()\n    @debug()\n    refresh(reset: boolean = false) {\n        if (!reset) return;\n\n        this._filesQueryResults = this.getFilesQueryResultsCore();\n    }\n\n    private _filesQueryResults: Promise<FilesQueryResults> | undefined;\n    private _querying = true;\n\n    private getFilesQueryResults() {\n        if (this._filesQueryResults === undefined) {\n            this._filesQueryResults = this.getFilesQueryResultsCore();\n        }\n\n        return this._filesQueryResults;\n    }\n\n    private async getFilesQueryResultsCore(): Promise<FilesQueryResults> {\n        const diff = await Container.git.getDiffStatus(this.uri.repoPath!, this._ref1, this._ref2);\n\n        return {\n            label: `${Strings.pluralize('file', diff !== undefined ? diff.length : 0, { zero: 'No' })} changed`,\n            diff: diff\n        };\n    }\n}\n","'use strict';\nimport { TreeItem, TreeItemCollapsibleState } from 'vscode';\nimport { NamedRef } from '../../constants';\nimport { Container } from '../../container';\nimport { GitService, GitUri } from '../../git/gitService';\nimport { debug, gate, log, Strings } from '../../system';\nimport { CompareView } from '../compareView';\nimport { CommitsQueryResults, ResultsCommitsNode } from './resultsCommitsNode';\nimport { ResultsFilesNode } from './resultsFilesNode';\nimport { ResourceType, SubscribeableViewNode, ViewNode } from './viewNode';\n\nexport class CompareResultsNode extends SubscribeableViewNode<CompareView> {\n    private _children: ViewNode[] | undefined;\n\n    constructor(\n        view: CompareView,\n        public readonly repoPath: string,\n        private _ref1: NamedRef,\n        private _ref2: NamedRef,\n        private _pinned: boolean = false\n    ) {\n        super(GitUri.fromRepoPath(repoPath), view);\n    }\n\n    get label() {\n        return `Comparing ${this._ref1.label ||\n            GitService.shortenSha(this._ref1.ref, { working: 'Working Tree' })} to ${this._ref2.label ||\n            GitService.shortenSha(this._ref2.ref, { working: 'Working Tree' })}`;\n    }\n\n    get pinned(): boolean {\n        return this._pinned;\n    }\n\n    get ref1(): NamedRef {\n        return this._ref1;\n    }\n\n    get ref2(): NamedRef {\n        return this._ref2;\n    }\n\n    getChildren(): ViewNode[] {\n        if (this._children === undefined) {\n            this._children = [\n                new ResultsCommitsNode(\n                    this.view,\n                    this,\n                    this.uri.repoPath!,\n                    'commits',\n                    this.getCommitsQuery.bind(this),\n                    true,\n                    false\n                ),\n                new ResultsFilesNode(this.view, this, this.uri.repoPath!, this._ref1.ref, this._ref2.ref)\n            ];\n        }\n        return this._children;\n    }\n\n    async getTreeItem(): Promise<TreeItem> {\n        let description;\n        if ((await Container.git.getRepositoryCount()) > 1) {\n            const repo = await Container.git.getRepository(this.uri.repoPath!);\n            description = (repo && repo.formattedName) || this.uri.repoPath;\n        }\n\n        const item = new TreeItem(this.label, this._state || TreeItemCollapsibleState.Collapsed);\n        item.contextValue = ResourceType.CompareResults;\n        if (this._pinned) {\n            item.contextValue += '+pinned';\n        }\n        item.description = description;\n        if (this._pinned) {\n            item.iconPath = {\n                dark: Container.context.asAbsolutePath('images/dark/icon-pin-small.svg'),\n                light: Container.context.asAbsolutePath('images/light/icon-pin-small.svg')\n            };\n        }\n\n        return item;\n    }\n\n    canDismiss(): boolean {\n        return !this._pinned;\n    }\n\n    @log()\n    async pin() {\n        if (this._pinned) return;\n\n        await this.view.updatePinnedComparison(this.getPinnableId(), {\n            path: this.repoPath,\n            ref1: this.ref1,\n            ref2: this.ref2\n        });\n\n        this._pinned = true;\n        void this.triggerChange();\n    }\n\n    @gate()\n    @debug()\n    refresh(reset: boolean = false) {\n        if (!reset) return;\n\n        this._children = undefined;\n    }\n\n    @log()\n    async swap() {\n        // Save the current id so we can update it later\n        const currentId = this.getPinnableId();\n\n        const ref1 = this._ref1;\n        this._ref1 = this._ref2;\n        this._ref2 = ref1;\n\n        // If we were pinned, remove the existing pin and save a new one\n        if (this._pinned) {\n            await this.view.updatePinnedComparison(currentId);\n            await this.view.updatePinnedComparison(this.getPinnableId(), {\n                path: this.repoPath,\n                ref1: this.ref1,\n                ref2: this.ref2\n            });\n        }\n\n        this.view.triggerNodeChange(this);\n    }\n\n    @log()\n    async unpin() {\n        if (!this._pinned) return;\n\n        await this.view.updatePinnedComparison(this.getPinnableId());\n\n        this._pinned = false;\n        void this.triggerChange();\n    }\n\n    protected subscribe() {\n        return undefined;\n    }\n\n    private async getCommitsQuery(maxCount: number | undefined): Promise<CommitsQueryResults> {\n        const log = await Container.git.getLog(this.uri.repoPath!, {\n            maxCount: maxCount,\n            ref: `${this._ref1.ref}...${this._ref2.ref || 'HEAD'}`\n        });\n\n        const count = log !== undefined ? log.count : 0;\n        const truncated = log !== undefined ? log.truncated : false;\n\n        const label = Strings.pluralize('commit', count, { number: truncated ? `${count}+` : undefined, zero: 'No' });\n\n        return {\n            label: label,\n            log: log\n        };\n    }\n\n    private getPinnableId() {\n        return Strings.sha1(`${this.repoPath}|${this.ref1.ref}|${this.ref2.ref}`);\n    }\n}\n","'use strict';\nimport { TreeItem, TreeItemCollapsibleState } from 'vscode';\nimport { GitContributor, GitUri } from '../../git/gitService';\nimport { Iterables, Strings } from '../../system';\nimport { RepositoriesView } from '../repositoriesView';\nimport { PageableViewNode, ResourceType, ViewNode } from './viewNode';\nimport { Container } from '../../container';\nimport { MessageNode, ShowMoreNode } from './common';\nimport { getBranchesAndTagTipsFn, insertDateMarkers } from './helpers';\nimport { CommitNode } from './commitNode';\nimport { GlyphChars } from '../../constants';\n\nexport class ContributorNode extends ViewNode<RepositoriesView> implements PageableViewNode {\n    readonly supportsPaging: boolean = true;\n    maxCount: number | undefined;\n\n    constructor(uri: GitUri, view: RepositoriesView, parent: ViewNode, public readonly contributor: GitContributor) {\n        super(uri, view, parent);\n    }\n\n    get id(): string {\n        return `${this._instanceId}:gitlens:repository(${this.contributor.repoPath}):contributor(${\n            this.contributor.name\n        }|${this.contributor.email}}`;\n    }\n\n    async getChildren(): Promise<ViewNode[]> {\n        const log = await Container.git.getLog(this.uri.repoPath!, {\n            maxCount: this.maxCount !== undefined ? this.maxCount : this.view.config.defaultItemLimit,\n            authors: [this.contributor.name]\n        });\n        if (log === undefined) return [new MessageNode(this.view, this, 'No commits could be found.')];\n\n        const getBranchAndTagTips = await getBranchesAndTagTipsFn(this.uri.repoPath);\n        const children = [\n            ...insertDateMarkers(\n                Iterables.map(\n                    log.commits.values(),\n                    c => new CommitNode(this.view, this, c, undefined, getBranchAndTagTips)\n                ),\n                this\n            )\n        ];\n\n        if (log.truncated) {\n            children.push(new ShowMoreNode(this.view, this, 'Commits', children[children.length - 1]));\n        }\n        return children;\n    }\n\n    async getTreeItem(): Promise<TreeItem> {\n        const presence = await Container.vsls.getContactPresence(this.contributor.email);\n\n        const item = new TreeItem(this.contributor.name, TreeItemCollapsibleState.Collapsed);\n        item.id = this.id;\n        item.contextValue = ResourceType.Contributor;\n        item.description = `${\n            presence != null && presence.status !== 'offline'\n                ? `${presence.statusText} ${GlyphChars.Space}${GlyphChars.Dot}${GlyphChars.Space} `\n                : ''\n        }${this.contributor.email}`;\n        item.tooltip = `${this.contributor.name}${presence != null ? ` (${presence.statusText})` : ''}\\n${\n            this.contributor.email\n        }\\n${Strings.pluralize('commit', this.contributor.count)}`;\n\n        if (this.view.config.avatars) {\n            item.iconPath = this.contributor.getGravatarUri(Container.config.defaultGravatarsStyle);\n        }\n\n        return item;\n    }\n}\n","'use strict';\nimport { TreeItem, TreeItemCollapsibleState } from 'vscode';\nimport { GitUri, Repository } from '../../git/gitService';\nimport { RepositoriesView } from '../repositoriesView';\nimport { MessageNode } from './common';\nimport { ContributorNode } from './contributorNode';\nimport { ResourceType, ViewNode } from './viewNode';\nimport { Container } from '../../container';\n\nexport class ContributorsNode extends ViewNode<RepositoriesView> {\n    constructor(uri: GitUri, view: RepositoriesView, parent: ViewNode, public readonly repo: Repository) {\n        super(uri, view, parent);\n    }\n\n    get id(): string {\n        return `${this._instanceId}:gitlens:repository(${this.repo.path}):contributors`;\n    }\n\n    async getChildren(): Promise<ViewNode[]> {\n        const contributors = await this.repo.getContributors();\n        if (contributors.length === 0) return [new MessageNode(this.view, this, 'No contributors could be found.')];\n\n        contributors.sort((a, b) => b.count - a.count);\n\n        const children = contributors.map(c => new ContributorNode(this.uri, this.view, this, c));\n        return children;\n    }\n\n    getTreeItem(): TreeItem {\n        const item = new TreeItem('Contributors', TreeItemCollapsibleState.Collapsed);\n        item.id = this.id;\n        item.contextValue = ResourceType.Contributors;\n\n        item.iconPath = {\n            dark: Container.context.asAbsolutePath('images/dark/icon-people.svg'),\n            light: Container.context.asAbsolutePath('images/light/icon-people.svg')\n        };\n\n        return item;\n    }\n}\n","'use strict';\nimport { Disposable, TreeItem, TreeItemCollapsibleState } from 'vscode';\nimport { Container } from '../../container';\nimport {\n    GitCommitType,\n    GitLogCommit,\n    GitService,\n    GitUri,\n    RepositoryChange,\n    RepositoryChangeEvent,\n    RepositoryFileSystemChangeEvent\n} from '../../git/gitService';\nimport { Logger } from '../../logger';\nimport { debug, Iterables } from '../../system';\nimport { View } from '../viewBase';\nimport { CommitFileNode, CommitFileNodeDisplayAs } from './commitFileNode';\nimport { MessageNode, ShowMoreNode } from './common';\nimport { insertDateMarkers } from './helpers';\nimport { PageableViewNode, ResourceType, SubscribeableViewNode, ViewNode } from './viewNode';\n\nexport class FileHistoryNode extends SubscribeableViewNode implements PageableViewNode {\n    readonly supportsPaging: boolean = true;\n    maxCount: number | undefined;\n\n    constructor(uri: GitUri, view: View, parent: ViewNode) {\n        super(uri, view, parent);\n    }\n\n    async getChildren(): Promise<ViewNode[]> {\n        const children: ViewNode[] = [];\n\n        const displayAs =\n            CommitFileNodeDisplayAs.CommitLabel |\n            (this.view.config.avatars ? CommitFileNodeDisplayAs.Gravatar : CommitFileNodeDisplayAs.StatusIcon);\n\n        if (this.uri.sha === undefined) {\n            const status = await Container.git.getStatusForFile(this.uri.repoPath!, this.uri.fsPath);\n            if (status !== undefined && (status.indexStatus !== undefined || status.workingTreeStatus !== undefined)) {\n                let sha;\n                let previousSha;\n                if (status.workingTreeStatus !== undefined) {\n                    sha = GitService.uncommittedSha;\n                    if (status.indexStatus !== undefined) {\n                        previousSha = GitService.uncommittedStagedSha;\n                    }\n                    else if (status.workingTreeStatus !== '?') {\n                        previousSha = 'HEAD';\n                    }\n                }\n                else {\n                    sha = GitService.uncommittedStagedSha;\n                    previousSha = 'HEAD';\n                }\n\n                const user = await Container.git.getCurrentUser(this.uri.repoPath!);\n                const commit = new GitLogCommit(\n                    GitCommitType.LogFile,\n                    this.uri.repoPath!,\n                    sha,\n                    'You',\n                    user !== undefined ? user.email : undefined,\n                    new Date(),\n                    new Date(),\n                    '',\n                    status.fileName,\n                    [status],\n                    status.status,\n                    status.originalFileName,\n                    previousSha,\n                    status.originalFileName || status.fileName\n                );\n                children.push(new CommitFileNode(this.view, this, status, commit, displayAs));\n            }\n        }\n\n        const log = await Container.git.getLogForFile(this.uri.repoPath, this.uri.fsPath, {\n            maxCount: this.maxCount !== undefined ? this.maxCount : undefined,\n            ref: this.uri.sha\n        });\n        if (log !== undefined) {\n            children.push(\n                ...insertDateMarkers(\n                    Iterables.map(\n                        log.commits.values(),\n                        c => new CommitFileNode(this.view, this, c.files[0], c, displayAs)\n                    ),\n                    this\n                )\n            );\n\n            if (log.truncated) {\n                children.push(new ShowMoreNode(this.view, this, 'Commits', children[children.length - 1]));\n            }\n        }\n\n        if (children.length === 0) return [new MessageNode(this.view, this, 'No file history could be found.')];\n        return children;\n    }\n\n    getTreeItem(): TreeItem {\n        const item = new TreeItem(\n            `${this.uri.fileName}${\n                this.uri.sha\n                    ? ` ${\n                          this.uri.sha === GitService.deletedOrMissingSha ? this.uri.shortSha : `(${this.uri.shortSha})`\n                      }`\n                    : ''\n            }`,\n            TreeItemCollapsibleState.Expanded\n        );\n        item.contextValue = ResourceType.FileHistory;\n        item.description = this.uri.directory;\n        item.tooltip = `History of ${this.uri.fileName}\\n${this.uri.directory}/${\n            this.uri.sha === undefined ? '' : `\\n\\n${this.uri.sha}`\n        }`;\n\n        item.iconPath = {\n            dark: Container.context.asAbsolutePath('images/dark/icon-history.svg'),\n            light: Container.context.asAbsolutePath('images/light/icon-history.svg')\n        };\n\n        void this.ensureSubscription();\n\n        return item;\n    }\n\n    @debug()\n    protected async subscribe() {\n        const repo = await Container.git.getRepository(this.uri);\n        if (repo === undefined) return undefined;\n\n        const subscription = Disposable.from(\n            repo.onDidChange(this.onRepoChanged, this),\n            repo.onDidChangeFileSystem(this.onRepoFileSystemChanged, this),\n            { dispose: () => repo.stopWatchingFileSystem() }\n        );\n\n        repo.startWatchingFileSystem();\n\n        return subscription;\n    }\n\n    private onRepoChanged(e: RepositoryChangeEvent) {\n        if (!e.changed(RepositoryChange.Repository)) return;\n\n        Logger.log(`FileHistoryNode.onRepoChanged(${e.changes.join()}); triggering node refresh`);\n\n        void this.triggerChange();\n    }\n\n    private onRepoFileSystemChanged(e: RepositoryFileSystemChangeEvent) {\n        if (!e.uris.some(uri => uri.toString(true) === this.uri.toString(true))) return;\n\n        Logger.debug(\n            `FileHistoryNode${this.id}.onRepoFileSystemChanged(${this.uri.toString(true)}); triggering node refresh`\n        );\n\n        void this.triggerChange();\n    }\n}\n","'use strict';\nimport { Disposable, TextEditor, TreeItem, TreeItemCollapsibleState, window } from 'vscode';\nimport { UriComparer } from '../../comparers';\nimport { GlyphChars } from '../../constants';\nimport { Container } from '../../container';\nimport { GitCommitish, GitUri } from '../../git/gitService';\nimport { Logger } from '../../logger';\nimport { CommandQuickPickItem, ReferencesQuickPick } from '../../quickpicks';\nimport { debug, Functions, gate, log } from '../../system';\nimport { FileHistoryView } from '../fileHistoryView';\nimport { MessageNode } from './common';\nimport { FileHistoryNode } from './fileHistoryNode';\nimport { ResourceType, SubscribeableViewNode, unknownGitUri, ViewNode } from './viewNode';\n\nexport class FileHistoryTrackerNode extends SubscribeableViewNode<FileHistoryView> {\n    private _baseRef: string | undefined;\n    private _fileUri: GitUri | undefined;\n    private _child: FileHistoryNode | undefined;\n\n    constructor(view: FileHistoryView) {\n        super(unknownGitUri, view);\n    }\n\n    dispose() {\n        super.dispose();\n\n        this.resetChild();\n    }\n\n    @debug()\n    private resetChild() {\n        if (this._child === undefined) return;\n\n        this._child.dispose();\n        this._child = undefined;\n    }\n\n    getChildren(): ViewNode[] {\n        if (this._child === undefined) {\n            if (this._fileUri === undefined && this.uri === unknownGitUri) {\n                return [\n                    new MessageNode(\n                        this.view,\n                        this,\n                        'There are no editors open that can provide file history information.'\n                    )\n                ];\n            }\n\n            const uri = this._fileUri || this.uri;\n            const commitish: GitCommitish = { ...uri, repoPath: uri.repoPath!, sha: this._baseRef || uri.sha };\n            const fileUri = new GitUri(uri, commitish);\n            this._child = new FileHistoryNode(fileUri, this.view, this);\n        }\n\n        return [this._child];\n    }\n\n    getTreeItem(): TreeItem {\n        const item = new TreeItem('File History', TreeItemCollapsibleState.Expanded);\n        item.contextValue = ResourceType.ActiveFileHistory;\n\n        void this.ensureSubscription();\n\n        return item;\n    }\n\n    @gate()\n    @log()\n    async changeBase() {\n        const pick = await new ReferencesQuickPick(this.uri.repoPath!).show(\n            `Change the file history base to${GlyphChars.Ellipsis}`,\n            {\n                allowEnteringRefs: true,\n                checked: this._baseRef\n            }\n        );\n        if (pick === undefined || pick instanceof CommandQuickPickItem) return;\n\n        this._baseRef = pick.current ? undefined : pick.ref;\n        if (this._child === undefined) return;\n\n        this._uri = unknownGitUri;\n        await this.triggerChange();\n    }\n\n    @gate()\n    @debug({\n        exit: r => `returned ${r}`\n    })\n    async refresh(reset: boolean = false) {\n        const cc = Logger.getCorrelationContext();\n\n        if (reset) {\n            this._uri = unknownGitUri;\n            this.resetChild();\n        }\n\n        const editor = window.activeTextEditor;\n        if (editor == null || !Container.git.isTrackable(editor.document.uri)) {\n            if (\n                this.uri === unknownGitUri ||\n                (Container.git.isTrackable(this.uri) &&\n                    window.visibleTextEditors.some(e => e.document && UriComparer.equals(e.document.uri, this.uri)))\n            ) {\n                return true;\n            }\n\n            this._uri = unknownGitUri;\n            this.resetChild();\n\n            if (cc !== undefined) {\n                cc.exitDetails = `, uri=${Logger.toLoggable(this._uri)}`;\n            }\n            return false;\n        }\n\n        if (UriComparer.equals(editor!.document.uri, this.uri)) {\n            if (cc !== undefined) {\n                cc.exitDetails = `, uri=${Logger.toLoggable(this._uri)}`;\n            }\n            return true;\n        }\n\n        let gitUri = await GitUri.fromUri(editor!.document.uri);\n\n        let uri;\n        if (gitUri.sha !== undefined) {\n            // If we have a sha, normalize the history to the working file (so we get a full history all the time)\n            const workingUri = await Container.git.getWorkingUri(gitUri.repoPath!, gitUri);\n            if (workingUri !== undefined) {\n                uri = workingUri;\n            }\n        }\n\n        if (this.uri !== unknownGitUri && UriComparer.equals(uri || gitUri, this.uri)) {\n            return true;\n        }\n\n        if (uri !== undefined) {\n            gitUri = await GitUri.fromUri(uri);\n        }\n\n        this._uri = gitUri;\n        this.resetChild();\n\n        if (cc !== undefined) {\n            cc.exitDetails = `, uri=${Logger.toLoggable(this._uri)}`;\n        }\n        return false;\n    }\n\n    @log()\n    setEditorFollowing(enabled: boolean) {\n        if (enabled && this._fileUri !== undefined) {\n            this._fileUri = undefined;\n            this._baseRef = undefined;\n\n            this._uri = unknownGitUri;\n            // Don't need to call triggerChange here, since canSubscribe will do it\n        }\n\n        this.canSubscribe = enabled;\n    }\n\n    @gate()\n    @log()\n    async showHistoryForUri(uri: GitUri, baseRef?: string) {\n        this._fileUri = uri;\n        this._baseRef = baseRef;\n\n        this._uri = unknownGitUri;\n        await this.triggerChange();\n    }\n\n    @debug()\n    protected subscribe() {\n        return Disposable.from(\n            window.onDidChangeActiveTextEditor(Functions.debounce(this.onActiveEditorChanged, 500), this)\n        );\n    }\n\n    @debug({ args: false })\n    private onActiveEditorChanged(editor: TextEditor | undefined) {\n        void this.triggerChange();\n    }\n}\n","'use strict';\nimport { Disposable, Selection, TreeItem, TreeItemCollapsibleState } from 'vscode';\nimport { Container } from '../../container';\nimport { GitCommitType, GitFile, GitLogCommit } from '../../git/git';\nimport {\n    GitService,\n    GitUri,\n    RepositoryChange,\n    RepositoryChangeEvent,\n    RepositoryFileSystemChangeEvent\n} from '../../git/gitService';\nimport { Logger } from '../../logger';\nimport { debug, Iterables } from '../../system';\nimport { View } from '../viewBase';\nimport { CommitFileNode, CommitFileNodeDisplayAs } from './commitFileNode';\nimport { MessageNode, ShowMoreNode } from './common';\nimport { insertDateMarkers } from './helpers';\nimport { PageableViewNode, ResourceType, SubscribeableViewNode, ViewNode } from './viewNode';\n\nexport class LineHistoryNode extends SubscribeableViewNode implements PageableViewNode {\n    readonly supportsPaging: boolean = true;\n    maxCount: number | undefined;\n\n    constructor(\n        uri: GitUri,\n        view: View,\n        parent: ViewNode,\n        public readonly selection: Selection,\n        private readonly _editorContents: string | undefined\n    ) {\n        super(uri, view, parent);\n    }\n\n    async getChildren(): Promise<ViewNode[]> {\n        const children: ViewNode[] = [];\n\n        const displayAs =\n            CommitFileNodeDisplayAs.CommitLabel |\n            (this.view.config.avatars ? CommitFileNodeDisplayAs.Gravatar : CommitFileNodeDisplayAs.StatusIcon);\n\n        let selection = this.selection;\n\n        if (this.uri.sha === undefined) {\n            // Check for any uncommitted changes in the range\n            const blame = this._editorContents\n                ? await Container.git.getBlameForRangeContents(this.uri, selection, this._editorContents)\n                : await Container.git.getBlameForRange(this.uri, selection);\n            if (blame !== undefined) {\n                for (const commit of blame.commits.values()) {\n                    if (!commit.isUncommitted) continue;\n\n                    const file: GitFile = {\n                        fileName: commit.fileName,\n                        indexStatus: '?',\n                        originalFileName: commit.originalFileName,\n                        repoPath: this.uri.repoPath!,\n                        status: 'M',\n                        workingTreeStatus: '?'\n                    };\n\n                    const uncommitted = new GitLogCommit(\n                        GitCommitType.LogFile,\n                        this.uri.repoPath!,\n                        commit.sha,\n                        'You',\n                        commit.email,\n                        commit.authorDate,\n                        commit.committerDate,\n                        commit.message,\n                        commit.fileName,\n                        [file],\n                        'M',\n                        commit.originalFileName,\n                        commit.previousSha,\n                        commit.originalFileName || commit.fileName\n                    );\n\n                    const firstLine = blame.lines[0];\n                    const lastLine = blame.lines[blame.lines.length - 1];\n\n                    // Since there could be a change in the line numbers, update the selection\n                    const firstActive = selection.active.line === firstLine.line - 1;\n                    selection = new Selection(\n                        (firstActive ? lastLine : firstLine).originalLine - 1,\n                        selection.anchor.character,\n                        (firstActive ? firstLine : lastLine).originalLine - 1,\n                        selection.active.character\n                    );\n\n                    children.splice(0, 0, new CommitFileNode(this.view, this, file, uncommitted, displayAs, selection));\n\n                    break;\n                }\n            }\n        }\n\n        const log = await Container.git.getLogForFile(this.uri.repoPath, this.uri.fsPath, {\n            maxCount: this.maxCount !== undefined ? this.maxCount : undefined,\n            ref: this.uri.sha,\n            range: selection\n        });\n        if (log !== undefined) {\n            children.push(\n                ...insertDateMarkers(\n                    Iterables.filterMap(\n                        log.commits.values(),\n                        c => new CommitFileNode(this.view, this, c.files[0], c, displayAs, selection)\n                    ),\n                    this\n                )\n            );\n\n            if (log.truncated) {\n                children.push(new ShowMoreNode(this.view, this, 'Commits', children[children.length - 1]));\n            }\n        }\n\n        if (children.length === 0) return [new MessageNode(this.view, this, 'No line history could be found.')];\n        return children;\n    }\n\n    getTreeItem(): TreeItem {\n        const lines = this.selection.isSingleLine\n            ? ` #${this.selection.start.line + 1}`\n            : ` #${this.selection.start.line + 1}-${this.selection.end.line + 1}`;\n        const item = new TreeItem(\n            `${this.uri.fileName}${lines}${\n                this.uri.sha\n                    ? ` ${\n                          this.uri.sha === GitService.deletedOrMissingSha ? this.uri.shortSha : `(${this.uri.shortSha})`\n                      }`\n                    : ''\n            }`,\n            TreeItemCollapsibleState.Expanded\n        );\n        item.contextValue = ResourceType.LineHistory;\n        item.description = this.uri.directory;\n        item.tooltip = `History of ${this.uri.fileName}${lines}\\n${this.uri.directory}/${\n            this.uri.sha === undefined ? '' : `\\n\\n${this.uri.sha}`\n        }`;\n\n        item.iconPath = {\n            dark: Container.context.asAbsolutePath('images/dark/icon-history.svg'),\n            light: Container.context.asAbsolutePath('images/light/icon-history.svg')\n        };\n\n        void this.ensureSubscription();\n\n        return item;\n    }\n\n    @debug()\n    protected async subscribe() {\n        const repo = await Container.git.getRepository(this.uri);\n        if (repo === undefined) return undefined;\n\n        const subscription = Disposable.from(\n            repo.onDidChange(this.onRepoChanged, this),\n            repo.onDidChangeFileSystem(this.onRepoFileSystemChanged, this),\n            { dispose: () => repo.stopWatchingFileSystem() }\n        );\n\n        repo.startWatchingFileSystem();\n\n        return subscription;\n    }\n\n    private onRepoChanged(e: RepositoryChangeEvent) {\n        if (!e.changed(RepositoryChange.Repository)) return;\n\n        Logger.log(`LineHistoryNode.onRepoChanged(${e.changes.join()}); triggering node refresh`);\n\n        void this.triggerChange();\n    }\n\n    private onRepoFileSystemChanged(e: RepositoryFileSystemChangeEvent) {\n        if (!e.uris.some(uri => uri.toString(true) === this.uri.toString(true))) return;\n\n        Logger.debug(`LineHistoryNode.onRepoFileSystemChanged(${this.uri.toString(true)}); triggering node refresh`);\n\n        void this.triggerChange();\n    }\n}\n","'use strict';\nimport { Disposable, Selection, TreeItem, TreeItemCollapsibleState, window } from 'vscode';\nimport { UriComparer } from '../../comparers';\nimport { GlyphChars } from '../../constants';\nimport { Container } from '../../container';\nimport { GitCommitish, GitUri } from '../../git/gitService';\nimport { Logger } from '../../logger';\nimport { CommandQuickPickItem, ReferencesQuickPick } from '../../quickpicks';\nimport { debug, Functions, gate, log } from '../../system';\nimport { LinesChangeEvent } from '../../trackers/gitLineTracker';\nimport { LineHistoryView } from '../lineHistoryView';\nimport { MessageNode } from './common';\nimport { LineHistoryNode } from './lineHistoryNode';\nimport { ResourceType, SubscribeableViewNode, unknownGitUri, ViewNode } from './viewNode';\n\nexport class LineHistoryTrackerNode extends SubscribeableViewNode<LineHistoryView> {\n    private _base: string | undefined;\n    private _child: LineHistoryNode | undefined;\n    private _editorContents: string | undefined;\n    private _selection: Selection | undefined;\n\n    constructor(view: LineHistoryView) {\n        super(unknownGitUri, view);\n    }\n\n    dispose() {\n        super.dispose();\n\n        this.resetChild();\n    }\n\n    @debug()\n    private resetChild() {\n        if (this._child === undefined) return;\n\n        this._child.dispose();\n        this._child = undefined;\n    }\n\n    getChildren(): ViewNode[] {\n        if (this._child === undefined) {\n            if (this.uri === unknownGitUri) {\n                return [\n                    new MessageNode(\n                        this.view,\n                        this,\n                        'There are no editors open that can provide line history information.'\n                    )\n                ];\n            }\n\n            const commitish: GitCommitish = {\n                ...this.uri,\n                repoPath: this.uri.repoPath!,\n                sha: this.uri.sha || this._base\n            };\n            const fileUri = new GitUri(this.uri, commitish);\n            this._child = new LineHistoryNode(fileUri, this.view, this, this._selection!, this._editorContents);\n        }\n\n        return [this._child];\n    }\n\n    getTreeItem(): TreeItem {\n        const item = new TreeItem('Line History', TreeItemCollapsibleState.Expanded);\n        item.contextValue = ResourceType.ActiveLineHistory;\n\n        void this.ensureSubscription();\n\n        return item;\n    }\n\n    @gate()\n    @log()\n    async changeBase() {\n        const pick = await new ReferencesQuickPick(this.uri.repoPath!).show(\n            `Change the line history base to${GlyphChars.Ellipsis}`,\n            {\n                allowEnteringRefs: true,\n                checked: this._base\n            }\n        );\n        if (pick === undefined || pick instanceof CommandQuickPickItem) return;\n\n        this._base = pick.current ? undefined : pick.ref;\n        if (this._child === undefined) return;\n\n        this._uri = unknownGitUri;\n        await this.triggerChange();\n    }\n\n    @gate()\n    @debug({\n        exit: r => `returned ${r}`\n    })\n    async refresh(reset: boolean = false) {\n        const cc = Logger.getCorrelationContext();\n\n        if (reset) {\n            this._uri = unknownGitUri;\n            this._editorContents = undefined;\n            this._selection = undefined;\n            this.resetChild();\n        }\n\n        const editor = window.activeTextEditor;\n        if (editor == null || !Container.git.isTrackable(editor.document.uri)) {\n            if (\n                this.uri === unknownGitUri ||\n                (Container.git.isTrackable(this.uri) &&\n                    window.visibleTextEditors.some(e => e.document && UriComparer.equals(e.document.uri, this.uri)))\n            ) {\n                return true;\n            }\n\n            this._uri = unknownGitUri;\n            this._editorContents = undefined;\n            this._selection = undefined;\n            this.resetChild();\n\n            if (cc !== undefined) {\n                cc.exitDetails = `, uri=${Logger.toLoggable(this._uri)}`;\n            }\n            return false;\n        }\n\n        if (\n            UriComparer.equals(editor!.document.uri, this.uri) &&\n            (this._selection !== undefined && editor.selection.isEqual(this._selection))\n        ) {\n            if (cc !== undefined) {\n                cc.exitDetails = `, uri=${Logger.toLoggable(this._uri)}`;\n            }\n            return true;\n        }\n\n        const gitUri = await GitUri.fromUri(editor!.document.uri);\n\n        if (\n            this.uri !== unknownGitUri &&\n            UriComparer.equals(gitUri, this.uri) &&\n            (this._selection !== undefined && editor.selection.isEqual(this._selection))\n        ) {\n            return true;\n        }\n\n        this._uri = gitUri;\n        this._editorContents = editor.document.isDirty ? editor.document.getText() : undefined;\n        this._selection = editor.selection;\n        this.resetChild();\n\n        if (cc !== undefined) {\n            cc.exitDetails = `, uri=${Logger.toLoggable(this._uri)}`;\n        }\n        return false;\n    }\n\n    @log()\n    setEditorFollowing(enabled: boolean) {\n        this.canSubscribe = enabled;\n    }\n\n    @debug()\n    protected subscribe() {\n        if (Container.lineTracker.isSubscribed(this)) return undefined;\n\n        const onActiveLinesChanged = Functions.debounce(this.onActiveLinesChanged.bind(this), 250);\n\n        return Container.lineTracker.start(\n            this,\n            Disposable.from(\n                Container.lineTracker.onDidChangeActiveLines((e: LinesChangeEvent) => {\n                    if (e.pending) return;\n\n                    onActiveLinesChanged(e);\n                })\n            )\n        );\n    }\n\n    @debug({ args: false })\n    private onActiveLinesChanged(e: LinesChangeEvent) {\n        void this.triggerChange();\n    }\n}\n","'use strict';\nimport { TreeItem, TreeItemCollapsibleState } from 'vscode';\nimport { GlyphChars } from '../../constants';\nimport { Container } from '../../container';\nimport { GitReflogRecord, GitUri } from '../../git/gitService';\nimport { Iterables } from '../../system';\nimport { ViewWithFiles } from '../viewBase';\nimport { CommitNode } from './commitNode';\nimport { MessageNode, ShowMoreNode } from './common';\nimport { PageableViewNode, ResourceType, ViewNode } from './viewNode';\n\nexport class ReflogRecordNode extends ViewNode<ViewWithFiles> implements PageableViewNode {\n    readonly supportsPaging: boolean = true;\n    maxCount: number | undefined;\n\n    constructor(view: ViewWithFiles, parent: ViewNode, public readonly record: GitReflogRecord) {\n        super(GitUri.fromRepoPath(record.repoPath), view, parent);\n    }\n\n    get id(): string {\n        return `${this._instanceId}:gitlens:repository(${this.uri.repoPath}):reflog-record(${this.record.sha}|${\n            this.record.selector\n        }|${this.record.command}|${this.record.commandArgs || ''}|${this.record.date.getTime()})`;\n    }\n\n    async getChildren(): Promise<ViewNode[]> {\n        const range = `${this.record.previousSha}..${this.record.sha}`;\n\n        const log = await Container.git.getLog(this.uri.repoPath!, {\n            maxCount: this.maxCount !== undefined ? this.maxCount : this.view.config.defaultItemLimit,\n            ref: range\n        });\n        if (log === undefined) return [new MessageNode(this.view, this, 'No commits')];\n\n        const children: (CommitNode | ShowMoreNode)[] = [\n            ...Iterables.map(log.commits.values(), c => new CommitNode(this.view, this, c))\n        ];\n\n        if (log.truncated) {\n            children.push(new ShowMoreNode(this.view, this, 'Commits', children[children.length - 1]));\n        }\n        return children;\n    }\n\n    getTreeItem(): TreeItem {\n        const item = new TreeItem(\n            `${this.record.command}${this.record.commandArgs ? ` ${this.record.commandArgs}` : ''}`,\n            TreeItemCollapsibleState.Collapsed\n        );\n        item.id = this.id;\n        item.description = `${\n            this.record.HEAD.length === 0\n                ? ''\n                : `${this.record.HEAD} ${GlyphChars.Space}${GlyphChars.Dot}${GlyphChars.Space} `\n        }${this.record.formattedDate}`;\n        item.contextValue = ResourceType.ReflogRecord;\n        item.tooltip = `${this.record.HEAD.length === 0 ? '' : `${this.record.HEAD}\\n`}${this.record.command}${\n            this.record.commandArgs ? ` ${this.record.commandArgs}` : ''\n        }${\n            this.record.details ? ` (${this.record.details})` : ''\n        }\\n${this.record.formatDateFromNow()} (${this.record.formatDate()})\\n${this.record.previousShortSha} ${\n            GlyphChars.Space\n        }${GlyphChars.ArrowRight}${GlyphChars.Space} ${this.record.shortSha}`;\n\n        return item;\n    }\n}\n","'use strict';\nimport { TreeItem, TreeItemCollapsibleState } from 'vscode';\nimport { Container } from '../../container';\nimport { GitUri, Repository } from '../../git/gitService';\nimport { PageableViewNode, ResourceType, ViewNode } from './viewNode';\nimport { RepositoriesView } from '../repositoriesView';\nimport { ReflogRecordNode } from './reflogRecordNode';\nimport { debug, gate } from '../../system';\nimport { MessageNode, ShowMoreNode } from './common';\n\nexport class ReflogNode extends ViewNode<RepositoriesView> implements PageableViewNode {\n    readonly supportsPaging: boolean = true;\n    maxCount: number | undefined;\n\n    private _children: ViewNode[] | undefined;\n\n    constructor(uri: GitUri, view: RepositoriesView, parent: ViewNode, public readonly repo: Repository) {\n        super(uri, view, parent);\n    }\n\n    get id(): string {\n        return `${this._instanceId}:gitlens:repository(${this.repo.path}):reflog`;\n    }\n\n    async getChildren(): Promise<ViewNode[]> {\n        if (this._children === undefined) {\n            const children = [];\n\n            const reflog = await Container.git.getIncomingActivity(this.repo.path, {\n                all: true,\n                maxCount: this.maxCount !== undefined ? this.maxCount : this.view.config.defaultItemLimit\n            });\n            if (reflog === undefined || reflog.records.length === 0) {\n                return [new MessageNode(this.view, this, 'No activity could be found.')];\n            }\n\n            children.push(...reflog.records.map(r => new ReflogRecordNode(this.view, this, r)));\n\n            if (reflog.truncated) {\n                children.push(new ShowMoreNode(this.view, this, 'Activity', children[children.length - 1]));\n            }\n\n            this._children = children;\n        }\n        return this._children;\n    }\n\n    getTreeItem(): TreeItem {\n        const item = new TreeItem('Incoming Activity', TreeItemCollapsibleState.Collapsed);\n        item.id = this.id;\n        item.contextValue = ResourceType.Reflog;\n        item.description = 'experimental';\n        item.iconPath = {\n            dark: Container.context.asAbsolutePath('images/dark/icon-merge.svg'),\n            light: Container.context.asAbsolutePath('images/light/icon-merge.svg')\n        };\n\n        return item;\n    }\n\n    @gate()\n    @debug()\n    refresh() {\n        this._children = undefined;\n    }\n}\n","'use strict';\nimport { TreeItem, TreeItemCollapsibleState } from 'vscode';\nimport { ViewBranchesLayout } from '../../configuration';\nimport { GlyphChars } from '../../constants';\nimport { Container } from '../../container';\nimport { GitRemote, GitRemoteType, GitUri, Repository } from '../../git/gitService';\nimport { Arrays, Iterables, log } from '../../system';\nimport { RepositoriesView } from '../repositoriesView';\nimport { BranchNode } from './branchNode';\nimport { BranchOrTagFolderNode } from './branchOrTagFolderNode';\nimport { ResourceType, ViewNode } from './viewNode';\n\nexport class RemoteNode extends ViewNode<RepositoriesView> {\n    constructor(\n        uri: GitUri,\n        view: RepositoriesView,\n        parent: ViewNode,\n        public readonly remote: GitRemote,\n        public readonly repo: Repository\n    ) {\n        super(uri, view, parent);\n    }\n\n    get id(): string {\n        return `${this._instanceId}:gitlens:repository(${this.remote.repoPath}):remote(${this.remote.name}:${\n            this.remote.id\n        })`;\n    }\n\n    async getChildren(): Promise<ViewNode[]> {\n        const branches = await this.repo.getBranches();\n        if (branches === undefined) return [];\n\n        branches.sort(\n            (a, b) =>\n                (a.starred ? -1 : 1) - (b.starred ? -1 : 1) ||\n                a.name.localeCompare(b.name, undefined, { numeric: true, sensitivity: 'base' })\n        );\n\n        // filter remote branches\n        const branchNodes = [\n            ...Iterables.filterMap(branches, b =>\n                !b.remote || !b.name.startsWith(this.remote.name)\n                    ? undefined\n                    : new BranchNode(this.uri, this.view, this, b)\n            )\n        ];\n        if (this.view.config.branches.layout === ViewBranchesLayout.List) return branchNodes;\n\n        const hierarchy = Arrays.makeHierarchical(\n            branchNodes,\n            n => n.treeHierarchy,\n            (...paths: string[]) => paths.join('/'),\n            this.view.config.files.compact\n        );\n\n        const root = new BranchOrTagFolderNode(\n            this.view,\n            this,\n            'remote-branch',\n            this.repo.path,\n            '',\n            undefined,\n            hierarchy,\n            `remote(${this.remote.name}`\n        );\n        const children = (await root.getChildren()) as (BranchOrTagFolderNode | BranchNode)[];\n\n        return children;\n    }\n\n    getTreeItem(): TreeItem {\n        const fetch = this.remote.types.find(rt => rt.type === GitRemoteType.Fetch);\n        const push = this.remote.types.find(rt => rt.type === GitRemoteType.Push);\n\n        let separator;\n        if (fetch && push) {\n            separator = GlyphChars.ArrowLeftRightLong;\n        }\n        else if (fetch) {\n            separator = GlyphChars.ArrowLeft;\n        }\n        else if (push) {\n            separator = GlyphChars.ArrowRight;\n        }\n        else {\n            separator = GlyphChars.Dash;\n        }\n\n        const item = new TreeItem(\n            `${this.remote.default ? `${GlyphChars.Check} ${GlyphChars.Space}` : ''}${this.remote.name}`,\n            TreeItemCollapsibleState.Collapsed\n        );\n        item.description = `${separator}${GlyphChars.Space} ${\n            this.remote.provider !== undefined ? this.remote.provider.name : this.remote.domain\n        } ${GlyphChars.Space}${GlyphChars.Dot}${GlyphChars.Space} ${\n            this.remote.provider !== undefined ? this.remote.provider.displayPath : this.remote.path\n        }`;\n        item.contextValue = ResourceType.Remote;\n        if (this.remote.default) {\n            item.contextValue += '+default';\n        }\n\n        if (this.remote.provider !== undefined) {\n            item.iconPath = {\n                dark: Container.context.asAbsolutePath(`images/dark/icon-${this.remote.provider.icon}.svg`),\n                light: Container.context.asAbsolutePath(`images/light/icon-${this.remote.provider.icon}.svg`)\n            };\n        }\n        else {\n            item.iconPath = {\n                dark: Container.context.asAbsolutePath('images/dark/icon-remote.svg'),\n                light: Container.context.asAbsolutePath('images/light/icon-remote.svg')\n            };\n        }\n\n        item.id = this.id;\n        item.tooltip = `${this.remote.name} (${\n            this.remote.provider !== undefined ? this.remote.provider.name : this.remote.domain\n        })\\n${this.remote.provider !== undefined ? this.remote.provider.displayPath : this.remote.path}\\n`;\n\n        for (const type of this.remote.types) {\n            item.tooltip += `\\n${type.url} (${type.type})`;\n        }\n\n        return item;\n    }\n\n    @log()\n    fetch(options: { progress?: boolean } = {}) {\n        return this.repo.fetch({ ...options, remote: this.remote.name });\n    }\n\n    @log()\n    async setAsDefault(state: boolean = true) {\n        void (await this.remote.setAsDefault(state));\n        void this.parent!.triggerChange();\n    }\n}\n","'use strict';\nimport { TreeItem, TreeItemCollapsibleState } from 'vscode';\nimport { Container } from '../../container';\nimport { GitUri, Repository } from '../../git/gitService';\nimport { Iterables } from '../../system';\nimport { RepositoriesView } from '../repositoriesView';\nimport { MessageNode } from './common';\nimport { RemoteNode } from './remoteNode';\nimport { ResourceType, ViewNode } from './viewNode';\n\nexport class RemotesNode extends ViewNode<RepositoriesView> {\n    constructor(uri: GitUri, view: RepositoriesView, parent: ViewNode, public readonly repo: Repository) {\n        super(uri, view, parent);\n    }\n\n    get id(): string {\n        return `${this._instanceId}:gitlens:repository(${this.repo.path}):remotes`;\n    }\n\n    async getChildren(): Promise<ViewNode[]> {\n        const remotes = await this.repo.getRemotes();\n        if (remotes === undefined || remotes.length === 0) {\n            return [new MessageNode(this.view, this, 'No remotes could be found')];\n        }\n\n        remotes.sort(\n            (a, b) =>\n                (a.default ? -1 : 1) - (b.default ? -1 : 1) ||\n                a.name.localeCompare(b.name, undefined, { numeric: true, sensitivity: 'base' })\n        );\n        return [...Iterables.map(remotes, r => new RemoteNode(this.uri, this.view, this, r, this.repo))];\n    }\n\n    getTreeItem(): TreeItem {\n        const item = new TreeItem('Remotes', TreeItemCollapsibleState.Collapsed);\n        item.id = this.id;\n        item.contextValue = ResourceType.Remotes;\n\n        item.iconPath = {\n            dark: Container.context.asAbsolutePath('images/dark/icon-remote.svg'),\n            light: Container.context.asAbsolutePath('images/light/icon-remote.svg')\n        };\n\n        return item;\n    }\n}\n","'use strict';\nimport { GitFile, GitLogCommit } from '../../git/gitService';\nimport { View } from '../viewBase';\nimport { CommitFileNode, CommitFileNodeDisplayAs } from './commitFileNode';\nimport { ResourceType, ViewNode } from './viewNode';\n\nexport class StashFileNode extends CommitFileNode {\n    constructor(view: View, parent: ViewNode, file: GitFile, commit: GitLogCommit) {\n        super(view, parent, file, commit, CommitFileNodeDisplayAs.File);\n    }\n\n    protected get resourceType(): ResourceType {\n        return ResourceType.StashFile;\n    }\n\n    protected getCommitTemplate() {\n        return this.view.config.stashFormat;\n    }\n\n    protected getCommitDescriptionTemplate() {\n        return this.view.config.stashDescriptionFormat;\n    }\n\n    protected getCommitFileTemplate() {\n        return this.view.config.stashFileFormat;\n    }\n\n    protected getCommitFileDescriptionTemplate() {\n        return this.view.config.stashFileDescriptionFormat;\n    }\n}\n","'use strict';\nimport { TreeItem, TreeItemCollapsibleState } from 'vscode';\nimport { Container } from '../../container';\nimport { CommitFormatter, GitStashCommit } from '../../git/gitService';\nimport { Iterables } from '../../system';\nimport { View } from '../viewBase';\nimport { StashFileNode } from './stashFileNode';\nimport { ResourceType, ViewNode, ViewRefNode } from './viewNode';\n\nexport class StashNode extends ViewRefNode {\n    constructor(view: View, parent: ViewNode, public readonly commit: GitStashCommit) {\n        super(commit.toGitUri(), view, parent);\n    }\n\n    get id(): string {\n        return `${this._instanceId}:gitlens:repository(${this.commit.repoPath}):stash(${this.commit.sha})`;\n    }\n\n    get ref(): string {\n        return this.commit.sha;\n    }\n\n    async getChildren(): Promise<ViewNode[]> {\n        const files = (this.commit as GitStashCommit).files;\n\n        // Check for any untracked files -- since git doesn't return them via `git stash list` :(\n        // See https://stackoverflow.com/questions/12681529/\n        const log = await Container.git.getLog(this.commit.repoPath, {\n            maxCount: 1,\n            ref: `${(this.commit as GitStashCommit).stashName}^3`\n        });\n        if (log !== undefined) {\n            const commit = Iterables.first(log.commits.values());\n            if (commit !== undefined && commit.files.length !== 0) {\n                // Since these files are untracked -- make them look that way\n                commit.files.forEach(s => (s.status = '?'));\n                files.splice(files.length, 0, ...commit.files);\n            }\n        }\n\n        const children = files.map(s => new StashFileNode(this.view, this, s, this.commit.toFileCommit(s)));\n        children.sort((a, b) => a.label!.localeCompare(b.label!, undefined, { numeric: true, sensitivity: 'base' }));\n        return children;\n    }\n\n    getTreeItem(): TreeItem {\n        const item = new TreeItem(\n            CommitFormatter.fromTemplate(this.view.config.stashFormat, this.commit, {\n                truncateMessageAtNewLine: true,\n                dateFormat: Container.config.defaultDateFormat\n            }),\n            TreeItemCollapsibleState.Collapsed\n        );\n        item.id = this.id;\n        item.description = CommitFormatter.fromTemplate(this.view.config.stashDescriptionFormat, this.commit, {\n            truncateMessageAtNewLine: true,\n            dateFormat: Container.config.defaultDateFormat\n        });\n        item.contextValue = ResourceType.Stash;\n        // eslint-disable-next-line no-template-curly-in-string\n        item.tooltip = CommitFormatter.fromTemplate('${ago} (${date})\\n\\n${message}', this.commit, {\n            dateFormat: Container.config.defaultDateFormat\n        });\n\n        return item;\n    }\n}\n","'use strict';\nimport { TreeItem, TreeItemCollapsibleState } from 'vscode';\nimport { Container } from '../../container';\nimport { GitUri, Repository } from '../../git/gitService';\nimport { Iterables } from '../../system';\nimport { View } from '../viewBase';\nimport { MessageNode } from './common';\nimport { StashNode } from './stashNode';\nimport { ResourceType, ViewNode } from './viewNode';\n\nexport class StashesNode extends ViewNode {\n    constructor(uri: GitUri, view: View, parent: ViewNode, public readonly repo: Repository) {\n        super(uri, view, parent);\n    }\n\n    get id(): string {\n        return `${this._instanceId}:gitlens:repository(${this.repo.path}):stashes`;\n    }\n\n    async getChildren(): Promise<ViewNode[]> {\n        const stash = await this.repo.getStashList();\n        if (stash === undefined) return [new MessageNode(this.view, this, 'No stashed changes.')];\n\n        return [...Iterables.map(stash.commits.values(), c => new StashNode(this.view, this, c))];\n    }\n\n    getTreeItem(): TreeItem {\n        const item = new TreeItem('Stashes', TreeItemCollapsibleState.Collapsed);\n        item.id = this.id;\n        item.contextValue = ResourceType.Stashes;\n\n        item.iconPath = {\n            dark: Container.context.asAbsolutePath('images/dark/icon-stash.svg'),\n            light: Container.context.asAbsolutePath('images/light/icon-stash.svg')\n        };\n\n        return item;\n    }\n}\n","'use strict';\nimport * as paths from 'path';\nimport { Command, ThemeIcon, TreeItem, TreeItemCollapsibleState } from 'vscode';\nimport { Commands, DiffWithPreviousCommandArgs } from '../../commands';\nimport { Container } from '../../container';\nimport { GitFile, GitLogCommit, GitUri, StatusFileFormatter } from '../../git/gitService';\nimport { Strings } from '../../system';\nimport { View } from '../viewBase';\nimport { CommitFileNode, CommitFileNodeDisplayAs } from './commitFileNode';\nimport { ResourceType, ViewNode } from './viewNode';\n\nexport class StatusFileNode extends ViewNode {\n    public readonly commits: GitLogCommit[];\n    public readonly file: GitFile;\n    public readonly repoPath: string;\n\n    private readonly _hasStagedChanges: boolean;\n    private readonly _hasUnstagedChanges: boolean;\n\n    constructor(view: View, parent: ViewNode, repoPath: string, file: GitFile, commits: GitLogCommit[]) {\n        let hasStagedChanges = false;\n        let hasUnstagedChanges = false;\n        let ref = undefined;\n        for (const c of commits) {\n            if (c.isUncommitted) {\n                if (c.isUncommittedStaged) {\n                    hasStagedChanges = true;\n                    if (!hasUnstagedChanges) {\n                        ref = c.sha;\n                    }\n\n                    break;\n                }\n                else {\n                    ref = undefined;\n                    hasUnstagedChanges = true;\n                }\n            }\n            else if (hasUnstagedChanges || hasStagedChanges) {\n                break;\n            }\n            else {\n                ref = c.sha;\n                break;\n            }\n        }\n\n        super(GitUri.fromFile(file, repoPath, ref), view, parent);\n\n        this.repoPath = repoPath;\n        this.file = file;\n        this.commits = commits;\n\n        this._hasStagedChanges = hasStagedChanges;\n        this._hasUnstagedChanges = hasUnstagedChanges;\n    }\n\n    getChildren(): ViewNode[] {\n        return this.commits.map(\n            c =>\n                new CommitFileNode(\n                    this.view,\n                    this,\n                    this.file,\n                    c,\n                    CommitFileNodeDisplayAs.CommitLabel |\n                        (this.view.config.avatars\n                            ? CommitFileNodeDisplayAs.Gravatar\n                            : CommitFileNodeDisplayAs.CommitIcon)\n                )\n        );\n    }\n\n    getTreeItem(): TreeItem {\n        const item = new TreeItem(this.label, TreeItemCollapsibleState.None);\n        item.description = this.description;\n\n        if ((this._hasStagedChanges || this._hasUnstagedChanges) && this.commits.length === 1) {\n            item.contextValue = ResourceType.File;\n            if (this._hasStagedChanges) {\n                item.contextValue += '+staged';\n                item.tooltip = StatusFileFormatter.fromTemplate(\n                    // eslint-disable-next-line no-template-curly-in-string\n                    '${file}\\n${directory}/\\n\\n${status}${ (originalPath)} in Index (staged)',\n                    this.file\n                );\n            }\n            else {\n                item.contextValue += '+unstaged';\n                item.tooltip = StatusFileFormatter.fromTemplate(\n                    // eslint-disable-next-line no-template-curly-in-string\n                    '${file}\\n${directory}/\\n\\n${status}${ (originalPath)} in Working Tree',\n                    this.file\n                );\n            }\n\n            // Use the file icon and decorations\n            item.resourceUri = GitUri.resolveToUri(this.file.fileName, this.repoPath);\n            item.iconPath = ThemeIcon.File;\n\n            item.command = this.getCommand();\n        }\n        else {\n            item.collapsibleState = TreeItemCollapsibleState.Collapsed;\n            if (this._hasStagedChanges || this._hasUnstagedChanges) {\n                item.contextValue = ResourceType.File;\n                if (this._hasStagedChanges && this._hasUnstagedChanges) {\n                    item.contextValue += '+staged+unstaged';\n                }\n                else if (this._hasStagedChanges) {\n                    item.contextValue += '+staged';\n                }\n                else {\n                    item.contextValue += '+unstaged';\n                }\n\n                // Use the file icon and decorations\n                item.resourceUri = GitUri.resolveToUri(this.file.fileName, this.repoPath);\n                item.iconPath = ThemeIcon.File;\n            }\n            else {\n                item.contextValue = ResourceType.StatusFileCommits;\n\n                const icon = GitFile.getStatusIcon(this.file.status);\n                item.iconPath = {\n                    dark: Container.context.asAbsolutePath(paths.join('images', 'dark', icon)),\n                    light: Container.context.asAbsolutePath(paths.join('images', 'light', icon))\n                };\n            }\n\n            item.tooltip = StatusFileFormatter.fromTemplate(\n                `\\${file}\\n\\${directory}/\\n\\n\\${status}\\${ (originalPath)} in ${this.getChangedIn()}`,\n                this.file\n            );\n        }\n\n        // Only cache the label/description for a single refresh\n        this._label = undefined;\n        this._description = undefined;\n\n        return item;\n    }\n\n    private _description: string | undefined;\n    get description() {\n        if (this._description === undefined) {\n            this._description = StatusFileFormatter.fromTemplate(\n                this.view.config.statusFileDescriptionFormat,\n                {\n                    ...this.file,\n                    commit: this.commit\n                },\n                {\n                    relativePath: this.relativePath\n                }\n            );\n        }\n        return this._description;\n    }\n\n    private _folderName: string | undefined;\n    get folderName() {\n        if (this._folderName === undefined) {\n            this._folderName = paths.dirname(this.uri.relativePath);\n        }\n        return this._folderName;\n    }\n\n    private _label: string | undefined;\n    get label() {\n        if (this._label === undefined) {\n            this._label = StatusFileFormatter.fromTemplate(\n                this.view.config.statusFileFormat,\n                {\n                    ...this.file,\n                    commit: this.commit\n                },\n                {\n                    relativePath: this.relativePath\n                }\n            );\n        }\n        return this._label;\n    }\n\n    get commit() {\n        return this.commits[0];\n    }\n\n    get priority(): number {\n        if (this._hasStagedChanges && !this._hasUnstagedChanges) return -3;\n        if (this._hasStagedChanges) return -2;\n        if (this._hasUnstagedChanges) return -1;\n        return 0;\n    }\n\n    private _relativePath: string | undefined;\n    get relativePath(): string | undefined {\n        return this._relativePath;\n    }\n    set relativePath(value: string | undefined) {\n        this._relativePath = value;\n        this._label = undefined;\n        this._description = undefined;\n    }\n\n    private getChangedIn(): string {\n        const changedIn = [];\n\n        let commits = 0;\n\n        if (this._hasUnstagedChanges) {\n            commits++;\n            changedIn.push('Working Tree');\n        }\n\n        if (this._hasStagedChanges) {\n            commits++;\n            changedIn.push('Index (staged)');\n        }\n\n        if (this.commits.length > commits) {\n            commits = this.commits.length - commits;\n        }\n\n        if (commits > 0) {\n            changedIn.push(Strings.pluralize('commit', commits));\n        }\n\n        if (changedIn.length > 2) {\n            changedIn[changedIn.length - 1] = `and ${changedIn[changedIn.length - 1]}`;\n        }\n        return changedIn.join(changedIn.length > 2 ? ', ' : ' and ');\n    }\n\n    getCommand(): Command | undefined {\n        const commandArgs: DiffWithPreviousCommandArgs = {\n            commit: this.commit,\n            line: 0,\n            showOptions: {\n                preserveFocus: true,\n                preview: true\n            }\n        };\n        return {\n            title: 'Compare File with Previous Revision',\n            command: Commands.DiffWithPrevious,\n            arguments: [GitUri.fromFile(this.file, this.repoPath), commandArgs]\n        };\n    }\n}\n","'use strict';\nimport * as paths from 'path';\nimport { TreeItem, TreeItemCollapsibleState } from 'vscode';\nimport { ViewFilesLayout } from '../../configuration';\nimport { Container } from '../../container';\nimport { GitStatusFile } from '../../git/git';\nimport {\n    GitCommitType,\n    GitFileWithCommit,\n    GitLog,\n    GitLogCommit,\n    GitService,\n    GitStatus,\n    GitUri\n} from '../../git/gitService';\nimport { Arrays, Iterables, Objects, Strings } from '../../system';\nimport { RepositoriesView } from '../repositoriesView';\nimport { FileNode, FolderNode } from './folderNode';\nimport { StatusFileNode } from './statusFileNode';\nimport { ResourceType, ViewNode } from './viewNode';\n\nexport class StatusFilesNode extends ViewNode<RepositoriesView> {\n    readonly repoPath: string;\n\n    constructor(\n        view: RepositoriesView,\n        parent: ViewNode,\n        public readonly status: GitStatus,\n        public readonly range: string | undefined\n    ) {\n        super(GitUri.fromRepoPath(status.repoPath), view, parent);\n        this.repoPath = status.repoPath;\n    }\n\n    get id(): string {\n        return `${this._instanceId}:gitlens:repository(${this.status.repoPath}):status:files`;\n    }\n\n    async getChildren(): Promise<ViewNode[]> {\n        let files: GitFileWithCommit[] = [];\n\n        const repoPath = this.repoPath;\n\n        let log: GitLog | undefined;\n        if (this.range !== undefined) {\n            log = await Container.git.getLog(repoPath, { maxCount: 0, ref: this.range });\n            if (log !== undefined) {\n                files = [\n                    ...Iterables.flatMap(log.commits.values(), c =>\n                        c.files.map(s => {\n                            const file: GitFileWithCommit = { ...s, commit: c };\n                            return file;\n                        })\n                    )\n                ];\n            }\n        }\n\n        if (this.status.files.length !== 0 && this.includeWorkingTree) {\n            files.splice(\n                0,\n                0,\n                ...Iterables.flatMap(this.status.files, s => {\n                    if (s.workingTreeStatus !== undefined && s.indexStatus !== undefined) {\n                        // Decrements the date to guarantee this entry will be sorted after the previous entry (most recent first)\n                        const older = new Date();\n                        older.setMilliseconds(older.getMilliseconds() - 1);\n\n                        return [\n                            this.toStatusFile(s, GitService.uncommittedSha, GitService.uncommittedStagedSha),\n                            this.toStatusFile(s, GitService.uncommittedStagedSha, 'HEAD', older)\n                        ];\n                    }\n                    else if (s.indexStatus !== undefined) {\n                        return [this.toStatusFile(s, GitService.uncommittedStagedSha, 'HEAD')];\n                    }\n\n                    return [this.toStatusFile(s, GitService.uncommittedSha, 'HEAD')];\n                })\n            );\n        }\n\n        files.sort((a, b) => b.commit.date.getTime() - a.commit.date.getTime());\n\n        const groups = Arrays.groupBy(files, s => s.fileName);\n\n        let children: FileNode[] = [\n            ...Iterables.map(\n                Objects.values(groups),\n                files =>\n                    new StatusFileNode(this.view, this, repoPath, files[files.length - 1], files.map(s => s.commit))\n            )\n        ];\n\n        if (this.view.config.files.layout !== ViewFilesLayout.List) {\n            const hierarchy = Arrays.makeHierarchical(\n                children,\n                n => n.uri.relativePath.split('/'),\n                (...parts: string[]) => Strings.normalizePath(paths.join(...parts)),\n                this.view.config.files.compact\n            );\n\n            const root = new FolderNode(this.view, this, repoPath, '', hierarchy, true);\n            children = (await root.getChildren()) as FileNode[];\n        }\n        else {\n            children.sort(\n                (a, b) =>\n                    a.priority - b.priority ||\n                    a.label!.localeCompare(b.label!, undefined, { numeric: true, sensitivity: 'base' })\n            );\n        }\n\n        return children;\n    }\n\n    async getTreeItem(): Promise<TreeItem> {\n        let files = this.status.files !== undefined && this.includeWorkingTree ? this.status.files.length : 0;\n\n        if (this.status.upstream !== undefined && this.status.state.ahead > 0) {\n            if (files > 0) {\n                const aheadFiles = await Container.git.getDiffStatus(this.repoPath, `${this.status.upstream}...`);\n\n                if (aheadFiles !== undefined) {\n                    const uniques = new Set();\n                    for (const f of this.status.files) {\n                        uniques.add(f.fileName);\n                    }\n                    for (const f of aheadFiles) {\n                        uniques.add(f.fileName);\n                    }\n\n                    files = uniques.size;\n                }\n            }\n            else {\n                const stats = await Container.git.getChangedFilesCount(this.repoPath, `${this.status.upstream}...`);\n                if (stats !== undefined) {\n                    files += stats.files;\n                }\n            }\n        }\n\n        const label = `${Strings.pluralize('file', files)} changed`;\n        const item = new TreeItem(label, TreeItemCollapsibleState.Collapsed);\n        item.id = this.id;\n        item.contextValue = ResourceType.StatusFiles;\n        item.iconPath = {\n            dark: Container.context.asAbsolutePath('images/dark/icon-diff.svg'),\n            light: Container.context.asAbsolutePath('images/light/icon-diff.svg')\n        };\n\n        return item;\n    }\n\n    private get includeWorkingTree(): boolean {\n        return this.view.config.includeWorkingTree;\n    }\n\n    private toStatusFile(file: GitStatusFile, ref: string, previousRef: string, date?: Date): GitFileWithCommit {\n        return {\n            status: file.status,\n            repoPath: file.repoPath,\n            indexStatus: file.indexStatus,\n            workingTreeStatus: file.workingTreeStatus,\n            fileName: file.fileName,\n            originalFileName: file.originalFileName,\n            commit: new GitLogCommit(\n                GitCommitType.LogFile,\n                file.repoPath,\n                ref,\n                'You',\n                undefined,\n                date || new Date(),\n                date || new Date(),\n                '',\n                file.fileName,\n                [file],\n                file.status,\n                file.originalFileName,\n                previousRef,\n                file.fileName\n            )\n        };\n    }\n}\n","'use strict';\nimport { TreeItem, TreeItemCollapsibleState } from 'vscode';\nimport { ViewBranchesLayout } from '../../configuration';\nimport { Container } from '../../container';\nimport { GitTag, GitUri } from '../../git/gitService';\nimport { Iterables } from '../../system';\nimport { RepositoriesView } from '../repositoriesView';\nimport { CommitNode } from './commitNode';\nimport { MessageNode, ShowMoreNode } from './common';\nimport { getBranchesAndTagTipsFn, insertDateMarkers } from './helpers';\nimport { PageableViewNode, ResourceType, ViewNode, ViewRefNode } from './viewNode';\n\nexport class TagNode extends ViewRefNode<RepositoriesView> implements PageableViewNode {\n    readonly supportsPaging: boolean = true;\n    maxCount: number | undefined;\n\n    constructor(uri: GitUri, view: RepositoriesView, parent: ViewNode, public readonly tag: GitTag) {\n        super(uri, view, parent);\n    }\n\n    get id(): string {\n        return `${this._instanceId}:gitlens:repository(${this.tag.repoPath}):tag(${this.tag.name})`;\n    }\n\n    get label(): string {\n        return this.view.config.branches.layout === ViewBranchesLayout.Tree ? this.tag.getBasename() : this.tag.name;\n    }\n\n    get ref(): string {\n        return this.tag.name;\n    }\n\n    async getChildren(): Promise<ViewNode[]> {\n        const log = await Container.git.getLog(this.uri.repoPath!, {\n            maxCount: this.maxCount !== undefined ? this.maxCount : this.view.config.defaultItemLimit,\n            ref: this.tag.name\n        });\n        if (log === undefined) return [new MessageNode(this.view, this, 'No commits could be found.')];\n\n        const getBranchAndTagTips = await getBranchesAndTagTipsFn(this.uri.repoPath, this.tag.name);\n        const children = [\n            ...insertDateMarkers(\n                Iterables.map(\n                    log.commits.values(),\n                    c => new CommitNode(this.view, this, c, undefined, getBranchAndTagTips)\n                ),\n                this\n            )\n        ];\n\n        if (log.truncated) {\n            children.push(new ShowMoreNode(this.view, this, 'Commits', children[children.length - 1]));\n        }\n        return children;\n    }\n\n    getTreeItem(): TreeItem {\n        const item = new TreeItem(this.label, TreeItemCollapsibleState.Collapsed);\n        item.id = this.id;\n        item.contextValue = ResourceType.Tag;\n        item.tooltip = `${this.tag.name}${this.tag.annotation === undefined ? '' : `\\n${this.tag.annotation}`}`;\n\n        return item;\n    }\n}\n","'use strict';\nimport { TreeItem, TreeItemCollapsibleState } from 'vscode';\nimport { ViewBranchesLayout } from '../../configuration';\nimport { Container } from '../../container';\nimport { GitUri, Repository } from '../../git/gitService';\nimport { Arrays } from '../../system';\nimport { RepositoriesView } from '../repositoriesView';\nimport { BranchOrTagFolderNode } from './branchOrTagFolderNode';\nimport { MessageNode } from './common';\nimport { TagNode } from './tagNode';\nimport { ResourceType, ViewNode } from './viewNode';\n\nexport class TagsNode extends ViewNode<RepositoriesView> {\n    constructor(uri: GitUri, view: RepositoriesView, parent: ViewNode, public readonly repo: Repository) {\n        super(uri, view, parent);\n    }\n\n    get id(): string {\n        return `${this._instanceId}:gitlens:repository(${this.repo.path}):tags`;\n    }\n\n    async getChildren(): Promise<ViewNode[]> {\n        const tags = await this.repo.getTags();\n        if (tags.length === 0) return [new MessageNode(this.view, this, 'No tags could be found.')];\n\n        tags.sort((a, b) => a.name.localeCompare(b.name, undefined, { numeric: true, sensitivity: 'base' }));\n        const tagNodes = tags.map(t => new TagNode(this.uri, this.view, this, t));\n        if (this.view.config.branches.layout === ViewBranchesLayout.List) return tagNodes;\n\n        const hierarchy = Arrays.makeHierarchical(\n            tagNodes,\n            n => n.tag.name.split('/'),\n            (...paths: string[]) => paths.join('/'),\n            this.view.config.files.compact\n        );\n\n        const root = new BranchOrTagFolderNode(\n            this.view,\n            this,\n            'tag',\n            this.repo.path,\n            '',\n            undefined,\n            hierarchy,\n            'tags'\n        );\n        const children = (await root.getChildren()) as (BranchOrTagFolderNode | TagNode)[];\n        return children;\n    }\n\n    getTreeItem(): TreeItem {\n        const item = new TreeItem('Tags', TreeItemCollapsibleState.Collapsed);\n        item.id = this.id;\n        item.contextValue = ResourceType.Tags;\n\n        item.iconPath = {\n            dark: Container.context.asAbsolutePath('images/dark/icon-tag.svg'),\n            light: Container.context.asAbsolutePath('images/light/icon-tag.svg')\n        };\n\n        return item;\n    }\n}\n","'use strict';\nimport { Disposable, TreeItem, TreeItemCollapsibleState } from 'vscode';\nimport { GlyphChars } from '../../constants';\nimport { Container } from '../../container';\nimport {\n    GitBranch,\n    GitStatus,\n    GitUri,\n    Repository,\n    RepositoryChange,\n    RepositoryChangeEvent,\n    RepositoryFileSystemChangeEvent\n} from '../../git/gitService';\nimport { Dates, debug, gate, log, Strings } from '../../system';\nimport { RepositoriesView } from '../repositoriesView';\nimport { BranchesNode } from './branchesNode';\nimport { BranchNode } from './branchNode';\nimport { BranchTrackingStatusNode } from './branchTrackingStatusNode';\nimport { MessageNode } from './common';\nimport { ContributorsNode } from './contributorsNode';\nimport { ReflogNode } from './reflogNode';\nimport { RemotesNode } from './remotesNode';\nimport { StashesNode } from './stashesNode';\nimport { StatusFilesNode } from './statusFilesNode';\nimport { TagsNode } from './tagsNode';\nimport { ResourceType, SubscribeableViewNode, ViewNode } from './viewNode';\n\nconst hasTimeRegex = /[hHm]/;\n\nexport class RepositoryNode extends SubscribeableViewNode<RepositoriesView> {\n    private _children: ViewNode[] | undefined;\n    private _lastFetched: number = 0;\n    private _status: Promise<GitStatus | undefined>;\n\n    constructor(uri: GitUri, view: RepositoriesView, parent: ViewNode, public readonly repo: Repository) {\n        super(uri, view, parent);\n\n        this._status = this.repo.getStatus();\n    }\n\n    get id(): string {\n        return `${this._instanceId}:gitlens:repository(${this.repo.path})${this.repo.starred ? '+starred:' : ''}`;\n    }\n\n    async getChildren(): Promise<ViewNode[]> {\n        if (this._children === undefined) {\n            const children = [];\n\n            const status = await this._status;\n            if (status !== undefined) {\n                const branch = new GitBranch(\n                    status.repoPath,\n                    status.branch,\n                    false,\n                    true,\n                    status.sha,\n                    status.upstream,\n                    status.state.ahead,\n                    status.state.behind,\n                    status.detached\n                );\n                children.push(new BranchNode(this.uri, this.view, this, branch, true));\n\n                if (status.state.behind) {\n                    children.push(new BranchTrackingStatusNode(this.view, this, status, 'behind', true));\n                }\n\n                if (status.state.ahead) {\n                    children.push(new BranchTrackingStatusNode(this.view, this, status, 'ahead', true));\n                }\n\n                if (status.state.ahead || (status.files.length !== 0 && this.includeWorkingTree)) {\n                    const range = status.upstream ? `${status.upstream}..${branch.ref}` : undefined;\n                    children.push(new StatusFilesNode(this.view, this, status, range));\n                }\n\n                if (!this.view.config.repositories.compact) {\n                    children.push(new MessageNode(this.view, this, '', GlyphChars.Dash.repeat(2), ''));\n                }\n            }\n\n            children.push(\n                new BranchesNode(this.uri, this.view, this, this.repo),\n                new ContributorsNode(this.uri, this.view, this, this.repo)\n            );\n\n            if (Container.config.insiders) {\n                children.push(new ReflogNode(this.uri, this.view, this, this.repo));\n            }\n\n            children.push(\n                new RemotesNode(this.uri, this.view, this, this.repo),\n                new StashesNode(this.uri, this.view, this, this.repo),\n                new TagsNode(this.uri, this.view, this, this.repo)\n            );\n            this._children = children;\n        }\n        return this._children;\n    }\n\n    async getTreeItem(): Promise<TreeItem> {\n        const label = this.repo.formattedName || this.uri.repoPath || '';\n\n        this._lastFetched = await this.repo.getLastFetched();\n\n        const lastFetchedTooltip = this.formatLastFetched({\n            prefix: `${Strings.pad(GlyphChars.Dash, 2, 2)}Last fetched on `,\n            format: Container.config.defaultDateFormat || 'dddd MMMM Do, YYYY',\n            includeTime: true\n        });\n\n        let description;\n        let tooltip = this.repo.formattedName\n            ? `${this.repo.formattedName}${lastFetchedTooltip}\\n${this.uri.repoPath}`\n            : `${this.uri.repoPath}${lastFetchedTooltip}`;\n        let iconSuffix = '';\n        let workingStatus = '';\n\n        const status = await this._status;\n        if (status !== undefined) {\n            tooltip += `\\n\\nCurrent branch is ${status.branch}`;\n\n            if (status.files.length !== 0 && this.includeWorkingTree) {\n                workingStatus = status.getFormattedDiffStatus({\n                    compact: true,\n                    prefix: Strings.pad(GlyphChars.Dot, 2, 2)\n                });\n            }\n\n            const upstreamStatus = status.getUpstreamStatus({\n                prefix: `${GlyphChars.Space} `\n            });\n\n            description = `${status.branch}${upstreamStatus}${workingStatus}`;\n\n            iconSuffix = workingStatus ? '-blue' : '';\n            if (status.upstream !== undefined) {\n                tooltip += ` and is tracking ${status.upstream}\\n${status.getUpstreamStatus({\n                    empty: 'No commits ahead or behind',\n                    expand: true,\n                    separator: '\\n',\n                    suffix: '\\n'\n                })}`;\n\n                if (status.state.behind) {\n                    iconSuffix = '-red';\n                }\n                if (status.state.ahead) {\n                    iconSuffix = status.state.behind ? '-yellow' : '-green';\n                }\n            }\n\n            if (workingStatus) {\n                tooltip += `\\n\\nWorking tree has uncommitted changes${status.getFormattedDiffStatus({\n                    expand: true,\n                    prefix: '\\n',\n                    separator: '\\n'\n                })}`;\n            }\n        }\n\n        if (!this.repo.supportsChangeEvents) {\n            description = `<!>${description ? ` ${GlyphChars.Space}${description}` : ''}`;\n            tooltip += '\\n\\n<!> Unable to automatically detect repository changes';\n        }\n\n        const item = new TreeItem(label, TreeItemCollapsibleState.Expanded);\n        item.contextValue = ResourceType.Repository;\n        if (this.repo.starred) {\n            item.contextValue += '+starred';\n        }\n        item.description = `${description || ''}${this.formatLastFetched({\n            prefix: `${Strings.pad(GlyphChars.Dot, 2, 2)}Last fetched `\n        })}`;\n        item.iconPath = {\n            dark: Container.context.asAbsolutePath(`images/dark/icon-repo${iconSuffix}.svg`),\n            light: Container.context.asAbsolutePath(`images/light/icon-repo${iconSuffix}.svg`)\n        };\n        item.id = this.id;\n        item.tooltip = tooltip;\n\n        void this.ensureSubscription();\n\n        return item;\n    }\n\n    @log()\n    fetch(options: { progress?: boolean; remote?: string } = {}) {\n        return this.repo.fetch(options);\n    }\n\n    @log()\n    pull(options: { progress?: boolean } = {}) {\n        return this.repo.pull(options);\n    }\n\n    @log()\n    push(options: { force?: boolean; progress?: boolean } = {}) {\n        return this.repo.push(options);\n    }\n\n    @gate()\n    @debug()\n    async refresh() {\n        this._status = this.repo.getStatus();\n\n        this._children = undefined;\n        await this.ensureSubscription();\n    }\n\n    @log()\n    async star() {\n        await this.repo.star();\n        void this.parent!.triggerChange();\n    }\n\n    @log()\n    async unstar() {\n        await this.repo.unstar();\n        void this.parent!.triggerChange();\n    }\n\n    @debug()\n    protected subscribe() {\n        const disposables = [this.repo.onDidChange(this.onRepoChanged, this)];\n\n        // if (Container.config.defaultDateStyle === DateStyle.Relative) {\n        //     disposables.push(Functions.interval(() => void this.updateLastFetched(), 60000));\n        // }\n\n        if (this.includeWorkingTree) {\n            disposables.push(this.repo.onDidChangeFileSystem(this.onFileSystemChanged, this), {\n                dispose: () => this.repo.stopWatchingFileSystem()\n            });\n\n            this.repo.startWatchingFileSystem();\n        }\n\n        return Disposable.from(...disposables);\n    }\n\n    private get includeWorkingTree(): boolean {\n        return this.view.config.includeWorkingTree;\n    }\n\n    @debug({\n        args: {\n            0: (e: RepositoryFileSystemChangeEvent) =>\n                `{ repository: ${e.repository ? e.repository.name : ''}, uris(${e.uris.length}): [${e.uris\n                    .slice(0, 1)\n                    .map(u => u.fsPath)\n                    .join(', ')}${e.uris.length > 1 ? ', ...' : ''}] }`\n        }\n    })\n    private onFileSystemChanged(e: RepositoryFileSystemChangeEvent) {\n        void this.triggerChange();\n    }\n\n    @debug({\n        args: {\n            0: (e: RepositoryChangeEvent) =>\n                `{ repository: ${e.repository ? e.repository.name : ''}, changes: ${e.changes.join()} }`\n        }\n    })\n    private onRepoChanged(e: RepositoryChangeEvent) {\n        if (e.changed(RepositoryChange.Closed)) {\n            this.dispose();\n\n            return;\n        }\n\n        if (\n            this._children === undefined ||\n            e.changed(RepositoryChange.Repository) ||\n            e.changed(RepositoryChange.Config)\n        ) {\n            void this.triggerChange();\n\n            return;\n        }\n\n        if (e.changed(RepositoryChange.Stashes)) {\n            const node = this._children.find(c => c instanceof StashesNode);\n            if (node !== undefined) {\n                void this.view.triggerNodeChange(node);\n            }\n        }\n\n        if (e.changed(RepositoryChange.Remotes)) {\n            const node = this._children.find(c => c instanceof RemotesNode);\n            if (node !== undefined) {\n                void this.view.triggerNodeChange(node);\n            }\n        }\n\n        if (e.changed(RepositoryChange.Tags)) {\n            const node = this._children.find(c => c instanceof TagsNode);\n            if (node !== undefined) {\n                void this.view.triggerNodeChange(node);\n            }\n        }\n    }\n\n    private formatLastFetched(options: { prefix?: string; format?: string; includeTime?: boolean } = {}) {\n        if (this._lastFetched === 0) return '';\n\n        // if (options.format === undefined && Container.config.defaultDateStyle === DateStyle.Relative) {\n        //     // If less than a day has passed show a relative date\n        //     if (Date.now() - this._lastFetched < Dates.MillisecondsPerDay) {\n        //         return `${options.prefix || ''}${Dates.toFormatter(new Date(this._lastFetched)).fromNow()}`;\n        //     }\n        // }\n\n        let format = options.format || Container.config.defaultDateShortFormat || 'MMM D, YYYY';\n        if (\n            (options.includeTime ||\n                // If less than a day has passed show the time too\n                (options.includeTime === undefined && Date.now() - this._lastFetched < Dates.MillisecondsPerDay)) &&\n            // If the time is already included don't do anything\n            !hasTimeRegex.test(format)\n        ) {\n            format = `h:mma, ${format}`;\n        }\n\n        return `${options.prefix || ''}${Dates.getFormatter(new Date(this._lastFetched)).format(format)}`;\n    }\n\n    // @debug()\n    // private async updateLastFetched() {\n    //     const prevLastFetched = this._lastFetched;\n    //     this._lastFetched = await this.repo.getLastFetched();\n\n    //     // If the fetched date hasn't changed and it was over a day ago, kick out\n    //     if (this._lastFetched === prevLastFetched && Date.now() - this._lastFetched >= Dates.MillisecondsPerDay) return;\n\n    //     this.view.triggerNodeChange(this);\n    // }\n}\n","'use strict';\nimport { Disposable, TextEditor, TreeItem, TreeItemCollapsibleState, window } from 'vscode';\nimport { Container } from '../../container';\nimport { GitUri } from '../../git/gitService';\nimport { Logger } from '../../logger';\nimport { debug, Functions, gate } from '../../system';\nimport { RepositoriesView } from '../repositoriesView';\nimport { MessageNode } from './common';\nimport { RepositoryNode } from './repositoryNode';\nimport { ResourceType, SubscribeableViewNode, unknownGitUri, ViewNode } from './viewNode';\n\nexport class RepositoriesNode extends SubscribeableViewNode<RepositoriesView> {\n    private _children: (RepositoryNode | MessageNode)[] | undefined;\n\n    constructor(view: RepositoriesView) {\n        super(unknownGitUri, view);\n    }\n\n    dispose() {\n        super.dispose();\n\n        this.resetChildren();\n    }\n\n    @debug()\n    private resetChildren() {\n        if (this._children === undefined) return;\n\n        for (const child of this._children) {\n            if (child instanceof RepositoryNode) {\n                child.dispose();\n            }\n        }\n        this._children = undefined;\n    }\n\n    async getChildren(): Promise<ViewNode[]> {\n        if (this._children === undefined) {\n            const repositories = await Container.git.getOrderedRepositories();\n            if (repositories.length === 0) return [new MessageNode(this.view, this, 'No repositories could be found.')];\n\n            this._children = repositories.map(r => new RepositoryNode(GitUri.fromRepoPath(r.path), this.view, this, r));\n        }\n\n        return this._children;\n    }\n\n    getTreeItem(): TreeItem {\n        const item = new TreeItem('Repositories', TreeItemCollapsibleState.Expanded);\n        item.contextValue = ResourceType.Repositories;\n\n        void this.ensureSubscription();\n\n        return item;\n    }\n\n    @gate()\n    @debug()\n    async refresh(reset: boolean = false) {\n        if (this._children === undefined) return;\n\n        if (reset) {\n            this.resetChildren();\n            await this.unsubscribe();\n            void this.ensureSubscription();\n\n            return;\n        }\n\n        const repositories = await Container.git.getOrderedRepositories();\n        if (repositories.length === 0 && (this._children === undefined || this._children.length === 0)) return;\n\n        if (repositories.length === 0) {\n            this._children = [new MessageNode(this.view, this, 'No repositories could be found.')];\n            return;\n        }\n\n        const children = [];\n        for (const repo of repositories) {\n            const normalizedPath = repo.normalizedPath;\n            const child = (this._children as RepositoryNode[]).find(c => c.repo.normalizedPath === normalizedPath);\n            if (child !== undefined) {\n                children.push(child);\n                void child.refresh();\n            }\n            else {\n                children.push(new RepositoryNode(GitUri.fromRepoPath(repo.path), this.view, this, repo));\n            }\n        }\n\n        for (const child of this._children as RepositoryNode[]) {\n            if (children.includes(child)) continue;\n\n            child.dispose();\n        }\n\n        this._children = children;\n\n        void this.ensureSubscription();\n    }\n\n    @debug()\n    protected subscribe() {\n        const subscriptions = [Container.git.onDidChangeRepositories(this.onRepositoriesChanged, this)];\n\n        if (this.view.config.autoReveal) {\n            subscriptions.push(\n                window.onDidChangeActiveTextEditor(Functions.debounce(this.onActiveEditorChanged, 500), this)\n            );\n        }\n\n        return Disposable.from(...subscriptions);\n    }\n\n    @debug({ args: false })\n    private onActiveEditorChanged(editor: TextEditor | undefined) {\n        if (editor == null || this._children === undefined || this._children.length === 1) {\n            return;\n        }\n\n        try {\n            const uri = editor.document.uri;\n            const node = this._children.find(n => n instanceof RepositoryNode && n.repo.containsUri(uri)) as\n                | RepositoryNode\n                | undefined;\n            if (node === undefined) return;\n\n            // Check to see if this repo has a descendent that is already selected\n            let parent = this.view.selection.length === 0 ? undefined : this.view.selection[0];\n            while (parent !== undefined) {\n                if (parent === node) return;\n\n                parent = parent.getParent();\n            }\n\n            void this.view.reveal(node, { expand: true });\n        }\n        catch (ex) {\n            Logger.error(ex);\n        }\n    }\n\n    @debug()\n    private onRepositoriesChanged() {\n        void this.triggerChange();\n    }\n}\n","'use strict';\nimport * as paths from 'path';\nimport {\n    commands,\n    Disposable,\n    ExtensionContext,\n    SourceControlResourceGroup,\n    SourceControlResourceState,\n    TextDocumentShowOptions,\n    TextEditor,\n    TextEditorEdit,\n    Uri,\n    ViewColumn,\n    window,\n    workspace\n} from 'vscode';\nimport { BuiltInCommands, DocumentSchemes, ImageMimetypes } from '../constants';\nimport { Container } from '../container';\nimport { GitBranch, GitCommit, GitContributor, GitFile, GitRemote, GitUri, Repository } from '../git/gitService';\nimport { Logger } from '../logger';\nimport { CommandQuickPickItem, RepositoriesQuickPick } from '../quickpicks';\n// import { Telemetry } from '../telemetry';\nimport { ViewNode, ViewRefNode } from '../views/nodes';\n\nexport enum Commands {\n    ClearFileAnnotations = 'gitlens.clearFileAnnotations',\n    CloseUnchangedFiles = 'gitlens.closeUnchangedFiles',\n    ComputingFileAnnotations = 'gitlens.computingFileAnnotations',\n    CopyMessageToClipboard = 'gitlens.copyMessageToClipboard',\n    CopyRemoteFileUrlToClipboard = 'gitlens.copyRemoteFileUrlToClipboard',\n    CopyShaToClipboard = 'gitlens.copyShaToClipboard',\n    DiffDirectory = 'gitlens.diffDirectory',\n    DiffDirectoryWithHead = 'gitlens.diffDirectoryWithHead',\n    DiffHeadWith = 'gitlens.diffHeadWith',\n    // DEPRECATED\n    DiffHeadWithBranch = 'gitlens.diffHeadWithBranch',\n    DiffWorkingWith = 'gitlens.diffWorkingWith',\n    // DEPRECATED\n    DiffWorkingWithBranch = 'gitlens.diffWorkingWithBranch',\n    ExternalDiffAll = 'gitlens.externalDiffAll',\n    DiffWith = 'gitlens.diffWith',\n    // DEPRECATED\n    DiffWithBranch = 'gitlens.diffWithBranch',\n    DiffWithRef = 'gitlens.diffWithRef',\n    DiffWithNext = 'gitlens.diffWithNext',\n    DiffWithNextInDiff = 'gitlens.diffWithNextInDiff',\n    DiffWithPrevious = 'gitlens.diffWithPrevious',\n    DiffWithPreviousInDiff = 'gitlens.diffWithPreviousInDiff',\n    DiffLineWithPrevious = 'gitlens.diffLineWithPrevious',\n    DiffWithRevision = 'gitlens.diffWithRevision',\n    DiffWithWorking = 'gitlens.diffWithWorking',\n    DiffWithWorkingInDiff = 'gitlens.diffWithWorkingInDiff',\n    DiffLineWithWorking = 'gitlens.diffLineWithWorking',\n    ExternalDiff = 'gitlens.externalDiff',\n    FetchRepositories = 'gitlens.fetchRepositories',\n    InviteToLiveShare = 'gitlens.inviteToLiveShare',\n    OpenChangedFiles = 'gitlens.openChangedFiles',\n    OpenBranchesInRemote = 'gitlens.openBranchesInRemote',\n    OpenBranchInRemote = 'gitlens.openBranchInRemote',\n    OpenCommitInRemote = 'gitlens.openCommitInRemote',\n    OpenFileInRemote = 'gitlens.openFileInRemote',\n    OpenFileRevision = 'gitlens.openFileRevision',\n    OpenFileRevisionFrom = 'gitlens.openFileRevisionFrom',\n    // DEPRECATED\n    OpenFileRevisionFromBranch = 'gitlens.openFileRevisionFromBranch',\n    OpenInRemote = 'gitlens.openInRemote',\n    OpenRepoInRemote = 'gitlens.openRepoInRemote',\n    OpenWorkingFile = 'gitlens.openWorkingFile',\n    PullRepositories = 'gitlens.pullRepositories',\n    PushRepositories = 'gitlens.pushRepositories',\n    ResetSuppressedWarnings = 'gitlens.resetSuppressedWarnings',\n    ShowCommitInView = 'gitlens.showCommitInView',\n    SearchCommits = 'gitlens.showCommitSearch',\n    SearchCommitsInView = 'gitlens.views.search.searchCommits',\n    ShowCompareView = 'gitlens.showCompareView',\n    ShowFileHistoryView = 'gitlens.showFileHistoryView',\n    ShowFileHistoryInView = 'gitlens.showFileHistoryInView',\n    ShowLineHistoryView = 'gitlens.showLineHistoryView',\n    ShowLastQuickPick = 'gitlens.showLastQuickPick',\n    ShowQuickBranchHistory = 'gitlens.showQuickBranchHistory',\n    ShowQuickCommitDetails = 'gitlens.showQuickCommitDetails',\n    ShowQuickCommitFileDetails = 'gitlens.showQuickCommitFileDetails',\n    ShowQuickCurrentBranchHistory = 'gitlens.showQuickRepoHistory',\n    ShowQuickFileHistory = 'gitlens.showQuickFileHistory',\n    ShowQuickRepoStatus = 'gitlens.showQuickRepoStatus',\n    ShowQuickRevisionDetails = 'gitlens.showQuickRevisionDetails',\n    ShowQuickStashList = 'gitlens.showQuickStashList',\n    ShowRepositoriesView = 'gitlens.showRepositoriesView',\n    ShowSearchView = 'gitlens.showSearchView',\n    ShowHistoryPage = 'gitlens.showHistoryPage',\n    ShowSettingsPage = 'gitlens.showSettingsPage',\n    ShowSettingsPageAndJumpToCompareView = 'gitlens.showSettingsPage#compare-view',\n    ShowSettingsPageAndJumpToFileHistoryView = 'gitlens.showSettingsPage#file-history-view',\n    ShowSettingsPageAndJumpToLineHistoryView = 'gitlens.showSettingsPage#line-history-view',\n    ShowSettingsPageAndJumpToRepositoriesView = 'gitlens.showSettingsPage#repositories-view',\n    ShowSettingsPageAndJumpToSearchCommitsView = 'gitlens.showSettingsPage#search-commits-view',\n    ShowWelcomePage = 'gitlens.showWelcomePage',\n    StashApply = 'gitlens.stashApply',\n    StashDelete = 'gitlens.stashDelete',\n    StashSave = 'gitlens.stashSave',\n    StashSaveFiles = 'gitlens.stashSaveFiles',\n    SupportGitLens = 'gitlens.supportGitLens',\n    SwitchMode = 'gitlens.switchMode',\n    ToggleCodeLens = 'gitlens.toggleCodeLens',\n    ToggleFileBlame = 'gitlens.toggleFileBlame',\n    ToggleFileHeatmap = 'gitlens.toggleFileHeatmap',\n    ToggleFileRecentChanges = 'gitlens.toggleFileRecentChanges',\n    ToggleLineBlame = 'gitlens.toggleLineBlame',\n    ToggleReviewMode = 'gitlens.toggleReviewMode',\n    ToggleZenMode = 'gitlens.toggleZenMode',\n    ViewsOpenDirectoryDiff = 'gitlens.views.openDirectoryDiff',\n    ViewsOpenDirectoryDiffWithWorking = 'gitlens.views.openDirectoryDiffWithWorking'\n}\n\ninterface CommandConstructor {\n    new (): Command;\n}\n\nconst registrableCommands: CommandConstructor[] = [];\n\nexport function command(): ClassDecorator {\n    return (target: any) => {\n        registrableCommands.push(target);\n    };\n}\n\nexport function registerCommands(context: ExtensionContext): void {\n    for (const c of registrableCommands) {\n        context.subscriptions.push(new c());\n    }\n}\n\nexport function getCommandUri(uri?: Uri, editor?: TextEditor): Uri | undefined {\n    if (uri instanceof Uri) return uri;\n    if (editor == null) return undefined;\n\n    const document = editor.document;\n    if (document == null) return undefined;\n\n    return document.uri;\n}\n\nexport async function getRepoPathOrActiveOrPrompt(\n    uri: Uri | undefined,\n    editor: TextEditor | undefined,\n    placeholder: string,\n    goBackCommand?: CommandQuickPickItem\n) {\n    let repoPath = await Container.git.getRepoPathOrActive(uri, editor);\n    if (!repoPath) {\n        const pick = await RepositoriesQuickPick.show(placeholder, goBackCommand);\n        if (pick instanceof CommandQuickPickItem) {\n            await pick.execute();\n            return undefined;\n        }\n\n        if (pick === undefined) {\n            if (goBackCommand !== undefined) {\n                await goBackCommand.execute();\n            }\n            return undefined;\n        }\n\n        repoPath = pick.repoPath;\n    }\n    return repoPath;\n}\n\nexport async function getRepoPathOrPrompt(\n    uri: Uri | undefined,\n    placeholder: string,\n    goBackCommand?: CommandQuickPickItem\n) {\n    let repoPath = await Container.git.getRepoPath(uri);\n    if (!repoPath) {\n        const pick = await RepositoriesQuickPick.show(placeholder, goBackCommand);\n        if (pick instanceof CommandQuickPickItem) {\n            await pick.execute();\n            return undefined;\n        }\n\n        if (pick === undefined) {\n            if (goBackCommand !== undefined) {\n                await goBackCommand.execute();\n            }\n            return undefined;\n        }\n\n        repoPath = pick.repoPath;\n    }\n    return repoPath;\n}\n\nexport interface CommandContextParsingOptions {\n    editor: boolean;\n    uri: boolean;\n}\n\nexport interface CommandBaseContext {\n    command: string;\n    editor?: TextEditor;\n    uri?: Uri;\n}\n\nexport interface CommandScmGroupsContext extends CommandBaseContext {\n    type: 'scm-groups';\n    scmResourceGroups: SourceControlResourceGroup[];\n}\n\nexport interface CommandScmStatesContext extends CommandBaseContext {\n    type: 'scm-states';\n    scmResourceStates: SourceControlResourceState[];\n}\n\nexport interface CommandUnknownContext extends CommandBaseContext {\n    type: 'unknown';\n}\n\nexport interface CommandUriContext extends CommandBaseContext {\n    type: 'uri';\n}\n\n// export interface CommandViewContext extends CommandBaseContext {\n//     type: 'view';\n// }\n\nexport interface CommandViewItemContext extends CommandBaseContext {\n    type: 'viewItem';\n    node: ViewNode;\n}\n\nexport function isCommandViewContextWithBranch(\n    context: CommandContext\n): context is CommandViewItemContext & { node: ViewNode & { branch: GitBranch } } {\n    if (context.type !== 'viewItem') return false;\n\n    return (context.node as ViewNode & { branch: GitBranch }).branch instanceof GitBranch;\n}\n\nexport function isCommandViewContextWithCommit<T extends GitCommit>(\n    context: CommandContext\n): context is CommandViewItemContext & { node: ViewNode & { commit: T } } {\n    if (context.type !== 'viewItem') return false;\n\n    return (context.node as ViewNode & { commit: GitCommit }).commit instanceof GitCommit;\n}\n\nexport function isCommandViewContextWithContributor(\n    context: CommandContext\n): context is CommandViewItemContext & { node: ViewNode & { contributor: GitContributor } } {\n    if (context.type !== 'viewItem') return false;\n\n    return (context.node as ViewNode & { contributor: GitContributor }).contributor instanceof GitContributor;\n}\n\nexport function isCommandViewContextWithFile(\n    context: CommandContext\n): context is CommandViewItemContext & { node: ViewNode & { file: GitFile; repoPath: string } } {\n    if (context.type !== 'viewItem') return false;\n\n    const node = context.node as ViewNode & { file: GitFile; repoPath: string };\n    return node.file !== undefined && (node.file.repoPath !== undefined || node.repoPath !== undefined);\n}\n\nexport function isCommandViewContextWithFileCommit(\n    context: CommandContext\n): context is CommandViewItemContext & { node: ViewNode & { commit: GitCommit; file: GitFile; repoPath: string } } {\n    if (context.type !== 'viewItem') return false;\n\n    const node = context.node as ViewNode & { commit: GitCommit; file: GitFile; repoPath: string };\n    return (\n        node.file !== undefined &&\n        node.commit instanceof GitCommit &&\n        (node.file.repoPath !== undefined || node.repoPath !== undefined)\n    );\n}\n\nexport function isCommandViewContextWithFileRefs(\n    context: CommandContext\n): context is CommandViewItemContext & {\n    node: ViewNode & { file: GitFile; ref1: string; ref2: string; repoPath: string };\n} {\n    if (context.type !== 'viewItem') return false;\n\n    const node = context.node as ViewNode & { file: GitFile; ref1: string; ref2: string; repoPath: string };\n    return (\n        node.file !== undefined &&\n        node.ref1 !== undefined &&\n        node.ref2 !== undefined &&\n        (node.file.repoPath !== undefined || node.repoPath !== undefined)\n    );\n}\n\nexport function isCommandViewContextWithRef(\n    context: CommandContext\n): context is CommandViewItemContext & { node: ViewNode & { ref: string } } {\n    return context.type === 'viewItem' && context.node instanceof ViewRefNode;\n}\n\nexport function isCommandViewContextWithRemote(\n    context: CommandContext\n): context is CommandViewItemContext & { node: ViewNode & { remote: GitRemote } } {\n    if (context.type !== 'viewItem') return false;\n\n    return (context.node as ViewNode & { remote: GitRemote }).remote instanceof GitRemote;\n}\n\nexport function isCommandViewContextWithRepo(\n    context: CommandContext\n): context is CommandViewItemContext & { node: ViewNode & { repo: Repository } } {\n    if (context.type !== 'viewItem') return false;\n\n    return (context.node as ViewNode & { repo?: Repository }).repo instanceof Repository;\n}\n\nexport function isCommandViewContextWithRepoPath(\n    context: CommandContext\n): context is CommandViewItemContext & { node: ViewNode & { repoPath: string } } {\n    if (context.type !== 'viewItem') return false;\n\n    return typeof (context.node as ViewNode & { repoPath?: string }).repoPath === 'string';\n}\n\nexport type CommandContext =\n    | CommandScmGroupsContext\n    | CommandScmStatesContext\n    | CommandUnknownContext\n    | CommandUriContext\n    // | CommandViewContext\n    | CommandViewItemContext;\n\nfunction isScmResourceGroup(group: any): group is SourceControlResourceGroup {\n    if (group == null) return false;\n\n    return (\n        (group as SourceControlResourceGroup).id !== undefined &&\n        (group.handle !== undefined ||\n            (group as SourceControlResourceGroup).label !== undefined ||\n            (group as SourceControlResourceGroup).resourceStates !== undefined)\n    );\n}\n\nfunction isScmResourceState(state: any): state is SourceControlResourceState {\n    if (state == null) return false;\n\n    return (state as SourceControlResourceState).resourceUri != null;\n}\n\nfunction isTextEditor(editor: any): editor is TextEditor {\n    if (editor == null) return false;\n\n    return (\n        editor.id !== undefined &&\n        ((editor as TextEditor).edit !== undefined || (editor as TextEditor).document !== undefined)\n    );\n}\n\nexport abstract class Command implements Disposable {\n    static getMarkdownCommandArgsCore<T>(command: Commands, args: T): string {\n        return `command:${command}?${encodeURIComponent(JSON.stringify(args))}`;\n    }\n\n    protected readonly contextParsingOptions: CommandContextParsingOptions = { editor: false, uri: false };\n\n    private _disposable: Disposable;\n\n    constructor(command: Commands | Commands[]) {\n        if (typeof command === 'string') {\n            this._disposable = commands.registerCommand(\n                command,\n                (...args: any[]) => this._execute(command, ...args),\n                this\n            );\n\n            return;\n        }\n\n        const subscriptions = command.map(cmd =>\n            commands.registerCommand(cmd, (...args: any[]) => this._execute(cmd, ...args), this)\n        );\n        this._disposable = Disposable.from(...subscriptions);\n    }\n\n    dispose() {\n        this._disposable && this._disposable.dispose();\n    }\n\n    protected preExecute(context: CommandContext, ...args: any[]): Promise<any> {\n        return this.execute(...args);\n    }\n\n    abstract execute(...args: any[]): any;\n\n    protected _execute(command: string, ...args: any[]): any {\n        // Telemetry.trackEvent(command);\n\n        const [context, rest] = Command.parseContext(command, { ...this.contextParsingOptions }, ...args);\n        return this.preExecute(context, ...rest);\n    }\n\n    private static parseContext(\n        command: string,\n        options: CommandContextParsingOptions,\n        ...args: any[]\n    ): [CommandContext, any[]] {\n        let editor: TextEditor | undefined = undefined;\n\n        let firstArg = args[0];\n        if (options.editor && (firstArg == null || isTextEditor(firstArg))) {\n            editor = firstArg;\n            args = args.slice(1);\n            firstArg = args[0];\n        }\n\n        if (options.uri && (firstArg == null || firstArg instanceof Uri)) {\n            const [uri, ...rest] = args as [Uri, any];\n            if (uri !== undefined) {\n                return [{ command: command, type: 'uri', editor: editor, uri: uri }, rest];\n            }\n\n            args = args.slice(1);\n        }\n\n        if (firstArg instanceof ViewNode) {\n            const [node, ...rest] = args as [ViewNode, any];\n            return [{ command: command, type: 'viewItem', node: node, uri: node.uri }, rest];\n        }\n\n        if (isScmResourceState(firstArg)) {\n            const states = [];\n            let count = 0;\n            for (const arg of args) {\n                if (!isScmResourceState(arg)) break;\n\n                count++;\n                states.push(arg);\n            }\n\n            return [\n                { command: command, type: 'scm-states', scmResourceStates: states, uri: states[0].resourceUri },\n                args.slice(count)\n            ];\n        }\n\n        if (isScmResourceGroup(firstArg)) {\n            const groups = [];\n            let count = 0;\n            for (const arg of args) {\n                if (!isScmResourceGroup(arg)) break;\n\n                count++;\n                groups.push(arg);\n            }\n\n            return [{ command: command, type: 'scm-groups', scmResourceGroups: groups }, args.slice(count)];\n        }\n\n        return [{ command: command, type: 'unknown', editor: editor }, args];\n    }\n}\n\nexport abstract class ActiveEditorCommand extends Command {\n    protected readonly contextParsingOptions: CommandContextParsingOptions = { editor: true, uri: true };\n\n    constructor(command: Commands | Commands[]) {\n        super(command);\n    }\n\n    protected preExecute(context: CommandContext, ...args: any[]): Promise<any> {\n        return this.execute(context.editor, context.uri, ...args);\n    }\n\n    protected _execute(command: string, ...args: any[]): any {\n        return super._execute(command, window.activeTextEditor, ...args);\n    }\n\n    abstract execute(editor?: TextEditor, ...args: any[]): any;\n}\n\nlet lastCommand: { command: string; args: any[] } | undefined = undefined;\nexport function getLastCommand() {\n    return lastCommand;\n}\n\nexport abstract class ActiveEditorCachedCommand extends ActiveEditorCommand {\n    constructor(command: Commands | Commands[]) {\n        super(command);\n    }\n\n    protected _execute(command: string, ...args: any[]): any {\n        lastCommand = {\n            command: command,\n            args: args\n        };\n        return super._execute(command, ...args);\n    }\n\n    abstract execute(editor: TextEditor, ...args: any[]): any;\n}\n\nexport abstract class EditorCommand implements Disposable {\n    private _disposable: Disposable;\n\n    constructor(command: Commands | Commands[]) {\n        if (!Array.isArray(command)) {\n            command = [command];\n        }\n\n        const subscriptions = [];\n        for (const cmd of command) {\n            subscriptions.push(\n                commands.registerTextEditorCommand(\n                    cmd,\n                    (editor: TextEditor, edit: TextEditorEdit, ...args: any[]) =>\n                        this.executeCore(cmd, editor, edit, ...args),\n                    this\n                )\n            );\n        }\n        this._disposable = Disposable.from(...subscriptions);\n    }\n\n    dispose() {\n        this._disposable && this._disposable.dispose();\n    }\n\n    private executeCore(command: string, editor: TextEditor, edit: TextEditorEdit, ...args: any[]): any {\n        // Telemetry.trackEvent(command);\n        return this.execute(editor, edit, ...args);\n    }\n\n    abstract execute(editor: TextEditor, edit: TextEditorEdit, ...args: any[]): any;\n}\n\nexport async function openEditor(\n    uri: Uri,\n    options: TextDocumentShowOptions & { rethrow?: boolean } = {}\n): Promise<TextEditor | undefined> {\n    const { rethrow, ...opts } = options;\n    try {\n        if (uri instanceof GitUri) {\n            uri = uri.documentUri();\n        }\n\n        if (uri.scheme === DocumentSchemes.GitLens && ImageMimetypes[paths.extname(uri.fsPath)]) {\n            await commands.executeCommand(BuiltInCommands.Open, uri);\n\n            return undefined;\n        }\n\n        const document = await workspace.openTextDocument(uri);\n        return window.showTextDocument(document, {\n            preserveFocus: false,\n            preview: true,\n            viewColumn: ViewColumn.Active,\n            ...opts\n        });\n    }\n    catch (ex) {\n        const msg = ex.toString();\n        if (msg.includes('File seems to be binary and cannot be opened as text')) {\n            await commands.executeCommand(BuiltInCommands.Open, uri);\n\n            return undefined;\n        }\n\n        if (rethrow) throw ex;\n\n        Logger.error(ex, 'openEditor');\n        return undefined;\n    }\n}\n\nexport function openWorkspace(uri: Uri, name: string, options: { openInNewWindow?: boolean } = {}) {\n    if (options.openInNewWindow) {\n        commands.executeCommand(BuiltInCommands.OpenFolder, uri, true);\n\n        return true;\n    }\n\n    return workspace.updateWorkspaceFolders(\n        workspace.workspaceFolders !== undefined ? workspace.workspaceFolders.length : 0,\n        null,\n        { uri: uri, name: name }\n    );\n}\n","'use strict';\nimport { TreeItem, TreeItemCollapsibleState } from 'vscode';\nimport { SearchCommitsCommandArgs } from '../../commands';\nimport { GlyphChars } from '../../constants';\nimport { GitRepoSearchBy } from '../../git/gitService';\nimport { debug, Functions, gate, Iterables, log } from '../../system';\nimport { View } from '../viewBase';\nimport { CommandMessageNode, MessageNode } from './common';\nimport { ResourceType, unknownGitUri, ViewNode } from './viewNode';\n\nexport class SearchNode extends ViewNode {\n    private _children: (ViewNode | MessageNode)[] = [];\n\n    constructor(view: View) {\n        super(unknownGitUri, view);\n    }\n\n    getChildren(): ViewNode[] {\n        if (this._children.length === 0) {\n            const command = {\n                title: ' ',\n                command: 'gitlens.showCommitSearch'\n            };\n\n            const getCommandArgs = (searchBy: GitRepoSearchBy): SearchCommitsCommandArgs => {\n                return {\n                    searchBy: searchBy\n                };\n            };\n\n            return [\n                new CommandMessageNode(\n                    this.view,\n                    this,\n                    {\n                        ...command,\n                        arguments: [this, getCommandArgs(GitRepoSearchBy.Message)]\n                    },\n                    'Search commits by message',\n                    'message-pattern',\n                    'Click to search commits by message'\n                ),\n                new CommandMessageNode(\n                    this.view,\n                    this,\n                    {\n                        ...command,\n                        arguments: [this, getCommandArgs(GitRepoSearchBy.Author)]\n                    },\n                    `${GlyphChars.Space.repeat(4)} or, by author`,\n                    '@ author-pattern',\n                    'Click to search commits by author'\n                ),\n                new CommandMessageNode(\n                    this.view,\n                    this,\n                    {\n                        ...command,\n                        arguments: [this, getCommandArgs(GitRepoSearchBy.Sha)]\n                    },\n                    `${GlyphChars.Space.repeat(4)} or, by commit id`,\n                    '# sha',\n                    'Click to search commits by commit id'\n                ),\n                new CommandMessageNode(\n                    this.view,\n                    this,\n                    {\n                        ...command,\n                        arguments: [this, getCommandArgs(GitRepoSearchBy.Files)]\n                    },\n                    `${GlyphChars.Space.repeat(4)} or, by files`,\n                    ': file-path/glob',\n                    'Click to search commits by files'\n                ),\n                new CommandMessageNode(\n                    this.view,\n                    this,\n                    {\n                        ...command,\n                        arguments: [this, getCommandArgs(GitRepoSearchBy.Changes)]\n                    },\n                    `${GlyphChars.Space.repeat(4)} or, by changes`,\n                    '~ pattern',\n                    'Click to search commits by changes'\n                )\n            ];\n        }\n\n        return this._children;\n    }\n\n    getTreeItem(): TreeItem {\n        const item = new TreeItem('Search', TreeItemCollapsibleState.Expanded);\n        item.contextValue = ResourceType.Search;\n        return item;\n    }\n\n    addOrReplace(results: ViewNode, replace: boolean) {\n        if (this._children.includes(results)) return;\n\n        if (this._children.length !== 0 && replace) {\n            this._children.length = 0;\n            this._children.push(results);\n        }\n        else {\n            this._children.splice(0, 0, results);\n        }\n\n        this.view.triggerNodeChange();\n    }\n\n    @log()\n    clear() {\n        if (this._children.length === 0) return;\n\n        this._children.length = 0;\n        this.view.triggerNodeChange();\n    }\n\n    @log({\n        args: { 0: (n: ViewNode) => n.toString() }\n    })\n    dismiss(node: ViewNode) {\n        if (this._children.length === 0) return;\n\n        const index = this._children.findIndex(n => n === node);\n        if (index === -1) return;\n\n        this._children.splice(index, 1);\n        this.view.triggerNodeChange();\n    }\n\n    @gate()\n    @debug()\n    async refresh() {\n        if (this._children.length === 0) return;\n\n        const promises: Promise<any>[] = [\n            ...Iterables.filterMap(this._children, c => {\n                const result = c.refresh();\n                return Functions.isPromise<boolean | void>(result) ? result : undefined;\n            })\n        ];\n        await Promise.all(promises);\n    }\n}\n","'use strict';\nimport { TreeItem, TreeItemCollapsibleState } from 'vscode';\nimport { SearchCommitsCommandArgs } from '../../commands';\nimport { Commands } from '../../commands/common';\nimport { GitRepoSearchBy } from '../../git/gitService';\nimport { ViewWithFiles } from '../viewBase';\nimport { CommitsQueryResults, ResultsCommitsNode } from './resultsCommitsNode';\nimport { ResourceType, ViewNode } from './viewNode';\n\nexport class SearchResultsCommitsNode extends ResultsCommitsNode {\n    constructor(\n        view: ViewWithFiles,\n        parent: ViewNode,\n        repoPath: string,\n        public readonly search: string,\n        public readonly searchBy: GitRepoSearchBy,\n        label: string,\n        commitsQuery: (maxCount: number | undefined) => Promise<CommitsQueryResults>,\n        _querying = true\n    ) {\n        super(view, parent, repoPath, label, commitsQuery, _querying, true);\n    }\n\n    get type(): ResourceType {\n        return ResourceType.SearchResults;\n    }\n\n    async getTreeItem(): Promise<TreeItem> {\n        const item = await super.getTreeItem();\n\n        if (item.collapsibleState === TreeItemCollapsibleState.None) {\n            const args: SearchCommitsCommandArgs = {\n                search: this.search,\n                searchBy: this.searchBy,\n                prefillOnly: true\n            };\n            item.command = {\n                title: 'Search Commits',\n                command: Commands.SearchCommitsInView,\n                arguments: [args]\n            };\n        }\n        item.id = undefined;\n\n        return item;\n    }\n}\n","'use strict';\nimport {\n    commands,\n    ConfigurationChangeEvent,\n    ConfigurationTarget,\n    Disposable,\n    Event,\n    EventEmitter,\n    MessageItem,\n    TreeDataProvider,\n    TreeItem,\n    TreeItemCollapsibleState,\n    TreeView,\n    TreeViewExpansionEvent,\n    TreeViewVisibilityChangeEvent,\n    window\n} from 'vscode';\nimport { configuration } from '../configuration';\nimport { Container } from '../container';\nimport { Logger } from '../logger';\nimport { debug, Functions, log, Strings } from '../system';\nimport { CompareView } from './compareView';\nimport { FileHistoryView } from './fileHistoryView';\nimport { LineHistoryView } from './lineHistoryView';\nimport { ViewNode } from './nodes';\nimport { isPageable } from './nodes/viewNode';\nimport { RepositoriesView } from './repositoriesView';\nimport { SearchView } from './searchView';\nimport { RefreshNodeCommandArgs } from './viewCommands';\n\nexport type View = RepositoriesView | FileHistoryView | LineHistoryView | CompareView | SearchView;\nexport type ViewWithFiles = RepositoriesView | CompareView | SearchView;\n\nexport interface TreeViewNodeStateChangeEvent<T> extends TreeViewExpansionEvent<T> {\n    state: TreeItemCollapsibleState;\n}\n\nexport abstract class ViewBase<TRoot extends ViewNode<View>> implements TreeDataProvider<ViewNode>, Disposable {\n    protected _onDidChangeTreeData = new EventEmitter<ViewNode>();\n    get onDidChangeTreeData(): Event<ViewNode> {\n        return this._onDidChangeTreeData.event;\n    }\n\n    private _onDidChangeVisibility = new EventEmitter<TreeViewVisibilityChangeEvent>();\n    get onDidChangeVisibility(): Event<TreeViewVisibilityChangeEvent> {\n        return this._onDidChangeVisibility.event;\n    }\n\n    private _onDidChangeNodeState = new EventEmitter<TreeViewNodeStateChangeEvent<ViewNode>>();\n    get onDidChangeNodeState(): Event<TreeViewNodeStateChangeEvent<ViewNode>> {\n        return this._onDidChangeNodeState.event;\n    }\n\n    protected _disposable: Disposable | undefined;\n    protected _root: TRoot | undefined;\n    protected _tree: TreeView<ViewNode> | undefined;\n\n    constructor(public readonly id: string, public readonly name: string) {\n        this.registerCommands();\n\n        Container.context.subscriptions.push(configuration.onDidChange(this.onConfigurationChanged, this));\n        setImmediate(() => this.onConfigurationChanged(configuration.initializingChangeEvent));\n    }\n\n    dispose() {\n        this._disposable && this._disposable.dispose();\n    }\n\n    getQualifiedCommand(command: string) {\n        return `${this.id}.${command}`;\n    }\n\n    protected abstract get location(): string;\n\n    protected abstract getRoot(): TRoot;\n    protected abstract registerCommands(): void;\n    protected abstract onConfigurationChanged(e: ConfigurationChangeEvent): void;\n\n    protected initialize(container?: string, options: { showCollapseAll?: boolean } = {}) {\n        if (this._disposable) {\n            this._disposable.dispose();\n            this._onDidChangeTreeData = new EventEmitter<ViewNode>();\n        }\n\n        this._tree = window.createTreeView(`${this.id}${container ? `:${container}` : ''}`, {\n            ...options,\n            treeDataProvider: this\n        });\n        this._disposable = Disposable.from(\n            this._tree,\n            this._tree.onDidChangeVisibility(Functions.debounce(this.onVisibilityChanged, 250), this),\n            this._tree.onDidCollapseElement(this.onElementCollapsed, this),\n            this._tree.onDidExpandElement(this.onElementExpanded, this)\n        );\n    }\n\n    protected ensureRoot() {\n        if (this._root === undefined) {\n            this._root = this.getRoot();\n        }\n\n        return this._root;\n    }\n\n    getChildren(node?: ViewNode): ViewNode[] | Promise<ViewNode[]> {\n        if (node !== undefined) return node.getChildren();\n\n        const root = this.ensureRoot();\n        return root.getChildren();\n    }\n\n    getParent(node: ViewNode): ViewNode | undefined {\n        return node.getParent();\n    }\n\n    getTreeItem(node: ViewNode): TreeItem | Promise<TreeItem> {\n        return node.getTreeItem();\n    }\n\n    protected onElementCollapsed(e: TreeViewExpansionEvent<ViewNode>) {\n        this._onDidChangeNodeState.fire({ ...e, state: TreeItemCollapsibleState.Collapsed });\n    }\n\n    protected onElementExpanded(e: TreeViewExpansionEvent<ViewNode>) {\n        this._onDidChangeNodeState.fire({ ...e, state: TreeItemCollapsibleState.Expanded });\n    }\n\n    protected onVisibilityChanged(e: TreeViewVisibilityChangeEvent) {\n        this._onDidChangeVisibility.fire(e);\n    }\n\n    get selection(): ViewNode[] {\n        if (this._tree === undefined || this._root === undefined) return [];\n\n        return this._tree.selection;\n    }\n\n    get visible(): boolean {\n        return this._tree !== undefined ? this._tree.visible : false;\n    }\n\n    @debug()\n    async refresh(reset: boolean = false) {\n        if (this._root !== undefined) {\n            await this._root.refresh(reset);\n        }\n\n        this.triggerNodeChange();\n    }\n\n    @debug({\n        args: { 0: (n: ViewNode) => n.toString() }\n    })\n    async refreshNode(node: ViewNode, reset: boolean = false, args?: RefreshNodeCommandArgs) {\n        if (args !== undefined) {\n            if (isPageable(node)) {\n                if (args.maxCount === undefined || args.maxCount === 0) {\n                    node.maxCount = args.maxCount;\n                }\n                else {\n                    node.maxCount = (node.maxCount || args.maxCount) + args.maxCount;\n                }\n\n                if (args.previousNode !== undefined) {\n                    void (await this.reveal(args.previousNode, { select: true }));\n                }\n            }\n        }\n\n        const cancel = await node.refresh(reset);\n        if (cancel === true) return;\n\n        this.triggerNodeChange(node);\n    }\n\n    @log({\n        args: { 0: (n: ViewNode) => n.toString() }\n    })\n    async reveal(\n        node: ViewNode,\n        options?: {\n            select?: boolean;\n            focus?: boolean;\n            expand?: boolean | number;\n        }\n    ) {\n        if (this._tree === undefined) return;\n\n        try {\n            await this._tree.reveal(node, options);\n        }\n        catch (ex) {\n            Logger.error(ex);\n        }\n    }\n\n    @log()\n    async show() {\n        const location = this.location;\n\n        try {\n            return await commands.executeCommand(`${this.id}${location ? `:${location}` : ''}.focus`);\n        }\n        catch (ex) {\n            Logger.error(ex);\n\n            const setting = `${Strings.splitSingle(this.id, '.')[1]}.enabled`;\n            if (!configuration.get(setting)) {\n                const actions: MessageItem[] = [{ title: 'Enable' }, { title: 'Cancel', isCloseAffordance: true }];\n\n                const result = await window.showErrorMessage(\n                    `Unable to show the ${this.name} view since it's currently disabled. Would you like to enable it?`,\n                    ...actions\n                );\n\n                if (result === actions[0]) {\n                    await configuration.update(setting, true, ConfigurationTarget.Global);\n\n                    return commands.executeCommand(`${this.id}${location ? `:${location}` : ''}.focus`);\n                }\n            }\n\n            return undefined;\n        }\n    }\n\n    @debug({\n        args: { 0: (n: ViewNode) => (n != null ? n.toString() : '') }\n    })\n    triggerNodeChange(node?: ViewNode) {\n        // Since the root node won't actually refresh, force everything\n        this._onDidChangeTreeData.fire(node !== undefined && node !== this._root ? node : undefined);\n    }\n}\n","'use strict';\nimport { commands, ConfigurationChangeEvent } from 'vscode';\nimport { CompareViewConfig, configuration, ViewFilesLayout, ViewsConfig } from '../configuration';\nimport {\n    CommandContext,\n    NamedRef,\n    PinnedComparison,\n    PinnedComparisons,\n    setCommandContext,\n    WorkspaceState\n} from '../constants';\nimport { Container } from '../container';\nimport { CompareNode, CompareResultsNode, nodeSupportsConditionalDismissal, ViewNode } from './nodes';\nimport { ViewBase } from './viewBase';\n\nexport class CompareView extends ViewBase<CompareNode> {\n    constructor() {\n        super('gitlens.views.compare', 'Compare');\n\n        setCommandContext(CommandContext.ViewsCompareKeepResults, this.keepResults);\n    }\n\n    getRoot() {\n        return new CompareNode(this);\n    }\n\n    protected get location(): string {\n        return this.config.location;\n    }\n\n    protected registerCommands() {\n        void Container.viewCommands;\n        commands.registerCommand(this.getQualifiedCommand('clear'), () => this.clear(), this);\n        commands.registerCommand(this.getQualifiedCommand('refresh'), () => this.refresh(true), this);\n        commands.registerCommand(\n            this.getQualifiedCommand('setFilesLayoutToAuto'),\n            () => this.setFilesLayout(ViewFilesLayout.Auto),\n            this\n        );\n        commands.registerCommand(\n            this.getQualifiedCommand('setFilesLayoutToList'),\n            () => this.setFilesLayout(ViewFilesLayout.List),\n            this\n        );\n        commands.registerCommand(\n            this.getQualifiedCommand('setFilesLayoutToTree'),\n            () => this.setFilesLayout(ViewFilesLayout.Tree),\n            this\n        );\n        commands.registerCommand(this.getQualifiedCommand('setKeepResultsToOn'), () => this.setKeepResults(true), this);\n        commands.registerCommand(\n            this.getQualifiedCommand('setKeepResultsToOff'),\n            () => this.setKeepResults(false),\n            this\n        );\n\n        commands.registerCommand(this.getQualifiedCommand('pinComparison'), this.pinComparison, this);\n        commands.registerCommand(this.getQualifiedCommand('unpinComparison'), this.unpinComparison, this);\n        commands.registerCommand(this.getQualifiedCommand('swapComparison'), this.swapComparison, this);\n\n        commands.registerCommand(this.getQualifiedCommand('selectForCompare'), this.selectForCompare, this);\n        commands.registerCommand(this.getQualifiedCommand('compareWithSelected'), this.compareWithSelected, this);\n    }\n\n    protected onConfigurationChanged(e: ConfigurationChangeEvent) {\n        if (\n            !configuration.changed(e, configuration.name('views')('compare').value) &&\n            !configuration.changed(e, configuration.name('views').value) &&\n            !configuration.changed(e, configuration.name('defaultGravatarsStyle').value)\n        ) {\n            return;\n        }\n\n        if (configuration.changed(e, configuration.name('views')('compare')('location').value)) {\n            this.initialize(this.config.location, { showCollapseAll: true });\n        }\n\n        if (!configuration.initializing(e) && this._root !== undefined) {\n            void this.refresh(true);\n        }\n    }\n\n    get config(): ViewsConfig & CompareViewConfig {\n        return { ...Container.config.views, ...Container.config.views.compare };\n    }\n\n    get keepResults(): boolean {\n        return Container.context.workspaceState.get<boolean>(WorkspaceState.ViewsCompareKeepResults, false);\n    }\n\n    clear() {\n        if (this._root === undefined) return;\n\n        this._root.clear();\n    }\n\n    dismissNode(node: ViewNode) {\n        if (this._root === undefined) return;\n        if (nodeSupportsConditionalDismissal(node) && node.canDismiss() === false) return;\n\n        this._root.dismiss(node);\n    }\n\n    compare(repoPath: string, ref1: string | NamedRef, ref2: string | NamedRef) {\n        return this.addResults(\n            new CompareResultsNode(\n                this,\n                repoPath,\n                typeof ref1 === 'string' ? { ref: ref1 } : ref1,\n                typeof ref2 === 'string' ? { ref: ref2 } : ref2\n            )\n        );\n    }\n\n    compareWithSelected(repoPath?: string, ref?: string | NamedRef) {\n        const root = this.ensureRoot();\n        void root.compareWithSelected(repoPath, ref);\n    }\n\n    selectForCompare(repoPath?: string, ref?: string | NamedRef) {\n        const root = this.ensureRoot();\n        void root.selectForCompare(repoPath, ref);\n    }\n\n    getPinnedComparisons() {\n        const pinned = Container.context.workspaceState.get<PinnedComparisons>(WorkspaceState.PinnedComparisons);\n        if (pinned == null) return [];\n\n        return Object.values(pinned).map(p => new CompareResultsNode(this, p.path, p.ref1, p.ref2, true));\n    }\n\n    async updatePinnedComparison(id: string, pin?: PinnedComparison) {\n        let pinned = Container.context.workspaceState.get<PinnedComparisons>(WorkspaceState.PinnedComparisons);\n        if (pinned == null) {\n            pinned = Object.create(null);\n        }\n\n        if (pin !== undefined) {\n            pinned![id] = {\n                path: pin.path,\n                ref1: pin.ref1,\n                ref2: pin.ref2\n            };\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\n            const { [id]: _, ...rest } = pinned!;\n            pinned = rest;\n        }\n\n        await Container.context.workspaceState.update(WorkspaceState.PinnedComparisons, pinned);\n    }\n\n    private async addResults(results: ViewNode) {\n        if (!this.visible) {\n            void (await this.show());\n        }\n\n        const root = this.ensureRoot();\n        root.addOrReplace(results, !this.keepResults);\n\n        setImmediate(() => this.reveal(results, { select: true, expand: true }));\n    }\n\n    private setFilesLayout(layout: ViewFilesLayout) {\n        return configuration.updateEffective(configuration.name('views')('compare')('files')('layout').value, layout);\n    }\n\n    private setKeepResults(enabled: boolean) {\n        Container.context.workspaceState.update(WorkspaceState.ViewsCompareKeepResults, enabled);\n        setCommandContext(CommandContext.ViewsCompareKeepResults, enabled);\n    }\n\n    private pinComparison(node: ViewNode) {\n        if (!(node instanceof CompareResultsNode)) return undefined;\n\n        return node.pin();\n    }\n\n    private swapComparison(node: ViewNode) {\n        if (!(node instanceof CompareResultsNode)) return undefined;\n\n        return node.swap();\n    }\n\n    private unpinComparison(node: ViewNode) {\n        if (!(node instanceof CompareResultsNode)) return undefined;\n\n        return node.unpin();\n    }\n}\n","'use strict';\nimport { commands, ConfigurationChangeEvent } from 'vscode';\nimport { configuration, FileHistoryViewConfig, ViewsConfig } from '../configuration';\nimport { CommandContext, setCommandContext } from '../constants';\nimport { Container } from '../container';\nimport { GitUri } from '../git/gitUri';\nimport { FileHistoryTrackerNode } from './nodes';\nimport { ViewBase } from './viewBase';\n\nexport class FileHistoryView extends ViewBase<FileHistoryTrackerNode> {\n    constructor() {\n        super('gitlens.views.fileHistory', 'File History');\n    }\n\n    getRoot() {\n        return new FileHistoryTrackerNode(this);\n    }\n\n    protected get location(): string {\n        return this.config.location;\n    }\n\n    protected registerCommands() {\n        void Container.viewCommands;\n        commands.registerCommand(this.getQualifiedCommand('refresh'), () => this.refresh(true), this);\n        commands.registerCommand(this.getQualifiedCommand('changeBase'), () => this.changeBase(), this);\n        commands.registerCommand(\n            this.getQualifiedCommand('setEditorFollowingOn'),\n            () => this.setEditorFollowing(true),\n            this\n        );\n        commands.registerCommand(\n            this.getQualifiedCommand('setEditorFollowingOff'),\n            () => this.setEditorFollowing(false),\n            this\n        );\n        commands.registerCommand(\n            this.getQualifiedCommand('setRenameFollowingOn'),\n            () => this.setRenameFollowing(true),\n            this\n        );\n        commands.registerCommand(\n            this.getQualifiedCommand('setRenameFollowingOff'),\n            () => this.setRenameFollowing(false),\n            this\n        );\n    }\n\n    protected onConfigurationChanged(e: ConfigurationChangeEvent) {\n        if (\n            !configuration.changed(e, configuration.name('views')('fileHistory').value) &&\n            !configuration.changed(e, configuration.name('views').value) &&\n            !configuration.changed(e, configuration.name('defaultGravatarsStyle').value) &&\n            !configuration.changed(e, configuration.name('advanced')('fileHistoryFollowsRenames').value)\n        ) {\n            return;\n        }\n\n        if (configuration.changed(e, configuration.name('views')('fileHistory')('enabled').value)) {\n            setCommandContext(CommandContext.ViewsFileHistoryEditorFollowing, true);\n        }\n\n        if (configuration.changed(e, configuration.name('views')('fileHistory')('location').value)) {\n            this.initialize(this.config.location);\n        }\n\n        if (!configuration.initializing(e) && this._root !== undefined) {\n            void this.refresh(true);\n        }\n    }\n\n    get config(): ViewsConfig & FileHistoryViewConfig {\n        return { ...Container.config.views, ...Container.config.views.fileHistory };\n    }\n\n    async showHistoryForUri(uri: GitUri, baseRef?: string) {\n        const root = this.ensureRoot();\n\n        this.setEditorFollowing(false);\n        await root.showHistoryForUri(uri, baseRef);\n        return this.show();\n    }\n\n    private changeBase() {\n        if (this._root !== undefined) {\n            void this._root.changeBase();\n        }\n    }\n\n    private setEditorFollowing(enabled: boolean) {\n        setCommandContext(CommandContext.ViewsFileHistoryEditorFollowing, enabled);\n        if (this._root !== undefined) {\n            this._root.setEditorFollowing(enabled);\n        }\n    }\n\n    private setRenameFollowing(enabled: boolean) {\n        return configuration.updateEffective(\n            configuration.name('advanced')('fileHistoryFollowsRenames').value,\n            enabled\n        );\n    }\n}\n","'use strict';\nimport { commands, ConfigurationChangeEvent } from 'vscode';\nimport { configuration, LineHistoryViewConfig, ViewsConfig } from '../configuration';\nimport { CommandContext, setCommandContext } from '../constants';\nimport { Container } from '../container';\nimport { LineHistoryTrackerNode } from './nodes';\nimport { ViewBase } from './viewBase';\n\nexport class LineHistoryView extends ViewBase<LineHistoryTrackerNode> {\n    constructor() {\n        super('gitlens.views.lineHistory', 'Line History');\n    }\n\n    getRoot() {\n        return new LineHistoryTrackerNode(this);\n    }\n\n    protected get location(): string {\n        return this.config.location;\n    }\n\n    protected registerCommands() {\n        void Container.viewCommands;\n        commands.registerCommand(this.getQualifiedCommand('refresh'), () => this.refresh(true), this);\n        commands.registerCommand(this.getQualifiedCommand('changeBase'), () => this.changeBase(), this);\n        commands.registerCommand(\n            this.getQualifiedCommand('setEditorFollowingOn'),\n            () => this.setEditorFollowing(true),\n            this\n        );\n        commands.registerCommand(\n            this.getQualifiedCommand('setEditorFollowingOff'),\n            () => this.setEditorFollowing(false),\n            this\n        );\n        commands.registerCommand(\n            this.getQualifiedCommand('setRenameFollowingOn'),\n            () => this.setRenameFollowing(true),\n            this\n        );\n        commands.registerCommand(\n            this.getQualifiedCommand('setRenameFollowingOff'),\n            () => this.setRenameFollowing(false),\n            this\n        );\n    }\n\n    protected onConfigurationChanged(e: ConfigurationChangeEvent) {\n        if (\n            !configuration.changed(e, configuration.name('views')('lineHistory').value) &&\n            !configuration.changed(e, configuration.name('views').value) &&\n            !configuration.changed(e, configuration.name('defaultGravatarsStyle').value) &&\n            !configuration.changed(e, configuration.name('advanced')('fileHistoryFollowsRenames').value)\n        ) {\n            return;\n        }\n\n        if (configuration.changed(e, configuration.name('views')('lineHistory')('enabled').value)) {\n            setCommandContext(CommandContext.ViewsLineHistoryEditorFollowing, true);\n        }\n\n        if (configuration.changed(e, configuration.name('views')('lineHistory')('location').value)) {\n            this.initialize(this.config.location);\n        }\n\n        if (!configuration.initializing(e) && this._root !== undefined) {\n            void this.refresh(true);\n        }\n    }\n\n    get config(): ViewsConfig & LineHistoryViewConfig {\n        return { ...Container.config.views, ...Container.config.views.lineHistory };\n    }\n\n    private changeBase() {\n        if (this._root !== undefined) {\n            void this._root.changeBase();\n        }\n    }\n\n    private setEditorFollowing(enabled: boolean) {\n        setCommandContext(CommandContext.ViewsLineHistoryEditorFollowing, enabled);\n        if (this._root !== undefined) {\n            this._root.setEditorFollowing(enabled);\n        }\n    }\n\n    private setRenameFollowing(enabled: boolean) {\n        return configuration.updateEffective(\n            configuration.name('advanced')('fileHistoryFollowsRenames').value,\n            enabled\n        );\n    }\n}\n","'use strict';\nimport { commands, ConfigurationChangeEvent, Event, EventEmitter } from 'vscode';\nimport { configuration, RepositoriesViewConfig, ViewFilesLayout, ViewsConfig } from '../configuration';\nimport { CommandContext, setCommandContext, WorkspaceState } from '../constants';\nimport { Container } from '../container';\nimport { RepositoriesNode } from './nodes';\nimport { ViewBase } from './viewBase';\n\nexport class RepositoriesView extends ViewBase<RepositoriesNode> {\n    constructor() {\n        super('gitlens.views.repositories', 'Repositories');\n    }\n\n    private _onDidChangeAutoRefresh = new EventEmitter<void>();\n    get onDidChangeAutoRefresh(): Event<void> {\n        return this._onDidChangeAutoRefresh.event;\n    }\n\n    getRoot() {\n        return new RepositoriesNode(this);\n    }\n\n    protected get location(): string {\n        return this.config.location;\n    }\n\n    protected registerCommands() {\n        void Container.viewCommands;\n\n        commands.registerCommand(this.getQualifiedCommand('refresh'), () => this.refresh(true), this);\n        commands.registerCommand(\n            this.getQualifiedCommand('setFilesLayoutToAuto'),\n            () => this.setFilesLayout(ViewFilesLayout.Auto),\n            this\n        );\n        commands.registerCommand(\n            this.getQualifiedCommand('setFilesLayoutToList'),\n            () => this.setFilesLayout(ViewFilesLayout.List),\n            this\n        );\n        commands.registerCommand(\n            this.getQualifiedCommand('setFilesLayoutToTree'),\n            () => this.setFilesLayout(ViewFilesLayout.Tree),\n            this\n        );\n\n        commands.registerCommand(\n            this.getQualifiedCommand('setAutoRefreshToOn'),\n            () => this.setAutoRefresh(Container.config.views.repositories.autoRefresh, true),\n            this\n        );\n        commands.registerCommand(\n            this.getQualifiedCommand('setAutoRefreshToOff'),\n            () => this.setAutoRefresh(Container.config.views.repositories.autoRefresh, false),\n            this\n        );\n    }\n\n    protected onConfigurationChanged(e: ConfigurationChangeEvent) {\n        if (\n            !configuration.changed(e, configuration.name('views')('repositories').value) &&\n            !configuration.changed(e, configuration.name('views').value) &&\n            !configuration.changed(e, configuration.name('defaultGravatarsStyle').value)\n        ) {\n            return;\n        }\n\n        if (configuration.changed(e, configuration.name('views')('repositories')('autoRefresh').value)) {\n            void this.setAutoRefresh(Container.config.views.repositories.autoRefresh);\n        }\n\n        if (configuration.changed(e, configuration.name('views')('repositories')('location').value)) {\n            this.initialize(this.config.location, { showCollapseAll: true });\n        }\n\n        if (!configuration.initializing(e) && this._root !== undefined) {\n            void this.refresh(true);\n        }\n    }\n\n    get autoRefresh() {\n        return (\n            this.config.autoRefresh &&\n            Container.context.workspaceState.get<boolean>(WorkspaceState.ViewsRepositoriesAutoRefresh, true)\n        );\n    }\n\n    get config(): ViewsConfig & RepositoriesViewConfig {\n        return { ...Container.config.views, ...Container.config.views.repositories };\n    }\n\n    private async setAutoRefresh(enabled: boolean, workspaceEnabled?: boolean) {\n        if (enabled) {\n            if (workspaceEnabled === undefined) {\n                workspaceEnabled = Container.context.workspaceState.get<boolean>(\n                    WorkspaceState.ViewsRepositoriesAutoRefresh,\n                    true\n                );\n            }\n            else {\n                await Container.context.workspaceState.update(\n                    WorkspaceState.ViewsRepositoriesAutoRefresh,\n                    workspaceEnabled\n                );\n            }\n        }\n\n        setCommandContext(CommandContext.ViewsRepositoriesAutoRefresh, enabled && workspaceEnabled);\n\n        this._onDidChangeAutoRefresh.fire();\n    }\n\n    private setFilesLayout(layout: ViewFilesLayout) {\n        return configuration.updateEffective(\n            configuration.name('views')('repositories')('files')('layout').value,\n            layout\n        );\n    }\n}\n","'use strict';\nimport { commands, ConfigurationChangeEvent } from 'vscode';\nimport { configuration, SearchViewConfig, ViewFilesLayout, ViewsConfig } from '../configuration';\nimport { CommandContext, setCommandContext, WorkspaceState } from '../constants';\nimport { Container } from '../container';\nimport { GitLog, GitRepoSearchBy } from '../git/gitService';\nimport { Functions, Strings } from '../system';\nimport { nodeSupportsConditionalDismissal, SearchNode, SearchResultsCommitsNode, ViewNode } from './nodes';\nimport { ViewBase } from './viewBase';\n\ninterface SearchQueryResult {\n    label: string;\n    log: GitLog | undefined;\n}\n\nexport class SearchView extends ViewBase<SearchNode> {\n    constructor() {\n        super('gitlens.views.search', 'Search Commits');\n\n        setCommandContext(CommandContext.ViewsSearchKeepResults, this.keepResults);\n    }\n\n    getRoot() {\n        return new SearchNode(this);\n    }\n\n    protected get location(): string {\n        return this.config.location;\n    }\n\n    protected registerCommands() {\n        void Container.viewCommands;\n        commands.registerCommand(this.getQualifiedCommand('clear'), () => this.clear(), this);\n        commands.registerCommand(this.getQualifiedCommand('refresh'), () => this.refresh(true), this);\n        commands.registerCommand(\n            this.getQualifiedCommand('setFilesLayoutToAuto'),\n            () => this.setFilesLayout(ViewFilesLayout.Auto),\n            this\n        );\n        commands.registerCommand(\n            this.getQualifiedCommand('setFilesLayoutToList'),\n            () => this.setFilesLayout(ViewFilesLayout.List),\n            this\n        );\n        commands.registerCommand(\n            this.getQualifiedCommand('setFilesLayoutToTree'),\n            () => this.setFilesLayout(ViewFilesLayout.Tree),\n            this\n        );\n        commands.registerCommand(this.getQualifiedCommand('setKeepResultsToOn'), () => this.setKeepResults(true), this);\n        commands.registerCommand(\n            this.getQualifiedCommand('setKeepResultsToOff'),\n            () => this.setKeepResults(false),\n            this\n        );\n    }\n\n    protected onConfigurationChanged(e: ConfigurationChangeEvent) {\n        if (\n            !configuration.changed(e, configuration.name('views')('search').value) &&\n            !configuration.changed(e, configuration.name('views').value) &&\n            !configuration.changed(e, configuration.name('defaultGravatarsStyle').value)\n        ) {\n            return;\n        }\n\n        if (configuration.changed(e, configuration.name('views')('search')('location').value)) {\n            this.initialize(this.config.location, { showCollapseAll: true });\n        }\n\n        if (!configuration.initializing(e) && this._root !== undefined) {\n            void this.refresh(true);\n        }\n    }\n\n    get config(): ViewsConfig & SearchViewConfig {\n        return { ...Container.config.views, ...Container.config.views.search };\n    }\n\n    get keepResults(): boolean {\n        return Container.context.workspaceState.get<boolean>(WorkspaceState.ViewsSearchKeepResults, false);\n    }\n\n    clear() {\n        if (this._root === undefined) return;\n\n        this._root.clear();\n    }\n\n    dismissNode(node: ViewNode) {\n        if (this._root === undefined) return;\n        if (nodeSupportsConditionalDismissal(node) && node.canDismiss() === false) return;\n\n        this._root.dismiss(node);\n    }\n\n    async search(\n        repoPath: string,\n        search: string,\n        searchBy: GitRepoSearchBy,\n        options: {\n            maxCount?: number;\n            label:\n                | string\n                | {\n                      label: string;\n                      resultsType?: { singular: string; plural: string };\n                  };\n        }\n    ) {\n        await this.show();\n\n        const searchQueryFn = this.getSearchQueryFn(\n            Container.git.getLogForSearch(repoPath, search, searchBy, {\n                maxCount: options.maxCount\n            }),\n            options\n        );\n\n        return this.addResults(\n            new SearchResultsCommitsNode(\n                this,\n                this._root!,\n                repoPath,\n                search,\n                searchBy,\n                `results for ${typeof options.label === 'string' ? options.label : options.label.label}`,\n                searchQueryFn,\n                true\n            )\n        );\n    }\n\n    showSearchResults(\n        repoPath: string,\n        search: string,\n        searchBy: GitRepoSearchBy,\n        results: GitLog,\n        options: {\n            label:\n                | string\n                | {\n                      label: string;\n                      resultsType?: { singular: string; plural: string };\n                  };\n        }\n    ) {\n        const label = this.getSearchLabel(options.label, results);\n        const searchQueryFn = Functions.cachedOnce(this.getSearchQueryFn(results, options), {\n            label: label,\n            log: results\n        });\n\n        return this.addResults(\n            new SearchResultsCommitsNode(this, this._root!, repoPath, search, searchBy, label, searchQueryFn, false)\n        );\n    }\n\n    private addResults(results: ViewNode) {\n        const root = this.ensureRoot();\n        root.addOrReplace(results, !this.keepResults);\n\n        setImmediate(() => this.reveal(results, { select: true, expand: true }));\n    }\n\n    private getSearchLabel(\n        label:\n            | string\n            | {\n                  label: string;\n                  resultsType?: { singular: string; plural: string };\n              },\n        log: GitLog | undefined\n    ) {\n        if (typeof label === 'string') return label;\n\n        const count = log !== undefined ? log.count : 0;\n        const truncated = log !== undefined ? log.truncated : false;\n\n        const resultsType =\n            label.resultsType === undefined ? { singular: 'result', plural: 'results' } : label.resultsType;\n\n        return `${Strings.pluralize(resultsType.singular, count, {\n            number: truncated ? `${count}+` : undefined,\n            plural: resultsType.plural,\n            zero: 'No'\n        })} for ${label.label}`;\n    }\n\n    private getSearchQueryFn(\n        results: Promise<GitLog | undefined> | GitLog | undefined,\n        options: {\n            label:\n                | string\n                | {\n                      label: string;\n                      resultsType?: { singular: string; plural: string };\n                  };\n        }\n    ): (maxCount: number | undefined) => Promise<SearchQueryResult> {\n        return async (maxCount: number | undefined) => {\n            const res = await results;\n\n            let log;\n            if (res !== undefined) {\n                log = await (res.query === undefined\n                    ? (maxCount: number | undefined) => Promise.resolve(res)\n                    : res.query)(maxCount);\n            }\n\n            const label = this.getSearchLabel(options.label, log);\n            return {\n                label: label,\n                log: log\n            };\n        };\n    }\n\n    private setFilesLayout(layout: ViewFilesLayout) {\n        return configuration.updateEffective(configuration.name('views')('search')('files')('layout').value, layout);\n    }\n\n    private setKeepResults(enabled: boolean) {\n        Container.context.workspaceState.update(WorkspaceState.ViewsSearchKeepResults, enabled);\n        setCommandContext(CommandContext.ViewsSearchKeepResults, enabled);\n    }\n}\n","'use strict';\nimport * as paths from 'path';\nimport { commands, Disposable, env, Terminal, TextDocumentShowOptions, Uri, window } from 'vscode';\nimport {\n    Commands,\n    DiffWithCommandArgs,\n    DiffWithCommandArgsRevision,\n    DiffWithPreviousCommandArgs,\n    DiffWithWorkingCommandArgs,\n    openEditor,\n    OpenFileInRemoteCommandArgs,\n    OpenFileRevisionCommandArgs,\n    OpenWorkingFileCommandArgs,\n    openWorkspace\n} from '../commands';\nimport { BuiltInCommands, CommandContext, extensionTerminalName, setCommandContext } from '../constants';\nimport { Container } from '../container';\nimport { toGitLensFSUri } from '../git/fsProvider';\nimport { GitService, GitUri } from '../git/gitService';\nimport { Arrays } from '../system';\nimport {\n    BranchNode,\n    BranchTrackingStatusNode,\n    CommitFileNode,\n    CommitNode,\n    ContributorNode,\n    FileHistoryNode,\n    FolderNode,\n    LineHistoryNode,\n    RemoteNode,\n    RepositoryNode,\n    ResultsFileNode,\n    StashFileNode,\n    StashNode,\n    StatusFileNode,\n    TagNode,\n    ViewNode,\n    ViewRefFileNode,\n    ViewRefNode,\n    viewSupportsNodeDismissal\n} from './nodes';\nimport { Strings } from '../system/string';\nimport { PagerNode } from './nodes/common';\n\nexport interface RefreshNodeCommandArgs {\n    maxCount?: number;\n    previousNode?: ViewNode;\n}\n\ninterface CompareSelectedInfo {\n    ref: string;\n    repoPath: string | undefined;\n    uri?: Uri;\n}\n\nexport class ViewCommands implements Disposable {\n    private _disposable: Disposable | undefined;\n    private _terminal: Terminal | undefined;\n    private _terminalCwd: string | undefined;\n\n    constructor() {\n        commands.registerCommand(\n            'gitlens.views.refreshNode',\n            (node: ViewNode, reset?: boolean, args?: RefreshNodeCommandArgs) =>\n                node.view.refreshNode(node, reset === undefined ? true : reset, args),\n            this\n        );\n        commands.registerCommand(\n            'gitlens.views.expandNode',\n            (node: ViewNode) => node.view.reveal(node, { select: false, focus: false, expand: 3 }),\n            this\n        );\n        commands.registerCommand(\n            'gitlens.views.dismissNode',\n            (node: ViewNode) => viewSupportsNodeDismissal(node.view) && node.view.dismissNode(node),\n            this\n        );\n        commands.registerCommand('gitlens.views.showAllChildren', (node: PagerNode) => node.showAll(), this);\n\n        commands.registerCommand('gitlens.views.fetch', this.fetch, this);\n        commands.registerCommand('gitlens.views.pull', this.pull, this);\n        commands.registerCommand('gitlens.views.push', this.push, this);\n        commands.registerCommand('gitlens.views.pushWithForce', n => this.push(n, true), this);\n        commands.registerCommand('gitlens.views.closeRepository', this.closeRepository, this);\n\n        commands.registerCommand('gitlens.views.setAsDefault', this.setAsDefault, this);\n        commands.registerCommand('gitlens.views.unsetAsDefault', this.unsetAsDefault, this);\n\n        commands.registerCommand('gitlens.views.openInTerminal', this.openInTerminal, this);\n        commands.registerCommand('gitlens.views.star', this.star, this);\n        commands.registerCommand('gitlens.views.unstar', this.unstar, this);\n\n        commands.registerCommand('gitlens.views.exploreRepoRevision', this.exploreRepoRevision, this);\n\n        commands.registerCommand('gitlens.views.contributor.addCoauthoredBy', this.contributorAddCoauthoredBy, this);\n        commands.registerCommand('gitlens.views.contributor.copyToClipboard', this.contributorCopyToClipboard, this);\n\n        commands.registerCommand('gitlens.views.openChanges', this.openChanges, this);\n        commands.registerCommand('gitlens.views.openChangesWithWorking', this.openChangesWithWorking, this);\n        commands.registerCommand('gitlens.views.openFile', this.openFile, this);\n        commands.registerCommand('gitlens.views.openFileRevision', this.openFileRevision, this);\n        commands.registerCommand('gitlens.views.openFileRevisionInRemote', this.openFileRevisionInRemote, this);\n        commands.registerCommand('gitlens.views.openChangedFiles', this.openChangedFiles, this);\n        commands.registerCommand('gitlens.views.openChangedFileChanges', this.openChangedFileChanges, this);\n        commands.registerCommand(\n            'gitlens.views.openChangedFileChangesWithWorking',\n            this.openChangedFileChangesWithWorking,\n            this\n        );\n        commands.registerCommand('gitlens.views.openChangedFileRevisions', this.openChangedFileRevisions, this);\n        commands.registerCommand('gitlens.views.applyChanges', this.applyChanges, this);\n        commands.registerCommand('gitlens.views.checkout', this.checkout, this);\n\n        commands.registerCommand('gitlens.views.stageDirectory', this.stageDirectory, this);\n        commands.registerCommand('gitlens.views.stageFile', this.stageFile, this);\n        commands.registerCommand('gitlens.views.unstageDirectory', this.unstageDirectory, this);\n        commands.registerCommand('gitlens.views.unstageFile', this.unstageFile, this);\n\n        commands.registerCommand('gitlens.views.compareAncestryWithWorking', this.compareAncestryWithWorking, this);\n        commands.registerCommand('gitlens.views.compareWithHead', this.compareWithHead, this);\n        commands.registerCommand('gitlens.views.compareWithRemote', this.compareWithRemote, this);\n        commands.registerCommand('gitlens.views.compareWithSelected', this.compareWithSelected, this);\n        commands.registerCommand('gitlens.views.selectForCompare', this.selectForCompare, this);\n        commands.registerCommand('gitlens.views.compareFileWithSelected', this.compareFileWithSelected, this);\n        commands.registerCommand('gitlens.views.selectFileForCompare', this.selectFileForCompare, this);\n        commands.registerCommand('gitlens.views.compareWithWorking', this.compareWithWorking, this);\n\n        commands.registerCommand('gitlens.views.terminalCheckoutBranch', this.terminalCheckoutBranch, this);\n        commands.registerCommand('gitlens.views.terminalCreateBranch', this.terminalCreateBranch, this);\n        commands.registerCommand('gitlens.views.terminalDeleteBranch', this.terminalDeleteBranch, this);\n        commands.registerCommand('gitlens.views.terminalMergeBranch', this.terminalMergeBranch, this);\n        commands.registerCommand('gitlens.views.terminalRebaseBranch', this.terminalRebaseBranch, this);\n        commands.registerCommand('gitlens.views.terminalRebaseBranchToRemote', this.terminalRebaseBranchToRemote, this);\n        commands.registerCommand(\n            'gitlens.views.terminalSquashBranchIntoCommit',\n            this.terminalSquashBranchIntoCommit,\n            this\n        );\n        commands.registerCommand('gitlens.views.terminalCheckoutCommit', this.terminalCheckoutCommit, this);\n        commands.registerCommand('gitlens.views.terminalCherryPickCommit', this.terminalCherryPickCommit, this);\n        commands.registerCommand('gitlens.views.terminalPushCommit', this.terminalPushCommit, this);\n        commands.registerCommand('gitlens.views.terminalRebaseCommit', this.terminalRebaseCommit, this);\n        commands.registerCommand('gitlens.views.terminalResetCommit', this.terminalResetCommit, this);\n        commands.registerCommand('gitlens.views.terminalRevertCommit', this.terminalRevertCommit, this);\n        commands.registerCommand('gitlens.views.terminalRemoveRemote', this.terminalRemoveRemote, this);\n        commands.registerCommand('gitlens.views.terminalCreateTag', this.terminalCreateTag, this);\n        commands.registerCommand('gitlens.views.terminalDeleteTag', this.terminalDeleteTag, this);\n    }\n\n    dispose() {\n        this._disposable && this._disposable.dispose();\n    }\n\n    private async contributorAddCoauthoredBy(node: ContributorNode) {\n        if (!(node instanceof ContributorNode)) return;\n\n        const gitApi = await GitService.getBuiltInGitApi();\n        if (gitApi === undefined) return;\n\n        const repo = gitApi.repositories.find(\n            r => Strings.normalizePath(r.rootUri.fsPath) === node.contributor.repoPath\n        );\n        if (repo === undefined) return;\n\n        const coauthor = `${node.contributor.name}${node.contributor.email ? ` <${node.contributor.email}>` : ''}`;\n\n        const message = repo.inputBox.value;\n        if (message.includes(coauthor)) return;\n\n        let newlines;\n        if (message.includes('Co-authored-by: ')) {\n            newlines = '\\n';\n        }\n        else if (message.length !== 0 && message[message.length - 1] === '\\n') {\n            newlines = '\\n\\n';\n        }\n        else {\n            newlines = '\\n\\n\\n';\n        }\n\n        repo.inputBox.value = `${message}${newlines}Co-authored-by: ${coauthor}`;\n    }\n\n    private async contributorCopyToClipboard(node: ContributorNode) {\n        if (!(node instanceof ContributorNode)) return;\n\n        await env.clipboard.writeText(\n            `${node.contributor.name}${node.contributor.email ? ` <${node.contributor.email}>` : ''}`\n        );\n    }\n\n    private fetch(node: RemoteNode | RepositoryNode) {\n        if (node instanceof RemoteNode) return node.fetch();\n        if (node instanceof RepositoryNode) return node.fetch();\n\n        return undefined;\n    }\n\n    private pull(node: RepositoryNode | BranchTrackingStatusNode) {\n        if (node instanceof BranchTrackingStatusNode) {\n            node = node.getParent() as RepositoryNode;\n        }\n        if (!(node instanceof RepositoryNode)) return undefined;\n\n        return node.pull();\n    }\n\n    private push(node: RepositoryNode | BranchTrackingStatusNode, force?: boolean) {\n        if (node instanceof BranchTrackingStatusNode) {\n            node = node.getParent() as RepositoryNode;\n        }\n        if (!(node instanceof RepositoryNode)) return undefined;\n\n        return node.push({ force: force });\n    }\n\n    private async applyChanges(node: ViewRefFileNode) {\n        if (!(node instanceof ViewRefFileNode)) return;\n\n        void (await this.openFile(node));\n\n        if (node instanceof ResultsFileNode) {\n            void (await Container.git.applyChangesToWorkingFile(node.uri, node.ref1, node.ref2));\n\n            return;\n        }\n\n        if (node.uri.sha !== undefined && node.uri.sha !== 'HEAD') {\n            void (await Container.git.applyChangesToWorkingFile(node.uri));\n        }\n    }\n\n    private checkout(node: ViewRefNode | ViewRefFileNode) {\n        if (!(node instanceof ViewRefNode)) return undefined;\n\n        if (node instanceof ViewRefFileNode) {\n            return Container.git.checkout(node.repoPath, node.ref, node.fileName);\n        }\n\n        return Container.git.checkout(node.repoPath, node.ref);\n    }\n\n    private closeRepository(node: RepositoryNode) {\n        if (!(node instanceof RepositoryNode)) return;\n\n        node.repo.closed = true;\n    }\n\n    private compareWithHead(node: ViewRefNode) {\n        if (!(node instanceof ViewRefNode)) return undefined;\n\n        return Container.compareView.compare(node.repoPath, node.ref, 'HEAD');\n    }\n\n    private compareWithRemote(node: BranchNode) {\n        if (!(node instanceof BranchNode)) return undefined;\n        if (!node.branch.tracking) return undefined;\n\n        return Container.compareView.compare(node.repoPath, node.branch.tracking, node.ref);\n    }\n\n    private compareWithWorking(node: ViewRefNode) {\n        if (!(node instanceof ViewRefNode)) return undefined;\n\n        return Container.compareView.compare(node.repoPath, node.ref, '');\n    }\n\n    private async compareAncestryWithWorking(node: BranchNode) {\n        if (!(node instanceof BranchNode)) return undefined;\n\n        const branch = await Container.git.getBranch(node.repoPath);\n        if (branch === undefined) return undefined;\n\n        const commonAncestor = await Container.git.getMergeBase(node.repoPath, branch.ref, node.ref);\n        if (commonAncestor === undefined) return undefined;\n\n        return Container.compareView.compare(\n            node.repoPath,\n            { ref: commonAncestor, label: `ancestry with ${node.ref} (${GitService.shortenSha(commonAncestor)})` },\n            ''\n        );\n    }\n\n    private compareWithSelected(node: ViewRefNode) {\n        if (!(node instanceof ViewRefNode)) return;\n\n        Container.compareView.compareWithSelected(node.repoPath, node.ref);\n    }\n\n    private selectForCompare(node: ViewRefNode) {\n        if (!(node instanceof ViewRefNode)) return;\n\n        Container.compareView.selectForCompare(node.repoPath, node.ref);\n    }\n\n    private compareFileWithSelected(node: ViewRefFileNode) {\n        if (this._selectedFile === undefined || !(node instanceof ViewRefFileNode) || node.ref === undefined) {\n            return undefined;\n        }\n\n        if (this._selectedFile.repoPath !== node.repoPath) {\n            this.selectFileForCompare(node);\n            return undefined;\n        }\n\n        const selected = this._selectedFile;\n\n        this._selectedFile = undefined;\n        setCommandContext(CommandContext.ViewsCanCompareFile, false);\n\n        const diffArgs: DiffWithCommandArgs = {\n            repoPath: selected.repoPath,\n            lhs: {\n                sha: selected.ref,\n                uri: selected.uri!\n            },\n            rhs: {\n                sha: node.ref,\n                uri: node.uri\n            }\n        };\n        return commands.executeCommand(Commands.DiffWith, diffArgs);\n    }\n\n    private _selectedFile: CompareSelectedInfo | undefined;\n\n    private selectFileForCompare(node: ViewRefFileNode) {\n        if (!(node instanceof ViewRefFileNode) || node.ref === undefined) return;\n\n        this._selectedFile = {\n            ref: node.ref,\n            repoPath: node.repoPath,\n            uri: node.uri\n        };\n        setCommandContext(CommandContext.ViewsCanCompareFile, true);\n    }\n\n    private exploreRepoRevision(node: ViewRefNode, options: { openInNewWindow?: boolean } = {}) {\n        if (!(node instanceof ViewRefNode)) return;\n\n        const uri = toGitLensFSUri(node.ref, node.repoPath);\n        const gitUri = GitUri.fromRevisionUri(uri);\n\n        openWorkspace(uri, `${paths.basename(gitUri.repoPath!)} @ ${gitUri.shortSha}`, options);\n\n        void commands.executeCommand(BuiltInCommands.FocusFilesExplorer);\n    }\n\n    private openChanges(node: ViewRefFileNode | StatusFileNode) {\n        if (!(node instanceof ViewRefFileNode) && !(node instanceof StatusFileNode)) return undefined;\n\n        const command = node.getCommand();\n        if (command === undefined || command.arguments === undefined) return undefined;\n\n        const [uri, args] = command.arguments as [Uri, DiffWithPreviousCommandArgs];\n        args.showOptions!.preview = false;\n        return commands.executeCommand(command.command, uri, args);\n    }\n\n    private async openChangesWithWorking(node: ViewRefFileNode | StatusFileNode) {\n        if (!(node instanceof ViewRefFileNode) && !(node instanceof StatusFileNode)) return undefined;\n\n        const args: DiffWithWorkingCommandArgs = {\n            showOptions: {\n                preserveFocus: true,\n                preview: false\n            }\n        };\n\n        if (node instanceof ResultsFileNode) {\n            args.commit = await Container.git.getCommitForFile(node.repoPath, node.uri.fsPath, {\n                ref: node.uri.sha,\n                firstIfNotFound: true,\n                reverse: true\n            });\n        }\n\n        return commands.executeCommand(Commands.DiffWithWorking, node.uri, args);\n    }\n\n    private openFile(node: ViewRefFileNode | StatusFileNode | FileHistoryNode | LineHistoryNode) {\n        if (\n            !(node instanceof ViewRefFileNode) &&\n            !(node instanceof StatusFileNode) &&\n            !(node instanceof FileHistoryNode) &&\n            !(node instanceof LineHistoryNode)\n        ) {\n            return undefined;\n        }\n\n        const args: OpenWorkingFileCommandArgs = {\n            uri: node.uri,\n            showOptions: {\n                preserveFocus: true,\n                preview: false\n            }\n        };\n        return commands.executeCommand(Commands.OpenWorkingFile, undefined, args);\n    }\n\n    private openFileRevision(\n        node: CommitFileNode | ResultsFileNode | StashFileNode | StatusFileNode,\n        options: OpenFileRevisionCommandArgs = { showOptions: { preserveFocus: true, preview: false } }\n    ) {\n        if (\n            !(node instanceof CommitFileNode) &&\n            !(node instanceof StashFileNode) &&\n            !(node instanceof ResultsFileNode) &&\n            !(node instanceof StatusFileNode)\n        ) {\n            return undefined;\n        }\n\n        let uri = options.uri;\n        if (uri == null) {\n            if (node instanceof ResultsFileNode) {\n                uri = GitUri.toRevisionUri(node.uri);\n            }\n            else {\n                uri =\n                    node.commit.status === 'D'\n                        ? GitUri.toRevisionUri(\n                              node.commit.previousSha!,\n                              node.commit.previousUri.fsPath,\n                              node.commit.repoPath\n                          )\n                        : GitUri.toRevisionUri(node.uri);\n            }\n        }\n\n        return openEditor(uri, options.showOptions || { preserveFocus: true, preview: false });\n    }\n\n    private openFileRevisionInRemote(node: CommitFileNode) {\n        if (!(node instanceof CommitFileNode) || node instanceof StashFileNode) return undefined;\n\n        const args: OpenFileInRemoteCommandArgs = {\n            range: false\n        };\n        return commands.executeCommand(\n            Commands.OpenFileInRemote,\n            node.commit.toGitUri(node.commit.status === 'D'),\n            args\n        );\n    }\n\n    private async openChangedFileChanges(\n        node: CommitNode | StashNode,\n        options: TextDocumentShowOptions = { preserveFocus: false, preview: false }\n    ) {\n        if (!(node instanceof CommitNode) && !(node instanceof StashNode)) return;\n\n        const repoPath = node.commit.repoPath;\n        const uris = node.commit.files.map(s => GitUri.fromFile(s, repoPath));\n\n        for (const uri of uris) {\n            await this.openDiffWith(\n                repoPath,\n                {\n                    uri: uri,\n                    sha:\n                        node.commit.previousSha !== undefined ? node.commit.previousSha : GitService.deletedOrMissingSha\n                },\n                { uri: uri, sha: node.commit.sha },\n                options\n            );\n        }\n    }\n\n    private async openChangedFileChangesWithWorking(\n        node: CommitNode | StashNode,\n        options: TextDocumentShowOptions = { preserveFocus: false, preview: false }\n    ) {\n        if (!(node instanceof CommitNode) && !(node instanceof StashNode)) return;\n\n        const repoPath = node.commit.repoPath;\n        const uris = Arrays.filterMap(node.commit.files, f =>\n            f.status !== 'D' ? GitUri.fromFile(f, repoPath) : undefined\n        );\n\n        for (const uri of uris) {\n            const workingUri = await Container.git.getWorkingUri(repoPath, uri);\n            await this.openDiffWith(\n                repoPath,\n                { uri: uri, sha: node.commit.sha },\n                { uri: workingUri || uri, sha: '' },\n                options\n            );\n        }\n    }\n\n    private async openChangedFiles(\n        node: CommitNode | StashNode,\n        options: TextDocumentShowOptions = { preserveFocus: false, preview: false }\n    ) {\n        if (!(node instanceof CommitNode) && !(node instanceof StashNode)) return;\n\n        const repoPath = node.commit.repoPath;\n        const uris = Arrays.filterMap(node.commit.files, f => GitUri.fromFile(f, repoPath, node.commit.sha));\n\n        for (const uri of uris) {\n            const args: OpenWorkingFileCommandArgs = {\n                uri: uri,\n                showOptions: options\n            };\n            await commands.executeCommand(Commands.OpenWorkingFile, undefined, args);\n        }\n    }\n\n    private async openChangedFileRevisions(\n        node: CommitNode | StashNode,\n        options: TextDocumentShowOptions = { preserveFocus: false, preview: false }\n    ) {\n        if (!(node instanceof CommitNode) && !(node instanceof StashNode)) return;\n\n        const uris = Arrays.filterMap(node.commit.files, f =>\n            GitUri.toRevisionUri(\n                f.status === 'D' ? node.commit.previousFileSha : node.commit.sha,\n                f,\n                node.commit.repoPath\n            )\n        );\n        for (const uri of uris) {\n            await openEditor(uri, options);\n        }\n    }\n\n    private openDiffWith(\n        repoPath: string,\n        lhs: DiffWithCommandArgsRevision,\n        rhs: DiffWithCommandArgsRevision,\n        options: TextDocumentShowOptions = { preserveFocus: false, preview: false }\n    ) {\n        const diffArgs: DiffWithCommandArgs = {\n            repoPath: repoPath,\n            lhs: lhs,\n            rhs: rhs,\n            showOptions: options\n        };\n        return commands.executeCommand(Commands.DiffWith, diffArgs);\n    }\n\n    private openInTerminal(node: RepositoryNode) {\n        if (!(node instanceof RepositoryNode)) return undefined;\n\n        return commands.executeCommand(BuiltInCommands.OpenInTerminal, Uri.file(node.repo.path));\n    }\n\n    private setAsDefault(node: RemoteNode) {\n        if (node instanceof RemoteNode) return node.setAsDefault();\n        return undefined;\n    }\n\n    private unsetAsDefault(node: RemoteNode) {\n        if (node instanceof RemoteNode) return node.setAsDefault(false);\n        return undefined;\n    }\n\n    private async stageDirectory(node: FolderNode) {\n        if (!(node instanceof FolderNode) || !node.relativePath) return;\n\n        void (await Container.git.stageDirectory(node.repoPath, node.relativePath));\n        void node.triggerChange();\n    }\n\n    private async stageFile(node: CommitFileNode | StatusFileNode) {\n        if (!(node instanceof CommitFileNode) && !(node instanceof StatusFileNode)) return;\n\n        void (await Container.git.stageFile(node.repoPath, node.file.fileName));\n        void node.triggerChange();\n    }\n\n    private async unstageDirectory(node: FolderNode) {\n        if (!(node instanceof FolderNode) || !node.relativePath) return;\n\n        void (await Container.git.unStageDirectory(node.repoPath, node.relativePath));\n        void node.triggerChange();\n    }\n\n    private async unstageFile(node: CommitFileNode | StatusFileNode) {\n        if (!(node instanceof CommitFileNode) && !(node instanceof StatusFileNode)) return;\n\n        void (await Container.git.unStageFile(node.repoPath, node.file.fileName));\n        void node.triggerChange();\n    }\n\n    private star(node: BranchNode | RepositoryNode) {\n        if (node instanceof BranchNode || node instanceof RepositoryNode) return node.star();\n        return undefined;\n    }\n\n    private unstar(node: BranchNode | RepositoryNode) {\n        if (node instanceof BranchNode || node instanceof RepositoryNode) return node.unstar();\n        return undefined;\n    }\n\n    terminalCheckoutBranch(node: BranchNode) {\n        if (!(node instanceof BranchNode)) return;\n\n        this.sendTerminalCommand('checkout', `${node.ref}`, node.repoPath);\n    }\n\n    async terminalCreateBranch(node: ViewRefNode) {\n        if (!(node instanceof ViewRefNode)) return;\n\n        let remoteBranch = false;\n        let value = undefined;\n        if (node instanceof BranchNode && node.branch.remote) {\n            remoteBranch = true;\n            value = node.branch.getName();\n        }\n\n        const name = await window.showInputBox({\n            prompt: \"Please provide a branch name (Press 'Enter' to confirm or 'Escape' to cancel)\",\n            placeHolder: 'Branch name',\n            value: value\n        });\n        if (name === undefined || name.length === 0) return;\n\n        this.sendTerminalCommand('branch', `${remoteBranch ? '-t ' : ''}${name} ${node.ref}`, node.repoPath);\n    }\n\n    terminalDeleteBranch(node: BranchNode) {\n        if (!(node instanceof BranchNode)) return;\n\n        if (node.branch.remote) {\n            this.sendTerminalCommand('push', `${node.branch.getRemote()} :${node.branch.getName()}`, node.repoPath);\n        }\n        else {\n            this.sendTerminalCommand('branch', `-d ${node.ref}`, node.repoPath);\n        }\n    }\n\n    terminalMergeBranch(node: BranchNode) {\n        if (!(node instanceof BranchNode)) return;\n\n        this.sendTerminalCommand('merge', `${node.ref}`, node.repoPath);\n    }\n\n    terminalRebaseBranch(node: BranchNode) {\n        if (!(node instanceof BranchNode)) return;\n\n        this.sendTerminalCommand('rebase', `-i ${node.ref}`, node.repoPath);\n    }\n\n    terminalRebaseBranchToRemote(node: BranchNode | BranchTrackingStatusNode) {\n        if (node instanceof BranchNode) {\n            if (!node.branch.current || !node.branch.tracking) return;\n\n            this.sendTerminalCommand('rebase', `-i ${node.branch.tracking}`, node.repoPath);\n        }\n        else if (node instanceof BranchTrackingStatusNode) {\n            this.sendTerminalCommand('rebase', `-i ${node.status.upstream}`, node.status.repoPath);\n        }\n    }\n\n    terminalSquashBranchIntoCommit(node: BranchNode) {\n        if (!(node instanceof BranchNode)) return;\n\n        this.sendTerminalCommand('merge', `--squash ${node.ref}`, node.repoPath);\n    }\n\n    terminalCheckoutCommit(node: CommitNode) {\n        if (!(node instanceof CommitNode)) return;\n\n        this.sendTerminalCommand('checkout', `${node.ref}`, node.repoPath);\n    }\n\n    terminalCherryPickCommit(node: CommitNode) {\n        if (!(node instanceof CommitNode)) return;\n\n        this.sendTerminalCommand('cherry-pick', `-e ${node.ref}`, node.repoPath);\n    }\n\n    async terminalPushCommit(node: CommitNode) {\n        if (!(node instanceof CommitNode)) return;\n\n        const branch = node.branch || (await Container.git.getBranch(node.repoPath));\n        if (branch === undefined) return;\n\n        this.sendTerminalCommand('push', `${branch.getRemote()} ${node.ref}:${branch.getName()}`, node.repoPath);\n    }\n\n    terminalRebaseCommit(node: CommitNode) {\n        if (!(node instanceof CommitNode)) return;\n\n        this.sendTerminalCommand('rebase', `-i ${node.ref}^`, node.repoPath);\n    }\n\n    terminalResetCommit(node: CommitNode) {\n        if (!(node instanceof CommitNode)) return;\n\n        this.sendTerminalCommand('reset', `--soft ${node.ref}`, node.repoPath);\n    }\n\n    terminalRevertCommit(node: CommitNode) {\n        if (!(node instanceof CommitNode)) return;\n\n        this.sendTerminalCommand('revert', `-e ${node.ref}`, node.repoPath);\n    }\n\n    terminalRemoveRemote(node: RemoteNode) {\n        if (!(node instanceof RemoteNode)) return;\n\n        this.sendTerminalCommand('remote', `remove ${node.remote.name}`, node.remote.repoPath);\n    }\n\n    async terminalCreateTag(node: ViewRefNode) {\n        if (!(node instanceof ViewRefNode)) return;\n\n        const name = await window.showInputBox({\n            prompt: \"Please provide a tag name (Press 'Enter' to confirm or 'Escape' to cancel)\",\n            placeHolder: 'Tag name'\n        });\n        if (name === undefined || name.length === 0) return;\n\n        const message = await window.showInputBox({\n            prompt:\n                \"Please provide an optional message to annotate the tag (Press 'Enter' to confirm or 'Escape' to cancel)\",\n            placeHolder: 'Tag message'\n        });\n        if (message === undefined) return;\n\n        const args = `${message.length !== 0 ? `-a -m \"${message}\" ` : ''}${name} ${node.ref}`;\n        this.sendTerminalCommand('tag', args, node.repoPath);\n    }\n\n    terminalDeleteTag(node: TagNode) {\n        if (!(node instanceof TagNode)) return;\n\n        this.sendTerminalCommand('tag', `-d ${node.ref}`, node.repoPath);\n    }\n\n    private ensureTerminal(cwd: string): Terminal {\n        if (this._terminal === undefined) {\n            this._terminal = window.createTerminal(extensionTerminalName);\n            this._disposable = window.onDidCloseTerminal((e: Terminal) => {\n                if (e.name === extensionTerminalName) {\n                    this._terminal = undefined;\n                    this._disposable!.dispose();\n                    this._disposable = undefined;\n                }\n            }, this);\n\n            Container.context.subscriptions.push(this._disposable);\n            this._terminalCwd = undefined;\n        }\n\n        if (this._terminalCwd !== cwd) {\n            this._terminal.sendText(`cd \"${cwd}\"`, true);\n            this._terminalCwd = cwd;\n        }\n\n        return this._terminal;\n    }\n\n    private sendTerminalCommand(command: string, args: string, cwd: string) {\n        // let git = GitService.getGitPath();\n        // if (git.includes(' ')) {\n        //     git = `\"${git}\"`;\n        // }\n\n        const terminal = this.ensureTerminal(cwd);\n        terminal.show(false);\n        terminal.sendText(`git ${command} ${args}`, false);\n    }\n}\n","'use strict';\nimport { Config } from '../config';\n\nexport interface IpcMessage {\n    id: string;\n    method: string;\n    params?: any;\n}\n\nexport type IpcNotificationParamsOf<NT> = NT extends IpcNotificationType<infer P> ? P : never;\nexport class IpcNotificationType<P = any> {\n    constructor(public readonly method: string) {}\n}\n\nexport type IpcCommandParamsOf<CT> = CT extends IpcCommandType<infer P> ? P : never;\nexport class IpcCommandType<P = any> {\n    constructor(public readonly method: string) {}\n}\n\nexport function onIpcCommand<CT extends IpcCommandType>(\n    type: CT,\n    command: IpcMessage,\n    fn: (params: IpcCommandParamsOf<CT>) => void\n) {\n    fn(command.params);\n}\n\nexport function onIpcNotification<NT extends IpcNotificationType>(\n    type: NT,\n    notification: IpcMessage,\n    fn: (params: IpcNotificationParamsOf<NT>) => void\n) {\n    fn(notification.params);\n}\n\nexport interface DidChangeConfigurationNotificationParams {\n    config: Config;\n}\nexport const DidChangeConfigurationNotificationType = new IpcNotificationType<DidChangeConfigurationNotificationParams>(\n    'configuration/didChange'\n);\n\nexport interface DidRequestJumpToNotificationParams {\n    anchor: string;\n}\nexport const DidRequestJumpToNotificationType = new IpcNotificationType<DidRequestJumpToNotificationParams>(\n    'webview/jumpTo'\n);\n\nexport const ReadyCommandType = new IpcCommandType<{}>('webview/ready');\n\nexport interface UpdateConfigurationCommandParams {\n    changes: {\n        [key: string]: any;\n    };\n    removes: string[];\n    scope: 'user' | 'workspace';\n    uri?: string;\n}\nexport const UpdateConfigurationCommandType = new IpcCommandType<UpdateConfigurationCommandParams>(\n    'configuration/update'\n);\n\nexport interface AppBootstrap {}\n\nexport interface AppWithConfigBootstrap {\n    config: Config;\n}\n\nexport interface SettingsBootstrap extends AppWithConfigBootstrap {\n    scope: 'user' | 'workspace';\n    scopes: ['user' | 'workspace', string][];\n}\n\nexport interface WelcomeBootstrap extends AppWithConfigBootstrap {}\n\nexport interface HistoryBootstrap {}\n","'use strict';\nimport * as paths from 'path';\nimport * as fs from 'fs';\nimport {\n    commands,\n    ConfigurationChangeEvent,\n    ConfigurationTarget,\n    Disposable,\n    Uri,\n    ViewColumn,\n    WebviewPanel,\n    WebviewPanelOnDidChangeViewStateEvent,\n    window,\n    workspace\n} from 'vscode';\nimport { Config, configuration } from '../configuration';\nimport { Container } from '../container';\nimport { Logger } from '../logger';\nimport {\n    DidChangeConfigurationNotificationType,\n    DidRequestJumpToNotificationType,\n    IpcMessage,\n    IpcNotificationParamsOf,\n    IpcNotificationType,\n    onIpcCommand,\n    ReadyCommandType,\n    UpdateConfigurationCommandType\n} from './protocol';\nimport { Commands } from '../commands';\n\nlet ipcSequence = 0;\n\nconst emptyCommands: Disposable[] = [\n    {\n        dispose: function() {\n            /* noop */\n        }\n    }\n];\n\nconst anchorRegex = /.*?#(.*)/;\n\nexport abstract class WebviewBase<TBootstrap> implements Disposable {\n    private _disposable: Disposable | undefined;\n    private _disposablePanel: Disposable | undefined;\n    private _panel: WebviewPanel | undefined;\n\n    private _pendingJumpToAnchor: string | undefined;\n\n    constructor(showCommand: Commands, showAndJumpCommands?: Commands[]) {\n        this._disposable = Disposable.from(\n            configuration.onDidChange(this.onConfigurationChanged, this),\n            commands.registerCommand(showCommand, this.show, this)\n        );\n\n        if (showAndJumpCommands !== undefined) {\n            this._disposable = Disposable.from(\n                this._disposable,\n                ...showAndJumpCommands.map(c => {\n                    // The show and jump commands are structured to have a # separating the base command from the anchor\n                    let anchor: string | undefined;\n                    const match = anchorRegex.exec(c);\n                    if (match != null) {\n                        [, anchor] = match;\n                    }\n\n                    return commands.registerCommand(c, () => this.show(anchor), this);\n                })\n            );\n        }\n    }\n\n    abstract get filename(): string;\n    abstract get id(): string;\n    abstract get title(): string;\n\n    abstract getBootstrap(): TBootstrap;\n    registerCommands(): Disposable[] {\n        return emptyCommands;\n    }\n\n    dispose() {\n        this._disposable && this._disposable.dispose();\n        this._disposablePanel && this._disposablePanel.dispose();\n    }\n\n    private onConfigurationChanged(e: ConfigurationChangeEvent) {\n        this.notifyDidChangeConfiguration();\n    }\n\n    private onPanelDisposed() {\n        this._disposablePanel && this._disposablePanel.dispose();\n        this._panel = undefined;\n    }\n\n    private onViewStateChanged(e: WebviewPanelOnDidChangeViewStateEvent) {\n        Logger.log(\n            `Webview(${this.id}).onViewStateChanged`,\n            `active=${e.webviewPanel.active}, visible=${e.webviewPanel.visible}`\n        );\n\n        // Anytime the webview becomes active, make sure it has the most up-to-date config\n        if (e.webviewPanel.active) {\n            this.notifyDidChangeConfiguration();\n        }\n    }\n\n    protected onMessageReceived(e: IpcMessage) {\n        // virtual\n    }\n\n    private onMessageReceivedCore(e: IpcMessage) {\n        if (e == null) return;\n\n        Logger.log(`Webview(${this.id}).onMessageReceived: method=${e.method}, data=${JSON.stringify(e)}`);\n\n        switch (e.method) {\n            case ReadyCommandType.method:\n                onIpcCommand(ReadyCommandType, e, params => {\n                    if (this._pendingJumpToAnchor !== undefined) {\n                        this.notify(DidRequestJumpToNotificationType, { anchor: this._pendingJumpToAnchor });\n                        this._pendingJumpToAnchor = undefined;\n                    }\n                });\n\n                break;\n\n            case UpdateConfigurationCommandType.method:\n                onIpcCommand(UpdateConfigurationCommandType, e, async params => {\n                    const target =\n                        params.scope === 'workspace' ? ConfigurationTarget.Workspace : ConfigurationTarget.Global;\n\n                    for (const key in params.changes) {\n                        const inspect = await configuration.inspect(key)!;\n\n                        const value = params.changes[key];\n                        await configuration.update(key, value === inspect.defaultValue ? undefined : value, target);\n                    }\n\n                    for (const key of params.removes) {\n                        await configuration.update(key, undefined, target);\n                    }\n                });\n\n                break;\n            default:\n                this.onMessageReceived(e);\n\n                break;\n        }\n    }\n\n    get visible() {\n        return this._panel === undefined ? false : this._panel.visible;\n    }\n\n    hide() {\n        if (this._panel === undefined) return;\n\n        this._panel.dispose();\n    }\n\n    async show(jumpToAnchor?: string): Promise<void> {\n        const html = await this.getHtml();\n\n        if (this._panel === undefined) {\n            this._panel = window.createWebviewPanel(\n                this.id,\n                this.title,\n                { viewColumn: ViewColumn.Active, preserveFocus: false },\n                {\n                    retainContextWhenHidden: true,\n                    enableFindWidget: true,\n                    enableCommandUris: true,\n                    enableScripts: true\n                }\n            );\n\n            this._panel.iconPath = Uri.file(Container.context.asAbsolutePath('images/gitlens-icon.png'));\n            this._disposablePanel = Disposable.from(\n                this._panel,\n                this._panel.onDidDispose(this.onPanelDisposed, this),\n                this._panel.onDidChangeViewState(this.onViewStateChanged, this),\n                this._panel.webview.onDidReceiveMessage(this.onMessageReceivedCore, this),\n                ...this.registerCommands()\n            );\n\n            this._panel.webview.html = html;\n        }\n        else {\n            // Reset the html to get the webview to reload\n            this._panel.webview.html = '';\n            this._panel.webview.html = html;\n            this._panel.reveal(ViewColumn.Active, false);\n        }\n\n        this._pendingJumpToAnchor = jumpToAnchor;\n    }\n\n    private _html: string | undefined;\n    private async getHtml(): Promise<string> {\n        const filename = Container.context.asAbsolutePath(paths.join('dist/webviews/', this.filename));\n\n        let content;\n        // When we are debugging avoid any caching so that we can change the html and have it update without reloading\n        if (Logger.isDebugging) {\n            content = await new Promise<string>((resolve, reject) => {\n                fs.readFile(filename, 'utf8', (err, data) => {\n                    if (err) {\n                        reject(err);\n                    }\n                    else {\n                        resolve(data);\n                    }\n                });\n            });\n        }\n        else {\n            if (this._html !== undefined) return this._html;\n\n            const doc = await workspace.openTextDocument(filename);\n            content = doc.getText();\n        }\n\n        this._html = content.replace(\n            /{{root}}/g,\n            Uri.file(Container.context.asAbsolutePath('.'))\n                .with({ scheme: 'vscode-resource' })\n                .toString()\n        );\n\n        if (this._html.includes(\"'{{bootstrap}}'\")) {\n            this._html = this._html.replace(\"'{{bootstrap}}'\", JSON.stringify(this.getBootstrap()));\n        }\n\n        return this._html;\n    }\n\n    protected notify<NT extends IpcNotificationType>(type: NT, params: IpcNotificationParamsOf<NT>): Thenable<boolean> {\n        return this.postMessage({ id: this.nextIpcId(), method: type.method, params: params });\n    }\n\n    private nextIpcId() {\n        if (ipcSequence === Number.MAX_SAFE_INTEGER) {\n            ipcSequence = 1;\n        }\n        else {\n            ipcSequence++;\n        }\n\n        return `host:${ipcSequence}`;\n    }\n\n    private notifyDidChangeConfiguration() {\n        // Make sure to get the raw config, not from the container which has the modes mixed in\n        return this.notify(DidChangeConfigurationNotificationType, { config: configuration.get<Config>() });\n    }\n\n    private postMessage(message: IpcMessage) {\n        if (this._panel === undefined) return Promise.resolve(false);\n\n        return this._panel.webview.postMessage(message);\n    }\n}\n","'use strict';\nimport { commands, ConfigurationTarget, workspace } from 'vscode';\nimport { Commands } from '../commands';\nimport { Config, configuration, ViewLocation } from '../configuration';\nimport { SettingsBootstrap } from './protocol';\nimport { WebviewBase } from './webviewBase';\n\nexport class SettingsWebview extends WebviewBase<SettingsBootstrap> {\n    constructor() {\n        super(Commands.ShowSettingsPage, [\n            Commands.ShowSettingsPageAndJumpToCompareView,\n            Commands.ShowSettingsPageAndJumpToFileHistoryView,\n            Commands.ShowSettingsPageAndJumpToLineHistoryView,\n            Commands.ShowSettingsPageAndJumpToRepositoriesView,\n            Commands.ShowSettingsPageAndJumpToSearchCommitsView\n        ]);\n    }\n\n    get filename(): string {\n        return 'settings.html';\n    }\n\n    get id(): string {\n        return 'gitlens.settings';\n    }\n\n    get title(): string {\n        return 'GitLens Settings';\n    }\n\n    getBootstrap(): SettingsBootstrap {\n        const scopes: ['user' | 'workspace', string][] = [['user', 'User']];\n        if (workspace.workspaceFolders !== undefined && workspace.workspaceFolders.length) {\n            scopes.push(['workspace', 'Workspace']);\n        }\n\n        return {\n            // Make sure to get the raw config, not from the container which has the modes mixed in\n            config: configuration.get<Config>(),\n            scope: 'user',\n            scopes: scopes\n        };\n    }\n\n    registerCommands() {\n        return [commands.registerCommand(`${this.id}.applyViewLayoutPreset`, this.applyViewLayoutPreset, this)];\n    }\n\n    private applyViewLayoutPreset(preset: 'contextual' | 'default' | 'scm') {\n        let repositories;\n        let histories;\n        let compareAndSearch;\n        switch (preset) {\n            case 'contextual':\n                repositories = ViewLocation.SourceControl;\n                histories = ViewLocation.Explorer;\n                compareAndSearch = ViewLocation.GitLens;\n                break;\n            case 'default':\n                repositories = ViewLocation.GitLens;\n                histories = ViewLocation.GitLens;\n                compareAndSearch = ViewLocation.GitLens;\n                break;\n            case 'scm':\n                repositories = ViewLocation.SourceControl;\n                histories = ViewLocation.SourceControl;\n                compareAndSearch = ViewLocation.SourceControl;\n                break;\n            default:\n                return;\n        }\n\n        configuration.update(\n            configuration.name('views')('repositories')('location').value,\n            repositories,\n            ConfigurationTarget.Global\n        );\n        configuration.update(\n            configuration.name('views')('fileHistory')('location').value,\n            histories,\n            ConfigurationTarget.Global\n        );\n        configuration.update(\n            configuration.name('views')('lineHistory')('location').value,\n            histories,\n            ConfigurationTarget.Global\n        );\n        configuration.update(\n            configuration.name('views')('compare')('location').value,\n            compareAndSearch,\n            ConfigurationTarget.Global\n        );\n        configuration.update(\n            configuration.name('views')('search')('location').value,\n            compareAndSearch,\n            ConfigurationTarget.Global\n        );\n    }\n}\n","'use strict';\nimport { Commands } from '../commands';\nimport { Container } from '../container';\nimport { WelcomeBootstrap } from './protocol';\nimport { WebviewBase } from './webviewBase';\n\nexport class WelcomeWebview extends WebviewBase<WelcomeBootstrap> {\n    constructor() {\n        super(Commands.ShowWelcomePage);\n    }\n\n    get filename(): string {\n        return 'welcome.html';\n    }\n\n    get id(): string {\n        return 'gitlens.welcome';\n    }\n\n    get title(): string {\n        return 'Welcome to GitLens';\n    }\n\n    getBootstrap(): WelcomeBootstrap {\n        return {\n            config: Container.config\n        };\n    }\n}\n","'use strict';\nimport { commands, ConfigurationChangeEvent, Disposable, ExtensionContext, Uri } from 'vscode';\nimport { FileAnnotationController } from './annotations/fileAnnotationController';\nimport { LineAnnotationController } from './annotations/lineAnnotationController';\nimport { GitCodeLensController } from './codelens/codeLensController';\nimport { Commands, ToggleFileBlameCommandArgs } from './commands';\nimport { AnnotationsToggleMode, Config, configuration, ConfigurationWillChangeEvent } from './configuration';\nimport { GitFileSystemProvider } from './git/fsProvider';\nimport { GitService } from './git/gitService';\nimport { clearGravatarCache } from './gravatar';\nimport { LineHoverController } from './hovers/lineHoverController';\nimport { Keyboard } from './keyboard';\nimport { Logger, TraceLevel } from './logger';\nimport { StatusBarController } from './statusbar/statusBarController';\nimport { GitDocumentTracker } from './trackers/gitDocumentTracker';\nimport { GitLineTracker } from './trackers/gitLineTracker';\nimport { CompareView } from './views/compareView';\nimport { FileHistoryView } from './views/fileHistoryView';\nimport { LineHistoryView } from './views/lineHistoryView';\nimport { RepositoriesView } from './views/repositoriesView';\nimport { SearchView } from './views/searchView';\nimport { ViewCommands } from './views/viewCommands';\nimport { VslsController } from './vsls/vsls';\nimport { SettingsWebview } from './webviews/settingsWebview';\nimport { WelcomeWebview } from './webviews/welcomeWebview';\n\nexport class Container {\n    private static _configsAffectedByMode: string[] | undefined;\n    private static _applyModeConfigurationTransformBound:\n        | ((e: ConfigurationChangeEvent) => ConfigurationChangeEvent)\n        | undefined;\n\n    static initialize(context: ExtensionContext, config: Config) {\n        this._context = context;\n        this._config = Container.applyMode(config);\n\n        context.subscriptions.push((this._lineTracker = new GitLineTracker()));\n        context.subscriptions.push((this._tracker = new GitDocumentTracker()));\n        context.subscriptions.push((this._vsls = new VslsController()));\n\n        context.subscriptions.push((this._git = new GitService()));\n\n        // Since there is a bit of a chicken & egg problem with the DocumentTracker and the GitService, initialize the tracker once the GitService is loaded\n        this._tracker.initialize();\n\n        context.subscriptions.push((this._fileAnnotationController = new FileAnnotationController()));\n        context.subscriptions.push((this._lineAnnotationController = new LineAnnotationController()));\n        context.subscriptions.push((this._lineHoverController = new LineHoverController()));\n        context.subscriptions.push((this._statusBarController = new StatusBarController()));\n        context.subscriptions.push((this._codeLensController = new GitCodeLensController()));\n        context.subscriptions.push((this._keyboard = new Keyboard()));\n        context.subscriptions.push((this._settingsWebview = new SettingsWebview()));\n        context.subscriptions.push((this._welcomeWebview = new WelcomeWebview()));\n\n        if (config.views.compare.enabled) {\n            context.subscriptions.push((this._compareView = new CompareView()));\n        }\n        else {\n            let disposable: Disposable;\n            // eslint-disable-next-line prefer-const\n            disposable = configuration.onDidChange(e => {\n                if (configuration.changed(e, configuration.name('views')('compare')('enabled').value)) {\n                    disposable.dispose();\n                    context.subscriptions.push((this._compareView = new CompareView()));\n                }\n            });\n        }\n\n        if (config.views.fileHistory.enabled) {\n            context.subscriptions.push((this._fileHistoryView = new FileHistoryView()));\n        }\n        else {\n            let disposable: Disposable;\n            // eslint-disable-next-line prefer-const\n            disposable = configuration.onDidChange(e => {\n                if (configuration.changed(e, configuration.name('views')('fileHistory')('enabled').value)) {\n                    disposable.dispose();\n                    context.subscriptions.push((this._fileHistoryView = new FileHistoryView()));\n                }\n            });\n        }\n\n        if (config.views.lineHistory.enabled) {\n            context.subscriptions.push((this._lineHistoryView = new LineHistoryView()));\n        }\n        else {\n            let disposable: Disposable;\n            // eslint-disable-next-line prefer-const\n            disposable = configuration.onDidChange(e => {\n                if (configuration.changed(e, configuration.name('views')('lineHistory')('enabled').value)) {\n                    disposable.dispose();\n                    context.subscriptions.push((this._lineHistoryView = new LineHistoryView()));\n                }\n            });\n        }\n\n        if (config.views.repositories.enabled) {\n            context.subscriptions.push((this._repositoriesView = new RepositoriesView()));\n        }\n        else {\n            let disposable: Disposable;\n            // eslint-disable-next-line prefer-const\n            disposable = configuration.onDidChange(e => {\n                if (configuration.changed(e, configuration.name('views')('repositories')('enabled').value)) {\n                    disposable.dispose();\n                    context.subscriptions.push((this._repositoriesView = new RepositoriesView()));\n                }\n            });\n        }\n\n        if (config.views.search.enabled) {\n            context.subscriptions.push((this._searchView = new SearchView()));\n        }\n        else {\n            let disposable: Disposable;\n            // eslint-disable-next-line prefer-const\n            disposable = configuration.onDidChange(e => {\n                if (configuration.changed(e, configuration.name('views')('search')('enabled').value)) {\n                    disposable.dispose();\n                    context.subscriptions.push((this._searchView = new SearchView()));\n                }\n            });\n        }\n\n        context.subscriptions.push(new GitFileSystemProvider());\n\n        context.subscriptions.push(configuration.onWillChange(this.onConfigurationChanging, this));\n    }\n\n    private static onConfigurationChanging(e: ConfigurationWillChangeEvent) {\n        this._config = undefined;\n\n        if (configuration.changed(e.change, configuration.name('outputLevel').value)) {\n            Logger.level = configuration.get<TraceLevel>(configuration.name('outputLevel').value);\n        }\n\n        if (configuration.changed(e.change, configuration.name('defaultGravatarsStyle').value)) {\n            clearGravatarCache();\n        }\n\n        if (\n            configuration.changed(e.change, configuration.name('mode').value) ||\n            configuration.changed(e.change, configuration.name('modes').value)\n        ) {\n            if (this._applyModeConfigurationTransformBound === undefined) {\n                this._applyModeConfigurationTransformBound = this.applyModeConfigurationTransform.bind(this);\n            }\n            e.transform = this._applyModeConfigurationTransformBound;\n        }\n    }\n\n    private static _codeLensController: GitCodeLensController;\n    static get codeLens() {\n        return this._codeLensController;\n    }\n\n    private static _compareView: CompareView | undefined;\n    static get compareView() {\n        if (this._compareView === undefined) {\n            this._context.subscriptions.push((this._compareView = new CompareView()));\n        }\n\n        return this._compareView;\n    }\n\n    private static _config: Config | undefined;\n    static get config() {\n        if (this._config === undefined) {\n            this._config = Container.applyMode(configuration.get<Config>());\n        }\n        return this._config;\n    }\n\n    private static _context: ExtensionContext;\n    static get context() {\n        return this._context;\n    }\n\n    private static _fileAnnotationController: FileAnnotationController;\n    static get fileAnnotations() {\n        return this._fileAnnotationController;\n    }\n\n    private static _fileHistoryView: FileHistoryView | undefined;\n    static get fileHistoryView() {\n        if (this._fileHistoryView === undefined) {\n            this._context.subscriptions.push((this._fileHistoryView = new FileHistoryView()));\n        }\n\n        return this._fileHistoryView;\n    }\n\n    private static _git: GitService;\n    static get git() {\n        return this._git;\n    }\n\n    private static _keyboard: Keyboard;\n    static get keyboard() {\n        return this._keyboard;\n    }\n\n    private static _lineAnnotationController: LineAnnotationController;\n    static get lineAnnotations() {\n        return this._lineAnnotationController;\n    }\n\n    private static _lineHistoryView: LineHistoryView | undefined;\n    static get lineHistoryView() {\n        if (this._lineHistoryView === undefined) {\n            this._context.subscriptions.push((this._lineHistoryView = new LineHistoryView()));\n        }\n\n        return this._lineHistoryView;\n    }\n\n    private static _lineHoverController: LineHoverController;\n    static get lineHovers() {\n        return this._lineHoverController;\n    }\n\n    private static _lineTracker: GitLineTracker;\n    static get lineTracker() {\n        return this._lineTracker;\n    }\n\n    private static _repositoriesView: RepositoriesView | undefined;\n    static get repositoriesView(): RepositoriesView {\n        if (this._repositoriesView === undefined) {\n            this._context.subscriptions.push((this._repositoriesView = new RepositoriesView()));\n        }\n\n        return this._repositoriesView;\n    }\n\n    private static _searchView: SearchView | undefined;\n    static get searchView() {\n        if (this._searchView === undefined) {\n            this._context.subscriptions.push((this._searchView = new SearchView()));\n        }\n\n        return this._searchView;\n    }\n\n    private static _settingsWebview: SettingsWebview;\n    static get settingsWebview() {\n        return this._settingsWebview;\n    }\n\n    private static _statusBarController: StatusBarController;\n    static get statusBar() {\n        return this._statusBarController;\n    }\n\n    private static _tracker: GitDocumentTracker;\n    static get tracker() {\n        return this._tracker;\n    }\n\n    private static _viewCommands: ViewCommands | undefined;\n    static get viewCommands() {\n        if (this._viewCommands === undefined) {\n            this._context.subscriptions.push((this._viewCommands = new ViewCommands()));\n        }\n        return this._viewCommands;\n    }\n\n    private static _vsls: VslsController;\n    static get vsls() {\n        return this._vsls;\n    }\n\n    private static _welcomeWebview: WelcomeWebview;\n    static get welcomeWebview() {\n        return this._welcomeWebview;\n    }\n\n    private static applyMode(config: Config) {\n        if (!config.mode.active) return config;\n\n        const mode = config.modes[config.mode.active];\n        if (mode == null) return config;\n\n        if (mode.annotations != null) {\n            let command: string | undefined;\n            switch (mode.annotations) {\n                case 'blame':\n                    config.blame.toggleMode = AnnotationsToggleMode.Window;\n                    command = Commands.ToggleFileBlame;\n                    break;\n                case 'heatmap':\n                    config.heatmap.toggleMode = AnnotationsToggleMode.Window;\n                    command = Commands.ToggleFileHeatmap;\n                    break;\n                case 'recentChanges':\n                    config.recentChanges.toggleMode = AnnotationsToggleMode.Window;\n                    command = Commands.ToggleFileRecentChanges;\n                    break;\n            }\n\n            if (command !== undefined) {\n                const commandArgs: ToggleFileBlameCommandArgs = {\n                    on: true\n                };\n                // Make sure to delay the execution by a bit so that the configuration changes get propegated first\n                setTimeout(() => commands.executeCommand(command!, commandArgs), 50);\n            }\n        }\n\n        if (mode.codeLens != null) {\n            config.codeLens.enabled = mode.codeLens;\n        }\n\n        if (mode.currentLine != null) {\n            config.currentLine.enabled = mode.currentLine;\n        }\n\n        if (mode.hovers != null) {\n            config.hovers.enabled = mode.hovers;\n        }\n\n        if (mode.statusBar != null) {\n            config.statusBar.enabled = mode.statusBar;\n        }\n\n        if (mode.views != null) {\n            config.views.compare.enabled = mode.views;\n        }\n        if (mode.views != null) {\n            config.views.fileHistory.enabled = mode.views;\n        }\n        if (mode.views != null) {\n            config.views.lineHistory.enabled = mode.views;\n        }\n        if (mode.views != null) {\n            config.views.repositories.enabled = mode.views;\n        }\n        if (mode.views != null) {\n            config.views.search.enabled = mode.views;\n        }\n\n        return config;\n    }\n\n    private static applyModeConfigurationTransform(e: ConfigurationChangeEvent): ConfigurationChangeEvent {\n        if (this._configsAffectedByMode === undefined) {\n            this._configsAffectedByMode = [\n                `gitlens.${configuration.name('mode').value}`,\n                `gitlens.${configuration.name('modes').value}`,\n                `gitlens.${configuration.name('blame')('toggleMode').value}`,\n                `gitlens.${configuration.name('codeLens').value}`,\n                `gitlens.${configuration.name('currentLine').value}`,\n                `gitlens.${configuration.name('heatmap')('toggleMode').value}`,\n                `gitlens.${configuration.name('hovers').value}`,\n                `gitlens.${configuration.name('recentChanges')('toggleMode').value}`,\n                `gitlens.${configuration.name('statusBar').value}`,\n                `gitlens.${configuration.name('views')('compare').value}`,\n                `gitlens.${configuration.name('views')('fileHistory').value}`,\n                `gitlens.${configuration.name('views')('lineHistory').value}`,\n                `gitlens.${configuration.name('views')('repositories').value}`,\n                `gitlens.${configuration.name('views')('search').value}`\n            ];\n        }\n\n        const original = e.affectsConfiguration;\n        return {\n            ...e,\n            affectsConfiguration: (section: string, resource?: Uri) => {\n                if (this._configsAffectedByMode && this._configsAffectedByMode.some(n => section.startsWith(n))) {\n                    return true;\n                }\n\n                return original(section, resource);\n            }\n        };\n    }\n}\n","'use strict';\nimport { commands, TextEditor, TextEditorEdit, Uri, window } from 'vscode';\nimport { UriComparer } from '../comparers';\nimport { FileAnnotationType } from '../configuration';\nimport { isTextEditor } from '../constants';\nimport { Container } from '../container';\nimport { Logger } from '../logger';\nimport { Messages } from '../messages';\nimport { ActiveEditorCommand, command, Commands, EditorCommand } from './common';\n\n@command()\nexport class ClearFileAnnotationsCommand extends EditorCommand {\n    constructor() {\n        super([Commands.ClearFileAnnotations, Commands.ComputingFileAnnotations]);\n    }\n\n    execute(editor: TextEditor, edit: TextEditorEdit, uri?: Uri): Promise<any> {\n        // Handle the case where we are focused on a non-editor editor (output, debug console)\n        if (editor != null && !isTextEditor(editor)) {\n            if (uri != null && !UriComparer.equals(uri, editor.document.uri)) {\n                const e = window.visibleTextEditors.find(e => UriComparer.equals(uri, e.document.uri));\n                if (e !== undefined) {\n                    editor = e;\n                }\n            }\n        }\n\n        try {\n            return Container.fileAnnotations.clear(editor);\n        }\n        catch (ex) {\n            Logger.error(ex, 'ClearFileAnnotationsCommand');\n            return Messages.showGenericErrorMessage('Unable to clear file annotations');\n        }\n    }\n}\n\nexport interface ToggleFileBlameCommandArgs {\n    on?: boolean;\n    sha?: string;\n    type?: FileAnnotationType;\n}\n\n@command()\nexport class ToggleFileBlameCommand extends ActiveEditorCommand {\n    constructor() {\n        super(Commands.ToggleFileBlame);\n    }\n\n    execute(editor: TextEditor, uri?: Uri, args: ToggleFileBlameCommandArgs = {}): Thenable<any> {\n        // Handle the case where we are focused on a non-editor editor (output, debug console)\n        if (editor != null && !isTextEditor(editor)) {\n            if (uri != null && !UriComparer.equals(uri, editor.document.uri)) {\n                const e = window.visibleTextEditors.find(e => UriComparer.equals(uri, e.document.uri));\n                if (e !== undefined) {\n                    editor = e;\n                }\n            }\n        }\n\n        try {\n            if (args.type === undefined) {\n                args = { ...args, type: FileAnnotationType.Blame };\n            }\n\n            return Container.fileAnnotations.toggle(\n                editor,\n                args.type!,\n                args.sha !== undefined ? args.sha : editor && editor.selection.active.line,\n                args.on\n            );\n        }\n        catch (ex) {\n            Logger.error(ex, 'ToggleFileBlameCommand');\n            return window.showErrorMessage(\n                `Unable to toggle file ${args.type} annotations. See output channel for more details`\n            );\n        }\n    }\n}\n\n@command()\nexport class ToggleFileHeatmapCommand extends ActiveEditorCommand {\n    constructor() {\n        super(Commands.ToggleFileHeatmap);\n    }\n\n    execute(editor: TextEditor, uri?: Uri, args: ToggleFileBlameCommandArgs = {}): Thenable<any> {\n        const copyArgs: ToggleFileBlameCommandArgs = {\n            ...args,\n            type: FileAnnotationType.Heatmap\n        };\n        return commands.executeCommand(Commands.ToggleFileBlame, uri, copyArgs);\n    }\n}\n\n@command()\nexport class ToggleFileRecentChangesCommand extends ActiveEditorCommand {\n    constructor() {\n        super(Commands.ToggleFileRecentChanges);\n    }\n\n    execute(editor: TextEditor, uri?: Uri, args: ToggleFileBlameCommandArgs = {}): Thenable<any> {\n        const copyArgs: ToggleFileBlameCommandArgs = {\n            ...args,\n            type: FileAnnotationType.RecentChanges\n        };\n        return commands.executeCommand(Commands.ToggleFileBlame, uri, copyArgs);\n    }\n}\n\n@command()\nexport class ToggleLineBlameCommand extends ActiveEditorCommand {\n    constructor() {\n        super(Commands.ToggleLineBlame);\n    }\n\n    execute(editor: TextEditor, uri?: Uri): Thenable<any> {\n        try {\n            return Container.lineAnnotations.toggle(editor);\n        }\n        catch (ex) {\n            Logger.error(ex, 'ToggleLineBlameCommand');\n            return window.showErrorMessage(\n                'Unable to toggle line blame annotations. See output channel for more details'\n            );\n        }\n    }\n}\n","'use strict';\nimport { commands, TextEditor, Uri, window } from 'vscode';\nimport { TextEditorComparer, UriComparer } from '../comparers';\nimport { BuiltInCommands, GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { Logger } from '../logger';\nimport { Messages } from '../messages';\nimport { Functions } from '../system';\nimport { ActiveEditorCommand, command, Commands, getCommandUri, getRepoPathOrPrompt } from './common';\n\nexport interface CloseUnchangedFilesCommandArgs {\n    uris?: Uri[];\n}\n\n@command()\nexport class CloseUnchangedFilesCommand extends ActiveEditorCommand {\n    private _onEditorChangedFn: ((editor: TextEditor | undefined) => void) | undefined;\n\n    constructor() {\n        super(Commands.CloseUnchangedFiles);\n    }\n\n    async execute(editor?: TextEditor, uri?: Uri, args: CloseUnchangedFilesCommandArgs = {}) {\n        uri = getCommandUri(uri, editor);\n\n        try {\n            if (args.uris === undefined) {\n                args = { ...args };\n\n                const repoPath = await getRepoPathOrPrompt(\n                    undefined,\n                    `Close all files except those changed in which repository${GlyphChars.Ellipsis}`\n                );\n                if (!repoPath) return undefined;\n\n                const status = await Container.git.getStatusForRepo(repoPath);\n                if (status === undefined) return window.showWarningMessage('Unable to close unchanged files');\n\n                args.uris = status.files.map(f => f.uri);\n            }\n\n            if (args.uris.length === 0) return commands.executeCommand(BuiltInCommands.CloseAllEditors);\n\n            const disposable = window.onDidChangeActiveTextEditor(\n                Functions.debounce(\n                    (e: TextEditor | undefined) => this._onEditorChangedFn && this._onEditorChangedFn(e),\n                    50\n                )\n            );\n\n            editor = window.activeTextEditor;\n\n            let count = 0;\n            let loopCount = 0;\n            const editors: TextEditor[] = [];\n\n            // Find out how many editors there are\n            while (true) {\n                if (editor != null) {\n                    let found = false;\n                    for (const e of editors) {\n                        if (TextEditorComparer.equals(e, editor, { useId: true, usePosition: true })) {\n                            found = true;\n                            break;\n                        }\n                    }\n                    if (found) break;\n\n                    // Start counting at the first real editor\n                    count++;\n                    editors.push(editor);\n                }\n                else if (count !== 0) {\n                    count++;\n                }\n\n                editor = await this.nextEditor();\n\n                loopCount++;\n                // Break out if we've looped 4 times and haven't found any editors\n                if (loopCount >= 4 && editors.length === 0) break;\n            }\n\n            if (editors.length) {\n                editor = window.activeTextEditor;\n\n                for (let i = 0; i <= count; i++) {\n                    if (\n                        editor == null ||\n                        (editor.document !== undefined &&\n                            (editor.document.isDirty ||\n                                // eslint-disable-next-line no-loop-func\n                                args.uris.some(uri =>\n                                    UriComparer.equals(uri, editor!.document && editor!.document.uri)\n                                )))\n                    ) {\n                        editor = await this.nextEditor();\n                    }\n                    else {\n                        editor = await this.closeEditor();\n                    }\n                }\n            }\n\n            disposable.dispose();\n\n            return undefined;\n        }\n        catch (ex) {\n            Logger.error(ex, 'CloseUnchangedFilesCommand');\n            return Messages.showGenericErrorMessage('Unable to close all unchanged files');\n        }\n    }\n\n    private async closeEditor(timeout: number = 500): Promise<TextEditor | undefined> {\n        const editor = window.activeTextEditor;\n\n        void (await commands.executeCommand(BuiltInCommands.CloseActiveEditor));\n\n        if (editor !== window.activeTextEditor) {\n            return window.activeTextEditor;\n        }\n\n        return this.waitForEditorChange(timeout);\n    }\n\n    private async nextEditor(timeout: number = 500): Promise<TextEditor | undefined> {\n        const editor = window.activeTextEditor;\n\n        void (await commands.executeCommand(BuiltInCommands.NextEditor));\n\n        if (editor !== window.activeTextEditor) {\n            return window.activeTextEditor;\n        }\n\n        return this.waitForEditorChange(timeout);\n    }\n\n    private waitForEditorChange(timeout: number = 500): Promise<TextEditor | undefined> {\n        return new Promise<TextEditor>((resolve, reject) => {\n            let timer: NodeJS.Timer | undefined;\n\n            this._onEditorChangedFn = (editor: TextEditor | undefined) => {\n                if (timer) {\n                    clearTimeout(timer);\n                    timer = undefined;\n\n                    resolve(editor);\n                }\n            };\n\n            timer = setTimeout(() => {\n                timer = undefined;\n\n                resolve(window.activeTextEditor);\n            }, timeout);\n        });\n    }\n}\n","'use strict';\nimport { env, TextEditor, Uri, window } from 'vscode';\nimport { Container } from '../container';\nimport { GitUri } from '../git/gitService';\nimport { Logger } from '../logger';\nimport { Messages } from '../messages';\nimport { Iterables } from '../system';\nimport {\n    ActiveEditorCommand,\n    command,\n    CommandContext,\n    Commands,\n    getCommandUri,\n    isCommandViewContextWithCommit\n} from './common';\n\nexport interface CopyMessageToClipboardCommandArgs {\n    message?: string;\n    sha?: string;\n}\n\n@command()\nexport class CopyMessageToClipboardCommand extends ActiveEditorCommand {\n    constructor() {\n        super(Commands.CopyMessageToClipboard);\n    }\n\n    protected preExecute(context: CommandContext, args: CopyMessageToClipboardCommandArgs = {}) {\n        if (isCommandViewContextWithCommit(context)) {\n            args = { ...args };\n            args.sha = context.node.commit.sha;\n            return this.execute(context.editor, context.node.commit.uri, args);\n        }\n\n        return this.execute(context.editor, context.uri, args);\n    }\n\n    async execute(editor?: TextEditor, uri?: Uri, args: CopyMessageToClipboardCommandArgs = {}) {\n        uri = getCommandUri(uri, editor);\n\n        try {\n            args = { ...args };\n\n            let repoPath;\n            // If we don't have an editor then get the message of the last commit to the branch\n            if (uri == null) {\n                repoPath = await Container.git.getActiveRepoPath(editor);\n                if (!repoPath) return undefined;\n\n                const log = await Container.git.getLog(repoPath, { maxCount: 1 });\n                if (!log) return undefined;\n\n                args.message = Iterables.first(log.commits.values()).message;\n            }\n            else if (args.message === undefined) {\n                const gitUri = await GitUri.fromUri(uri);\n                repoPath = gitUri.repoPath;\n\n                if (args.sha === undefined) {\n                    const blameline = (editor && editor.selection.active.line) || 0;\n                    if (blameline < 0) return undefined;\n\n                    try {\n                        const blame =\n                            editor && editor.document && editor.document.isDirty\n                                ? await Container.git.getBlameForLineContents(\n                                      gitUri,\n                                      blameline,\n                                      editor.document.getText()\n                                  )\n                                : await Container.git.getBlameForLine(gitUri, blameline);\n                        if (!blame) return undefined;\n\n                        if (blame.commit.isUncommitted) return undefined;\n\n                        args.sha = blame.commit.sha;\n                        if (!repoPath) {\n                            repoPath = blame.commit.repoPath;\n                        }\n                    }\n                    catch (ex) {\n                        Logger.error(ex, 'CopyMessageToClipboardCommand', `getBlameForLine(${blameline})`);\n                        return Messages.showGenericErrorMessage('Unable to copy message');\n                    }\n                }\n\n                // Get the full commit message -- since blame only returns the summary\n                const commit = await Container.git.getCommit(repoPath!, args.sha);\n                if (commit === undefined) return undefined;\n\n                args.message = commit.message;\n            }\n\n            void (await env.clipboard.writeText(args.message));\n            return undefined;\n        }\n        catch (ex) {\n            if (ex.message.includes(\"Couldn't find the required `xsel` binary\")) {\n                window.showErrorMessage(\n                    'Unable to copy message, xsel is not installed. Please install it via your package manager, e.g. `sudo apt install xsel`'\n                );\n                return undefined;\n            }\n\n            Logger.error(ex, 'CopyMessageToClipboardCommand');\n            return Messages.showGenericErrorMessage('Unable to copy message');\n        }\n    }\n}\n","'use strict';\nimport { commands, TextEditor, Uri } from 'vscode';\nimport { Container } from '../container';\nimport { GitUri } from '../git/gitService';\nimport { StatusFileNode } from '../views/nodes';\nimport {\n    ActiveEditorCommand,\n    command,\n    CommandContext,\n    Commands,\n    getCommandUri,\n    isCommandViewContextWithCommit\n} from './common';\n\nexport interface CopyRemoteFileUrlToClipboardCommandArgs {\n    range?: boolean;\n    sha?: string;\n}\n\n@command()\nexport class CopyRemoteFileUrlToClipboardCommand extends ActiveEditorCommand {\n    constructor() {\n        super(Commands.CopyRemoteFileUrlToClipboard);\n    }\n\n    protected preExecute(context: CommandContext, args: CopyRemoteFileUrlToClipboardCommandArgs = { range: true }) {\n        if (isCommandViewContextWithCommit(context)) {\n            args = { ...args };\n            args.range = false;\n            args.sha = context.node.commit.sha;\n\n            // If it is a StatusFileNode then don't include the sha, since it hasn't been pushed yet\n            if (context.node instanceof StatusFileNode) {\n                args.sha = undefined;\n            }\n\n            return this.execute(\n                context.editor,\n                context.node.commit.isFile ? context.node.commit.uri : context.node.uri,\n                args\n            );\n        }\n\n        return this.execute(context.editor, context.uri, args);\n    }\n\n    async execute(editor?: TextEditor, uri?: Uri, args: CopyRemoteFileUrlToClipboardCommandArgs = { range: true }) {\n        if (args.sha === undefined) {\n            uri = getCommandUri(uri, editor);\n            if (uri == null) return undefined;\n\n            const gitUri = await GitUri.fromUri(uri);\n            if (!gitUri.repoPath) return undefined;\n\n            args = { ...args };\n            if (gitUri.sha === undefined) {\n                const commit = await Container.git.getCommitForFile(gitUri.repoPath, gitUri.fsPath, {\n                    firstIfNotFound: true\n                });\n\n                if (commit !== undefined) {\n                    args.sha = commit.sha;\n                }\n            }\n            else {\n                args.sha = gitUri.sha;\n            }\n        }\n\n        return commands.executeCommand(Commands.OpenFileInRemote, uri, { ...args, clipboard: true });\n    }\n}\n","'use strict';\nimport { env, TextEditor, Uri, window } from 'vscode';\nimport { Container } from '../container';\nimport { GitUri } from '../git/gitService';\nimport { Logger } from '../logger';\nimport { Messages } from '../messages';\nimport { Iterables } from '../system';\nimport {\n    ActiveEditorCommand,\n    command,\n    CommandContext,\n    Commands,\n    getCommandUri,\n    isCommandViewContextWithCommit\n} from './common';\n\nexport interface CopyShaToClipboardCommandArgs {\n    sha?: string;\n}\n\n@command()\nexport class CopyShaToClipboardCommand extends ActiveEditorCommand {\n    constructor() {\n        super(Commands.CopyShaToClipboard);\n    }\n\n    protected preExecute(context: CommandContext, args: CopyShaToClipboardCommandArgs = {}) {\n        if (isCommandViewContextWithCommit(context)) {\n            args = { ...args };\n            args.sha = context.node.commit.sha;\n            return this.execute(context.editor, context.node.commit.uri, args);\n        }\n\n        return this.execute(context.editor, context.uri, args);\n    }\n\n    async execute(editor?: TextEditor, uri?: Uri, args: CopyShaToClipboardCommandArgs = {}) {\n        uri = getCommandUri(uri, editor);\n\n        try {\n            args = { ...args };\n\n            // If we don't have an editor then get the sha of the last commit to the branch\n            if (uri == null) {\n                const repoPath = await Container.git.getActiveRepoPath(editor);\n                if (!repoPath) return undefined;\n\n                const log = await Container.git.getLog(repoPath, { maxCount: 1 });\n                if (!log) return undefined;\n\n                args.sha = Iterables.first(log.commits.values()).sha;\n            }\n            else if (args.sha === undefined) {\n                const blameline = (editor && editor.selection.active.line) || 0;\n                if (blameline < 0) return undefined;\n\n                try {\n                    const gitUri = await GitUri.fromUri(uri);\n                    const blame =\n                        editor && editor.document && editor.document.isDirty\n                            ? await Container.git.getBlameForLineContents(gitUri, blameline, editor.document.getText())\n                            : await Container.git.getBlameForLine(gitUri, blameline);\n                    if (blame === undefined) return undefined;\n\n                    args.sha = blame.commit.sha;\n                }\n                catch (ex) {\n                    Logger.error(ex, 'CopyShaToClipboardCommand', `getBlameForLine(${blameline})`);\n                    return Messages.showGenericErrorMessage('Unable to copy commit id');\n                }\n            }\n\n            void (await env.clipboard.writeText(args.sha));\n            return undefined;\n        }\n        catch (ex) {\n            if (ex.message.includes(\"Couldn't find the required `xsel` binary\")) {\n                window.showErrorMessage(\n                    'Unable to copy commit id, xsel is not installed. Please install it via your package manager, e.g. `sudo apt install xsel`'\n                );\n                return undefined;\n            }\n\n            Logger.error(ex, 'CopyShaToClipboardCommand');\n            return Messages.showGenericErrorMessage('Unable to copy commit id');\n        }\n    }\n}\n","'use strict';\nimport { TextEditor, Uri } from 'vscode';\nimport { GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { Logger } from '../logger';\nimport { Messages } from '../messages';\nimport { CommandQuickPickItem, ReferencesQuickPick } from '../quickpicks';\nimport {\n    ActiveEditorCommand,\n    command,\n    CommandContext,\n    Commands,\n    getCommandUri,\n    getRepoPathOrActiveOrPrompt\n} from './common';\n\nexport interface DiffBranchWithCommandArgs {\n    ref1?: string;\n    ref2?: string;\n}\n\n@command()\nexport class DiffBranchWithCommand extends ActiveEditorCommand {\n    constructor() {\n        super([\n            Commands.DiffHeadWith,\n            Commands.DiffWorkingWith,\n            Commands.DiffHeadWithBranch,\n            Commands.DiffWorkingWithBranch\n        ]);\n    }\n\n    protected preExecute(context: CommandContext, args: DiffBranchWithCommandArgs = {}) {\n        switch (context.command) {\n            case Commands.DiffHeadWith:\n            case Commands.DiffHeadWithBranch:\n                args.ref2 = 'HEAD';\n                break;\n\n            case Commands.DiffWorkingWith:\n            case Commands.DiffWorkingWithBranch:\n                args.ref2 = '';\n                break;\n        }\n\n        return this.execute(context.editor, context.uri, args);\n    }\n\n    async execute(editor?: TextEditor, uri?: Uri, args: DiffBranchWithCommandArgs = {}) {\n        if (args.ref2 === undefined) return undefined;\n\n        uri = getCommandUri(uri, editor);\n\n        try {\n            const repoPath = await getRepoPathOrActiveOrPrompt(\n                uri,\n                editor,\n                `Compare in which repository${GlyphChars.Ellipsis}`\n            );\n            if (!repoPath) return undefined;\n\n            if (!args.ref1) {\n                let placeHolder;\n                switch (args.ref2) {\n                    case '':\n                        placeHolder = `Compare Working Tree with${GlyphChars.Ellipsis}`;\n                        break;\n                    case 'HEAD':\n                        placeHolder = `Compare HEAD with${GlyphChars.Ellipsis}`;\n                        break;\n                    default:\n                        placeHolder = `Compare ${args.ref2} with${GlyphChars.Ellipsis}`;\n                        break;\n                }\n\n                const pick = await new ReferencesQuickPick(repoPath).show(placeHolder, {\n                    allowEnteringRefs: true\n                });\n                if (pick === undefined) return undefined;\n\n                if (pick instanceof CommandQuickPickItem) return pick.execute();\n\n                args.ref1 = pick.ref;\n                if (args.ref1 === undefined) return undefined;\n            }\n\n            await Container.compareView.compare(repoPath, args.ref1, args.ref2);\n\n            return undefined;\n        }\n        catch (ex) {\n            Logger.error(ex, 'DiffBranchWithBranchCommand');\n            return Messages.showGenericErrorMessage('Unable to open branch compare');\n        }\n    }\n}\n","'use strict';\nimport { env, TextEditor, Uri, window } from 'vscode';\nimport { GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { Logger } from '../logger';\nimport { Messages } from '../messages';\nimport { CommandQuickPickItem, ReferencesQuickPick } from '../quickpicks';\nimport { CompareResultsNode } from '../views/nodes';\nimport {\n    ActiveEditorCommand,\n    command,\n    CommandContext,\n    Commands,\n    getCommandUri,\n    getRepoPathOrActiveOrPrompt,\n    isCommandViewContextWithRef\n} from './common';\n\nexport interface DiffDirectoryCommandArgs {\n    ref1?: string;\n    ref2?: string;\n}\n\n@command()\nexport class DiffDirectoryCommand extends ActiveEditorCommand {\n    constructor() {\n        super([\n            Commands.DiffDirectory,\n            Commands.DiffDirectoryWithHead,\n            Commands.ViewsOpenDirectoryDiff,\n            Commands.ViewsOpenDirectoryDiffWithWorking\n        ]);\n    }\n\n    protected preExecute(context: CommandContext, args: DiffDirectoryCommandArgs = {}) {\n        switch (context.command) {\n            case Commands.DiffDirectoryWithHead:\n                args.ref1 = 'HEAD';\n                args.ref2 = undefined;\n                break;\n\n            case Commands.ViewsOpenDirectoryDiff:\n                if (context.type === 'viewItem' && context.node instanceof CompareResultsNode) {\n                    args.ref1 = context.node.ref1.ref;\n                    args.ref2 = context.node.ref2.ref;\n                }\n                break;\n\n            case Commands.ViewsOpenDirectoryDiffWithWorking:\n                if (isCommandViewContextWithRef(context)) {\n                    args.ref1 = context.node.ref;\n                    args.ref2 = undefined;\n                }\n                break;\n        }\n\n        return this.execute(context.editor, context.uri, args);\n    }\n\n    async execute(editor?: TextEditor, uri?: Uri, args: DiffDirectoryCommandArgs = {}) {\n        uri = getCommandUri(uri, editor);\n\n        try {\n            const repoPath = await getRepoPathOrActiveOrPrompt(\n                uri,\n                editor,\n                `Compare directory in which repository${GlyphChars.Ellipsis}`\n            );\n            if (!repoPath) return undefined;\n\n            if (!args.ref1) {\n                args = { ...args };\n\n                const pick = await new ReferencesQuickPick(repoPath).show(\n                    `Compare Working Tree with${GlyphChars.Ellipsis}`,\n                    { allowEnteringRefs: true }\n                );\n                if (pick === undefined) return undefined;\n\n                if (pick instanceof CommandQuickPickItem) return pick.execute();\n\n                args.ref1 = pick.ref;\n                if (args.ref1 === undefined) return undefined;\n            }\n\n            await Container.git.openDirectoryDiff(repoPath, args.ref1, args.ref2);\n            return undefined;\n        }\n        catch (ex) {\n            const msg = ex && ex.toString();\n            if (msg === 'No diff tool found') {\n                const result = await window.showWarningMessage(\n                    'Unable to open directory compare because there is no Git diff tool configured',\n                    'View Git Docs'\n                );\n                if (!result) return undefined;\n\n                return env.openExternal(\n                    Uri.parse('https://git-scm.com/docs/git-config#Documentation/git-config.txt-difftool')\n                );\n            }\n\n            Logger.error(ex, 'DiffDirectoryCommand');\n            return Messages.showGenericErrorMessage('Unable to open directory compare');\n        }\n    }\n}\n","'use strict';\nimport { commands, TextDocumentShowOptions, TextEditor, Uri } from 'vscode';\nimport { Container } from '../container';\nimport { GitCommit, GitUri } from '../git/gitService';\nimport { Logger } from '../logger';\nimport { Messages } from '../messages';\nimport { ActiveEditorCommand, command, Commands, getCommandUri } from './common';\nimport { DiffWithCommandArgs } from './diffWith';\n\nexport interface DiffLineWithPreviousCommandArgs {\n    commit?: GitCommit;\n\n    line?: number;\n    showOptions?: TextDocumentShowOptions;\n}\n\n@command()\nexport class DiffLineWithPreviousCommand extends ActiveEditorCommand {\n    constructor() {\n        super(Commands.DiffLineWithPrevious);\n    }\n\n    async execute(editor?: TextEditor, uri?: Uri, args: DiffLineWithPreviousCommandArgs = {}): Promise<any> {\n        uri = getCommandUri(uri, editor);\n        if (uri == null) return undefined;\n\n        args = { ...args };\n        if (args.line === undefined) {\n            args.line = editor == null ? 0 : editor.selection.active.line;\n        }\n\n        const gitUri = args.commit !== undefined ? GitUri.fromCommit(args.commit) : await GitUri.fromUri(uri);\n\n        try {\n            const diffUris = await Container.git.getPreviousLineDiffUris(\n                gitUri.repoPath!,\n                gitUri,\n                args.line,\n                gitUri.sha\n            );\n\n            if (diffUris === undefined || diffUris.previous === undefined) {\n                return Messages.showCommitHasNoPreviousCommitWarningMessage();\n            }\n\n            const diffArgs: DiffWithCommandArgs = {\n                repoPath: diffUris.current.repoPath,\n                lhs: {\n                    sha: diffUris.previous.sha || '',\n                    uri: diffUris.previous.documentUri()\n                },\n                rhs: {\n                    sha: diffUris.current.sha || '',\n                    uri: diffUris.current.documentUri()\n                },\n                line: args.line,\n                showOptions: args.showOptions\n            };\n            return commands.executeCommand(Commands.DiffWith, diffArgs);\n        }\n        catch (ex) {\n            Logger.error(\n                ex,\n                'DiffLineWithPreviousCommand',\n                `getPreviousDiffUris(${gitUri.repoPath}, ${gitUri.fsPath}, ${gitUri.sha})`\n            );\n            return Messages.showGenericErrorMessage('Unable to open compare');\n        }\n    }\n}\n","'use strict';\nimport { commands, TextDocumentShowOptions, TextEditor, Uri, window } from 'vscode';\nimport { Container } from '../container';\nimport { GitCommit, GitService, GitUri } from '../git/gitService';\nimport { Logger } from '../logger';\nimport { Messages } from '../messages';\nimport { ActiveEditorCommand, command, Commands, getCommandUri } from './common';\nimport { DiffWithCommandArgs } from './diffWith';\n\nexport interface DiffLineWithWorkingCommandArgs {\n    commit?: GitCommit;\n\n    line?: number;\n    showOptions?: TextDocumentShowOptions;\n}\n\n@command()\nexport class DiffLineWithWorkingCommand extends ActiveEditorCommand {\n    constructor() {\n        super(Commands.DiffLineWithWorking);\n    }\n\n    async execute(editor?: TextEditor, uri?: Uri, args: DiffLineWithWorkingCommandArgs = {}): Promise<any> {\n        uri = getCommandUri(uri, editor);\n        if (uri == null) return undefined;\n\n        const gitUri = await GitUri.fromUri(uri);\n\n        args = { ...args };\n        if (args.line === undefined) {\n            args.line = editor == null ? 0 : editor.selection.active.line;\n        }\n\n        if (args.commit === undefined || args.commit.isUncommitted) {\n            const blameline = args.line;\n            if (blameline < 0) return undefined;\n\n            try {\n                const blame =\n                    editor && editor.document && editor.document.isDirty\n                        ? await Container.git.getBlameForLineContents(gitUri, blameline, editor.document.getText())\n                        : await Container.git.getBlameForLine(gitUri, blameline);\n                if (blame === undefined) {\n                    return Messages.showFileNotUnderSourceControlWarningMessage('Unable to open compare');\n                }\n\n                args.commit = blame.commit;\n\n                // If the line is uncommitted, change the previous commit\n                if (args.commit.isUncommitted) {\n                    const status = await Container.git.getStatusForFile(gitUri.repoPath!, gitUri.fsPath);\n                    args.commit = args.commit.with({\n                        sha:\n                            status !== undefined && status.indexStatus !== undefined\n                                ? GitService.uncommittedStagedSha\n                                : args.commit.previousSha!,\n                        fileName: args.commit.previousFileName!,\n                        originalFileName: null,\n                        previousSha: null,\n                        previousFileName: null\n                    });\n                    // editor lines are 0-based\n                    args.line = blame.line.line - 1;\n                }\n            }\n            catch (ex) {\n                Logger.error(ex, 'DiffLineWithWorkingCommand', `getBlameForLine(${blameline})`);\n                return Messages.showGenericErrorMessage('Unable to open compare');\n            }\n        }\n\n        const workingUri = await args.commit.getWorkingUri();\n        if (workingUri === undefined) {\n            return window.showWarningMessage('Unable to open compare. File has been deleted from the working tree');\n        }\n\n        const diffArgs: DiffWithCommandArgs = {\n            repoPath: args.commit.repoPath,\n            lhs: {\n                sha: args.commit.sha,\n                uri: args.commit.uri\n            },\n            rhs: {\n                sha: '',\n                uri: workingUri\n            },\n            line: args.line,\n            showOptions: args.showOptions\n        };\n        return commands.executeCommand(Commands.DiffWith, diffArgs);\n    }\n}\n","'use strict';\nimport * as paths from 'path';\nimport { commands, Range, TextDocumentShowOptions, TextEditor, Uri, ViewColumn } from 'vscode';\nimport { BuiltInCommands, GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { GitCommit, GitService, GitUri } from '../git/gitService';\nimport { Logger } from '../logger';\nimport { Messages } from '../messages';\nimport { ActiveEditorCommand, command, Commands } from './common';\n\nexport interface DiffWithCommandArgsRevision {\n    sha: string;\n    uri: Uri;\n    title?: string;\n}\n\nexport interface DiffWithCommandArgs {\n    lhs: DiffWithCommandArgsRevision;\n    rhs: DiffWithCommandArgsRevision;\n    repoPath: string | undefined;\n\n    line?: number;\n    showOptions?: TextDocumentShowOptions;\n}\n\n@command()\nexport class DiffWithCommand extends ActiveEditorCommand {\n    static getMarkdownCommandArgs(args: DiffWithCommandArgs): string;\n    static getMarkdownCommandArgs(commit: GitCommit, line?: number): string;\n    static getMarkdownCommandArgs(argsOrCommit: DiffWithCommandArgs | GitCommit, line?: number): string {\n        let args: DiffWithCommandArgs | GitCommit;\n        if (argsOrCommit instanceof GitCommit) {\n            const commit = argsOrCommit;\n\n            if (commit.isUncommitted) {\n                args = {\n                    repoPath: commit.repoPath,\n                    lhs: {\n                        sha: 'HEAD',\n                        uri: commit.uri\n                    },\n                    rhs: {\n                        sha: '',\n                        uri: commit.uri\n                    },\n                    line: line\n                };\n            }\n            else {\n                args = {\n                    repoPath: commit.repoPath,\n                    lhs: {\n                        sha: commit.previousSha !== undefined ? commit.previousSha : GitService.deletedOrMissingSha,\n                        uri: commit.previousUri!\n                    },\n                    rhs: {\n                        sha: commit.sha,\n                        uri: commit.uri\n                    },\n                    line: line\n                };\n            }\n        }\n        else {\n            args = argsOrCommit;\n        }\n\n        return super.getMarkdownCommandArgsCore<DiffWithCommandArgs>(Commands.DiffWith, args);\n    }\n\n    constructor() {\n        super(Commands.DiffWith);\n    }\n\n    async execute(editor?: TextEditor, uri?: Uri, args?: DiffWithCommandArgs): Promise<any> {\n        if (args === undefined || args.lhs === undefined || args.rhs === undefined) return undefined;\n\n        args = {\n            ...args,\n            lhs: { ...(args.lhs as DiffWithCommandArgsRevision) },\n            rhs: { ...(args.rhs as DiffWithCommandArgsRevision) },\n            showOptions: args.showOptions === undefined ? undefined : { ...args.showOptions }\n        };\n\n        if (args.repoPath === undefined) return undefined;\n\n        try {\n            let lhsSha = args.lhs.sha;\n            let rhsSha = args.rhs.sha;\n\n            [args.lhs.sha, args.rhs.sha] = await Promise.all([\n                await Container.git.resolveReference(args.repoPath, args.lhs.sha, args.lhs.uri),\n                await Container.git.resolveReference(args.repoPath, args.rhs.sha, args.rhs.uri)\n            ]);\n\n            if (args.lhs.sha !== GitService.deletedOrMissingSha) {\n                lhsSha = args.lhs.sha;\n            }\n\n            if (args.rhs.sha && args.rhs.sha !== GitService.deletedOrMissingSha) {\n                // Ensure that the file still exists in this commit\n                const status = await Container.git.getFileStatusForCommit(\n                    args.repoPath,\n                    args.rhs.uri.fsPath,\n                    args.rhs.sha\n                );\n                if (status !== undefined && status.status === 'D') {\n                    args.rhs.sha = GitService.deletedOrMissingSha;\n                }\n                else {\n                    rhsSha = args.rhs.sha;\n                }\n            }\n\n            const [lhs, rhs] = await Promise.all([\n                Container.git.getVersionedUri(args.repoPath, args.lhs.uri.fsPath, args.lhs.sha),\n                Container.git.getVersionedUri(args.repoPath, args.rhs.uri.fsPath, args.rhs.sha)\n            ]);\n\n            let rhsSuffix = GitService.shortenSha(rhsSha, { uncommitted: 'Working Tree' }) || '';\n            if (rhs === undefined) {\n                if (GitService.isUncommitted(args.rhs.sha)) {\n                    rhsSuffix = 'deleted';\n                }\n                else if (rhsSuffix.length === 0 && args.rhs.sha === GitService.deletedOrMissingSha) {\n                    rhsSuffix = 'not in Working Tree';\n                }\n                else {\n                    rhsSuffix = `deleted${rhsSuffix.length === 0 ? '' : ` in ${rhsSuffix}`}`;\n                }\n            }\n            else if (lhs === undefined) {\n                rhsSuffix = `added${rhsSuffix.length === 0 ? '' : ` in ${rhsSuffix}`}`;\n            }\n\n            let lhsSuffix = args.lhs.sha !== GitService.deletedOrMissingSha ? GitService.shortenSha(lhsSha) || '' : '';\n            if (lhs === undefined && args.rhs.sha.length === 0) {\n                if (rhs !== undefined) {\n                    lhsSuffix = lhsSuffix.length === 0 ? '' : `not in ${lhsSuffix}`;\n                    rhsSuffix = '';\n                }\n                else {\n                    lhsSuffix = `deleted${lhsSuffix.length === 0 ? '' : ` in ${lhsSuffix}`}`;\n                }\n            }\n\n            if (args.lhs.title === undefined && (lhs !== undefined || lhsSuffix.length !== 0)) {\n                args.lhs.title = `${paths.basename(args.lhs.uri.fsPath)}${lhsSuffix ? ` (${lhsSuffix})` : ''}`;\n            }\n            if (args.rhs.title === undefined) {\n                args.rhs.title = `${paths.basename(args.rhs.uri.fsPath)}${rhsSuffix ? ` (${rhsSuffix})` : ''}`;\n            }\n\n            const title =\n                args.lhs.title !== undefined && args.rhs.title !== undefined\n                    ? `${args.lhs.title} ${GlyphChars.ArrowLeftRightLong} ${args.rhs.title}`\n                    : args.lhs.title || args.rhs.title;\n\n            if (args.showOptions === undefined) {\n                args.showOptions = {};\n            }\n\n            if (args.showOptions.viewColumn === undefined) {\n                args.showOptions.viewColumn = ViewColumn.Active;\n            }\n\n            if (args.line !== undefined && args.line !== 0) {\n                args.showOptions.selection = new Range(args.line, 0, args.line, 0);\n            }\n\n            return await commands.executeCommand(\n                BuiltInCommands.Diff,\n                lhs === undefined\n                    ? GitUri.toRevisionUri(GitService.deletedOrMissingSha, args.lhs.uri.fsPath, args.repoPath)\n                    : lhs,\n                rhs === undefined\n                    ? GitUri.toRevisionUri(GitService.deletedOrMissingSha, args.rhs.uri.fsPath, args.repoPath)\n                    : rhs,\n                title,\n                args.showOptions\n            );\n        }\n        catch (ex) {\n            Logger.error(ex, 'DiffWithCommand', 'getVersionedFile');\n            return Messages.showGenericErrorMessage('Unable to open compare');\n        }\n    }\n}\n","'use strict';\nimport { commands, Range, TextDocumentShowOptions, TextEditor, Uri } from 'vscode';\nimport { Container } from '../container';\nimport { GitLogCommit, GitUri } from '../git/gitService';\nimport { Logger } from '../logger';\nimport { Messages } from '../messages';\nimport { ActiveEditorCommand, command, CommandContext, Commands, getCommandUri } from './common';\nimport { DiffWithCommandArgs } from './diffWith';\nimport { UriComparer } from '../comparers';\n\nexport interface DiffWithNextCommandArgs {\n    commit?: GitLogCommit;\n    range?: Range;\n\n    line?: number;\n    showOptions?: TextDocumentShowOptions;\n}\n\n@command()\nexport class DiffWithNextCommand extends ActiveEditorCommand {\n    constructor() {\n        super([Commands.DiffWithNext, Commands.DiffWithNextInDiff]);\n    }\n\n    protected preExecute(context: CommandContext, args: DiffWithNextCommandArgs = {}) {\n        if (\n            context.command === Commands.DiffWithNextInDiff\n            // || (context.editor !== undefined && context.editor.viewColumn === undefined)\n        ) {\n            // HACK: If in a diff, try to determine if we are on the right or left side\n            // If there is a context uri and it doesn't match the editor uri, assume we are on the left\n            // If on the left, use the editor uri and pretend we aren't in a diff\n            if (context.uri !== undefined && context.editor !== undefined && context.editor.document !== undefined) {\n                if (!UriComparer.equals(context.uri, context.editor.document.uri, { exact: true })) {\n                    return this.execute(context.editor, context.editor.document.uri, args);\n                }\n            }\n        }\n\n        return this.execute(context.editor, context.uri, args);\n    }\n\n    async execute(editor?: TextEditor, uri?: Uri, args: DiffWithNextCommandArgs = {}) {\n        uri = getCommandUri(uri, editor);\n        if (uri == null) return undefined;\n\n        args = { ...args };\n        if (args.line === undefined) {\n            args.line = editor == null ? 0 : editor.selection.active.line;\n        }\n\n        const gitUri = args.commit !== undefined ? GitUri.fromCommit(args.commit) : await GitUri.fromUri(uri);\n        try {\n            const diffUris = await Container.git.getNextDiffUris(gitUri.repoPath!, gitUri, gitUri.sha);\n\n            if (diffUris === undefined || diffUris.next === undefined) return undefined;\n\n            const diffArgs: DiffWithCommandArgs = {\n                repoPath: diffUris.current.repoPath,\n                lhs: {\n                    sha: diffUris.current.sha || '',\n                    uri: diffUris.current.documentUri()\n                },\n                rhs: {\n                    sha: diffUris.next.sha || '',\n                    uri: diffUris.next.documentUri()\n                },\n                line: args.line,\n                showOptions: args.showOptions\n            };\n            return commands.executeCommand(Commands.DiffWith, diffArgs);\n        }\n        catch (ex) {\n            Logger.error(\n                ex,\n                'DiffWithNextCommand',\n                `getNextDiffUris(${gitUri.repoPath}, ${gitUri.fsPath}, ${gitUri.sha})`\n            );\n            return Messages.showGenericErrorMessage('Unable to open compare');\n        }\n    }\n}\n","'use strict';\nimport { commands, TextDocumentShowOptions, TextEditor, Uri } from 'vscode';\nimport { Container } from '../container';\nimport { GitCommit, GitService, GitUri } from '../git/gitService';\nimport { Logger } from '../logger';\nimport { Messages } from '../messages';\nimport { ActiveEditorCommand, command, CommandContext, Commands, getCommandUri, openEditor } from './common';\nimport { DiffWithCommandArgs } from './diffWith';\nimport { UriComparer } from '../comparers';\n\nexport interface DiffWithPreviousCommandArgs {\n    commit?: GitCommit;\n\n    inDiffEditor?: boolean;\n    line?: number;\n    showOptions?: TextDocumentShowOptions;\n}\n\n@command()\nexport class DiffWithPreviousCommand extends ActiveEditorCommand {\n    constructor() {\n        super([Commands.DiffWithPrevious, Commands.DiffWithPreviousInDiff]);\n    }\n\n    protected preExecute(context: CommandContext, args: DiffWithPreviousCommandArgs = {}) {\n        if (\n            context.command === Commands.DiffWithPreviousInDiff\n            // || (context.editor !== undefined && context.editor.viewColumn === undefined)\n        ) {\n            // HACK: If in a diff, try to determine if we are on the right or left side\n            // If there is a context uri and it doesn't match the editor uri, assume we are on the left\n            // If on the left, use the editor uri and pretend we aren't in a diff\n            if (context.uri !== undefined && context.editor !== undefined && context.editor.document !== undefined) {\n                if (!UriComparer.equals(context.uri, context.editor.document.uri, { exact: true })) {\n                    return this.execute(context.editor, context.editor.document.uri, args);\n                }\n            }\n            args.inDiffEditor = true;\n        }\n\n        return this.execute(context.editor, context.uri, args);\n    }\n\n    async execute(editor?: TextEditor, uri?: Uri, args: DiffWithPreviousCommandArgs = {}) {\n        uri = getCommandUri(uri, editor);\n        if (uri == null) return undefined;\n\n        args = { ...args };\n        if (args.line === undefined) {\n            args.line = editor == null ? 0 : editor.selection.active.line;\n        }\n\n        const gitUri = args.commit !== undefined ? GitUri.fromCommit(args.commit) : await GitUri.fromUri(uri);\n        try {\n            const diffUris = await Container.git.getPreviousDiffUris(\n                gitUri.repoPath!,\n                gitUri,\n                gitUri.sha,\n                // If we are in a diff editor, assume we are on the right side, and need to skip back 1 more revisions\n                args.inDiffEditor ? 1 : 0\n            );\n\n            if (diffUris === undefined || diffUris.previous === undefined) {\n                if (diffUris === undefined) return Messages.showCommitHasNoPreviousCommitWarningMessage();\n\n                // If we have no previous and the current is the working file, just open the working file\n                if (diffUris.current.sha === undefined) {\n                    return openEditor(diffUris.current, args.showOptions);\n                }\n\n                if (!diffUris.current.isUncommittedStaged) {\n                    return Messages.showCommitHasNoPreviousCommitWarningMessage();\n                }\n\n                // If we have no previous and the current is staged, then diff staged with missing\n                diffUris.previous = GitUri.fromFile(\n                    diffUris.current.fileName,\n                    diffUris.current.repoPath!,\n                    GitService.deletedOrMissingSha\n                );\n            }\n\n            const diffArgs: DiffWithCommandArgs = {\n                repoPath: diffUris.current.repoPath,\n                lhs: {\n                    sha: diffUris.previous.sha || '',\n                    uri: diffUris.previous.documentUri()\n                },\n                rhs: {\n                    sha: diffUris.current.sha || '',\n                    uri: diffUris.current.documentUri()\n                },\n                line: args.line,\n                showOptions: args.showOptions\n            };\n            return commands.executeCommand(Commands.DiffWith, diffArgs);\n        }\n        catch (ex) {\n            Logger.error(\n                ex,\n                'DiffWithPreviousCommand',\n                `getPreviousDiffUris(${gitUri.repoPath}, ${gitUri.fsPath}, ${gitUri.sha})`\n            );\n            return Messages.showGenericErrorMessage('Unable to open compare');\n        }\n    }\n}\n","'use strict';\nimport * as paths from 'path';\nimport { commands, TextDocumentShowOptions, TextEditor, Uri } from 'vscode';\nimport { GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { GitService, GitUri } from '../git/gitService';\nimport { Messages } from '../messages';\nimport { CommandQuickPickItem, ReferencesQuickPick } from '../quickpicks';\nimport { Strings } from '../system';\nimport { ActiveEditorCommand, command, Commands, getCommandUri } from './common';\nimport { DiffWithCommandArgs } from './diffWith';\n\nexport interface DiffWithRefCommandArgs {\n    line?: number;\n    showOptions?: TextDocumentShowOptions;\n\n    goBackCommand?: CommandQuickPickItem;\n}\n\n@command()\nexport class DiffWithRefCommand extends ActiveEditorCommand {\n    constructor() {\n        super([Commands.DiffWithRef, Commands.DiffWithBranch]);\n    }\n\n    async execute(editor?: TextEditor, uri?: Uri, args: DiffWithRefCommandArgs = {}) {\n        uri = getCommandUri(uri, editor);\n        if (uri == null) return undefined;\n\n        args = { ...args };\n        if (args.line === undefined) {\n            args.line = editor == null ? 0 : editor.selection.active.line;\n        }\n\n        const gitUri = await GitUri.fromUri(uri);\n        if (!gitUri.repoPath) return Messages.showNoRepositoryWarningMessage('Unable to open file compare');\n\n        const pick = await new ReferencesQuickPick(gitUri.repoPath).show(\n            `Compare ${paths.basename(gitUri.fsPath)} with${GlyphChars.Ellipsis}`,\n            {\n                allowEnteringRefs: true,\n                goBack: args.goBackCommand\n            }\n        );\n        if (pick === undefined) return undefined;\n\n        if (pick instanceof CommandQuickPickItem) return pick.execute();\n\n        const ref = pick.ref;\n        if (ref === undefined) return undefined;\n\n        let renamedUri: Uri | undefined;\n        let renamedTitle: string | undefined;\n\n        // Check to see if this file has been renamed\n        const files = await Container.git.getDiffStatus(gitUri.repoPath, 'HEAD', ref, { filter: 'R' });\n        if (files !== undefined) {\n            const fileName = Strings.normalizePath(paths.relative(gitUri.repoPath, gitUri.fsPath));\n            const rename = files.find(s => s.fileName === fileName);\n            if (rename !== undefined && rename.originalFileName !== undefined) {\n                renamedUri = GitUri.resolveToUri(rename.originalFileName, gitUri.repoPath);\n                renamedTitle = `${paths.basename(rename.originalFileName)} (${GitService.shortenSha(ref)})`;\n            }\n        }\n\n        const diffArgs: DiffWithCommandArgs = {\n            repoPath: gitUri.repoPath,\n            lhs: {\n                sha: pick.remote ? `remotes/${ref}` : ref,\n                uri: renamedUri || (gitUri as Uri),\n                title: renamedTitle || `${paths.basename(gitUri.fsPath)} (${GitService.shortenSha(ref)})`\n            },\n            rhs: {\n                sha: '',\n                uri: gitUri as Uri\n            },\n            line: args.line,\n            showOptions: args.showOptions\n        };\n        return commands.executeCommand(Commands.DiffWith, diffArgs);\n    }\n}\n","'use strict';\nimport { commands, TextDocumentShowOptions, TextEditor, Uri, window } from 'vscode';\nimport { GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { GitBranch, GitReference, GitTag, GitUri } from '../git/gitService';\nimport { Logger } from '../logger';\nimport { Messages } from '../messages';\nimport { CommandQuickPickItem, FileHistoryQuickPick, ShowFileHistoryFromQuickPickItem } from '../quickpicks';\nimport { Iterables, Strings } from '../system';\nimport { ActiveEditorCommand, command, Commands, getCommandUri } from './common';\nimport { DiffWithCommandArgs } from './diffWith';\n\nexport interface DiffWithRevisionCommandArgs {\n    reference?: GitBranch | GitTag | GitReference;\n    maxCount?: number;\n\n    line?: number;\n    showOptions?: TextDocumentShowOptions;\n    nextPageCommand?: CommandQuickPickItem;\n}\n\n@command()\nexport class DiffWithRevisionCommand extends ActiveEditorCommand {\n    constructor() {\n        super(Commands.DiffWithRevision);\n    }\n\n    async execute(editor?: TextEditor, uri?: Uri, args: DiffWithRevisionCommandArgs = {}): Promise<any> {\n        uri = getCommandUri(uri, editor);\n        if (uri == null) return undefined;\n\n        args = { ...args };\n        if (args.line === undefined) {\n            args.line = editor == null ? 0 : editor.selection.active.line;\n        }\n\n        const gitUri = await GitUri.fromUri(uri);\n\n        const placeHolder = `Compare ${gitUri.getFormattedPath({\n            suffix: args.reference ? ` (${args.reference.name})` : undefined\n        })}${gitUri.sha ? ` ${Strings.pad(GlyphChars.Dot, 1, 1)} ${gitUri.shortSha}` : ''} with revision${\n            GlyphChars.Ellipsis\n        }`;\n\n        const progressCancellation = FileHistoryQuickPick.showProgress(placeHolder);\n        try {\n            const log = await Container.git.getLogForFile(gitUri.repoPath, gitUri.fsPath, {\n                maxCount: args.maxCount,\n                ref: (args.reference && args.reference.ref) || gitUri.sha\n            });\n            if (log === undefined) {\n                if (args.reference) {\n                    return window.showWarningMessage(`The file could not be found in ${args.reference.name}`);\n                }\n                return Messages.showFileNotUnderSourceControlWarningMessage('Unable to open history compare');\n            }\n\n            if (progressCancellation.token.isCancellationRequested) return undefined;\n\n            let previousPageCommand: CommandQuickPickItem | undefined = undefined;\n\n            let commandArgs: DiffWithRevisionCommandArgs;\n            if (log.truncated) {\n                commandArgs = { ...args };\n                const npc = new CommandQuickPickItem(\n                    {\n                        label: '$(arrow-right) Show Next Commits',\n                        description: `${Strings.pad(GlyphChars.Dash, 2, 3)} shows ${log.maxCount} newer commits`\n                    },\n                    Commands.DiffWithRevision,\n                    [uri, commandArgs]\n                );\n\n                const last = Iterables.last(log.commits.values());\n                if (last != null) {\n                    commandArgs = { ...args, nextPageCommand: npc };\n                    previousPageCommand = new CommandQuickPickItem(\n                        {\n                            label: '$(arrow-left) Show Previous Commits',\n                            description: `${Strings.pad(GlyphChars.Dash, 2, 3)} shows ${log.maxCount} older commits`\n                        },\n                        Commands.DiffWithRevision,\n                        [new GitUri(uri, last), commandArgs]\n                    );\n                }\n            }\n\n            commandArgs = { ...args };\n            const icon =\n                args.reference instanceof GitTag\n                    ? '$(tag) '\n                    : args.reference instanceof GitBranch\n                    ? '$(git-branch) '\n                    : '';\n            const currentCommand = new CommandQuickPickItem(\n                {\n                    label: `go back ${GlyphChars.ArrowBack}`,\n                    description: `${Strings.pad(GlyphChars.Dash, 2, 3)} to history of ${\n                        GlyphChars.Space\n                    }$(file-text) ${gitUri.getFormattedPath()}${\n                        args.reference\n                            ? ` from ${GlyphChars.Space}${icon}${args.reference.name}`\n                            : gitUri.sha\n                            ? ` from ${GlyphChars.Space}$(git-commit) ${gitUri.shortSha}`\n                            : ''\n                    }`\n                },\n                Commands.DiffWithRevision,\n                [uri, commandArgs]\n            );\n\n            commandArgs = { ...args, maxCount: 0 };\n            const pick = await FileHistoryQuickPick.show(log, gitUri, placeHolder, {\n                pickerOnly: true,\n                progressCancellation: progressCancellation,\n                currentCommand: currentCommand,\n                nextPageCommand: args.nextPageCommand,\n                previousPageCommand: previousPageCommand,\n                showAllCommand: log.truncated\n                    ? new CommandQuickPickItem(\n                          {\n                              label: '$(sync) Show All Commits',\n                              description: `${Strings.pad(GlyphChars.Dash, 2, 3)} this may take a while`\n                          },\n                          Commands.DiffWithRevision,\n                          [uri, commandArgs]\n                      )\n                    : undefined\n            });\n            if (pick === undefined) return undefined;\n\n            if (pick instanceof ShowFileHistoryFromQuickPickItem) {\n                const reference = await pick.execute();\n                if (reference === undefined) return undefined;\n                if (reference instanceof CommandQuickPickItem) return reference.execute();\n\n                commandArgs = {\n                    ...args,\n                    reference: reference.item\n                };\n                return commands.executeCommand(Commands.DiffWithRevision, gitUri, commandArgs);\n            }\n\n            if (pick instanceof CommandQuickPickItem) return pick.execute();\n\n            const ref = pick.commit.sha;\n\n            const diffArgs: DiffWithCommandArgs = {\n                repoPath: gitUri.repoPath,\n                lhs: {\n                    sha: ref,\n                    uri: gitUri as Uri\n                },\n                rhs: {\n                    sha: '',\n                    uri: gitUri as Uri\n                },\n                line: args.line,\n                showOptions: args.showOptions\n            };\n            return await commands.executeCommand(Commands.DiffWith, diffArgs);\n        }\n        catch (ex) {\n            Logger.error(ex, 'DiffWithRevisionCommand');\n            return Messages.showGenericErrorMessage('Unable to open compare');\n        }\n        finally {\n            progressCancellation.cancel();\n        }\n    }\n}\n","'use strict';\nimport { commands, TextDocumentShowOptions, TextEditor, Uri, window } from 'vscode';\nimport { Container } from '../container';\nimport { GitCommit, GitService, GitUri } from '../git/gitService';\nimport { Logger } from '../logger';\nimport { Messages } from '../messages';\nimport { ActiveEditorCommand, command, CommandContext, Commands, getCommandUri } from './common';\nimport { DiffWithCommandArgs } from './diffWith';\nimport { UriComparer } from '../comparers';\n\nexport interface DiffWithWorkingCommandArgs {\n    commit?: GitCommit;\n\n    line?: number;\n    showOptions?: TextDocumentShowOptions;\n}\n\n@command()\nexport class DiffWithWorkingCommand extends ActiveEditorCommand {\n    constructor() {\n        super([Commands.DiffWithWorking, Commands.DiffWithWorkingInDiff]);\n    }\n\n    protected preExecute(context: CommandContext, args: DiffWithWorkingCommandArgs = {}) {\n        if (\n            context.command === Commands.DiffWithWorkingInDiff\n            // || (context.editor !== undefined && context.editor.viewColumn === undefined)\n        ) {\n            // HACK: If in a diff, try to determine if we are on the right or left side\n            // If there is a context uri and it doesn't match the editor uri, assume we are on the left\n            // If on the left, use the editor uri and pretend we aren't in a diff\n            if (context.uri !== undefined && context.editor !== undefined && context.editor.document !== undefined) {\n                if (!UriComparer.equals(context.uri, context.editor.document.uri, { exact: true })) {\n                    return this.execute(context.editor, context.editor.document.uri, args);\n                }\n            }\n        }\n\n        return this.execute(context.editor, context.uri, args);\n    }\n\n    async execute(editor?: TextEditor, uri?: Uri, args: DiffWithWorkingCommandArgs = {}): Promise<any> {\n        uri = getCommandUri(uri, editor);\n        if (uri == null) return undefined;\n\n        const gitUri = await GitUri.fromUri(uri);\n\n        args = { ...args };\n        if (args.line === undefined) {\n            args.line = editor == null ? 0 : editor.selection.active.line;\n        }\n\n        if (args.commit === undefined || args.commit.isUncommitted) {\n            // If the sha is missing, just let the user know the file matches\n            if (gitUri.sha === undefined) return window.showInformationMessage('File matches the working tree');\n            if (gitUri.sha === GitService.deletedOrMissingSha) {\n                return window.showWarningMessage('Unable to open compare. File has been deleted from the working tree');\n            }\n\n            // If we are a fake \"staged\" sha, check the status\n            let ref: string | undefined = gitUri.sha;\n            if (gitUri.isUncommittedStaged) {\n                ref = undefined;\n\n                const status = await Container.git.getStatusForFile(gitUri.repoPath!, gitUri.fsPath);\n                if (status !== undefined && status.indexStatus !== undefined) {\n                    const diffArgs: DiffWithCommandArgs = {\n                        repoPath: gitUri.repoPath,\n                        lhs: {\n                            sha: GitService.uncommittedStagedSha,\n                            uri: gitUri.documentUri()\n                        },\n                        rhs: {\n                            sha: '',\n                            uri: gitUri.documentUri()\n                        },\n                        line: args.line,\n                        showOptions: args.showOptions\n                    };\n\n                    return commands.executeCommand(Commands.DiffWith, diffArgs);\n                }\n            }\n\n            try {\n                args.commit = await Container.git.getCommitForFile(gitUri.repoPath, gitUri.fsPath, {\n                    ref: ref,\n                    firstIfNotFound: true\n                });\n                if (args.commit === undefined) {\n                    return Messages.showFileNotUnderSourceControlWarningMessage('Unable to open compare');\n                }\n            }\n            catch (ex) {\n                Logger.error(\n                    ex,\n                    'DiffWithWorkingCommand',\n                    `getLogCommit(${gitUri.repoPath}, ${gitUri.fsPath}, ${ref})`\n                );\n                return Messages.showGenericErrorMessage('Unable to open compare');\n            }\n        }\n\n        const workingUri = await args.commit.getWorkingUri();\n        if (workingUri === undefined) {\n            return window.showWarningMessage('Unable to open compare. File has been deleted from the working tree');\n        }\n\n        const diffArgs: DiffWithCommandArgs = {\n            repoPath: args.commit.repoPath,\n            lhs: {\n                sha: args.commit.sha,\n                uri: args.commit.uri\n            },\n            rhs: {\n                sha: '',\n                uri: workingUri\n            },\n            line: args.line,\n            showOptions: args.showOptions\n        };\n        return commands.executeCommand(Commands.DiffWith, diffArgs);\n    }\n}\n","'use strict';\nimport { env, SourceControlResourceState, Uri, window } from 'vscode';\nimport { GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { GitService, GitUri } from '../git/gitService';\nimport { Logger } from '../logger';\nimport { Messages } from '../messages';\nimport { Arrays } from '../system';\nimport {\n    command,\n    Command,\n    CommandContext,\n    Commands,\n    getRepoPathOrPrompt,\n    isCommandViewContextWithFileCommit,\n    isCommandViewContextWithFileRefs\n} from './common';\n\nenum Status {\n    INDEX_MODIFIED,\n    INDEX_ADDED,\n    INDEX_DELETED,\n    INDEX_RENAMED,\n    INDEX_COPIED,\n\n    MODIFIED,\n    DELETED,\n    UNTRACKED,\n    IGNORED,\n\n    ADDED_BY_US,\n    ADDED_BY_THEM,\n    DELETED_BY_US,\n    DELETED_BY_THEM,\n    BOTH_ADDED,\n    BOTH_DELETED,\n    BOTH_MODIFIED\n}\n\nenum ResourceGroupType {\n    Merge,\n    Index,\n    WorkingTree\n}\n\ninterface Resource extends SourceControlResourceState {\n    readonly resourceGroupType: ResourceGroupType;\n    readonly type: Status;\n}\n\ninterface ExternalDiffFile {\n    uri: Uri;\n    staged: boolean;\n    ref1?: string;\n    ref2?: string;\n}\n\nexport interface ExternalDiffCommandArgs {\n    files?: ExternalDiffFile[];\n}\n\n@command()\nexport class ExternalDiffCommand extends Command {\n    constructor() {\n        super([Commands.ExternalDiff, Commands.ExternalDiffAll]);\n    }\n\n    protected async preExecute(context: CommandContext, args: ExternalDiffCommandArgs = {}) {\n        if (isCommandViewContextWithFileCommit(context)) {\n            args = { ...args };\n\n            const ref1 = GitService.isUncommitted(context.node.commit.previousFileSha)\n                ? ''\n                : context.node.commit.previousFileSha;\n            const ref2 = context.node.commit.isUncommitted ? '' : context.node.commit.sha;\n\n            args.files = [\n                {\n                    uri: GitUri.fromFile(context.node.file, context.node.file.repoPath || context.node.repoPath),\n                    staged: context.node.commit.isUncommittedStaged || context.node.file.indexStatus !== undefined,\n                    ref1: ref1,\n                    ref2: ref2\n                }\n            ];\n\n            return this.execute(args);\n        }\n\n        if (isCommandViewContextWithFileRefs(context)) {\n            args = { ...args };\n\n            args.files = [\n                {\n                    uri: GitUri.fromFile(context.node.file, context.node.file.repoPath || context.node.repoPath),\n                    staged: context.node.file.indexStatus !== undefined,\n                    ref1: context.node.ref1,\n                    ref2: context.node.ref2\n                }\n            ];\n\n            return this.execute(args);\n        }\n\n        if (args.files === undefined) {\n            if (context.type === 'scm-states') {\n                args = { ...args };\n                args.files = context.scmResourceStates.map(r => ({\n                    uri: r.resourceUri,\n                    staged: (r as Resource).resourceGroupType === ResourceGroupType.Index\n                }));\n            }\n            else if (context.type === 'scm-groups') {\n                args = { ...args };\n                args.files = Arrays.filterMap(context.scmResourceGroups[0].resourceStates, r =>\n                    this.isModified(r)\n                        ? {\n                              uri: r.resourceUri,\n                              staged: (r as Resource).resourceGroupType === ResourceGroupType.Index\n                          }\n                        : undefined\n                );\n            }\n        }\n\n        if (context.command === Commands.ExternalDiffAll) {\n            if (args.files === undefined) {\n                const repoPath = await getRepoPathOrPrompt(\n                    undefined,\n                    `Open changes from which repository${GlyphChars.Ellipsis}`\n                );\n                if (!repoPath) return undefined;\n\n                const status = await Container.git.getStatusForRepo(repoPath);\n                if (status === undefined) {\n                    return window.showInformationMessage(\"The repository doesn't have any changes\");\n                }\n\n                args.files = [];\n\n                for (const file of status.files) {\n                    if (file.indexStatus === 'M') {\n                        args.files.push({ uri: file.uri, staged: true });\n                    }\n\n                    if (file.workingTreeStatus === 'M') {\n                        args.files.push({ uri: file.uri, staged: false });\n                    }\n                }\n            }\n        }\n\n        return this.execute(args);\n    }\n\n    private isModified(resource: SourceControlResourceState) {\n        const status = (resource as Resource).type;\n        return status === Status.BOTH_MODIFIED || status === Status.INDEX_MODIFIED || status === Status.MODIFIED;\n    }\n\n    async execute(args: ExternalDiffCommandArgs = {}) {\n        try {\n            let repoPath;\n            if (args.files === undefined) {\n                const editor = window.activeTextEditor;\n                if (editor === undefined) return undefined;\n\n                repoPath = await Container.git.getRepoPathOrActive(undefined, editor);\n                if (!repoPath) return undefined;\n\n                const uri = editor.document.uri;\n                const status = await Container.git.getStatusForFile(repoPath, uri.fsPath);\n                if (status === undefined) {\n                    return window.showInformationMessage(\"The current file doesn't have any changes\");\n                }\n\n                args.files = [];\n                if (status.indexStatus === 'M') {\n                    args.files.push({ uri: status.uri, staged: true });\n                }\n\n                if (status.workingTreeStatus === 'M') {\n                    args.files.push({ uri: status.uri, staged: false });\n                }\n            }\n            else {\n                repoPath = await Container.git.getRepoPath(args.files[0].uri.fsPath);\n                if (!repoPath) return undefined;\n            }\n\n            const tool = await Container.git.getDiffTool(repoPath);\n            if (tool === undefined) {\n                const result = await window.showWarningMessage(\n                    'Unable to open changes in diff tool. No Git diff tool is configured',\n                    'View Git Docs'\n                );\n                if (!result) return undefined;\n\n                return env.openExternal(\n                    Uri.parse('https://git-scm.com/docs/git-config#Documentation/git-config.txt-difftool')\n                );\n            }\n\n            for (const file of args.files) {\n                void Container.git.openDiffTool(repoPath, file.uri, {\n                    ref1: file.ref1,\n                    ref2: file.ref2,\n                    staged: file.staged,\n                    tool: tool\n                });\n            }\n\n            return undefined;\n        }\n        catch (ex) {\n            Logger.error(ex, 'ExternalDiffCommand');\n            return Messages.showGenericErrorMessage('Unable to open changes in diff tool');\n        }\n    }\n}\n","'use strict';\nimport { command, Command, CommandContext, Commands, isCommandViewContextWithContributor } from './common';\nimport { Container } from '../container';\n\nexport interface InviteToLiveShareCommandArgs {\n    email?: string;\n}\n\n@command()\nexport class InviteToLiveShareCommand extends Command {\n    static getMarkdownCommandArgs(args: InviteToLiveShareCommandArgs): string;\n    static getMarkdownCommandArgs(email: string | undefined): string;\n    static getMarkdownCommandArgs(argsOrEmail: InviteToLiveShareCommandArgs | string | undefined): string {\n        const args =\n            argsOrEmail === undefined || typeof argsOrEmail === 'string' ? { email: argsOrEmail } : argsOrEmail;\n        return super.getMarkdownCommandArgsCore<InviteToLiveShareCommandArgs>(Commands.InviteToLiveShare, args);\n    }\n\n    constructor() {\n        super(Commands.InviteToLiveShare);\n    }\n\n    protected preExecute(context: CommandContext, args: InviteToLiveShareCommandArgs = {}) {\n        if (isCommandViewContextWithContributor(context)) {\n            args = { ...args };\n            args.email = context.node.contributor.email;\n            return this.execute(args);\n        }\n\n        return this.execute(args);\n    }\n\n    async execute(args: InviteToLiveShareCommandArgs = {}) {\n        if (args.email) {\n            const contact = await Container.vsls.getContact(args.email);\n            if (contact != null) {\n                return contact.invite();\n            }\n        }\n\n        return Container.vsls.startSession();\n    }\n}\n","'use strict';\nimport { commands, TextEditor, Uri, window } from 'vscode';\nimport { GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { GitUri, RemoteResourceType } from '../git/gitService';\nimport { Logger } from '../logger';\nimport {\n    ActiveEditorCommand,\n    command,\n    CommandContext,\n    Commands,\n    getCommandUri,\n    getRepoPathOrActiveOrPrompt,\n    isCommandViewContextWithRemote\n} from './common';\nimport { OpenInRemoteCommandArgs } from './openInRemote';\n\nexport interface OpenBranchesInRemoteCommandArgs {\n    remote?: string;\n}\n\n@command()\nexport class OpenBranchesInRemoteCommand extends ActiveEditorCommand {\n    constructor() {\n        super(Commands.OpenBranchesInRemote);\n    }\n\n    protected preExecute(context: CommandContext, args: OpenBranchesInRemoteCommandArgs = {}) {\n        if (isCommandViewContextWithRemote(context)) {\n            args = { ...args };\n            args.remote = context.node.remote.name;\n        }\n\n        return this.execute(context.editor, context.uri, args);\n    }\n\n    async execute(editor?: TextEditor, uri?: Uri, args: OpenBranchesInRemoteCommandArgs = {}) {\n        uri = getCommandUri(uri, editor);\n\n        const gitUri = uri && (await GitUri.fromUri(uri));\n\n        const repoPath = await getRepoPathOrActiveOrPrompt(\n            gitUri,\n            editor,\n            `Open branches on remote for which repository${GlyphChars.Ellipsis}`\n        );\n        if (!repoPath) return undefined;\n\n        try {\n            const remotes = await Container.git.getRemotes(repoPath);\n\n            const commandArgs: OpenInRemoteCommandArgs = {\n                resource: {\n                    type: RemoteResourceType.Branches\n                },\n                remote: args.remote,\n                remotes: remotes\n            };\n            return commands.executeCommand(Commands.OpenInRemote, uri, commandArgs);\n        }\n        catch (ex) {\n            Logger.error(ex, 'OpenBranchesInRemoteCommand');\n            return window.showErrorMessage(\n                'Unable to open branches on remote provider. See output channel for more details'\n            );\n        }\n    }\n}\n","'use strict';\nimport { commands, TextEditor, Uri, window } from 'vscode';\nimport { GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { GitUri, RemoteResourceType } from '../git/gitService';\nimport { Logger } from '../logger';\nimport { CommandQuickPickItem, ReferencesQuickPick } from '../quickpicks';\nimport {\n    ActiveEditorCommand,\n    command,\n    CommandContext,\n    Commands,\n    getCommandUri,\n    getRepoPathOrActiveOrPrompt,\n    isCommandViewContextWithBranch\n} from './common';\nimport { OpenInRemoteCommandArgs } from './openInRemote';\n\nexport interface OpenBranchInRemoteCommandArgs {\n    branch?: string;\n    remote?: string;\n}\n\n@command()\nexport class OpenBranchInRemoteCommand extends ActiveEditorCommand {\n    constructor() {\n        super(Commands.OpenBranchInRemote);\n    }\n\n    protected preExecute(context: CommandContext, args: OpenBranchInRemoteCommandArgs = {}) {\n        if (isCommandViewContextWithBranch(context)) {\n            args = { ...args };\n            args.branch = context.node.branch.name;\n            args.remote = context.node.branch.getRemote();\n        }\n\n        return this.execute(context.editor, context.uri, args);\n    }\n\n    async execute(editor?: TextEditor, uri?: Uri, args: OpenBranchInRemoteCommandArgs = {}) {\n        uri = getCommandUri(uri, editor);\n\n        const gitUri = uri && (await GitUri.fromUri(uri));\n\n        const repoPath = await getRepoPathOrActiveOrPrompt(\n            gitUri,\n            editor,\n            `Open branch on remote for which repository${GlyphChars.Ellipsis}`\n        );\n        if (!repoPath) return undefined;\n\n        try {\n            if (args.branch === undefined) {\n                args = { ...args };\n\n                const pick = await new ReferencesQuickPick(repoPath).show(\n                    `Open which branch on remote${GlyphChars.Ellipsis}`,\n                    {\n                        autoPick: true,\n                        filters: {\n                            branches: b => b.tracking !== undefined\n                        },\n                        include: 'branches'\n                    }\n                );\n                if (pick === undefined || pick instanceof CommandQuickPickItem) return undefined;\n\n                args.branch = pick.ref;\n            }\n\n            const remotes = await Container.git.getRemotes(repoPath);\n\n            const commandArgs: OpenInRemoteCommandArgs = {\n                resource: {\n                    type: RemoteResourceType.Branch,\n                    branch: args.branch || 'HEAD'\n                },\n                remote: args.remote,\n                remotes: remotes\n            };\n            return commands.executeCommand(Commands.OpenInRemote, uri, commandArgs);\n        }\n        catch (ex) {\n            Logger.error(ex, 'OpenBranchInRemoteCommandArgs');\n            return window.showErrorMessage(\n                'Unable to open branch on remote provider. See output channel for more details'\n            );\n        }\n    }\n}\n","'use strict';\nimport { TextEditor, Uri, window } from 'vscode';\nimport { GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { Logger } from '../logger';\nimport { Messages } from '../messages';\nimport { Arrays } from '../system';\nimport { ActiveEditorCommand, command, Commands, getCommandUri, getRepoPathOrPrompt, openEditor } from './common';\n\nexport interface OpenChangedFilesCommandArgs {\n    uris?: Uri[];\n}\n\n@command()\nexport class OpenChangedFilesCommand extends ActiveEditorCommand {\n    constructor() {\n        super(Commands.OpenChangedFiles);\n    }\n\n    async execute(editor?: TextEditor, uri?: Uri, args: OpenChangedFilesCommandArgs = {}) {\n        uri = getCommandUri(uri, editor);\n\n        try {\n            if (args.uris === undefined) {\n                args = { ...args };\n\n                const repoPath = await getRepoPathOrPrompt(\n                    undefined,\n                    `Open all files changed in which repository${GlyphChars.Ellipsis}`\n                );\n                if (!repoPath) return undefined;\n\n                const status = await Container.git.getStatusForRepo(repoPath);\n                if (status === undefined) return window.showWarningMessage('Unable to open changed files');\n\n                args.uris = Arrays.filterMap(status.files, f => (f.status !== 'D' ? f.uri : undefined));\n            }\n\n            for (const uri of args.uris) {\n                await openEditor(uri, { preserveFocus: true, preview: false });\n            }\n\n            return undefined;\n        }\n        catch (ex) {\n            Logger.error(ex, 'OpenChangedFilesCommand');\n            return Messages.showGenericErrorMessage('Unable to open all changed files');\n        }\n    }\n}\n","'use strict';\nimport { commands, TextEditor, Uri, window } from 'vscode';\nimport { Container } from '../container';\nimport { GitUri, RemoteResourceType } from '../git/gitService';\nimport { Logger } from '../logger';\nimport { Messages } from '../messages';\nimport {\n    ActiveEditorCommand,\n    command,\n    CommandContext,\n    Commands,\n    getCommandUri,\n    isCommandViewContextWithCommit\n} from './common';\nimport { OpenInRemoteCommandArgs } from './openInRemote';\n\nexport interface OpenCommitInRemoteCommandArgs {\n    sha?: string;\n}\n\n@command()\nexport class OpenCommitInRemoteCommand extends ActiveEditorCommand {\n    static getMarkdownCommandArgs(sha: string): string;\n    static getMarkdownCommandArgs(args: OpenCommitInRemoteCommandArgs): string;\n    static getMarkdownCommandArgs(argsOrSha: OpenCommitInRemoteCommandArgs | string): string {\n        const args: OpenCommitInRemoteCommandArgs = typeof argsOrSha === 'string' ? { sha: argsOrSha } : argsOrSha;\n        return super.getMarkdownCommandArgsCore<OpenCommitInRemoteCommandArgs>(Commands.OpenCommitInRemote, args);\n    }\n\n    constructor() {\n        super(Commands.OpenCommitInRemote);\n    }\n\n    protected preExecute(context: CommandContext, args: OpenCommitInRemoteCommandArgs = {}) {\n        if (isCommandViewContextWithCommit(context)) {\n            args = { ...args };\n            args.sha = context.node.commit.sha;\n            return this.execute(context.editor, context.node.commit.uri, args);\n        }\n\n        return this.execute(context.editor, context.uri, args);\n    }\n\n    async execute(editor?: TextEditor, uri?: Uri, args: OpenCommitInRemoteCommandArgs = {}) {\n        uri = getCommandUri(uri, editor);\n        if (uri == null) return undefined;\n        const gitUri = await GitUri.fromUri(uri);\n        if (!gitUri.repoPath) return undefined;\n\n        try {\n            if (args.sha === undefined) {\n                const blameline = editor == null ? 0 : editor.selection.active.line;\n                if (blameline < 0) return undefined;\n\n                const blame =\n                    editor && editor.document && editor.document.isDirty\n                        ? await Container.git.getBlameForLineContents(gitUri, blameline, editor.document.getText())\n                        : await Container.git.getBlameForLine(gitUri, blameline);\n                if (blame === undefined) {\n                    return Messages.showFileNotUnderSourceControlWarningMessage(\n                        'Unable to open commit on remote provider'\n                    );\n                }\n\n                let commit = blame.commit;\n                // If the line is uncommitted, find the previous commit\n                if (commit.isUncommitted) {\n                    commit = commit.with({\n                        sha: commit.previousSha,\n                        fileName: commit.previousFileName,\n                        previousSha: null,\n                        previousFileName: null\n                    });\n                }\n\n                args.sha = commit.sha;\n            }\n\n            const remotes = await Container.git.getRemotes(gitUri.repoPath);\n\n            const commandArgs: OpenInRemoteCommandArgs = {\n                resource: {\n                    type: RemoteResourceType.Commit,\n                    sha: args.sha\n                },\n                remotes: remotes\n            };\n            return commands.executeCommand(Commands.OpenInRemote, uri, commandArgs);\n        }\n        catch (ex) {\n            Logger.error(ex, 'OpenCommitInRemoteCommand');\n            return window.showErrorMessage(\n                'Unable to open commit on remote provider. See output channel for more details'\n            );\n        }\n    }\n}\n","'use strict';\nimport { commands, Range, TextEditor, Uri, window } from 'vscode';\nimport { GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { GitService, GitUri, RemoteResourceType } from '../git/gitService';\nimport { Logger } from '../logger';\nimport { CommandQuickPickItem, ReferencesQuickPick } from '../quickpicks';\nimport {\n    ActiveEditorCommand,\n    command,\n    CommandContext,\n    Commands,\n    getCommandUri,\n    isCommandViewContextWithBranch,\n    isCommandViewContextWithCommit\n} from './common';\nimport { OpenInRemoteCommandArgs } from './openInRemote';\nimport { Strings } from '../system';\n\nexport interface OpenFileInRemoteCommandArgs {\n    branch?: string;\n    clipboard?: boolean;\n    range?: boolean;\n    sha?: string;\n}\n\n@command()\nexport class OpenFileInRemoteCommand extends ActiveEditorCommand {\n    constructor() {\n        super(Commands.OpenFileInRemote);\n    }\n\n    protected preExecute(context: CommandContext, args: OpenFileInRemoteCommandArgs = { range: true }) {\n        if (isCommandViewContextWithCommit(context)) {\n            args = { ...args };\n            args.range = false;\n            if (isCommandViewContextWithBranch(context)) {\n                args.branch = context.node.branch !== undefined ? context.node.branch.name : undefined;\n            }\n\n            return this.execute(\n                context.editor,\n                context.node.commit.isFile ? context.node.commit.uri : context.node.uri,\n                args\n            );\n        }\n\n        return this.execute(context.editor, context.uri, args);\n    }\n\n    async execute(editor?: TextEditor, uri?: Uri, args: OpenFileInRemoteCommandArgs = { range: true }) {\n        uri = getCommandUri(uri, editor);\n        if (uri == null) return undefined;\n\n        const gitUri = await GitUri.fromUri(uri);\n        if (!gitUri.repoPath) return undefined;\n\n        try {\n            const remotes = await Container.git.getRemotes(gitUri.repoPath);\n            const range =\n                args.range && editor != null\n                    ? new Range(\n                          editor.selection.start.with({ line: editor.selection.start.line + 1 }),\n                          editor.selection.end.with({ line: editor.selection.end.line + 1 })\n                      )\n                    : undefined;\n            let sha = args.sha || gitUri.sha;\n\n            if (args.branch === undefined && sha !== undefined && !GitService.isSha(sha) && remotes.length !== 0) {\n                const [remotePart, branchPart] = Strings.splitSingle(sha, '/');\n                if (branchPart !== undefined) {\n                    if (remotes.some(r => r.name === remotePart)) {\n                        args.branch = branchPart;\n                        sha = undefined;\n                    }\n                }\n            }\n\n            if (args.branch === undefined && args.sha === undefined) {\n                const branch = await Container.git.getBranch(gitUri.repoPath);\n                if (branch === undefined || branch.tracking === undefined) {\n                    const pick = await new ReferencesQuickPick(gitUri.repoPath).show(\n                        args.clipboard\n                            ? `Copy url for ${gitUri.relativePath} to clipboard for which branch${GlyphChars.Ellipsis}`\n                            : `Open ${gitUri.relativePath} on remote for which branch${GlyphChars.Ellipsis}`,\n                        {\n                            autoPick: true,\n                            filters: {\n                                branches: b => b.tracking !== undefined\n                            },\n                            include: 'branches'\n                        }\n                    );\n                    if (pick === undefined || pick instanceof CommandQuickPickItem) return undefined;\n\n                    args.branch = pick.ref;\n                }\n                else {\n                    args.branch = branch.name;\n                }\n            }\n\n            const commandArgs: OpenInRemoteCommandArgs = {\n                resource:\n                    sha === undefined\n                        ? {\n                              type: RemoteResourceType.File,\n                              branch: args.branch || 'HEAD',\n                              fileName: gitUri.relativePath,\n                              range: range\n                          }\n                        : {\n                              type: RemoteResourceType.Revision,\n                              branch: args.branch || 'HEAD',\n                              fileName: gitUri.relativePath,\n                              range: range,\n                              sha: sha\n                          },\n                remotes: remotes,\n                clipboard: args.clipboard\n            };\n            return commands.executeCommand(Commands.OpenInRemote, uri, commandArgs);\n        }\n        catch (ex) {\n            Logger.error(ex, 'OpenFileInRemoteCommand');\n            return window.showErrorMessage(\n                'Unable to open file on remote provider. See output channel for more details'\n            );\n        }\n    }\n}\n","'use strict';\nimport { CancellationTokenSource, commands, Range, TextDocumentShowOptions, TextEditor, Uri, window } from 'vscode';\nimport { FileAnnotationType } from '../configuration';\nimport { GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { GitBranch, GitReference, GitTag, GitUri } from '../git/gitService';\nimport { Logger } from '../logger';\nimport { Messages } from '../messages';\nimport { CommandQuickPickItem, FileHistoryQuickPick, ShowFileHistoryFromQuickPickItem } from '../quickpicks';\nimport { Iterables, Strings } from '../system';\nimport { ActiveEditorCommand, command, Commands, getCommandUri, openEditor } from './common';\n\nexport interface OpenFileRevisionCommandArgs {\n    reference?: GitBranch | GitTag | GitReference;\n    uri?: Uri;\n    maxCount?: number;\n\n    line?: number;\n    showOptions?: TextDocumentShowOptions;\n    annotationType?: FileAnnotationType;\n    nextPageCommand?: CommandQuickPickItem;\n}\n\n@command()\nexport class OpenFileRevisionCommand extends ActiveEditorCommand {\n    static getMarkdownCommandArgs(args: OpenFileRevisionCommandArgs): string;\n    static getMarkdownCommandArgs(uri: Uri, annotationType?: FileAnnotationType, line?: number): string;\n    static getMarkdownCommandArgs(\n        argsOrUri: OpenFileRevisionCommandArgs | Uri,\n        annotationType?: FileAnnotationType,\n        line?: number\n    ): string {\n        let args: OpenFileRevisionCommandArgs | Uri;\n        if (argsOrUri instanceof Uri) {\n            const uri = argsOrUri;\n\n            args = {\n                uri: uri,\n                line: line,\n                annotationType: annotationType\n            };\n        }\n        else {\n            args = argsOrUri;\n        }\n\n        return super.getMarkdownCommandArgsCore<OpenFileRevisionCommandArgs>(Commands.OpenFileRevision, args);\n    }\n\n    constructor() {\n        super(Commands.OpenFileRevision);\n    }\n\n    async execute(editor: TextEditor | undefined, uri?: Uri, args: OpenFileRevisionCommandArgs = {}) {\n        args = { ...args };\n        if (args.line === undefined) {\n            args.line = editor == null ? 0 : editor.selection.active.line;\n        }\n\n        let progressCancellation: CancellationTokenSource | undefined;\n\n        try {\n            let commandArgs: OpenFileRevisionCommandArgs;\n\n            if (args.uri == null) {\n                uri = getCommandUri(uri, editor);\n                if (uri == null) return undefined;\n\n                const gitUri = await GitUri.fromUri(uri);\n\n                const placeHolder = `Open revision of ${gitUri.getFormattedPath({\n                    suffix: args.reference ? ` (${args.reference.name})` : undefined\n                })}${gitUri.sha ? ` ${Strings.pad(GlyphChars.Dot, 1, 1)} ${gitUri.shortSha}` : ''}${\n                    GlyphChars.Ellipsis\n                }`;\n\n                progressCancellation = FileHistoryQuickPick.showProgress(placeHolder);\n\n                const log = await Container.git.getLogForFile(gitUri.repoPath, gitUri.fsPath, {\n                    maxCount: args.maxCount,\n                    ref: (args.reference && args.reference.ref) || gitUri.sha\n                });\n                if (log === undefined) {\n                    if (args.reference) {\n                        return window.showWarningMessage(`The file could not be found in ${args.reference.name}`);\n                    }\n                    return Messages.showFileNotUnderSourceControlWarningMessage('Unable to open history compare');\n                }\n\n                if (progressCancellation.token.isCancellationRequested) return undefined;\n\n                let previousPageCommand: CommandQuickPickItem | undefined = undefined;\n\n                if (log.truncated) {\n                    commandArgs = { ...args };\n                    const npc = new CommandQuickPickItem(\n                        {\n                            label: '$(arrow-right) Show Next Commits',\n                            description: `${Strings.pad(GlyphChars.Dash, 2, 3)} shows ${log.maxCount} newer commits`\n                        },\n                        Commands.OpenFileRevision,\n                        [uri, commandArgs]\n                    );\n\n                    const last = Iterables.last(log.commits.values());\n                    if (last != null) {\n                        commandArgs = { ...args, nextPageCommand: npc };\n                        previousPageCommand = new CommandQuickPickItem(\n                            {\n                                label: '$(arrow-left) Show Previous Commits',\n                                description: `${Strings.pad(GlyphChars.Dash, 2, 3)} shows ${log.maxCount} older commits`\n                            },\n                            Commands.OpenFileRevision,\n                            [new GitUri(uri, last), commandArgs]\n                        );\n                    }\n                }\n\n                commandArgs = { ...args };\n                const icon =\n                    args.reference instanceof GitTag\n                        ? '$(tag) '\n                        : args.reference instanceof GitBranch\n                        ? '$(git-branch) '\n                        : '';\n                const currentCommand = new CommandQuickPickItem(\n                    {\n                        label: `go back ${GlyphChars.ArrowBack}`,\n                        description: `${Strings.pad(GlyphChars.Dash, 2, 3)} to history of ${\n                            GlyphChars.Space\n                        }$(file-text) ${gitUri.getFormattedPath()}${\n                            args.reference\n                                ? ` from ${GlyphChars.Space}${icon}${args.reference.name}`\n                                : gitUri.sha\n                                ? ` from ${GlyphChars.Space}$(git-commit) ${gitUri.shortSha}`\n                                : ''\n                        }`\n                    },\n                    Commands.OpenFileRevision,\n                    [uri, commandArgs]\n                );\n\n                commandArgs = { ...args, maxCount: 0 };\n                const pick = await FileHistoryQuickPick.show(log, gitUri, placeHolder, {\n                    pickerOnly: true,\n                    progressCancellation: progressCancellation,\n                    currentCommand: currentCommand,\n                    nextPageCommand: args.nextPageCommand,\n                    previousPageCommand: previousPageCommand,\n                    showAllCommand: log.truncated\n                        ? new CommandQuickPickItem(\n                              {\n                                  label: '$(sync) Show All Commits',\n                                  description: `${Strings.pad(GlyphChars.Dash, 2, 3)} this may take a while`\n                              },\n                              Commands.OpenFileRevision,\n                              [uri, commandArgs]\n                          )\n                        : undefined\n                });\n                if (pick === undefined) return undefined;\n\n                if (pick instanceof ShowFileHistoryFromQuickPickItem) {\n                    const reference = await pick.execute();\n                    if (reference === undefined) return undefined;\n                    if (reference instanceof CommandQuickPickItem) return reference.execute();\n\n                    commandArgs = {\n                        ...args,\n                        reference: reference.item\n                    };\n                    return commands.executeCommand(Commands.OpenFileRevision, gitUri, commandArgs);\n                }\n\n                if (pick instanceof CommandQuickPickItem) return pick.execute();\n\n                args.uri = GitUri.toRevisionUri(pick.commit.sha, pick.commit.uri.fsPath, pick.commit.repoPath);\n            }\n\n            if (args.line !== undefined && args.line !== 0) {\n                if (args.showOptions === undefined) {\n                    args.showOptions = {};\n                }\n                args.showOptions.selection = new Range(args.line, 0, args.line, 0);\n            }\n\n            const e = await openEditor(args.uri!, { ...args.showOptions, rethrow: true });\n            if (args.annotationType === undefined) return e;\n\n            return Container.fileAnnotations.show(e!, args.annotationType, args.line);\n        }\n        catch (ex) {\n            Logger.error(ex, 'OpenFileRevisionCommand');\n            return Messages.showGenericErrorMessage('Unable to open file revision');\n        }\n        finally {\n            progressCancellation && progressCancellation.cancel();\n        }\n    }\n}\n","'use strict';\nimport { Range, TextDocumentShowOptions, TextEditor, Uri } from 'vscode';\nimport { GlyphChars } from '../constants';\nimport { GitBranch, GitReference, GitTag, GitUri } from '../git/gitService';\nimport { CommandQuickPickItem, ReferencesQuickPick } from '../quickpicks';\nimport { Strings } from '../system';\nimport { ActiveEditorCommand, command, Commands, getCommandUri, openEditor } from './common';\n\nexport interface OpenFileRevisionFromCommandArgs {\n    reference?: GitBranch | GitTag | GitReference;\n\n    line?: number;\n    showOptions?: TextDocumentShowOptions;\n}\n\n@command()\nexport class OpenFileRevisionFromCommand extends ActiveEditorCommand {\n    constructor() {\n        super([Commands.OpenFileRevisionFrom, Commands.OpenFileRevisionFromBranch]);\n    }\n\n    async execute(editor: TextEditor | undefined, uri?: Uri, args: OpenFileRevisionFromCommandArgs = {}) {\n        uri = getCommandUri(uri, editor);\n        if (uri == null) return undefined;\n\n        const gitUri = await GitUri.fromUri(uri);\n        if (!gitUri.repoPath) return undefined;\n\n        if (args.reference === undefined) {\n            const placeHolder = `Open revision of ${gitUri.getFormattedPath()}${\n                gitUri.sha ? ` ${Strings.pad(GlyphChars.Dot, 1, 1)} ${gitUri.shortSha}` : ''\n            } from${GlyphChars.Ellipsis}`;\n\n            const pick = await new ReferencesQuickPick(gitUri.repoPath).show(placeHolder, {\n                allowEnteringRefs: true\n            });\n            if (pick === undefined) return undefined;\n            if (pick instanceof CommandQuickPickItem) return pick.execute();\n\n            args.reference = pick.item;\n        }\n\n        if (args.line !== undefined && args.line !== 0) {\n            if (args.showOptions === undefined) {\n                args.showOptions = {};\n            }\n            args.showOptions.selection = new Range(args.line, 0, args.line, 0);\n        }\n\n        return openEditor(GitUri.toRevisionUri(args.reference.ref, gitUri.fsPath, gitUri.repoPath), {\n            ...args.showOptions,\n            rethrow: true\n        });\n    }\n}\n","'use strict';\nimport { TextEditor, Uri } from 'vscode';\nimport { GlyphChars } from '../constants';\nimport { GitLogCommit, GitRemote, GitService, RemoteResource, RemoteResourceType } from '../git/gitService';\nimport { Logger } from '../logger';\nimport { Messages } from '../messages';\nimport { CommandQuickPickItem, OpenRemoteCommandQuickPickItem, RemotesQuickPick } from '../quickpicks';\nimport { Strings } from '../system';\nimport { ActiveEditorCommand, command, Commands } from './common';\n\nexport interface OpenInRemoteCommandArgs {\n    remote?: string;\n    remotes?: GitRemote[];\n    resource?: RemoteResource;\n    clipboard?: boolean;\n\n    goBackCommand?: CommandQuickPickItem;\n}\n\n@command()\nexport class OpenInRemoteCommand extends ActiveEditorCommand {\n    constructor() {\n        super(Commands.OpenInRemote);\n    }\n\n    async execute(editor: TextEditor, uri?: Uri, args: OpenInRemoteCommandArgs = {}) {\n        args = { ...args };\n        if (args.remotes === undefined || args.resource === undefined) return undefined;\n\n        if (args.remote !== undefined) {\n            const remotes = args.remotes.filter(r => r.name === args.remote);\n            // Only filter if we get some results\n            if (remotes.length > 0) {\n                args.remotes = remotes;\n            }\n        }\n\n        try {\n            let remote: GitRemote | undefined;\n            if (args.remotes.length > 1) {\n                remote = args.remotes.find(r => r.default);\n            }\n            else if (args.remotes.length === 1) {\n                remote = args.remotes[0];\n            }\n\n            if (remote != null) {\n                this.ensureRemoteBranchName(args);\n                const command = new OpenRemoteCommandQuickPickItem(remote, args.resource, args.clipboard);\n                return await command.execute();\n            }\n\n            const verb = args.clipboard ? 'Copy url for' : 'Open';\n            const suffix = args.clipboard ? `to clipboard from${GlyphChars.Ellipsis}` : `on${GlyphChars.Ellipsis}`;\n            let placeHolder = '';\n            switch (args.resource.type) {\n                case RemoteResourceType.Branch:\n                    this.ensureRemoteBranchName(args);\n                    placeHolder = `${verb} ${args.resource.branch} branch ${suffix}`;\n                    break;\n\n                case RemoteResourceType.Commit:\n                    placeHolder = `${verb} commit ${GitService.shortenSha(args.resource.sha)} ${suffix}`;\n                    break;\n\n                case RemoteResourceType.File:\n                    placeHolder = `${verb} ${args.resource.fileName} ${suffix}`;\n                    break;\n\n                case RemoteResourceType.Revision:\n                    if (args.resource.commit !== undefined && args.resource.commit instanceof GitLogCommit) {\n                        if (args.resource.commit.status === 'D') {\n                            args.resource.sha = args.resource.commit.previousSha;\n                            placeHolder = `${verb} ${args.resource.fileName} ${Strings.pad(GlyphChars.Dot, 1, 1)} ${\n                                args.resource.commit.previousShortSha\n                            } ${suffix}`;\n                        }\n                        else {\n                            args.resource.sha = args.resource.commit.sha;\n                            placeHolder = `${verb} ${args.resource.fileName} ${Strings.pad(GlyphChars.Dot, 1, 1)} ${\n                                args.resource.commit.shortSha\n                            } ${suffix}`;\n                        }\n                    }\n                    else {\n                        const shortFileSha =\n                            args.resource.sha === undefined ? '' : GitService.shortenSha(args.resource.sha);\n                        const shaSuffix = shortFileSha ? ` ${Strings.pad(GlyphChars.Dot, 1, 1)} ${shortFileSha}` : '';\n\n                        placeHolder = `${verb} ${args.resource.fileName}${shaSuffix} ${suffix}`;\n                    }\n                    break;\n            }\n\n            const pick = await RemotesQuickPick.show(\n                args.remotes,\n                placeHolder,\n                args.resource,\n                args.clipboard,\n                args.goBackCommand\n            );\n            if (pick === undefined) return undefined;\n\n            return await pick.execute();\n        }\n        catch (ex) {\n            Logger.error(ex, 'OpenInRemoteCommand');\n            return Messages.showGenericErrorMessage('Unable to open in remote provider');\n        }\n    }\n\n    private ensureRemoteBranchName(args: OpenInRemoteCommandArgs) {\n        if (\n            args.remotes === undefined ||\n            args.resource === undefined ||\n            args.resource.type !== RemoteResourceType.Branch\n        )\n            return;\n\n        // Check to see if the remote is in the branch\n        const [remotePart, branchPart] = Strings.splitSingle(args.resource.branch, '/');\n        if (branchPart === undefined) return;\n\n        const remote = args.remotes.find(r => r.name === remotePart);\n        if (remote === undefined) return;\n\n        args.resource.branch = branchPart;\n        args.remotes = [remote];\n    }\n}\n","'use strict';\nimport { commands, TextEditor, Uri, window } from 'vscode';\nimport { GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { GitUri, RemoteResourceType } from '../git/gitService';\nimport { Logger } from '../logger';\nimport {\n    ActiveEditorCommand,\n    command,\n    CommandContext,\n    Commands,\n    getCommandUri,\n    getRepoPathOrActiveOrPrompt,\n    isCommandViewContextWithRemote\n} from './common';\nimport { OpenInRemoteCommandArgs } from './openInRemote';\n\nexport interface OpenRepoInRemoteCommandArgs {\n    remote?: string;\n}\n\n@command()\nexport class OpenRepoInRemoteCommand extends ActiveEditorCommand {\n    constructor() {\n        super(Commands.OpenRepoInRemote);\n    }\n\n    protected preExecute(context: CommandContext, args: OpenRepoInRemoteCommandArgs = {}) {\n        if (isCommandViewContextWithRemote(context)) {\n            args = { ...args };\n            args.remote = context.node.remote.name;\n        }\n\n        return this.execute(context.editor, context.uri, args);\n    }\n\n    async execute(editor?: TextEditor, uri?: Uri, args: OpenRepoInRemoteCommandArgs = {}) {\n        uri = getCommandUri(uri, editor);\n\n        const gitUri = uri && (await GitUri.fromUri(uri));\n\n        const repoPath = await getRepoPathOrActiveOrPrompt(\n            gitUri,\n            editor,\n            `Open which repository on remote${GlyphChars.Ellipsis}`\n        );\n        if (!repoPath) return undefined;\n\n        try {\n            const remotes = await Container.git.getRemotes(repoPath);\n\n            const commandArgs: OpenInRemoteCommandArgs = {\n                resource: {\n                    type: RemoteResourceType.Repo\n                },\n                remote: args.remote,\n                remotes: remotes\n            };\n            return commands.executeCommand(Commands.OpenInRemote, uri, commandArgs);\n        }\n        catch (ex) {\n            Logger.error(ex, 'OpenRepoInRemoteCommand');\n            return window.showErrorMessage(\n                'Unable to open repository on remote provider. See output channel for more details'\n            );\n        }\n    }\n}\n","'use strict';\nimport { Range, TextDocumentShowOptions, TextEditor, Uri, window } from 'vscode';\nimport { FileAnnotationType } from '../configuration';\nimport { Container } from '../container';\nimport { GitUri } from '../git/gitService';\nimport { Logger } from '../logger';\nimport { Messages } from '../messages';\nimport { ActiveEditorCommand, command, Commands, getCommandUri, openEditor } from './common';\n\nexport interface OpenWorkingFileCommandArgs {\n    uri?: Uri;\n    line?: number;\n    showOptions?: TextDocumentShowOptions;\n    annotationType?: FileAnnotationType;\n}\n\n@command()\nexport class OpenWorkingFileCommand extends ActiveEditorCommand {\n    constructor() {\n        super(Commands.OpenWorkingFile);\n    }\n\n    async execute(editor: TextEditor, uri?: Uri, args: OpenWorkingFileCommandArgs = {}) {\n        args = { ...args };\n        if (args.line === undefined) {\n            args.line = editor == null ? 0 : editor.selection.active.line;\n        }\n\n        try {\n            if (args.uri == null) {\n                uri = getCommandUri(uri, editor);\n                if (uri == null) return undefined;\n            }\n            else {\n                uri = args.uri;\n            }\n\n            args.uri = await GitUri.fromUri(uri);\n            if (args.uri instanceof GitUri && args.uri.sha) {\n                const workingUri = await Container.git.getWorkingUri(args.uri.repoPath!, args.uri);\n                if (workingUri === undefined) {\n                    return window.showWarningMessage(\n                        'Unable to open working file. File could not be found in the working tree'\n                    );\n                }\n\n                args.uri = new GitUri(workingUri, args.uri.repoPath);\n            }\n\n            if (args.line !== undefined && args.line !== 0) {\n                if (args.showOptions === undefined) {\n                    args.showOptions = {};\n                }\n                args.showOptions.selection = new Range(args.line, 0, args.line, 0);\n            }\n\n            const e = await openEditor(args.uri, { ...args.showOptions, rethrow: true });\n            if (args.annotationType === undefined) return e;\n\n            return Container.fileAnnotations.show(e!, args.annotationType, args.line);\n        }\n        catch (ex) {\n            Logger.error(ex, 'OpenWorkingFileCommand');\n            return Messages.showGenericErrorMessage('Unable to open working file');\n        }\n    }\n}\n","'use strict';\nimport { Container } from '../container';\nimport { command, Command, Commands } from './common';\n\n@command()\nexport class FetchRepositoriesCommand extends Command {\n    constructor() {\n        super(Commands.FetchRepositories);\n    }\n\n    execute() {\n        return Container.git.fetchAll();\n    }\n}\n\n@command()\nexport class PullRepositoriesCommand extends Command {\n    constructor() {\n        super(Commands.PullRepositories);\n    }\n\n    execute() {\n        return Container.git.pullAll();\n    }\n}\n\n@command()\nexport class PushRepositoriesCommand extends Command {\n    constructor() {\n        super(Commands.PushRepositories);\n    }\n\n    execute() {\n        return Container.git.pushAll();\n    }\n}\n","'use strict';\nimport { ConfigurationTarget } from 'vscode';\nimport { configuration } from '../configuration';\nimport { command, Command, Commands } from './common';\n\n@command()\nexport class ResetSuppressedWarningsCommand extends Command {\n    constructor() {\n        super(Commands.ResetSuppressedWarnings);\n    }\n\n    async execute() {\n        await configuration.update(\n            configuration.name('advanced')('messages').value,\n            undefined,\n            ConfigurationTarget.Global\n        );\n    }\n}\n","'use strict';\nimport { commands, InputBoxOptions, TextEditor, Uri, window } from 'vscode';\nimport { GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { GitRepoSearchBy, GitService, GitUri } from '../git/gitService';\nimport { Logger } from '../logger';\nimport { Messages } from '../messages';\nimport { CommandQuickPickItem, CommitsQuickPick, ShowCommitSearchResultsInViewQuickPickItem } from '../quickpicks';\nimport { Iterables, Strings } from '../system';\nimport { SearchResultsCommitsNode } from '../views/nodes';\nimport {\n    ActiveEditorCachedCommand,\n    command,\n    CommandContext,\n    Commands,\n    getCommandUri,\n    getRepoPathOrActiveOrPrompt,\n    isCommandViewContextWithRepo\n} from './common';\nimport { ShowQuickCommitDetailsCommandArgs } from './showQuickCommitDetails';\n\nconst searchByRegex = /^([@~:#])/;\nconst symbolToSearchByMap = new Map<string, GitRepoSearchBy>([\n    ['@', GitRepoSearchBy.Author],\n    ['~', GitRepoSearchBy.Changes],\n    [':', GitRepoSearchBy.Files],\n    ['#', GitRepoSearchBy.Sha]\n]);\n\nconst searchByToSymbolMap = new Map<GitRepoSearchBy, string>([\n    [GitRepoSearchBy.Author, '@'],\n    [GitRepoSearchBy.Changes, '~'],\n    [GitRepoSearchBy.Files, ':'],\n    [GitRepoSearchBy.Sha, '#']\n]);\n\nexport interface SearchCommitsCommandArgs {\n    search?: string;\n    searchBy?: GitRepoSearchBy;\n    prefillOnly?: boolean;\n    showInView?: boolean;\n\n    goBackCommand?: CommandQuickPickItem;\n}\n\n@command()\nexport class SearchCommitsCommand extends ActiveEditorCachedCommand {\n    private _lastSearch: string | undefined;\n\n    constructor() {\n        super([Commands.SearchCommits, Commands.SearchCommitsInView]);\n    }\n\n    protected preExecute(context: CommandContext, args: SearchCommitsCommandArgs = {}) {\n        if (context.type === 'viewItem') {\n            args = { ...args };\n            args.showInView = true;\n\n            if (context.node instanceof SearchResultsCommitsNode) {\n                args.search = context.node.search;\n                args.searchBy = context.node.searchBy;\n                args.prefillOnly = true;\n            }\n\n            if (isCommandViewContextWithRepo(context)) {\n                return this.execute(context.editor, context.node.uri, args);\n            }\n        }\n        else if (context.command === Commands.SearchCommitsInView) {\n            args = { ...args };\n            args.showInView = true;\n        }\n        else {\n            // TODO: Add a user setting (default to view?)\n        }\n\n        return this.execute(context.editor, context.uri, args);\n    }\n\n    async execute(editor?: TextEditor, uri?: Uri, args: SearchCommitsCommandArgs = {}) {\n        uri = getCommandUri(uri, editor);\n\n        const gitUri = uri && (await GitUri.fromUri(uri));\n\n        const repoPath = await getRepoPathOrActiveOrPrompt(\n            gitUri,\n            editor,\n            `Search for commits in which repository${GlyphChars.Ellipsis}`,\n            args.goBackCommand\n        );\n        if (!repoPath) return undefined;\n\n        args = { ...args };\n        const originalArgs = { ...args };\n\n        if (args.prefillOnly && args.search && args.searchBy) {\n            args.search = `${searchByToSymbolMap.get(args.searchBy) || ''}${args.search}`;\n            args.searchBy = undefined;\n        }\n\n        if (!args.search || args.searchBy == null) {\n            let selection: [number, number] | undefined;\n            if (!args.search) {\n                if (args.searchBy != null) {\n                    args.search = searchByToSymbolMap.get(args.searchBy);\n                    selection = [1, 1];\n                }\n                else {\n                    args.search = this._lastSearch;\n                }\n            }\n\n            if (args.showInView) {\n                await Container.searchView.show();\n            }\n\n            const opts: InputBoxOptions = {\n                value: args.search,\n                prompt: 'Please enter a search string',\n                placeHolder:\n                    'Search commits by message, author (@<pattern>), files (:<path/glob>), commit id (#<sha>), or changes (~<pattern>)',\n                valueSelection: selection\n            };\n            args.search = await window.showInputBox(opts);\n            if (args.search === undefined) {\n                return args.goBackCommand === undefined ? undefined : args.goBackCommand.execute();\n            }\n\n            this._lastSearch = originalArgs.search = args.search;\n\n            const match = searchByRegex.exec(args.search);\n            if (match && match[1]) {\n                args.searchBy = symbolToSearchByMap.get(match[1]);\n                args.search = args.search.substring(args.search[1] === ' ' ? 2 : 1);\n            }\n            else if (GitService.isShaLike(args.search)) {\n                args.searchBy = GitRepoSearchBy.Sha;\n            }\n            else {\n                args.searchBy = GitRepoSearchBy.Message;\n            }\n        }\n\n        if (args.searchBy === undefined) {\n            args.searchBy = GitRepoSearchBy.Message;\n        }\n\n        let searchLabel: string | undefined = undefined;\n        switch (args.searchBy) {\n            case GitRepoSearchBy.Author:\n                searchLabel = `commits with an author matching '${args.search}'`;\n                break;\n\n            case GitRepoSearchBy.Changes:\n                searchLabel = `commits with changes matching '${args.search}'`;\n                break;\n\n            case GitRepoSearchBy.Files:\n                searchLabel = `commits with files matching '${args.search}'`;\n                break;\n\n            case GitRepoSearchBy.Message:\n                searchLabel = args.search ? `commits with a message matching '${args.search}'` : 'all commits';\n                break;\n\n            case GitRepoSearchBy.Sha:\n                searchLabel = `commits with an id matching '${args.search}'`;\n                break;\n        }\n\n        if (args.showInView) {\n            void Container.searchView.search(repoPath, args.search, args.searchBy, {\n                label: { label: searchLabel! }\n            });\n\n            return undefined;\n        }\n\n        const progressCancellation = CommitsQuickPick.showProgress(searchLabel!);\n        try {\n            const log = await Container.git.getLogForSearch(repoPath, args.search, args.searchBy);\n\n            if (progressCancellation.token.isCancellationRequested) return undefined;\n\n            let goBackCommand: CommandQuickPickItem | undefined =\n                args.goBackCommand ||\n                new CommandQuickPickItem(\n                    {\n                        label: `go back ${GlyphChars.ArrowBack}`,\n                        description: `${Strings.pad(GlyphChars.Dash, 2, 3)} to commit search`\n                    },\n                    Commands.SearchCommits,\n                    [uri, originalArgs]\n                );\n\n            let commit;\n            if (args.searchBy !== GitRepoSearchBy.Sha || log === undefined || log.count !== 1) {\n                const pick = await CommitsQuickPick.show(log, searchLabel!, progressCancellation, {\n                    goBackCommand: goBackCommand,\n                    showAllCommand:\n                        log !== undefined && log.truncated\n                            ? new CommandQuickPickItem(\n                                  {\n                                      label: '$(sync) Show All Commits',\n                                      description: `${Strings.pad(GlyphChars.Dash, 2, 3)} this may take a while`\n                                  },\n                                  Commands.SearchCommits,\n                                  [uri, { ...args, maxCount: 0, goBackCommand: goBackCommand }]\n                              )\n                            : undefined,\n                    showInViewCommand:\n                        log !== undefined\n                            ? new ShowCommitSearchResultsInViewQuickPickItem(args.search, args.searchBy, log, {\n                                  label: searchLabel!\n                              })\n                            : undefined\n                });\n                if (pick === undefined) return undefined;\n\n                if (pick instanceof CommandQuickPickItem) return pick.execute();\n\n                commit = pick.commit;\n                goBackCommand = undefined;\n            }\n            else {\n                commit = Iterables.first(log.commits.values());\n            }\n\n            const commandArgs: ShowQuickCommitDetailsCommandArgs = {\n                sha: commit.sha,\n                commit: commit,\n                goBackCommand:\n                    goBackCommand ||\n                    new CommandQuickPickItem(\n                        {\n                            label: `go back ${GlyphChars.ArrowBack}`,\n                            description: `${Strings.pad(GlyphChars.Dash, 2, 2)} to search for ${searchLabel}`\n                        },\n                        Commands.SearchCommits,\n                        [uri, args]\n                    )\n            };\n            return commands.executeCommand(Commands.ShowQuickCommitDetails, commit.toGitUri(), commandArgs);\n        }\n        catch (ex) {\n            Logger.error(ex, 'ShowCommitSearchCommand');\n            return Messages.showGenericErrorMessage('Unable to find commits');\n        }\n        finally {\n            progressCancellation.cancel();\n        }\n    }\n}\n","'use strict';\nimport { commands } from 'vscode';\nimport { Logger } from '../logger';\nimport { Messages } from '../messages';\nimport { command, Command, Commands, getLastCommand } from './common';\n\n@command()\nexport class ShowLastQuickPickCommand extends Command {\n    constructor() {\n        super(Commands.ShowLastQuickPick);\n    }\n\n    execute() {\n        const command = getLastCommand();\n        if (command === undefined) return Promise.resolve(undefined);\n\n        try {\n            return commands.executeCommand(command.command, ...command.args);\n        }\n        catch (ex) {\n            Logger.error(ex, 'ShowLastQuickPickCommand');\n            return Messages.showGenericErrorMessage('Unable to show last quick pick');\n        }\n    }\n}\n","'use strict';\nimport { commands, TextEditor, Uri, window } from 'vscode';\nimport { GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { GitLog, GitUri } from '../git/gitService';\nimport { Logger } from '../logger';\nimport { Messages } from '../messages';\nimport { BranchHistoryQuickPick, CommandQuickPickItem, ReferencesQuickPick } from '../quickpicks';\nimport { Strings } from '../system';\nimport { ActiveEditorCachedCommand, command, Commands, getCommandUri, getRepoPathOrActiveOrPrompt } from './common';\nimport { ShowQuickCommitDetailsCommandArgs } from './showQuickCommitDetails';\n\nexport interface ShowQuickBranchHistoryCommandArgs {\n    branch?: string;\n    log?: GitLog;\n    maxCount?: number;\n    repoPath?: string;\n\n    goBackCommand?: CommandQuickPickItem;\n    nextPageCommand?: CommandQuickPickItem;\n}\n\n@command()\nexport class ShowQuickBranchHistoryCommand extends ActiveEditorCachedCommand {\n    constructor() {\n        super(Commands.ShowQuickBranchHistory);\n    }\n\n    async execute(editor?: TextEditor, uri?: Uri, args: ShowQuickBranchHistoryCommandArgs = {}) {\n        uri = getCommandUri(uri, editor);\n\n        const gitUri = uri && (await GitUri.fromUri(uri));\n\n        args = { ...args };\n\n        let progressCancellation =\n            args.branch === undefined ? undefined : BranchHistoryQuickPick.showProgress(args.branch);\n        try {\n            const repoPath =\n                args.repoPath ||\n                (await getRepoPathOrActiveOrPrompt(\n                    gitUri,\n                    editor,\n                    `Show branch history in which repository${GlyphChars.Ellipsis}`\n                ));\n            if (!repoPath) return undefined;\n\n            if (args.branch === undefined) {\n                let goBackCommand;\n                if (!(await Container.git.getRepoPathOrActive(uri, editor))) {\n                    goBackCommand = new CommandQuickPickItem(\n                        {\n                            label: `go back ${GlyphChars.ArrowBack}`,\n                            description: `${Strings.pad(GlyphChars.Dash, 2, 3)} to which repository`\n                        },\n                        Commands.ShowQuickBranchHistory,\n                        [uri, args]\n                    );\n                }\n\n                const pick = await new ReferencesQuickPick(repoPath).show(\n                    `Show history for branch${GlyphChars.Ellipsis}`,\n                    {\n                        goBack: goBackCommand,\n                        include: 'branches'\n                    }\n                );\n                if (pick === undefined) return undefined;\n                if (pick instanceof CommandQuickPickItem) return pick.execute();\n\n                args.branch = pick.ref;\n                if (args.branch === undefined) return undefined;\n\n                progressCancellation = BranchHistoryQuickPick.showProgress(args.branch);\n            }\n\n            if (args.log === undefined) {\n                args.log = await Container.git.getLog(repoPath, {\n                    maxCount: args.maxCount,\n                    ref: (gitUri && gitUri.sha) || args.branch\n                });\n                if (args.log === undefined) return window.showWarningMessage('Unable to show branch history');\n            }\n\n            if (progressCancellation !== undefined && progressCancellation.token.isCancellationRequested) {\n                return undefined;\n            }\n\n            const pick = await BranchHistoryQuickPick.show(\n                args.log,\n                gitUri,\n                args.branch,\n                progressCancellation!,\n                args.goBackCommand,\n                args.nextPageCommand\n            );\n            if (pick === undefined) return undefined;\n\n            if (pick instanceof CommandQuickPickItem) return pick.execute();\n\n            // Create a command to get back to here\n            const currentCommand = new CommandQuickPickItem(\n                {\n                    label: `go back ${GlyphChars.ArrowBack}`,\n                    description: `${Strings.pad(GlyphChars.Dash, 2, 3)} to ${GlyphChars.Space}$(git-branch) ${\n                        args.branch\n                    } history`\n                },\n                Commands.ShowQuickBranchHistory,\n                [uri, { ...args }]\n            );\n\n            const commandArgs: ShowQuickCommitDetailsCommandArgs = {\n                sha: pick.commit.sha,\n                commit: pick.commit,\n                repoLog: args.log,\n                goBackCommand: currentCommand\n            };\n            return commands.executeCommand(Commands.ShowQuickCommitDetails, pick.commit.toGitUri(), commandArgs);\n        }\n        catch (ex) {\n            Logger.error(ex, 'ShowQuickBranchHistoryCommand');\n            return Messages.showGenericErrorMessage('Unable to show branch history');\n        }\n        finally {\n            progressCancellation && progressCancellation.cancel();\n        }\n    }\n}\n","'use strict';\nimport { commands, TextEditor, Uri } from 'vscode';\nimport { GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { GitCommit, GitLog, GitLogCommit, GitRepoSearchBy, GitUri } from '../git/gitService';\nimport { Logger } from '../logger';\nimport { Messages } from '../messages';\nimport { CommandQuickPickItem, CommitQuickPick, CommitWithFileStatusQuickPickItem } from '../quickpicks';\nimport { Strings } from '../system';\nimport {\n    ActiveEditorCachedCommand,\n    command,\n    CommandContext,\n    Commands,\n    getCommandUri,\n    isCommandViewContextWithCommit\n} from './common';\nimport { ShowQuickCommitFileDetailsCommandArgs } from './showQuickCommitFileDetails';\n\nexport interface ShowQuickCommitDetailsCommandArgs {\n    sha?: string;\n    commit?: GitCommit | GitLogCommit;\n    repoLog?: GitLog;\n    showInView?: boolean;\n\n    goBackCommand?: CommandQuickPickItem;\n}\n\n@command()\nexport class ShowQuickCommitDetailsCommand extends ActiveEditorCachedCommand {\n    static getMarkdownCommandArgs(sha: string): string;\n    static getMarkdownCommandArgs(args: ShowQuickCommitDetailsCommandArgs): string;\n    static getMarkdownCommandArgs(argsOrSha: ShowQuickCommitDetailsCommandArgs | string): string {\n        const args = typeof argsOrSha === 'string' ? { sha: argsOrSha } : argsOrSha;\n        return super.getMarkdownCommandArgsCore<ShowQuickCommitDetailsCommandArgs>(\n            Commands.ShowQuickCommitDetails,\n            args\n        );\n    }\n\n    constructor() {\n        super([Commands.ShowCommitInView, Commands.ShowQuickCommitDetails]);\n    }\n\n    protected preExecute(context: CommandContext, args: ShowQuickCommitDetailsCommandArgs = {}) {\n        if (context.command === Commands.ShowCommitInView) {\n            args = { ...args };\n            args.showInView = true;\n        }\n\n        if (context.type === 'viewItem') {\n            args = { ...args };\n            args.sha = context.node.uri.sha;\n\n            if (isCommandViewContextWithCommit(context)) {\n                args.commit = context.node.commit;\n            }\n        }\n\n        return this.execute(context.editor, context.uri, args);\n    }\n\n    async execute(editor?: TextEditor, uri?: Uri, args: ShowQuickCommitDetailsCommandArgs = {}) {\n        uri = getCommandUri(uri, editor);\n        if (uri == null) return undefined;\n\n        const gitUri = await GitUri.fromUri(uri);\n\n        let repoPath = gitUri.repoPath;\n\n        args = { ...args };\n        if (args.sha === undefined) {\n            if (editor == null) return undefined;\n\n            const blameline = editor.selection.active.line;\n            if (blameline < 0) return undefined;\n\n            try {\n                const blame = await Container.git.getBlameForLine(gitUri, blameline);\n                if (blame === undefined) {\n                    return Messages.showFileNotUnderSourceControlWarningMessage('Unable to show commit details');\n                }\n\n                // Because the previous sha of an uncommitted file isn't trust worthy we just have to kick out\n                if (blame.commit.isUncommitted) {\n                    return Messages.showLineUncommittedWarningMessage('Unable to show commit details');\n                }\n\n                args.sha = blame.commit.sha;\n                repoPath = blame.commit.repoPath;\n\n                args.commit = blame.commit;\n            }\n            catch (ex) {\n                Logger.error(ex, 'ShowQuickCommitDetailsCommand', `getBlameForLine(${blameline})`);\n                return Messages.showGenericErrorMessage('Unable to show commit details');\n            }\n        }\n\n        try {\n            if (args.commit === undefined || args.commit.isFile) {\n                if (args.repoLog !== undefined) {\n                    args.commit = args.repoLog.commits.get(args.sha!);\n                    // If we can't find the commit, kill the repoLog\n                    if (args.commit === undefined) {\n                        args.repoLog = undefined;\n                    }\n                }\n\n                if (args.repoLog === undefined) {\n                    const log = await Container.git.getLog(repoPath!, { maxCount: 2, ref: args.sha });\n                    if (log === undefined) {\n                        return Messages.showCommitNotFoundWarningMessage('Unable to show commit details');\n                    }\n\n                    args.commit = log.commits.get(args.sha!);\n                }\n            }\n\n            if (args.commit === undefined) {\n                return Messages.showCommitNotFoundWarningMessage('Unable to show commit details');\n            }\n\n            if (args.showInView) {\n                void (await Container.searchView.search(repoPath!, args.commit.sha, GitRepoSearchBy.Sha, {\n                    label: { label: `commits with an id matching '${args.commit.shortSha}'` }\n                }));\n\n                return undefined;\n            }\n\n            if (args.goBackCommand === undefined) {\n                const branch = await Container.git.getBranch(args.commit.repoPath);\n                if (branch !== undefined) {\n                    // Create a command to get back to the branch history\n                    args.goBackCommand = new CommandQuickPickItem(\n                        {\n                            label: `go back ${GlyphChars.ArrowBack}`,\n                            description: `${Strings.pad(GlyphChars.Dash, 2, 3)} to ${branch.name} history`\n                        },\n                        Commands.ShowQuickCurrentBranchHistory,\n                        [args.commit.toGitUri()]\n                    );\n                }\n            }\n\n            // Create a command to get back to where we are right now\n            const currentCommand = new CommandQuickPickItem(\n                {\n                    label: `go back ${GlyphChars.ArrowBack}`,\n                    description: `${Strings.pad(GlyphChars.Dash, 2, 3)} to details of ${\n                        GlyphChars.Space\n                    }$(git-commit) ${args.commit.shortSha}`\n                },\n                Commands.ShowQuickCommitDetails,\n                [args.commit.toGitUri(), args]\n            );\n\n            const pick = await new CommitQuickPick(repoPath).show(args.commit as GitLogCommit, uri, {\n                currentCommand: currentCommand,\n                goBackCommand: args.goBackCommand,\n                repoLog: args.repoLog\n            });\n            if (pick === undefined) return undefined;\n\n            if (!(pick instanceof CommitWithFileStatusQuickPickItem)) return pick.execute();\n\n            const commandArgs: ShowQuickCommitFileDetailsCommandArgs = {\n                commit: pick.commit,\n                sha: pick.sha,\n                goBackCommand: currentCommand\n            };\n            return commands.executeCommand(Commands.ShowQuickCommitFileDetails, pick.commit.toGitUri(), commandArgs);\n        }\n        catch (ex) {\n            Logger.error(ex, 'ShowQuickCommitDetailsCommand');\n            return Messages.showGenericErrorMessage('Unable to show commit details');\n        }\n    }\n}\n","'use strict';\nimport * as paths from 'path';\nimport { TextEditor, Uri, window } from 'vscode';\nimport { GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { GitCommit, GitLog, GitLogCommit, GitService, GitUri } from '../git/gitService';\nimport { Logger } from '../logger';\nimport { Messages } from '../messages';\nimport { CommandQuickPickItem, CommitFileQuickPick } from '../quickpicks';\nimport { Strings } from '../system';\nimport {\n    ActiveEditorCachedCommand,\n    command,\n    CommandContext,\n    Commands,\n    getCommandUri,\n    isCommandViewContextWithCommit\n} from './common';\nimport { ShowQuickCommitDetailsCommandArgs } from './showQuickCommitDetails';\n\nexport interface ShowQuickCommitFileDetailsCommandArgs {\n    sha?: string;\n    commit?: GitCommit | GitLogCommit;\n    fileLog?: GitLog;\n    revisionUri?: string;\n\n    goBackCommand?: CommandQuickPickItem;\n}\n\n@command()\nexport class ShowQuickCommitFileDetailsCommand extends ActiveEditorCachedCommand {\n    static getMarkdownCommandArgs(args: ShowQuickCommitFileDetailsCommandArgs): string {\n        return super.getMarkdownCommandArgsCore<ShowQuickCommitFileDetailsCommandArgs>(\n            Commands.ShowQuickCommitFileDetails,\n            args\n        );\n    }\n\n    constructor() {\n        super([Commands.ShowQuickCommitFileDetails, Commands.ShowQuickRevisionDetails]);\n    }\n\n    protected async preExecute(context: CommandContext, args: ShowQuickCommitFileDetailsCommandArgs = {}) {\n        if (context.command === Commands.ShowQuickRevisionDetails && context.editor !== undefined) {\n            args = { ...args };\n\n            const gitUri = await GitUri.fromUri(context.editor.document.uri);\n            args.sha = gitUri.sha;\n        }\n\n        if (context.type === 'viewItem') {\n            args = { ...args };\n            args.sha = context.node.uri.sha;\n\n            if (isCommandViewContextWithCommit(context)) {\n                args.commit = context.node.commit;\n            }\n        }\n\n        return this.execute(context.editor, context.uri, args);\n    }\n\n    async execute(editor?: TextEditor, uri?: Uri, args: ShowQuickCommitFileDetailsCommandArgs = {}) {\n        uri = getCommandUri(uri, editor);\n        if (uri == null) return undefined;\n\n        let gitUri;\n        if (args.revisionUri !== undefined) {\n            gitUri = GitUri.fromRevisionUri(Uri.parse(args.revisionUri));\n            args.sha = gitUri.sha;\n        }\n        else {\n            gitUri = await GitUri.fromUri(uri);\n        }\n\n        args = { ...args };\n        if (args.sha === undefined) {\n            if (editor == null) return undefined;\n\n            const blameline = editor.selection.active.line;\n            if (blameline < 0) return undefined;\n\n            try {\n                const blame = await Container.git.getBlameForLine(gitUri, blameline);\n                if (blame === undefined) {\n                    return Messages.showFileNotUnderSourceControlWarningMessage('Unable to show commit file details');\n                }\n\n                // Because the previous sha of an uncommitted file isn't trust worthy we just have to kick out\n                if (blame.commit.isUncommitted) {\n                    return Messages.showLineUncommittedWarningMessage('Unable to show commit file details');\n                }\n\n                args.sha = blame.commit.sha;\n\n                args.commit = blame.commit;\n            }\n            catch (ex) {\n                Logger.error(ex, 'ShowQuickCommitFileDetailsCommand', `getBlameForLine(${blameline})`);\n                return window.showErrorMessage(\n                    'Unable to show commit file details. See output channel for more details'\n                );\n            }\n        }\n\n        try {\n            if (args.commit === undefined || !args.commit.isFile) {\n                if (args.fileLog !== undefined) {\n                    args.commit = args.fileLog.commits.get(args.sha!);\n                    // If we can't find the commit, kill the fileLog\n                    if (args.commit === undefined) {\n                        args.fileLog = undefined;\n                    }\n                }\n\n                if (args.fileLog === undefined) {\n                    const repoPath = args.commit === undefined ? gitUri.repoPath : args.commit.repoPath;\n                    args.commit = await Container.git.getCommitForFile(repoPath, gitUri.fsPath, { ref: args.sha });\n                    if (args.commit === undefined) {\n                        return Messages.showCommitNotFoundWarningMessage('Unable to show commit file details');\n                    }\n                }\n            }\n\n            if (args.commit === undefined) {\n                return Messages.showCommitNotFoundWarningMessage('Unable to show commit file details');\n            }\n\n            const shortSha = GitService.shortenSha(args.sha!);\n\n            if (args.goBackCommand === undefined) {\n                const commandArgs: ShowQuickCommitDetailsCommandArgs = {\n                    commit: args.commit,\n                    sha: args.sha\n                };\n\n                // Create a command to get back to the commit details\n                args.goBackCommand = new CommandQuickPickItem(\n                    {\n                        label: `go back ${GlyphChars.ArrowBack}`,\n                        description: `${Strings.pad(GlyphChars.Dash, 2, 3)} to details of ${\n                            GlyphChars.Space\n                        }$(git-commit) ${shortSha}`\n                    },\n                    Commands.ShowQuickCommitDetails,\n                    [args.commit.toGitUri(), commandArgs]\n                );\n            }\n\n            // Create a command to get back to where we are right now\n            const currentCommand = new CommandQuickPickItem(\n                {\n                    label: `go back ${GlyphChars.ArrowBack}`,\n                    description: `${Strings.pad(GlyphChars.Dash, 2, 3)} to details of ${\n                        GlyphChars.Space\n                    }$(file-text) ${paths.basename(args.commit.fileName)} in ${\n                        GlyphChars.Space\n                    }$(git-commit) ${shortSha}`\n                },\n                Commands.ShowQuickCommitFileDetails,\n                [args.commit.toGitUri(), args]\n            );\n\n            const pick = await CommitFileQuickPick.show(\n                args.commit as GitLogCommit,\n                uri,\n                args.goBackCommand,\n                currentCommand,\n                args.fileLog\n            );\n            if (pick === undefined) return undefined;\n\n            if (pick instanceof CommandQuickPickItem) return pick.execute();\n\n            return undefined;\n        }\n        catch (ex) {\n            Logger.error(ex, 'ShowQuickCommitFileDetailsCommand');\n            return Messages.showGenericErrorMessage('Unable to show commit file details');\n        }\n    }\n}\n","'use strict';\nimport { commands, TextEditor, Uri } from 'vscode';\nimport { GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { Logger } from '../logger';\nimport { Messages } from '../messages';\nimport { CommandQuickPickItem } from '../quickpicks';\nimport { ActiveEditorCachedCommand, command, Commands, getCommandUri, getRepoPathOrActiveOrPrompt } from './common';\nimport { ShowQuickBranchHistoryCommandArgs } from './showQuickBranchHistory';\n\nexport interface ShowQuickCurrentBranchHistoryCommandArgs {\n    goBackCommand?: CommandQuickPickItem;\n}\n\n@command()\nexport class ShowQuickCurrentBranchHistoryCommand extends ActiveEditorCachedCommand {\n    constructor() {\n        super(Commands.ShowQuickCurrentBranchHistory);\n    }\n\n    async execute(editor?: TextEditor, uri?: Uri, args: ShowQuickCurrentBranchHistoryCommandArgs = {}) {\n        uri = getCommandUri(uri, editor);\n\n        try {\n            const repoPath = await getRepoPathOrActiveOrPrompt(\n                uri,\n                editor,\n                `Show current branch history for which repository${GlyphChars.Ellipsis}`\n            );\n            if (!repoPath) return undefined;\n\n            const branch = await Container.git.getBranch(repoPath);\n            if (branch === undefined) return undefined;\n\n            const commandArgs: ShowQuickBranchHistoryCommandArgs = {\n                branch: branch.name,\n                repoPath: repoPath,\n                goBackCommand: args.goBackCommand\n            };\n            return commands.executeCommand(Commands.ShowQuickBranchHistory, uri, commandArgs);\n        }\n        catch (ex) {\n            Logger.error(ex, 'ShowQuickCurrentBranchHistoryCommand');\n            return Messages.showGenericErrorMessage('Unable to show branch history');\n        }\n    }\n}\n","'use strict';\nimport * as paths from 'path';\nimport { commands, Range, TextEditor, Uri, window } from 'vscode';\nimport { GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { GitBranch, GitLog, GitReference, GitTag, GitUri } from '../git/gitService';\nimport { Logger } from '../logger';\nimport { Messages } from '../messages';\nimport {\n    CommandQuickPickItem,\n    FileHistoryQuickPick,\n    ShowFileHistoryFromQuickPickItem,\n    ShowFileHistoryInViewQuickPickItem\n} from '../quickpicks';\nimport { Iterables, Strings } from '../system';\nimport { ActiveEditorCachedCommand, command, CommandContext, Commands, getCommandUri } from './common';\nimport { ShowQuickCommitFileDetailsCommandArgs } from './showQuickCommitFileDetails';\n\nexport interface ShowQuickFileHistoryCommandArgs {\n    reference?: GitBranch | GitTag | GitReference;\n    log?: GitLog;\n    maxCount?: number;\n    range?: Range;\n    showInView?: boolean;\n\n    goBackCommand?: CommandQuickPickItem;\n    nextPageCommand?: CommandQuickPickItem;\n}\n\n@command()\nexport class ShowQuickFileHistoryCommand extends ActiveEditorCachedCommand {\n    constructor() {\n        super([Commands.ShowFileHistoryInView, Commands.ShowQuickFileHistory]);\n    }\n\n    protected preExecute(context: CommandContext, args: ShowQuickFileHistoryCommandArgs = {}) {\n        if (context.command === Commands.ShowFileHistoryInView) {\n            args = { ...args };\n            args.showInView = true;\n        }\n\n        return this.execute(context.editor, context.uri, args);\n    }\n\n    async execute(editor?: TextEditor, uri?: Uri, args: ShowQuickFileHistoryCommandArgs = {}) {\n        uri = getCommandUri(uri, editor);\n        if (uri == null) return commands.executeCommand(Commands.ShowQuickCurrentBranchHistory);\n\n        const gitUri = await GitUri.fromUri(uri);\n\n        if (args.showInView) {\n            await Container.fileHistoryView.showHistoryForUri(gitUri);\n\n            return undefined;\n        }\n\n        args = { ...args };\n\n        const placeHolder = `${gitUri.getFormattedPath({\n            suffix: args.reference ? ` (${args.reference.name})` : undefined\n        })}${gitUri.sha ? ` ${Strings.pad(GlyphChars.Dot, 1, 1)} ${gitUri.shortSha}` : ''}`;\n\n        const progressCancellation = FileHistoryQuickPick.showProgress(placeHolder);\n\n        try {\n            if (args.log === undefined) {\n                args.log = await Container.git.getLogForFile(gitUri.repoPath, gitUri.fsPath, {\n                    maxCount: args.maxCount,\n                    range: args.range,\n                    ref: (args.reference && args.reference.ref) || gitUri.sha\n                });\n                if (args.log === undefined) {\n                    if (args.reference) {\n                        return window.showWarningMessage(`The file could not be found in ${args.reference.name}`);\n                    }\n                    return Messages.showFileNotUnderSourceControlWarningMessage('Unable to show file history');\n                }\n            }\n\n            if (progressCancellation !== undefined && progressCancellation.token.isCancellationRequested) {\n                return undefined;\n            }\n\n            let previousPageCommand: CommandQuickPickItem | undefined = undefined;\n\n            if (args.log.truncated) {\n                let commandArgs: ShowQuickFileHistoryCommandArgs;\n                commandArgs = { ...args, log: undefined };\n                const npc = new CommandQuickPickItem(\n                    {\n                        label: '$(arrow-right) Show Next Commits',\n                        description: `${Strings.pad(GlyphChars.Dash, 2, 3)} shows ${args.log.maxCount} newer commits`\n                    },\n                    Commands.ShowQuickFileHistory,\n                    [gitUri, commandArgs]\n                );\n\n                const last = Iterables.last(args.log.commits.values());\n                if (last != null) {\n                    commandArgs = { ...args, log: undefined, nextPageCommand: npc };\n                    previousPageCommand = new CommandQuickPickItem(\n                        {\n                            label: '$(arrow-left) Show Previous Commits',\n                            description: `${Strings.pad(GlyphChars.Dash, 2, 3)} shows ${\n                                args.log.maxCount\n                            } older commits`\n                        },\n                        Commands.ShowQuickFileHistory,\n                        [new GitUri(uri, last), commandArgs]\n                    );\n                }\n            }\n\n            const icon =\n                args.reference instanceof GitTag\n                    ? '$(tag) '\n                    : args.reference instanceof GitBranch\n                    ? '$(git-branch) '\n                    : '';\n            // Create a command to get back to where we are right now\n            const currentCommand = new CommandQuickPickItem(\n                {\n                    label: `go back ${GlyphChars.ArrowBack}`,\n                    description: `${Strings.pad(GlyphChars.Dash, 2, 3)} to history of ${\n                        GlyphChars.Space\n                    }$(file-text) ${paths.basename(gitUri.fsPath)}${\n                        args.reference\n                            ? ` from ${GlyphChars.Space}${icon}${args.reference.name}`\n                            : gitUri.sha\n                            ? ` from ${GlyphChars.Space}$(git-commit) ${gitUri.shortSha}`\n                            : ''\n                    }`\n                },\n                Commands.ShowQuickFileHistory,\n                [uri, args]\n            );\n\n            const pick = await FileHistoryQuickPick.show(args.log, gitUri, placeHolder, {\n                progressCancellation: progressCancellation,\n                currentCommand: currentCommand,\n                goBackCommand: args.goBackCommand,\n                nextPageCommand: args.nextPageCommand,\n                previousPageCommand: previousPageCommand,\n                showAllCommand:\n                    args.log !== undefined && args.log.truncated\n                        ? new CommandQuickPickItem(\n                              {\n                                  label: '$(sync) Show All Commits',\n                                  description: `${Strings.pad(GlyphChars.Dash, 2, 3)} this may take a while`\n                              },\n                              Commands.ShowQuickFileHistory,\n                              [uri, { ...args, log: undefined, maxCount: 0 }]\n                          )\n                        : undefined,\n                showInViewCommand:\n                    args.log !== undefined\n                        ? new ShowFileHistoryInViewQuickPickItem(\n                              gitUri,\n                              (args.reference && args.reference.ref) || gitUri.sha\n                          )\n                        : undefined\n            });\n            if (pick === undefined) return undefined;\n\n            if (pick instanceof ShowFileHistoryFromQuickPickItem) {\n                const reference = await pick.execute();\n                if (reference === undefined) return undefined;\n                if (reference instanceof CommandQuickPickItem) return reference.execute();\n\n                const commandArgs: ShowQuickFileHistoryCommandArgs = {\n                    ...args,\n                    log: undefined,\n                    reference: reference.item,\n                    goBackCommand: currentCommand\n                };\n                return commands.executeCommand(Commands.ShowQuickFileHistory, gitUri, commandArgs);\n            }\n\n            if (pick instanceof CommandQuickPickItem) return pick.execute();\n\n            const commandArgs: ShowQuickCommitFileDetailsCommandArgs = {\n                commit: pick.commit,\n                fileLog: args.log,\n                sha: pick.commit.sha,\n                goBackCommand: currentCommand\n            };\n\n            return commands.executeCommand(Commands.ShowQuickCommitFileDetails, pick.commit.toGitUri(), commandArgs);\n        }\n        catch (ex) {\n            Logger.error(ex, 'ShowQuickFileHistoryCommand');\n            return Messages.showGenericErrorMessage('Unable to show file history');\n        }\n        finally {\n            progressCancellation && progressCancellation.cancel();\n        }\n    }\n}\n","'use strict';\nimport { TextEditor, Uri, window } from 'vscode';\nimport { GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { Logger } from '../logger';\nimport { Messages } from '../messages';\nimport { CommandQuickPickItem, RepoStatusQuickPick } from '../quickpicks';\nimport { ActiveEditorCachedCommand, command, Commands, getCommandUri, getRepoPathOrActiveOrPrompt } from './common';\n\nexport interface ShowQuickRepoStatusCommandArgs {\n    goBackCommand?: CommandQuickPickItem;\n}\n\n@command()\nexport class ShowQuickRepoStatusCommand extends ActiveEditorCachedCommand {\n    constructor() {\n        super(Commands.ShowQuickRepoStatus);\n    }\n\n    async execute(editor?: TextEditor, uri?: Uri, args: ShowQuickRepoStatusCommandArgs = {}) {\n        uri = getCommandUri(uri, editor);\n\n        try {\n            const repoPath = await getRepoPathOrActiveOrPrompt(\n                uri,\n                editor,\n                `Show status for which repository${GlyphChars.Ellipsis}`\n            );\n            if (!repoPath) return undefined;\n\n            const status = await Container.git.getStatusForRepo(repoPath);\n            if (status === undefined) return window.showWarningMessage('Unable to show repository status');\n\n            const pick = await RepoStatusQuickPick.show(status, args.goBackCommand);\n            if (pick === undefined) return undefined;\n\n            if (pick instanceof CommandQuickPickItem) return pick.execute();\n\n            return undefined;\n        }\n        catch (ex) {\n            Logger.error(ex, 'ShowQuickRepoStatusCommand');\n            return Messages.showGenericErrorMessage('Unable to show repository status');\n        }\n    }\n}\n","'use strict';\nimport { commands, TextEditor, Uri, window } from 'vscode';\nimport { GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { Logger } from '../logger';\nimport { Messages } from '../messages';\nimport { CommandQuickPickItem, StashListQuickPick } from '../quickpicks';\nimport { Strings } from '../system';\nimport { ActiveEditorCachedCommand, command, Commands, getCommandUri, getRepoPathOrActiveOrPrompt } from './common';\nimport { ShowQuickCommitDetailsCommandArgs } from './showQuickCommitDetails';\n\nexport interface ShowQuickStashListCommandArgs {\n    goBackCommand?: CommandQuickPickItem;\n}\n\n@command()\nexport class ShowQuickStashListCommand extends ActiveEditorCachedCommand {\n    constructor() {\n        super(Commands.ShowQuickStashList);\n    }\n\n    async execute(editor?: TextEditor, uri?: Uri, args: ShowQuickStashListCommandArgs = {}) {\n        uri = getCommandUri(uri, editor);\n\n        const repoPath = await getRepoPathOrActiveOrPrompt(\n            uri,\n            editor,\n            `Show stashed changes for which repository${GlyphChars.Ellipsis}`\n        );\n        if (!repoPath) return undefined;\n\n        const progressCancellation = StashListQuickPick.showProgress('list');\n\n        try {\n            const stash = await Container.git.getStashList(repoPath);\n            if (stash === undefined) return window.showWarningMessage('Unable to show stashed changes');\n\n            if (progressCancellation.token.isCancellationRequested) return undefined;\n\n            // Create a command to get back to here\n            const currentCommandArgs: ShowQuickStashListCommandArgs = {\n                goBackCommand: args.goBackCommand\n            };\n            const currentCommand = new CommandQuickPickItem(\n                {\n                    label: `go back ${GlyphChars.ArrowBack}`,\n                    description: `${Strings.pad(GlyphChars.Dash, 2, 3)} to stashed changes`\n                },\n                Commands.ShowQuickStashList,\n                [uri, currentCommandArgs]\n            );\n\n            const pick = await StashListQuickPick.show(\n                stash,\n                'list',\n                progressCancellation,\n                args.goBackCommand,\n                currentCommand\n            );\n            if (pick === undefined) return undefined;\n\n            if (pick instanceof CommandQuickPickItem) return pick.execute();\n\n            const commandArgs: ShowQuickCommitDetailsCommandArgs = {\n                commit: pick.commit,\n                sha: pick.commit.sha,\n                goBackCommand: currentCommand\n            };\n            return commands.executeCommand(Commands.ShowQuickCommitDetails, pick.commit.toGitUri(), commandArgs);\n        }\n        catch (ex) {\n            Logger.error(ex, 'ShowQuickStashListCommand');\n            return Messages.showGenericErrorMessage('Unable to show stashed changes');\n        }\n        finally {\n            progressCancellation.cancel();\n        }\n    }\n}\n","'use strict';\nimport { Container } from '../container';\nimport { command, Command, CommandContext, Commands } from './common';\n\n@command()\nexport class ShowViewCommand extends Command {\n    constructor() {\n        super([\n            Commands.ShowCompareView,\n            Commands.ShowFileHistoryView,\n            Commands.ShowLineHistoryView,\n            Commands.ShowRepositoriesView,\n            Commands.ShowSearchView\n        ]);\n    }\n\n    protected preExecute(context: CommandContext) {\n        return this.execute(context.command as Commands);\n    }\n\n    execute(command: Commands) {\n        switch (command) {\n            case Commands.ShowCompareView:\n                return Container.compareView.show();\n            case Commands.ShowFileHistoryView:\n                return Container.fileHistoryView.show();\n            case Commands.ShowLineHistoryView:\n                return Container.lineHistoryView.show();\n            case Commands.ShowRepositoriesView:\n                return Container.repositoriesView.show();\n            case Commands.ShowSearchView:\n                return Container.searchView.show();\n        }\n\n        return Promise.resolve(undefined);\n    }\n}\n","'use strict';\nimport { window } from 'vscode';\nimport { GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { GitStashCommit } from '../git/gitService';\nimport { Logger } from '../logger';\nimport { Messages } from '../messages';\nimport { CommandQuickPickItem, StashListQuickPick } from '../quickpicks';\nimport { Strings } from '../system';\nimport {\n    command,\n    Command,\n    CommandContext,\n    Commands,\n    getRepoPathOrPrompt,\n    isCommandViewContextWithCommit,\n    isCommandViewContextWithRepo\n} from './common';\n\nexport interface StashApplyCommandArgs {\n    confirm?: boolean;\n    deleteAfter?: boolean;\n    repoPath?: string;\n    stashItem?: { stashName: string; message: string; repoPath: string };\n\n    goBackCommand?: CommandQuickPickItem;\n}\n\n@command()\nexport class StashApplyCommand extends Command {\n    constructor() {\n        super(Commands.StashApply);\n    }\n\n    protected preExecute(context: CommandContext, args: StashApplyCommandArgs = { confirm: true, deleteAfter: false }) {\n        if (isCommandViewContextWithCommit<GitStashCommit>(context)) {\n            args = { ...args };\n            args.stashItem = context.node.commit;\n            return this.execute(args);\n        }\n        else if (isCommandViewContextWithRepo(context)) {\n            args = { ...args };\n            args.repoPath = context.node.repo.path;\n        }\n\n        return this.execute(args);\n    }\n\n    async execute(args: StashApplyCommandArgs = { confirm: true, deleteAfter: false }) {\n        args = { ...args };\n\n        if (args.stashItem === undefined || args.stashItem.stashName === undefined) {\n            if (args.repoPath === undefined) {\n                args.repoPath = await getRepoPathOrPrompt(\n                    undefined,\n                    `Apply stashed changes from which repository${GlyphChars.Ellipsis}`,\n                    args.goBackCommand\n                );\n            }\n            if (!args.repoPath) return undefined;\n\n            const progressCancellation = StashListQuickPick.showProgress('apply');\n\n            try {\n                const stash = await Container.git.getStashList(args.repoPath);\n                if (stash === undefined) return window.showInformationMessage('There are no stashed changes');\n\n                if (progressCancellation.token.isCancellationRequested) return undefined;\n\n                const currentCommand = new CommandQuickPickItem(\n                    {\n                        label: `go back ${GlyphChars.ArrowBack}`,\n                        description: `${Strings.pad(GlyphChars.Dash, 2, 3)} to apply stashed changes`\n                    },\n                    Commands.StashApply,\n                    [args]\n                );\n\n                const pick = await StashListQuickPick.show(\n                    stash,\n                    'apply',\n                    progressCancellation,\n                    args.goBackCommand,\n                    currentCommand\n                );\n                if (pick instanceof CommandQuickPickItem) return pick.execute();\n                if (pick === undefined) {\n                    return args.goBackCommand === undefined ? undefined : args.goBackCommand.execute();\n                }\n\n                args.goBackCommand = currentCommand;\n                args.stashItem = pick.commit;\n            }\n            finally {\n                progressCancellation.cancel();\n            }\n        }\n\n        try {\n            if (args.confirm) {\n                const message =\n                    args.stashItem.message.length > 80\n                        ? `${args.stashItem.message.substring(0, 80)}${GlyphChars.Ellipsis}`\n                        : args.stashItem.message;\n                const result = await window.showWarningMessage(\n                    `Apply stashed changes '${message}' to your working tree?`,\n                    { title: 'Yes, delete after applying' },\n                    { title: 'Yes' },\n                    { title: 'No', isCloseAffordance: true }\n                );\n                if (result === undefined || result.title === 'No') {\n                    return args.goBackCommand === undefined ? undefined : args.goBackCommand.execute();\n                }\n\n                args.deleteAfter = result.title !== 'Yes';\n            }\n\n            return await Container.git.stashApply(args.stashItem.repoPath, args.stashItem.stashName, args.deleteAfter);\n        }\n        catch (ex) {\n            Logger.error(ex, 'StashApplyCommand');\n            if (ex.message.includes('Your local changes to the following files would be overwritten by merge')) {\n                return window.showWarningMessage(\n                    'Unable to apply stash. Your working tree changes would be overwritten.'\n                );\n            }\n            else if (ex.message.includes('Auto-merging') && ex.message.includes('CONFLICT')) {\n                return window.showInformationMessage('Stash applied with conflicts');\n            }\n\n            return Messages.showGenericErrorMessage(\n                `Unable to apply stash \\u2014 ${ex.message.trim().replace(/\\n+?/g, '; ')}`\n            );\n        }\n    }\n}\n","'use strict';\nimport { window } from 'vscode';\nimport { GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { GitStashCommit } from '../git/gitService';\nimport { Logger } from '../logger';\nimport { Messages } from '../messages';\nimport { CommandQuickPickItem } from '../quickpicks';\nimport { command, Command, CommandContext, Commands, isCommandViewContextWithCommit } from './common';\n\nexport interface StashDeleteCommandArgs {\n    confirm?: boolean;\n    stashItem?: { stashName: string; message: string; repoPath: string };\n\n    goBackCommand?: CommandQuickPickItem;\n}\n\n@command()\nexport class StashDeleteCommand extends Command {\n    constructor() {\n        super(Commands.StashDelete);\n    }\n\n    protected preExecute(context: CommandContext, args: StashDeleteCommandArgs = { confirm: true }) {\n        if (isCommandViewContextWithCommit<GitStashCommit>(context)) {\n            args = { ...args };\n            args.stashItem = context.node.commit;\n            return this.execute(args);\n        }\n\n        return this.execute(args);\n    }\n\n    async execute(args: StashDeleteCommandArgs = { confirm: true }) {\n        args = { ...args };\n        if (\n            args.stashItem === undefined ||\n            args.stashItem.stashName === undefined ||\n            args.stashItem.repoPath === undefined\n        ) {\n            return undefined;\n        }\n\n        if (args.confirm === undefined) {\n            args.confirm = true;\n        }\n\n        try {\n            if (args.confirm) {\n                const message =\n                    args.stashItem.message.length > 80\n                        ? `${args.stashItem.message.substring(0, 80)}${GlyphChars.Ellipsis}`\n                        : args.stashItem.message;\n                const result = await window.showWarningMessage(\n                    `Delete stashed changes '${message}'?`,\n                    { title: 'Yes' },\n                    { title: 'No', isCloseAffordance: true }\n                );\n                if (result === undefined || result.title !== 'Yes') {\n                    return args.goBackCommand === undefined ? undefined : args.goBackCommand.execute();\n                }\n            }\n\n            return await Container.git.stashDelete(args.stashItem.repoPath, args.stashItem.stashName);\n        }\n        catch (ex) {\n            Logger.error(ex, 'StashDeleteCommand');\n            return Messages.showGenericErrorMessage('Unable to delete stash');\n        }\n    }\n}\n","'use strict';\nimport { Uri, window } from 'vscode';\nimport { GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { GitUri } from '../git/gitUri';\nimport { Logger } from '../logger';\nimport { Messages } from '../messages';\nimport { CommandQuickPickItem } from '../quickpicks';\nimport {\n    command,\n    Command,\n    CommandContext,\n    Commands,\n    getRepoPathOrPrompt,\n    isCommandViewContextWithFile,\n    isCommandViewContextWithRepo,\n    isCommandViewContextWithRepoPath\n} from './common';\n\nexport interface StashSaveCommandArgs {\n    message?: string;\n    repoPath?: string;\n    uris?: Uri[];\n\n    goBackCommand?: CommandQuickPickItem;\n}\n\n@command()\nexport class StashSaveCommand extends Command {\n    constructor() {\n        super([Commands.StashSave, Commands.StashSaveFiles]);\n    }\n\n    protected preExecute(context: CommandContext, args: StashSaveCommandArgs = {}) {\n        if (isCommandViewContextWithFile(context)) {\n            args = { ...args };\n            args.uris = [GitUri.fromFile(context.node.file, context.node.file.repoPath || context.node.repoPath)];\n        }\n        else if (isCommandViewContextWithRepo(context)) {\n            args = { ...args };\n            args.repoPath = context.node.repo.path;\n        }\n        else if (isCommandViewContextWithRepoPath(context)) {\n            args = { ...args };\n            args.repoPath = context.node.repoPath;\n        }\n        else if (context.type === 'scm-states') {\n            args = { ...args };\n            args.uris = context.scmResourceStates.map(s => s.resourceUri);\n        }\n        else if (context.type === 'scm-groups') {\n            args = { ...args };\n            args.uris = context.scmResourceGroups.reduce<Uri[]>(\n                (a, b) => a.concat(b.resourceStates.map(s => s.resourceUri)),\n                []\n            );\n        }\n\n        return this.execute(args);\n    }\n\n    async execute(args: StashSaveCommandArgs = {}) {\n        args = { ...args };\n\n        const uri = args.uris !== undefined && args.uris.length !== 0 ? args.uris[0] : undefined;\n        if (args.repoPath === undefined) {\n            args.repoPath = await getRepoPathOrPrompt(\n                uri,\n                `Stash changes for which repository${GlyphChars.Ellipsis}`,\n                args.goBackCommand\n            );\n        }\n        if (!args.repoPath) return undefined;\n\n        try {\n            if (args.message == null) {\n                args.message = await window.showInputBox({\n                    prompt: 'Please provide a stash message',\n                    placeHolder: 'Stash message'\n                });\n                if (args.message === undefined) {\n                    return args.goBackCommand === undefined ? undefined : args.goBackCommand.execute();\n                }\n            }\n\n            return await Container.git.stashSave(args.repoPath, args.message, args.uris);\n        }\n        catch (ex) {\n            Logger.error(ex, 'StashSaveCommand');\n\n            const msg = ex && ex.message;\n            if (msg.includes('newer version of Git')) {\n                return window.showErrorMessage(`Unable to save stash. ${msg}`);\n            }\n            return Messages.showGenericErrorMessage('Unable to save stash');\n        }\n    }\n}\n","'use strict';\nimport { Messages } from '../messages';\nimport { command, Command, Commands } from './common';\n\n@command()\nexport class SupportGitLensCommand extends Command {\n    constructor() {\n        super(Commands.SupportGitLens);\n    }\n\n    execute() {\n        return Messages.showSupportGitLensMessage();\n    }\n}\n","'use strict';\nimport { ConfigurationTarget } from 'vscode';\nimport { configuration } from '../configuration';\nimport { Container } from '../container';\nimport { ModesQuickPick } from '../quickpicks';\nimport { command, Command, Commands } from './common';\nimport { log } from '../system/decorators/log';\nimport { Logger } from '../logger';\n\n@command()\nexport class SwitchModeCommand extends Command {\n    constructor() {\n        super(Commands.SwitchMode);\n    }\n\n    @log({ args: false, correlate: true, singleLine: true, timed: false })\n    async execute() {\n        const cc = Logger.getCorrelationContext();\n\n        const pick = await ModesQuickPick.show();\n        if (pick === undefined) return;\n\n        if (cc) {\n            cc.exitDetails = ` \\u2014 mode=${pick.key || ''}`;\n        }\n\n        const active = Container.config.mode.active;\n        if (active === pick.key) return;\n\n        // Check if we have applied any annotations and clear them if we won't be applying them again\n        if (active != null && active.length !== 0) {\n            const activeAnnotations = Container.config.modes[active].annotations;\n            if (activeAnnotations != null) {\n                const newAnnotations = pick.key != null ? Container.config.modes[pick.key].annotations : undefined;\n                if (activeAnnotations !== newAnnotations) {\n                    await Container.fileAnnotations.clearAll();\n                }\n            }\n        }\n\n        await configuration.update(configuration.name('mode')('active').value, pick.key, ConfigurationTarget.Global);\n    }\n}\n\n@command()\nexport class ToggleReviewModeCommand extends Command {\n    constructor() {\n        super(Commands.ToggleReviewMode);\n    }\n\n    @log({ args: false, singleLine: true, timed: false })\n    async execute() {\n        if (!Object.keys(Container.config.modes).includes('review')) return;\n\n        const mode = Container.config.mode.active === 'review' ? undefined : 'review';\n        await configuration.update(configuration.name('mode')('active').value, mode, ConfigurationTarget.Global);\n    }\n}\n\n@command()\nexport class ToggleZenModeCommand extends Command {\n    constructor() {\n        super(Commands.ToggleZenMode);\n    }\n\n    @log({ args: false, singleLine: true, timed: false })\n    async execute() {\n        if (!Object.keys(Container.config.modes).includes('zen')) return;\n\n        const mode = Container.config.mode.active === 'zen' ? undefined : 'zen';\n        await configuration.update(configuration.name('mode')('active').value, mode, ConfigurationTarget.Global);\n    }\n}\n","'use strict';\nimport { QuickPickItem, window } from 'vscode';\nimport { GlyphChars } from '../constants';\nimport { Container } from '../container';\n\nexport interface ModesQuickPickItem extends QuickPickItem {\n    key: string | undefined;\n}\n\nexport class ModesQuickPick {\n    static async show(): Promise<ModesQuickPickItem | undefined> {\n        const modes = Object.keys(Container.config.modes);\n        if (modes.length === 0) return undefined;\n\n        const mode = Container.config.mode.active;\n\n        const items = modes.map(key => {\n            const modeCfg = Container.config.modes[key];\n            const item: ModesQuickPickItem = {\n                label: `${mode === key ? '$(check)\\u00a0\\u00a0' : '\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0'}${\n                    modeCfg.name\n                } mode`,\n                description: modeCfg.description ? `\\u00a0${GlyphChars.Dash}\\u00a0 ${modeCfg.description}` : '',\n                key: key\n            };\n            return item;\n        });\n\n        if (mode) {\n            items.splice(0, 0, {\n                label: `Exit ${Container.config.modes[mode].name} mode`,\n                key: undefined\n            });\n        }\n\n        const pick = await window.showQuickPick(items, {\n            placeHolder: 'select a GitLens mode to enter'\n        });\n\n        return pick;\n    }\n}\n","'use strict';\nimport { Container } from '../container';\nimport { command, Command, Commands } from './common';\n\n@command()\nexport class ToggleCodeLensCommand extends Command {\n    constructor() {\n        super(Commands.ToggleCodeLens);\n    }\n\n    execute() {\n        return Container.codeLens.toggleCodeLens();\n    }\n}\n","'use strict';\nimport { commands, ExtensionContext, extensions, window, workspace } from 'vscode';\nimport { Commands, registerCommands } from './commands';\nimport { ModeConfig } from './config';\nimport { Config, configuration, Configuration } from './configuration';\nimport { CommandContext, extensionQualifiedId, GlobalState, GlyphChars, setCommandContext } from './constants';\nimport { Container } from './container';\nimport { GitCommit, GitService, GitUri } from './git/gitService';\nimport { Logger, TraceLevel } from './logger';\nimport { Messages } from './messages';\nimport { Strings, Versions } from './system';\n// import { Telemetry } from './telemetry';\n\nexport async function activate(context: ExtensionContext) {\n    const start = process.hrtime();\n\n    // Pretend we are enabled (until we know otherwise) and set the view contexts to reduce flashing on load\n    setCommandContext(CommandContext.Enabled, true);\n\n    Logger.configure(context, configuration.get<TraceLevel>(configuration.name('outputLevel').value), o => {\n        if (o instanceof GitUri) {\n            return `GitUri(${o.toString(true)}${o.repoPath ? ` repoPath=${o.repoPath}` : ''}${\n                o.sha ? ` sha=${o.sha}` : ''\n            })`;\n        }\n\n        if (o instanceof GitCommit) {\n            return `GitCommit(${o.sha ? ` sha=${o.sha}` : ''}${o.repoPath ? ` repoPath=${o.repoPath}` : ''})`;\n        }\n\n        return undefined;\n    });\n\n    const gitlens = extensions.getExtension(extensionQualifiedId)!;\n    const gitlensVersion = gitlens.packageJSON.version;\n\n    const enabled = workspace.getConfiguration('git', null!).get<boolean>('enabled', true);\n    if (!enabled) {\n        Logger.log(`GitLens (v${gitlensVersion}) was NOT activated -- \"git.enabled\": false`);\n        setCommandContext(CommandContext.Enabled, false);\n\n        void Messages.showGitDisabledErrorMessage();\n\n        return;\n    }\n\n    Configuration.configure(context);\n\n    const cfg = configuration.get<Config>();\n\n    const previousVersion = context.globalState.get<string>(GlobalState.GitLensVersion);\n    await migrateSettings(context, previousVersion);\n\n    try {\n        await GitService.initialize();\n    }\n    catch (ex) {\n        Logger.error(ex, `GitLens (v${gitlensVersion}) activate`);\n        setCommandContext(CommandContext.Enabled, false);\n\n        if (ex.message.includes('Unable to find git')) {\n            await window.showErrorMessage(\n                \"GitLens was unable to find Git. Please make sure Git is installed. Also ensure that Git is either in the PATH, or that 'git.path' is pointed to its installed location.\"\n            );\n        }\n\n        return;\n    }\n\n    Container.initialize(context, cfg);\n\n    registerCommands(context);\n\n    const gitVersion = GitService.getGitVersion();\n\n    // Telemetry.configure(ApplicationInsightsKey);\n\n    // const telemetryContext: { [id: string]: any } = Object.create(null);\n    // telemetryContext.version = gitlensVersion;\n    // telemetryContext['git.version'] = gitVersion;\n    // Telemetry.setContext(telemetryContext);\n\n    notifyOnUnsupportedGitVersion(gitVersion);\n    void showWelcomePage(gitlensVersion, previousVersion);\n\n    context.globalState.update(GlobalState.GitLensVersion, gitlensVersion);\n\n    // Constantly over my data cap so stop collecting initialized event\n    // Telemetry.trackEvent('initialized', Objects.flatten(cfg, 'config', true));\n\n    Logger.log(\n        `GitLens (v${gitlensVersion}${cfg.mode.active ? `, mode: ${cfg.mode.active}` : ''}) activated ${\n            GlyphChars.Dot\n        } ${Strings.getDurationMilliseconds(start)} ms`\n    );\n}\n\nexport function deactivate() {\n    // nothing to do\n}\n\nasync function migrateSettings(context: ExtensionContext, previousVersion: string | undefined) {\n    if (previousVersion === undefined) return;\n\n    const previous = Versions.fromString(previousVersion);\n\n    try {\n        if (Versions.compare(previous, Versions.from(9, 6, 3)) !== 1) {\n            const formatMigrationFn = (v: string) => {\n                if (v == null || v.length === 0) return v;\n\n                return (\n                    v\n                        // eslint-disable-next-line no-template-curly-in-string\n                        .replace(/\\$\\{authorAgo\\}/g, '${author}, ${ago}')\n                        // eslint-disable-next-line no-template-curly-in-string\n                        .replace(/\\$\\{authorAgoOrDate\\}/g, '${author}, ${agoOrDate}')\n                );\n            };\n\n            await Promise.all(\n                [\n                    configuration.name('blame')('format').value,\n                    configuration.name('currentLine')('format').value,\n                    configuration.name('hovers')('detailsMarkdownFormat').value,\n                    configuration.name('statusBar')('format').value,\n                    configuration.name('views')('commitFormat').value,\n                    configuration.name('views')('commitDescriptionFormat').value,\n                    configuration.name('views')('stashFormat').value,\n                    configuration.name('views')('stashDescriptionFormat').value\n                ].map(s =>\n                    configuration.migrate<string, string>(s, s, {\n                        migrationFn: formatMigrationFn\n                    })\n                )\n            );\n        }\n        else if (Versions.compare(previous, Versions.from(9, 2, 2)) !== 1) {\n            await configuration.migrate('views.avatars', configuration.name('views')('compare')('avatars').value);\n            await configuration.migrate('views.avatars', configuration.name('views')('repositories')('avatars').value);\n            await configuration.migrate('views.avatars', configuration.name('views')('search')('avatars').value);\n        }\n        else if (Versions.compare(previous, Versions.from(9, 0, 0)) !== 1) {\n            await configuration.migrate(\n                'gitExplorer.autoRefresh',\n                configuration.name('views')('repositories')('autoRefresh').value\n            );\n            await configuration.migrate(\n                'gitExplorer.branches.layout',\n                configuration.name('views')('repositories')('branches')('layout').value\n            );\n            await configuration.migrate(\n                'gitExplorer.enabled',\n                configuration.name('views')('repositories')('enabled').value\n            );\n            await configuration.migrate(\n                'gitExplorer.files.compact',\n                configuration.name('views')('repositories')('files')('compact').value\n            );\n            await configuration.migrate(\n                'gitExplorer.files.layout',\n                configuration.name('views')('repositories')('files')('layout').value\n            );\n            await configuration.migrate(\n                'gitExplorer.files.threshold',\n                configuration.name('views')('repositories')('files')('threshold').value\n            );\n            await configuration.migrate(\n                'gitExplorer.includeWorkingTree',\n                configuration.name('views')('repositories')('includeWorkingTree').value\n            );\n            await configuration.migrate(\n                'gitExplorer.location',\n                configuration.name('views')('repositories')('location').value\n            );\n            await configuration.migrate(\n                'gitExplorer.showTrackingBranch',\n                configuration.name('views')('repositories')('showTrackingBranch').value\n            );\n\n            await configuration.migrate(\n                'historyExplorer.avatars',\n                configuration.name('views')('fileHistory')('avatars').value\n            );\n            await configuration.migrate(\n                'historyExplorer.enabled',\n                configuration.name('views')('fileHistory')('enabled').value\n            );\n            await configuration.migrate(\n                'historyExplorer.location',\n                configuration.name('views')('fileHistory')('location').value\n            );\n\n            await configuration.migrate(\n                'historyExplorer.avatars',\n                configuration.name('views')('lineHistory')('avatars').value\n            );\n            await configuration.migrate(\n                'historyExplorer.enabled',\n                configuration.name('views')('lineHistory')('enabled').value\n            );\n            await configuration.migrate(\n                'historyExplorer.location',\n                configuration.name('views')('lineHistory')('location').value\n            );\n\n            await configuration.migrate(\n                'resultsExplorer.files.compact',\n                configuration.name('views')('compare')('files')('compact').value\n            );\n            await configuration.migrate(\n                'resultsExplorer.files.layout',\n                configuration.name('views')('compare')('files')('layout').value\n            );\n            await configuration.migrate(\n                'resultsExplorer.files.threshold',\n                configuration.name('views')('compare')('files')('threshold').value\n            );\n            await configuration.migrate(\n                'resultsExplorer.location',\n                configuration.name('views')('compare')('location').value\n            );\n\n            await configuration.migrate(\n                'resultsExplorer.files.compact',\n                configuration.name('views')('search')('files')('compact').value\n            );\n            await configuration.migrate(\n                'resultsExplorer.files.layout',\n                configuration.name('views')('search')('files')('layout').value\n            );\n            await configuration.migrate(\n                'resultsExplorer.files.threshold',\n                configuration.name('views')('search')('files')('threshold').value\n            );\n            await configuration.migrate(\n                'resultsExplorer.location',\n                configuration.name('views')('search')('location').value\n            );\n\n            await configuration.migrate('explorers.avatars', configuration.name('views')('compare')('avatars').value);\n            await configuration.migrate(\n                'explorers.avatars',\n                configuration.name('views')('repositories')('avatars').value\n            );\n            await configuration.migrate('explorers.avatars', configuration.name('views')('search')('avatars').value);\n            await configuration.migrate(\n                'explorers.commitFileFormat',\n                configuration.name('views')('commitFileFormat').value\n            );\n            await configuration.migrate('explorers.commitFormat', configuration.name('views')('commitFormat').value);\n            await configuration.migrate(\n                'explorers.defaultItemLimit',\n                configuration.name('views')('defaultItemLimit').value\n            );\n            await configuration.migrate(\n                'explorers.stashFileFormat',\n                configuration.name('views')('stashFileFormat').value\n            );\n            await configuration.migrate('explorers.stashFormat', configuration.name('views')('stashFormat').value);\n            await configuration.migrate(\n                'explorers.statusFileFormat',\n                configuration.name('views')('statusFileFormat').value\n            );\n\n            await configuration.migrate<\n                {\n                    [key: string]: {\n                        name: string;\n                        statusBarItemName?: string;\n                        description?: string;\n                        codeLens?: boolean;\n                        currentLine?: boolean;\n                        explorers?: boolean;\n                        hovers?: boolean;\n                        statusBar?: boolean;\n                    };\n                },\n                {\n                    [key: string]: ModeConfig;\n                }\n            >('modes', configuration.name('modes').value, {\n                migrationFn: v => {\n                    const modes = Object.create(null);\n\n                    for (const k in v) {\n                        const { explorers, ...mode } = v[k];\n                        modes[k] = { ...mode, views: explorers };\n                    }\n\n                    return modes;\n                }\n            });\n        }\n    }\n    catch (ex) {\n        Logger.error(ex, 'migrateSettings');\n    }\n}\n\nfunction notifyOnUnsupportedGitVersion(version: string) {\n    if (GitService.compareGitVersion('2.2.0') !== -1) return;\n\n    // If git is less than v2.2.0\n    void Messages.showGitVersionUnsupportedErrorMessage(version);\n}\n\nasync function showWelcomePage(version: string, previousVersion: string | undefined) {\n    try {\n        if (previousVersion === undefined) {\n            Logger.log('GitLens first-time install');\n\n            if (Container.config.showWhatsNewAfterUpgrades) {\n                await commands.executeCommand(Commands.ShowWelcomePage);\n            }\n\n            return;\n        }\n\n        if (previousVersion !== version) {\n            Logger.log(`GitLens upgraded from v${previousVersion} to v${version}`);\n        }\n\n        const [major, minor] = version.split('.');\n        const [prevMajor, prevMinor] = previousVersion.split('.');\n        if (\n            (major === prevMajor && minor === prevMinor) ||\n            // Don't notify on downgrades\n            (major < prevMajor || (major === prevMajor && minor < prevMinor))\n        ) {\n            return;\n        }\n\n        if (Container.config.showWhatsNewAfterUpgrades && major !== prevMajor) {\n            await commands.executeCommand(Commands.ShowWelcomePage);\n        }\n        else {\n            await Messages.showWhatsNewMessage(version);\n        }\n    }\n    finally {\n        void (await Messages.showSetupViewLayoutMessage(previousVersion));\n    }\n}\n"],"sourceRoot":""}